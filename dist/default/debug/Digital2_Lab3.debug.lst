

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 18:35:48 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292  0000                     	;# 
   293  0001                     	;# 
   294  0002                     	;# 
   295  0003                     	;# 
   296  0004                     	;# 
   297  0005                     	;# 
   298  0006                     	;# 
   299  0007                     	;# 
   300  0008                     	;# 
   301  0009                     	;# 
   302  000A                     	;# 
   303  000B                     	;# 
   304  000C                     	;# 
   305  000D                     	;# 
   306  000E                     	;# 
   307  000E                     	;# 
   308  000F                     	;# 
   309  0010                     	;# 
   310  0011                     	;# 
   311  0012                     	;# 
   312  0013                     	;# 
   313  0014                     	;# 
   314  0015                     	;# 
   315  0015                     	;# 
   316  0016                     	;# 
   317  0017                     	;# 
   318  0018                     	;# 
   319  0019                     	;# 
   320  001A                     	;# 
   321  001B                     	;# 
   322  001B                     	;# 
   323  001C                     	;# 
   324  001D                     	;# 
   325  001E                     	;# 
   326  001F                     	;# 
   327  0081                     	;# 
   328  0085                     	;# 
   329  0086                     	;# 
   330  0087                     	;# 
   331  0088                     	;# 
   332  0089                     	;# 
   333  008C                     	;# 
   334  008D                     	;# 
   335  008E                     	;# 
   336  008F                     	;# 
   337  0090                     	;# 
   338  0091                     	;# 
   339  0092                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0094                     	;# 
   344  0095                     	;# 
   345  0096                     	;# 
   346  0097                     	;# 
   347  0098                     	;# 
   348  0099                     	;# 
   349  009A                     	;# 
   350  009B                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  0105                     	;# 
   356  0107                     	;# 
   357  0108                     	;# 
   358  0109                     	;# 
   359  010C                     	;# 
   360  010C                     	;# 
   361  010D                     	;# 
   362  010E                     	;# 
   363  010F                     	;# 
   364  0185                     	;# 
   365  0187                     	;# 
   366  0188                     	;# 
   367  0189                     	;# 
   368  018C                     	;# 
   369  018D                     	;# 
   370  0008                     _PORTD	set	8
   371  001E                     _ADRESH	set	30
   372  000C                     _PIR1bits	set	12
   373  000B                     _INTCONbits	set	11
   374  001F                     _ADCON0bits	set	31
   375  0031                     _RB1	set	49
   376  0030                     _RB0	set	48
   377  008C                     _PIE1bits	set	140
   378  009F                     _ADCON1bits	set	159
   379  0085                     _TRISAbits	set	133
   380  0086                     _TRISB	set	134
   381  0085                     _TRISA	set	133
   382  0088                     _TRISD	set	136
   383  0087                     _TRISC	set	135
   384  0188                     _ANSELbits	set	392
   385  0189                     _ANSELH	set	393
   386  0188                     _ANSEL	set	392
   387                           
   388                           	psect	strings
   389  0248                     __pstrings:
   390  0248                     stringtab:
   391  0248                     __stringtab:
   392  0248                     stringcode:	
   393                           ;	String table - string pointers are 1 byte each
   394                           
   395  0248                     stringdir:
   396  0248  3002               	movlw	high stringdir
   397  0249  008A               	movwf	10
   398  024A  0804               	movf	4,w
   399  024B  0A84               	incf	4,f
   400  024C  0782               	addwf	2,f
   401  024D                     __stringbase:
   402  024D  3400               	retlw	0
   403  024E                     __end_of__stringtab:
   404  024E                     STR_1:
   405  024E  3420               	retlw	32	;' '
   406  024F  3453               	retlw	83	;'S'
   407  0250  3431               	retlw	49	;'1'
   408  0251  343A               	retlw	58	;':'
   409  0252  3420               	retlw	32	;' '
   410  0253  3420               	retlw	32	;' '
   411  0254  3420               	retlw	32	;' '
   412  0255  3453               	retlw	83	;'S'
   413  0256  3432               	retlw	50	;'2'
   414  0257  343A               	retlw	58	;':'
   415  0258  3420               	retlw	32	;' '
   416  0259  3420               	retlw	32	;' '
   417  025A  3453               	retlw	83	;'S'
   418  025B  3433               	retlw	51	;'3'
   419  025C  343A               	retlw	58	;':'
   420  025D  3400               	retlw	0
   421                           
   422                           	psect	cinit
   423  000F                     start_initialization:	
   424                           ; #config settings
   425                           
   426  000F                     __initialization:
   427                           
   428                           ; Clear objects allocated to COMMON
   429  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   430  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   431  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   432  0012  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   433  0013                     end_of_initialization:	
   434                           ;End of C runtime variable initialization code
   435                           
   436  0013                     __end_of__initialization:
   437  0013  0183               	clrf	3
   438  0014  120A  118A  2916   	ljmp	_main	;jump to C main() function
   439                           
   440                           	psect	bssCOMMON
   441  0077                     __pbssCOMMON:
   442  0077                     _ADC_finish:
   443  0077                     	ds	1
   444  0078                     _ADC_value2:
   445  0078                     	ds	1
   446  0079                     _ADC_value1:
   447  0079                     	ds	1
   448  007A                     _Pots:
   449  007A                     	ds	1
   450                           
   451                           	psect	cstackCOMMON
   452  0070                     __pcstackCOMMON:
   453  0070                     ?_setup:
   454  0070                     ?_Lcd_Init:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0070                     ?_Lcd_Clear:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0070                     ?_Lcd_Write_String:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0070                     ?_main:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0070                     ?_oli:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0070                     ??_oli:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  0070                     ?_Lcd_Port:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0070                     ?_Lcd_Cmd:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0070                     ?_Lcd_Write_Char:	
   479                           ; 1 bytes @ 0x0
   480                           
   481                           
   482                           ; 1 bytes @ 0x0
   483  0070                     	ds	3
   484  0073                     ??_setup:
   485  0073                     ?_ADC_setup:	
   486                           ; 1 bytes @ 0x3
   487                           
   488  0073                     ??_Lcd_Port:	
   489                           ; 1 bytes @ 0x3
   490                           
   491  0073                     ADC_setup@Channel:	
   492                           ; 1 bytes @ 0x3
   493                           
   494  0073                     Lcd_Port@a:	
   495                           ; 1 bytes @ 0x3
   496                           
   497                           
   498                           ; 1 bytes @ 0x3
   499  0073                     	ds	1
   500  0074                     ??_Lcd_Cmd:
   501  0074                     ??_Lcd_Write_Char:	
   502                           ; 1 bytes @ 0x4
   503                           
   504  0074                     ADC_setup@Format:	
   505                           ; 1 bytes @ 0x4
   506                           
   507                           
   508                           ; 1 bytes @ 0x4
   509  0074                     	ds	1
   510  0075                     ADC_setup@Vref:
   511  0075                     Lcd_Write_Char@a:	
   512                           ; 1 bytes @ 0x5
   513                           
   514                           
   515                           ; 1 bytes @ 0x5
   516  0075                     	ds	1
   517  0076                     ??_Lcd_Write_String:
   518  0076                     ADC_setup@ConClock:	
   519                           ; 1 bytes @ 0x6
   520                           
   521  0076                     Lcd_Cmd@a:	
   522                           ; 1 bytes @ 0x6
   523                           
   524                           
   525                           ; 1 bytes @ 0x6
   526  0076                     	ds	1
   527  0077                     ??_Lcd_Clear:
   528  0077                     ??_Lcd_Set_Cursor:	
   529                           ; 1 bytes @ 0x7
   530                           
   531                           
   532                           	psect	cstackBANK0
   533  0020                     __pcstackBANK0:	
   534                           ; 1 bytes @ 0x7
   535                           
   536  0020                     ??_ADC_setup:
   537  0020                     ??_Lcd_Init:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0020                     ?_Lcd_Set_Cursor:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0020                     Lcd_Set_Cursor@b:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0020                     Lcd_Write_String@a:	
   547                           ; 1 bytes @ 0x0
   548                           
   549                           
   550                           ; 1 bytes @ 0x0
   551  0020                     	ds	1
   552  0021                     Lcd_Set_Cursor@a:
   553  0021                     Lcd_Write_String@i:	
   554                           ; 1 bytes @ 0x1
   555                           
   556                           
   557                           ; 2 bytes @ 0x1
   558  0021                     	ds	2
   559  0023                     ??_main:
   560                           
   561                           ; 1 bytes @ 0x3
   562  0023                     	ds	1
   563                           
   564                           	psect	maintext
   565  0116                     __pmaintext:	
   566 ;;
   567 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   568 ;;
   569 ;; *************** function _main *****************
   570 ;; Defined at:
   571 ;;		line 53 in file "SerialLCD.c"
   572 ;; Parameters:    Size  Location     Type
   573 ;;		None
   574 ;; Auto vars:     Size  Location     Type
   575 ;;		None
   576 ;; Return value:  Size  Location     Type
   577 ;;                  1    wreg      void 
   578 ;; Registers used:
   579 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   580 ;; Tracked objects:
   581 ;;		On entry : B00/0
   582 ;;		On exit  : 0/0
   583 ;;		Unchanged: 0/0
   584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   585 ;;      Params:         0       0       0       0       0
   586 ;;      Locals:         0       0       0       0       0
   587 ;;      Temps:          0       1       0       0       0
   588 ;;      Totals:         0       1       0       0       0
   589 ;;Total ram usage:        1 bytes
   590 ;; Hardware stack levels required when called:    4
   591 ;; This function calls:
   592 ;;		_ADC_setup
   593 ;;		_Lcd_Clear
   594 ;;		_Lcd_Init
   595 ;;		_Lcd_Set_Cursor
   596 ;;		_Lcd_Write_String
   597 ;;		_setup
   598 ;; This function is called by:
   599 ;;		Startup code after reset
   600 ;; This function uses a non-reentrant model
   601 ;;
   602                           
   603                           
   604                           ;psect for function _main
   605  0116                     _main:
   606  0116                     l1307:	
   607                           ;incstack = 0
   608                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   609                           
   610                           
   611                           ;SerialLCD.c: 54:     ANSELH = 0;
   612  0116  120A  118A  2274  120A  118A  	fcall	_setup
   613  011B                     l1309:
   614                           
   615                           ;SerialLCD.c: 55:     ANSELbits.ANS2 = 1;
   616  011B  3002               	movlw	2
   617  011C  1283               	bcf	3,5	;RP0=0, select bank0
   618  011D  1303               	bcf	3,6	;RP1=0, select bank0
   619  011E  00A3               	movwf	??_main
   620  011F  0823               	movf	??_main,w
   621  0120  00F3               	movwf	ADC_setup@Channel
   622  0121  01F4               	clrf	ADC_setup@Format
   623  0122  01F5               	clrf	ADC_setup@Vref
   624  0123  3003               	movlw	3
   625  0124  120A  118A  2017  120A  118A  	fcall	_ADC_setup
   626  0129                     l1311:
   627                           
   628                           ;SerialLCD.c: 56:     ANSELbits.ANS3 = 1;
   629  0129  120A  118A  2171  120A  118A  	fcall	_Lcd_Init
   630  012E                     l1313:
   631                           
   632                           ;SerialLCD.c: 57:     TRISA = 0;
   633  012E  1283               	bcf	3,5	;RP0=0, select bank0
   634  012F  1303               	bcf	3,6	;RP1=0, select bank0
   635  0130  149F               	bsf	31,1	;volatile
   636  0131                     l1315:
   637                           
   638                           ;SerialLCD.c: 59:     TRISAbits.TRISA2 = 1;
   639  0131  0377               	decf	_ADC_finish,w
   640  0132  1D03               	btfss	3,2
   641  0133  2935               	goto	u221
   642  0134  2936               	goto	u220
   643  0135                     u221:
   644  0135  2958               	goto	l1333
   645  0136                     u220:
   646  0136                     l1317:
   647                           
   648                           ;SerialLCD.c: 60:     TRISAbits.TRISA3 = 1;
   649  0136  01F7               	clrf	_ADC_finish
   650  0137                     l1319:
   651                           
   652                           ;SerialLCD.c: 61:     INTCONbits.GIE = 1;
   653  0137  309F               	movlw	159
   654  0138  1283               	bcf	3,5	;RP0=0, select bank0
   655  0139  1303               	bcf	3,6	;RP1=0, select bank0
   656  013A  00A3               	movwf	??_main
   657  013B                     u257:
   658  013B  293C               	nop2
   659  013C  0BA3               	decfsz	??_main,f
   660  013D  293B               	goto	u257
   661  013E  293F               	nop2
   662  013F                     l1321:
   663                           
   664                           ;SerialLCD.c: 62:     INTCONbits.PEIE = 1;
   665  013F  087A               	movf	_Pots,w
   666  0140  1D03               	btfss	3,2
   667  0141  2943               	goto	u231
   668  0142  2944               	goto	u230
   669  0143                     u231:
   670  0143  294C               	goto	l1327
   671  0144                     u230:
   672  0144                     l1323:
   673                           
   674                           ;SerialLCD.c: 63:     Pots = 0;
   675  0144  1283               	bcf	3,5	;RP0=0, select bank0
   676  0145  1303               	bcf	3,6	;RP1=0, select bank0
   677  0146  081F               	movf	31,w	;volatile
   678  0147  39C3               	andlw	-61
   679  0148  3808               	iorlw	8
   680  0149  009F               	movwf	31	;volatile
   681  014A                     l1325:
   682                           
   683                           ;SerialLCD.c: 64: 
   684  014A  149F               	bsf	31,1	;volatile
   685                           
   686                           ;SerialLCD.c: 65: }
   687  014B  2958               	goto	l1333
   688  014C                     l1327:
   689  014C  037A               	decf	_Pots,w
   690  014D  1D03               	btfss	3,2
   691  014E  2950               	goto	u241
   692  014F  2951               	goto	u240
   693  0150                     u241:
   694  0150  2958               	goto	l1333
   695  0151                     u240:
   696  0151                     l1329:
   697                           
   698                           ;SerialLCD.c: 66: 
   699  0151  1283               	bcf	3,5	;RP0=0, select bank0
   700  0152  1303               	bcf	3,6	;RP1=0, select bank0
   701  0153  081F               	movf	31,w	;volatile
   702  0154  39C3               	andlw	-61
   703  0155  380C               	iorlw	12
   704  0156  009F               	movwf	31	;volatile
   705  0157                     l1331:
   706                           
   707                           ;SerialLCD.c: 67: 
   708  0157  149F               	bsf	31,1	;volatile
   709  0158                     l1333:
   710                           
   711                           ;SerialLCD.c: 70: 
   712  0158  120A  118A  2288  120A  118A  	fcall	_Lcd_Clear
   713  015D                     l1335:
   714                           
   715                           ;SerialLCD.c: 71: void __attribute__((picinterrupt(("")))) oli(void) {
   716  015D  1283               	bcf	3,5	;RP0=0, select bank0
   717  015E  1303               	bcf	3,6	;RP1=0, select bank0
   718  015F  01A0               	clrf	Lcd_Set_Cursor@b
   719  0160  0AA0               	incf	Lcd_Set_Cursor@b,f
   720  0161  3001               	movlw	1
   721  0162  120A  118A  2210  120A  118A  	fcall	_Lcd_Set_Cursor
   722  0167                     l1337:
   723                           
   724                           ;SerialLCD.c: 72:     if (PIR1bits.ADIF == 1) {
   725  0167  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   726  0168  120A  118A  21C1  120A  118A  	fcall	_Lcd_Write_String
   727  016D  2931               	goto	l1315
   728  016E  120A  118A  280C   	ljmp	start
   729  0171                     __end_of_main:
   730                           
   731                           	psect	text1
   732  0274                     __ptext1:	
   733 ;; *************** function _setup *****************
   734 ;; Defined at:
   735 ;;		line 81 in file "SerialLCD.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;		None
   738 ;; Auto vars:     Size  Location     Type
   739 ;;		None
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      void 
   742 ;; Registers used:
   743 ;;		status,2
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   749 ;;      Params:         0       0       0       0       0
   750 ;;      Locals:         0       0       0       0       0
   751 ;;      Temps:          0       0       0       0       0
   752 ;;      Totals:         0       0       0       0       0
   753 ;;Total ram usage:        0 bytes
   754 ;; Hardware stack levels used:    1
   755 ;; Hardware stack levels required when called:    1
   756 ;; This function calls:
   757 ;;		Nothing
   758 ;; This function is called by:
   759 ;;		_main
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           
   764                           ;psect for function _setup
   765  0274                     _setup:
   766  0274                     l771:	
   767                           ;incstack = 0
   768                           ; Regs used in _setup: [status,2]
   769                           
   770                           
   771                           ;SerialLCD.c: 84: }
   772  0274  1683               	bsf	3,5	;RP0=1, select bank1
   773  0275  1303               	bcf	3,6	;RP1=0, select bank1
   774  0276  0187               	clrf	7	;volatile
   775  0277  0188               	clrf	8	;volatile
   776  0278  1683               	bsf	3,5	;RP0=1, select bank3
   777  0279  1703               	bsf	3,6	;RP1=1, select bank3
   778  027A  0188               	clrf	8	;volatile
   779  027B  0189               	clrf	9	;volatile
   780  027C                     l773:
   781  027C  1508               	bsf	8,2	;volatile
   782  027D                     l775:
   783  027D  1588               	bsf	8,3	;volatile
   784  027E  1683               	bsf	3,5	;RP0=1, select bank1
   785  027F  1303               	bcf	3,6	;RP1=0, select bank1
   786  0280  0185               	clrf	5	;volatile
   787  0281  0186               	clrf	6	;volatile
   788  0282                     l777:
   789  0282  1505               	bsf	5,2	;volatile
   790  0283                     l779:
   791  0283  1585               	bsf	5,3	;volatile
   792  0284                     l781:
   793  0284  178B               	bsf	11,7	;volatile
   794  0285                     l783:
   795  0285  170B               	bsf	11,6	;volatile
   796  0286  01FA               	clrf	_Pots
   797  0287                     l61:
   798  0287  0008               	return
   799  0288                     __end_of_setup:
   800                           
   801                           	psect	text2
   802  01C1                     __ptext2:	
   803 ;; *************** function _Lcd_Write_String *****************
   804 ;; Defined at:
   805 ;;		line 52 in file "LCD8.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;  a               1    wreg     PTR unsigned char 
   808 ;;		 -> STR_1(16), 
   809 ;; Auto vars:     Size  Location     Type
   810 ;;  a               1    0[BANK0 ] PTR unsigned char 
   811 ;;		 -> STR_1(16), 
   812 ;;  i               2    1[BANK0 ] int 
   813 ;; Return value:  Size  Location     Type
   814 ;;                  1    wreg      void 
   815 ;; Registers used:
   816 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   822 ;;      Params:         0       0       0       0       0
   823 ;;      Locals:         0       3       0       0       0
   824 ;;      Temps:          0       0       0       0       0
   825 ;;      Totals:         0       3       0       0       0
   826 ;;Total ram usage:        3 bytes
   827 ;; Hardware stack levels used:    1
   828 ;; Hardware stack levels required when called:    3
   829 ;; This function calls:
   830 ;;		_Lcd_Write_Char
   831 ;; This function is called by:
   832 ;;		_main
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           
   837                           ;psect for function _Lcd_Write_String
   838  01C1                     _Lcd_Write_String:
   839                           
   840                           ;incstack = 0
   841                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   842                           ;Lcd_Write_String@a stored from wreg
   843  01C1  1283               	bcf	3,5	;RP0=0, select bank0
   844  01C2  1303               	bcf	3,6	;RP1=0, select bank0
   845  01C3  00A0               	movwf	Lcd_Write_String@a
   846  01C4                     l1299:
   847                           
   848                           ;LCD8.c: 53:     int i;;LCD8.c: 54:     for (i = 0; a[i] != '\0'; i++)
   849  01C4  01A1               	clrf	Lcd_Write_String@i
   850  01C5  01A2               	clrf	Lcd_Write_String@i+1
   851  01C6  29DC               	goto	l1305
   852  01C7                     l1301:
   853                           
   854                           ;LCD8.c: 55:         Lcd_Write_Char(a[i]);
   855  01C7  0821               	movf	Lcd_Write_String@i,w
   856  01C8  0720               	addwf	Lcd_Write_String@a,w
   857  01C9  0084               	movwf	4
   858  01CA  120A  118A  2248  120A  118A  	fcall	stringdir
   859  01CF  120A  118A  225E  120A  118A  	fcall	_Lcd_Write_Char
   860  01D4                     l1303:
   861  01D4  3001               	movlw	1
   862  01D5  1283               	bcf	3,5	;RP0=0, select bank0
   863  01D6  1303               	bcf	3,6	;RP1=0, select bank0
   864  01D7  07A1               	addwf	Lcd_Write_String@i,f
   865  01D8  1803               	skipnc
   866  01D9  0AA2               	incf	Lcd_Write_String@i+1,f
   867  01DA  3000               	movlw	0
   868  01DB  07A2               	addwf	Lcd_Write_String@i+1,f
   869  01DC                     l1305:
   870  01DC  0821               	movf	Lcd_Write_String@i,w
   871  01DD  0720               	addwf	Lcd_Write_String@a,w
   872  01DE  0084               	movwf	4
   873  01DF  120A  118A  2248  120A  118A  	fcall	stringdir
   874  01E4  3A00               	xorlw	0
   875  01E5  1D03               	skipz
   876  01E6  29E8               	goto	u211
   877  01E7  29E9               	goto	u210
   878  01E8                     u211:
   879  01E8  29C7               	goto	l1301
   880  01E9                     u210:
   881  01E9                     l151:
   882  01E9  0008               	return
   883  01EA                     __end_of_Lcd_Write_String:
   884                           
   885                           	psect	text3
   886  025E                     __ptext3:	
   887 ;; *************** function _Lcd_Write_Char *****************
   888 ;; Defined at:
   889 ;;		line 44 in file "LCD8.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;  a               1    wreg     unsigned char 
   892 ;; Auto vars:     Size  Location     Type
   893 ;;  a               1    5[COMMON] unsigned char 
   894 ;; Return value:  Size  Location     Type
   895 ;;                  1    wreg      void 
   896 ;; Registers used:
   897 ;;		wreg, status,2, status,0, pclath, cstack
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   903 ;;      Params:         0       0       0       0       0
   904 ;;      Locals:         1       0       0       0       0
   905 ;;      Temps:          1       0       0       0       0
   906 ;;      Totals:         2       0       0       0       0
   907 ;;Total ram usage:        2 bytes
   908 ;; Hardware stack levels used:    1
   909 ;; Hardware stack levels required when called:    2
   910 ;; This function calls:
   911 ;;		_Lcd_Port
   912 ;; This function is called by:
   913 ;;		_Lcd_Write_String
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           
   918                           ;psect for function _Lcd_Write_Char
   919  025E                     _Lcd_Write_Char:
   920                           
   921                           ;incstack = 0
   922                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   923                           ;Lcd_Write_Char@a stored from wreg
   924  025E  00F5               	movwf	Lcd_Write_Char@a
   925  025F                     l1195:
   926                           
   927                           ;LCD8.c: 45:     RB0 = 1;
   928  025F  1283               	bcf	3,5	;RP0=0, select bank0
   929  0260  1303               	bcf	3,6	;RP1=0, select bank0
   930  0261  1406               	bsf	6,0	;volatile
   931  0262                     l1197:
   932                           
   933                           ;LCD8.c: 46:     Lcd_Port(a);
   934  0262  0875               	movf	Lcd_Write_Char@a,w
   935  0263  120A  118A  2295  120A  118A  	fcall	_Lcd_Port
   936  0268                     l1199:
   937                           
   938                           ;LCD8.c: 47:     RB1 = 1;
   939  0268  1283               	bcf	3,5	;RP0=0, select bank0
   940  0269  1303               	bcf	3,6	;RP1=0, select bank0
   941  026A  1486               	bsf	6,1	;volatile
   942  026B                     l1201:
   943                           
   944                           ;LCD8.c: 48:     _delay((unsigned long)((40)*(8000000/4000000.0)));
   945  026B  301A               	movlw	26
   946  026C  00F4               	movwf	??_Lcd_Write_Char
   947  026D                     u267:
   948  026D  0BF4               	decfsz	??_Lcd_Write_Char,f
   949  026E  2A6D               	goto	u267
   950  026F  0000               	nop
   951  0270                     l1203:
   952                           
   953                           ;LCD8.c: 49:     RB1 = 0;
   954  0270  1283               	bcf	3,5	;RP0=0, select bank0
   955  0271  1303               	bcf	3,6	;RP1=0, select bank0
   956  0272  1086               	bcf	6,1	;volatile
   957  0273                     l145:
   958  0273  0008               	return
   959  0274                     __end_of_Lcd_Write_Char:
   960                           
   961                           	psect	text4
   962  0210                     __ptext4:	
   963 ;; *************** function _Lcd_Set_Cursor *****************
   964 ;; Defined at:
   965 ;;		line 21 in file "LCD8.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;  a               1    wreg     unsigned char 
   968 ;;  b               1    0[BANK0 ] unsigned char 
   969 ;; Auto vars:     Size  Location     Type
   970 ;;  a               1    1[BANK0 ] unsigned char 
   971 ;; Return value:  Size  Location     Type
   972 ;;                  1    wreg      void 
   973 ;; Registers used:
   974 ;;		wreg, status,2, status,0, pclath, cstack
   975 ;; Tracked objects:
   976 ;;		On entry : 0/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   980 ;;      Params:         0       1       0       0       0
   981 ;;      Locals:         0       1       0       0       0
   982 ;;      Temps:          0       0       0       0       0
   983 ;;      Totals:         0       2       0       0       0
   984 ;;Total ram usage:        2 bytes
   985 ;; Hardware stack levels used:    1
   986 ;; Hardware stack levels required when called:    3
   987 ;; This function calls:
   988 ;;		_Lcd_Cmd
   989 ;; This function is called by:
   990 ;;		_main
   991 ;; This function uses a non-reentrant model
   992 ;;
   993                           
   994                           
   995                           ;psect for function _Lcd_Set_Cursor
   996  0210                     _Lcd_Set_Cursor:
   997                           
   998                           ;incstack = 0
   999                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1000                           ;Lcd_Set_Cursor@a stored from wreg
  1001  0210  1283               	bcf	3,5	;RP0=0, select bank0
  1002  0211  1303               	bcf	3,6	;RP1=0, select bank0
  1003  0212  00A1               	movwf	Lcd_Set_Cursor@a
  1004  0213                     l1291:
  1005                           
  1006                           ;LCD8.c: 22:     if (a == 1) {
  1007  0213  0321               	decf	Lcd_Set_Cursor@a,w
  1008  0214  1D03               	btfss	3,2
  1009  0215  2A17               	goto	u191
  1010  0216  2A18               	goto	u190
  1011  0217                     u191:
  1012  0217  2A20               	goto	l1295
  1013  0218                     u190:
  1014  0218                     l1293:
  1015                           
  1016                           ;LCD8.c: 23:         Lcd_Cmd(0x80 + b - 1);
  1017  0218  0820               	movf	Lcd_Set_Cursor@b,w
  1018  0219  3E7F               	addlw	127
  1019  021A  120A  118A  222E  120A  118A  	fcall	_Lcd_Cmd
  1020                           
  1021                           ;LCD8.c: 24:     } else if (a == 2) {
  1022  021F  2A2D               	goto	l139
  1023  0220                     l1295:
  1024  0220  3002               	movlw	2
  1025  0221  0621               	xorwf	Lcd_Set_Cursor@a,w
  1026  0222  1D03               	btfss	3,2
  1027  0223  2A25               	goto	u201
  1028  0224  2A26               	goto	u200
  1029  0225                     u201:
  1030  0225  2A2D               	goto	l139
  1031  0226                     u200:
  1032  0226                     l1297:
  1033                           
  1034                           ;LCD8.c: 25:         Lcd_Cmd(0xC0 + b - 1);
  1035  0226  0820               	movf	Lcd_Set_Cursor@b,w
  1036  0227  3EBF               	addlw	191
  1037  0228  120A  118A  222E  120A  118A  	fcall	_Lcd_Cmd
  1038  022D                     l139:
  1039  022D  0008               	return
  1040  022E                     __end_of_Lcd_Set_Cursor:
  1041                           
  1042                           	psect	text5
  1043  0171                     __ptext5:	
  1044 ;; *************** function _Lcd_Init *****************
  1045 ;; Defined at:
  1046 ;;		line 29 in file "LCD8.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;		None
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;		None
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  1    wreg      void 
  1053 ;; Registers used:
  1054 ;;		wreg, status,2, status,0, pclath, cstack
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1060 ;;      Params:         0       0       0       0       0
  1061 ;;      Locals:         0       0       0       0       0
  1062 ;;      Temps:          0       2       0       0       0
  1063 ;;      Totals:         0       2       0       0       0
  1064 ;;Total ram usage:        2 bytes
  1065 ;; Hardware stack levels used:    1
  1066 ;; Hardware stack levels required when called:    3
  1067 ;; This function calls:
  1068 ;;		_Lcd_Cmd
  1069 ;;		_Lcd_Port
  1070 ;; This function is called by:
  1071 ;;		_main
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           
  1076                           ;psect for function _Lcd_Init
  1077  0171                     _Lcd_Init:
  1078  0171                     l1279:	
  1079                           ;incstack = 0
  1080                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1081                           
  1082                           
  1083                           ;LCD8.c: 30:     Lcd_Port(0x00);
  1084  0171  3000               	movlw	0
  1085  0172  120A  118A  2295  120A  118A  	fcall	_Lcd_Port
  1086  0177                     l1281:
  1087                           
  1088                           ;LCD8.c: 31:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1089  0177  3034               	movlw	52
  1090  0178  1283               	bcf	3,5	;RP0=0, select bank0
  1091  0179  1303               	bcf	3,6	;RP1=0, select bank0
  1092  017A  00A1               	movwf	??_Lcd_Init+1
  1093  017B  30F1               	movlw	241
  1094  017C  00A0               	movwf	??_Lcd_Init
  1095  017D                     u277:
  1096  017D  0BA0               	decfsz	??_Lcd_Init,f
  1097  017E  297D               	goto	u277
  1098  017F  0BA1               	decfsz	??_Lcd_Init+1,f
  1099  0180  297D               	goto	u277
  1100  0181                     l1283:
  1101                           
  1102                           ;LCD8.c: 32:     Lcd_Cmd(0x30);
  1103  0181  3030               	movlw	48
  1104  0182  120A  118A  222E  120A  118A  	fcall	_Lcd_Cmd
  1105                           
  1106                           ;LCD8.c: 33:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1107  0187  300D               	movlw	13
  1108  0188  1283               	bcf	3,5	;RP0=0, select bank0
  1109  0189  1303               	bcf	3,6	;RP1=0, select bank0
  1110  018A  00A1               	movwf	??_Lcd_Init+1
  1111  018B  30FB               	movlw	251
  1112  018C  00A0               	movwf	??_Lcd_Init
  1113  018D                     u287:
  1114  018D  0BA0               	decfsz	??_Lcd_Init,f
  1115  018E  298D               	goto	u287
  1116  018F  0BA1               	decfsz	??_Lcd_Init+1,f
  1117  0190  298D               	goto	u287
  1118  0191                     l1285:
  1119                           
  1120                           ;LCD8.c: 34:     Lcd_Cmd(0x30);
  1121  0191  3030               	movlw	48
  1122  0192  120A  118A  222E  120A  118A  	fcall	_Lcd_Cmd
  1123  0197                     l1287:
  1124                           
  1125                           ;LCD8.c: 35:     _delay((unsigned long)((11)*(8000000/4000.0)));
  1126  0197  301D               	movlw	29
  1127  0198  1283               	bcf	3,5	;RP0=0, select bank0
  1128  0199  1303               	bcf	3,6	;RP1=0, select bank0
  1129  019A  00A1               	movwf	??_Lcd_Init+1
  1130  019B  3090               	movlw	144
  1131  019C  00A0               	movwf	??_Lcd_Init
  1132  019D                     u297:
  1133  019D  0BA0               	decfsz	??_Lcd_Init,f
  1134  019E  299D               	goto	u297
  1135  019F  0BA1               	decfsz	??_Lcd_Init+1,f
  1136  01A0  299D               	goto	u297
  1137  01A1  0000               	nop
  1138                           
  1139                           ;LCD8.c: 36:     Lcd_Cmd(0x30);
  1140  01A2  3030               	movlw	48
  1141  01A3  120A  118A  222E  120A  118A  	fcall	_Lcd_Cmd
  1142                           
  1143                           ;LCD8.c: 38:     Lcd_Cmd(0x38);
  1144  01A8  3038               	movlw	56
  1145  01A9  120A  118A  222E  120A  118A  	fcall	_Lcd_Cmd
  1146                           
  1147                           ;LCD8.c: 39:     Lcd_Cmd(0x08);
  1148  01AE  3008               	movlw	8
  1149  01AF  120A  118A  222E  120A  118A  	fcall	_Lcd_Cmd
  1150                           
  1151                           ;LCD8.c: 40:     Lcd_Cmd(0x01);
  1152  01B4  3001               	movlw	1
  1153  01B5  120A  118A  222E  120A  118A  	fcall	_Lcd_Cmd
  1154                           
  1155                           ;LCD8.c: 41:     Lcd_Cmd(0x07);
  1156  01BA  3007               	movlw	7
  1157  01BB  120A  118A  222E  120A  118A  	fcall	_Lcd_Cmd
  1158  01C0                     l142:
  1159  01C0  0008               	return
  1160  01C1                     __end_of_Lcd_Init:
  1161                           
  1162                           	psect	text6
  1163  0288                     __ptext6:	
  1164 ;; *************** function _Lcd_Clear *****************
  1165 ;; Defined at:
  1166 ;;		line 16 in file "LCD8.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;		None
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;		None
  1171 ;; Return value:  Size  Location     Type
  1172 ;;                  1    wreg      void 
  1173 ;; Registers used:
  1174 ;;		wreg, status,2, status,0, pclath, cstack
  1175 ;; Tracked objects:
  1176 ;;		On entry : 0/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1180 ;;      Params:         0       0       0       0       0
  1181 ;;      Locals:         0       0       0       0       0
  1182 ;;      Temps:          0       0       0       0       0
  1183 ;;      Totals:         0       0       0       0       0
  1184 ;;Total ram usage:        0 bytes
  1185 ;; Hardware stack levels used:    1
  1186 ;; Hardware stack levels required when called:    3
  1187 ;; This function calls:
  1188 ;;		_Lcd_Cmd
  1189 ;; This function is called by:
  1190 ;;		_main
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194                           
  1195                           ;psect for function _Lcd_Clear
  1196  0288                     _Lcd_Clear:
  1197  0288                     l1289:	
  1198                           ;incstack = 0
  1199                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1200                           
  1201                           
  1202                           ;LCD8.c: 17:     Lcd_Cmd(0);
  1203  0288  3000               	movlw	0
  1204  0289  120A  118A  222E  120A  118A  	fcall	_Lcd_Cmd
  1205                           
  1206                           ;LCD8.c: 18:     Lcd_Cmd(1);
  1207  028E  3001               	movlw	1
  1208  028F  120A  118A  222E  120A  118A  	fcall	_Lcd_Cmd
  1209  0294                     l133:
  1210  0294  0008               	return
  1211  0295                     __end_of_Lcd_Clear:
  1212                           
  1213                           	psect	text7
  1214  022E                     __ptext7:	
  1215 ;; *************** function _Lcd_Cmd *****************
  1216 ;; Defined at:
  1217 ;;		line 8 in file "LCD8.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;  a               1    wreg     unsigned char 
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;  a               1    6[COMMON] unsigned char 
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  1    wreg      void 
  1224 ;; Registers used:
  1225 ;;		wreg, status,2, status,0, pclath, cstack
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1231 ;;      Params:         0       0       0       0       0
  1232 ;;      Locals:         1       0       0       0       0
  1233 ;;      Temps:          2       0       0       0       0
  1234 ;;      Totals:         3       0       0       0       0
  1235 ;;Total ram usage:        3 bytes
  1236 ;; Hardware stack levels used:    1
  1237 ;; Hardware stack levels required when called:    2
  1238 ;; This function calls:
  1239 ;;		_Lcd_Port
  1240 ;; This function is called by:
  1241 ;;		_Lcd_Clear
  1242 ;;		_Lcd_Set_Cursor
  1243 ;;		_Lcd_Init
  1244 ;;		_Lcd_Shift_Right
  1245 ;;		_Lcd_Shift_Left
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           
  1250                           ;psect for function _Lcd_Cmd
  1251  022E                     _Lcd_Cmd:
  1252                           
  1253                           ;incstack = 0
  1254                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1255                           ;Lcd_Cmd@a stored from wreg
  1256  022E  00F6               	movwf	Lcd_Cmd@a
  1257  022F                     l1185:
  1258                           
  1259                           ;LCD8.c: 9:     RB0 = 0;
  1260  022F  1283               	bcf	3,5	;RP0=0, select bank0
  1261  0230  1303               	bcf	3,6	;RP1=0, select bank0
  1262  0231  1006               	bcf	6,0	;volatile
  1263  0232                     l1187:
  1264                           
  1265                           ;LCD8.c: 10:     Lcd_Port(a);
  1266  0232  0876               	movf	Lcd_Cmd@a,w
  1267  0233  120A  118A  2295  120A  118A  	fcall	_Lcd_Port
  1268  0238                     l1189:
  1269                           
  1270                           ;LCD8.c: 11:     RB1 = 1;
  1271  0238  1283               	bcf	3,5	;RP0=0, select bank0
  1272  0239  1303               	bcf	3,6	;RP1=0, select bank0
  1273  023A  1486               	bsf	6,1	;volatile
  1274  023B                     l1191:
  1275                           
  1276                           ;LCD8.c: 12:     _delay((unsigned long)((4)*(8000000/4000.0)));
  1277  023B  300B               	movlw	11
  1278  023C  00F5               	movwf	??_Lcd_Cmd+1
  1279  023D  3062               	movlw	98
  1280  023E  00F4               	movwf	??_Lcd_Cmd
  1281  023F                     u307:
  1282  023F  0BF4               	decfsz	??_Lcd_Cmd,f
  1283  0240  2A3F               	goto	u307
  1284  0241  0BF5               	decfsz	??_Lcd_Cmd+1,f
  1285  0242  2A3F               	goto	u307
  1286  0243  0000               	nop
  1287  0244                     l1193:
  1288                           
  1289                           ;LCD8.c: 13:     RB1 = 0;
  1290  0244  1283               	bcf	3,5	;RP0=0, select bank0
  1291  0245  1303               	bcf	3,6	;RP1=0, select bank0
  1292  0246  1086               	bcf	6,1	;volatile
  1293  0247                     l130:
  1294  0247  0008               	return
  1295  0248                     __end_of_Lcd_Cmd:
  1296                           
  1297                           	psect	text8
  1298  0295                     __ptext8:	
  1299 ;; *************** function _Lcd_Port *****************
  1300 ;; Defined at:
  1301 ;;		line 4 in file "LCD8.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;  a               1    wreg     unsigned char 
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;  a               1    3[COMMON] unsigned char 
  1306 ;; Return value:  Size  Location     Type
  1307 ;;                  1    wreg      void 
  1308 ;; Registers used:
  1309 ;;		wreg
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1315 ;;      Params:         0       0       0       0       0
  1316 ;;      Locals:         1       0       0       0       0
  1317 ;;      Temps:          0       0       0       0       0
  1318 ;;      Totals:         1       0       0       0       0
  1319 ;;Total ram usage:        1 bytes
  1320 ;; Hardware stack levels used:    1
  1321 ;; Hardware stack levels required when called:    1
  1322 ;; This function calls:
  1323 ;;		Nothing
  1324 ;; This function is called by:
  1325 ;;		_Lcd_Cmd
  1326 ;;		_Lcd_Init
  1327 ;;		_Lcd_Write_Char
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331                           
  1332                           ;psect for function _Lcd_Port
  1333  0295                     _Lcd_Port:
  1334                           
  1335                           ;incstack = 0
  1336                           ; Regs used in _Lcd_Port: [wreg]
  1337                           ;Lcd_Port@a stored from wreg
  1338  0295  00F3               	movwf	Lcd_Port@a
  1339  0296                     l1183:
  1340                           
  1341                           ;LCD8.c: 5:     PORTD = a;
  1342  0296  0873               	movf	Lcd_Port@a,w
  1343  0297  1283               	bcf	3,5	;RP0=0, select bank0
  1344  0298  1303               	bcf	3,6	;RP1=0, select bank0
  1345  0299  0088               	movwf	8	;volatile
  1346  029A                     l127:
  1347  029A  0008               	return
  1348  029B                     __end_of_Lcd_Port:
  1349                           
  1350                           	psect	text9
  1351  0017                     __ptext9:	
  1352 ;; *************** function _ADC_setup *****************
  1353 ;; Defined at:
  1354 ;;		line 3 in file "ADC.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;  ConClock        1    wreg     unsigned char 
  1357 ;;  Channel         1    3[COMMON] unsigned char 
  1358 ;;  Format          1    4[COMMON] unsigned char 
  1359 ;;  Vref            1    5[COMMON] unsigned char 
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;  ConClock        1    6[COMMON] unsigned char 
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  1    wreg      void 
  1364 ;; Registers used:
  1365 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1371 ;;      Params:         3       0       0       0       0
  1372 ;;      Locals:         1       0       0       0       0
  1373 ;;      Temps:          0       2       0       0       0
  1374 ;;      Totals:         4       2       0       0       0
  1375 ;;Total ram usage:        6 bytes
  1376 ;; Hardware stack levels used:    1
  1377 ;; Hardware stack levels required when called:    1
  1378 ;; This function calls:
  1379 ;;		Nothing
  1380 ;; This function is called by:
  1381 ;;		_main
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           
  1386                           ;psect for function _ADC_setup
  1387  0017                     _ADC_setup:
  1388                           
  1389                           ;incstack = 0
  1390                           ; Regs used in _ADC_setup: [wreg-fsr0h+status,2+status,0]
  1391                           ;ADC_setup@ConClock stored from wreg
  1392  0017  00F6               	movwf	ADC_setup@ConClock
  1393  0018                     l1205:
  1394                           
  1395                           ;ADC.c: 4:     switch (ConClock) {
  1396  0018  282E               	goto	l1219
  1397  0019                     l1207:
  1398                           
  1399                           ;ADC.c: 6:             ADCON0bits.ADCS = 0b00;
  1400  0019  303F               	movlw	-193
  1401  001A  059F               	andwf	31,f	;volatile
  1402                           
  1403                           ;ADC.c: 7:             break;
  1404  001B  2895               	goto	l1257
  1405  001C                     l1209:
  1406                           
  1407                           ;ADC.c: 9:             ADCON0bits.ADCS = 0b01;
  1408  001C  081F               	movf	31,w	;volatile
  1409  001D  393F               	andlw	-193
  1410  001E  3840               	iorlw	64
  1411  001F  009F               	movwf	31	;volatile
  1412                           
  1413                           ;ADC.c: 10:             break;
  1414  0020  2895               	goto	l1257
  1415  0021                     l1211:
  1416                           
  1417                           ;ADC.c: 12:             ADCON0bits.ADCS = 0b10;
  1418  0021  081F               	movf	31,w	;volatile
  1419  0022  393F               	andlw	-193
  1420  0023  3880               	iorlw	128
  1421  0024  009F               	movwf	31	;volatile
  1422                           
  1423                           ;ADC.c: 13:             break;
  1424  0025  2895               	goto	l1257
  1425  0026                     l1213:
  1426                           
  1427                           ;ADC.c: 15:             ADCON0bits.ADCS = 0b11;
  1428  0026  30C0               	movlw	192
  1429  0027  049F               	iorwf	31,f	;volatile
  1430                           
  1431                           ;ADC.c: 16:             break;
  1432  0028  2895               	goto	l1257
  1433  0029                     l1215:
  1434                           
  1435                           ;ADC.c: 18:             ADCON0bits.ADCS = 0b10;
  1436  0029  081F               	movf	31,w	;volatile
  1437  002A  393F               	andlw	-193
  1438  002B  3880               	iorlw	128
  1439  002C  009F               	movwf	31	;volatile
  1440                           
  1441                           ;ADC.c: 19:             break;
  1442  002D  2895               	goto	l1257
  1443  002E                     l1219:
  1444  002E  0876               	movf	ADC_setup@ConClock,w
  1445  002F  1283               	bcf	3,5	;RP0=0, select bank0
  1446  0030  1303               	bcf	3,6	;RP1=0, select bank0
  1447  0031  00A0               	movwf	??_ADC_setup
  1448  0032  01A1               	clrf	??_ADC_setup+1
  1449                           
  1450                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1451                           ; Switch size 1, requested type "simple"
  1452                           ; Number of cases is 1, Range of values is 0 to 0
  1453                           ; switch strategies available:
  1454                           ; Name         Instructions Cycles
  1455                           ; simple_byte            4     3 (average)
  1456                           ; direct_byte           11     8 (fixed)
  1457                           ; jumptable            260     6 (fixed)
  1458                           ;	Chosen strategy is simple_byte
  1459  0033  0821               	movf	??_ADC_setup+1,w
  1460  0034  3A00               	xorlw	0	; case 0
  1461  0035  1903               	skipnz
  1462  0036  2838               	goto	l1403
  1463  0037  2829               	goto	l1215
  1464  0038                     l1403:
  1465                           
  1466                           ; Switch size 1, requested type "simple"
  1467                           ; Number of cases is 4, Range of values is 1 to 4
  1468                           ; switch strategies available:
  1469                           ; Name         Instructions Cycles
  1470                           ; simple_byte           13     7 (average)
  1471                           ; direct_byte           23    11 (fixed)
  1472                           ; jumptable            263     9 (fixed)
  1473                           ;	Chosen strategy is simple_byte
  1474  0038  0820               	movf	??_ADC_setup,w
  1475  0039  3A01               	xorlw	1	; case 1
  1476  003A  1903               	skipnz
  1477  003B  2819               	goto	l1207
  1478  003C  3A03               	xorlw	3	; case 2
  1479  003D  1903               	skipnz
  1480  003E  281C               	goto	l1209
  1481  003F  3A01               	xorlw	1	; case 3
  1482  0040  1903               	skipnz
  1483  0041  2821               	goto	l1211
  1484  0042  3A07               	xorlw	7	; case 4
  1485  0043  1903               	skipnz
  1486  0044  2826               	goto	l1213
  1487  0045  2829               	goto	l1215
  1488  0046                     l1221:
  1489                           
  1490                           ;ADC.c: 23:             ADCON0bits.CHS = 0b0000;
  1491  0046  30C3               	movlw	-61
  1492  0047  059F               	andwf	31,f	;volatile
  1493                           
  1494                           ;ADC.c: 24:             break;
  1495  0048  28CF               	goto	l1259
  1496  0049                     l1223:
  1497                           
  1498                           ;ADC.c: 26:             ADCON0bits.CHS = 0b0001;
  1499  0049  081F               	movf	31,w	;volatile
  1500  004A  39C3               	andlw	-61
  1501  004B  3804               	iorlw	4
  1502  004C  009F               	movwf	31	;volatile
  1503                           
  1504                           ;ADC.c: 27:             break;
  1505  004D  28CF               	goto	l1259
  1506  004E                     l1225:
  1507                           
  1508                           ;ADC.c: 29:             ADCON0bits.CHS = 0b0010;
  1509  004E  081F               	movf	31,w	;volatile
  1510  004F  39C3               	andlw	-61
  1511  0050  3808               	iorlw	8
  1512  0051  009F               	movwf	31	;volatile
  1513                           
  1514                           ;ADC.c: 30:             break;
  1515  0052  28CF               	goto	l1259
  1516  0053                     l1227:
  1517                           
  1518                           ;ADC.c: 32:             ADCON0bits.CHS = 0b0011;
  1519  0053  081F               	movf	31,w	;volatile
  1520  0054  39C3               	andlw	-61
  1521  0055  380C               	iorlw	12
  1522  0056  009F               	movwf	31	;volatile
  1523                           
  1524                           ;ADC.c: 33:             break;
  1525  0057  28CF               	goto	l1259
  1526  0058                     l1229:
  1527                           
  1528                           ;ADC.c: 35:             ADCON0bits.CHS = 0b0100;
  1529  0058  081F               	movf	31,w	;volatile
  1530  0059  39C3               	andlw	-61
  1531  005A  3810               	iorlw	16
  1532  005B  009F               	movwf	31	;volatile
  1533                           
  1534                           ;ADC.c: 36:             break;
  1535  005C  28CF               	goto	l1259
  1536  005D                     l1231:
  1537                           
  1538                           ;ADC.c: 38:             ADCON0bits.CHS = 0b0101;
  1539  005D  081F               	movf	31,w	;volatile
  1540  005E  39C3               	andlw	-61
  1541  005F  3814               	iorlw	20
  1542  0060  009F               	movwf	31	;volatile
  1543                           
  1544                           ;ADC.c: 39:             break;
  1545  0061  28CF               	goto	l1259
  1546  0062                     l1233:
  1547                           
  1548                           ;ADC.c: 41:             ADCON0bits.CHS = 0b0110;
  1549  0062  081F               	movf	31,w	;volatile
  1550  0063  39C3               	andlw	-61
  1551  0064  3818               	iorlw	24
  1552  0065  009F               	movwf	31	;volatile
  1553                           
  1554                           ;ADC.c: 42:             break;
  1555  0066  28CF               	goto	l1259
  1556  0067                     l1235:
  1557                           
  1558                           ;ADC.c: 44:             ADCON0bits.CHS = 0b0111;
  1559  0067  081F               	movf	31,w	;volatile
  1560  0068  39C3               	andlw	-61
  1561  0069  381C               	iorlw	28
  1562  006A  009F               	movwf	31	;volatile
  1563                           
  1564                           ;ADC.c: 45:             break;
  1565  006B  28CF               	goto	l1259
  1566  006C                     l1237:
  1567                           
  1568                           ;ADC.c: 47:             ADCON0bits.CHS = 0b1000;
  1569  006C  081F               	movf	31,w	;volatile
  1570  006D  39C3               	andlw	-61
  1571  006E  3820               	iorlw	32
  1572  006F  009F               	movwf	31	;volatile
  1573                           
  1574                           ;ADC.c: 48:             break;
  1575  0070  28CF               	goto	l1259
  1576  0071                     l1239:
  1577                           
  1578                           ;ADC.c: 50:             ADCON0bits.CHS = 0b1001;
  1579  0071  081F               	movf	31,w	;volatile
  1580  0072  39C3               	andlw	-61
  1581  0073  3824               	iorlw	36
  1582  0074  009F               	movwf	31	;volatile
  1583                           
  1584                           ;ADC.c: 51:             break;
  1585  0075  28CF               	goto	l1259
  1586  0076                     l1241:
  1587                           
  1588                           ;ADC.c: 53:             ADCON0bits.CHS = 0b1010;
  1589  0076  081F               	movf	31,w	;volatile
  1590  0077  39C3               	andlw	-61
  1591  0078  3828               	iorlw	40
  1592  0079  009F               	movwf	31	;volatile
  1593                           
  1594                           ;ADC.c: 54:             break;
  1595  007A  28CF               	goto	l1259
  1596  007B                     l1243:
  1597                           
  1598                           ;ADC.c: 56:             ADCON0bits.CHS = 0b1011;
  1599  007B  081F               	movf	31,w	;volatile
  1600  007C  39C3               	andlw	-61
  1601  007D  382C               	iorlw	44
  1602  007E  009F               	movwf	31	;volatile
  1603                           
  1604                           ;ADC.c: 57:             break;
  1605  007F  28CF               	goto	l1259
  1606  0080                     l1245:
  1607                           
  1608                           ;ADC.c: 59:             ADCON0bits.CHS = 0b1100;
  1609  0080  081F               	movf	31,w	;volatile
  1610  0081  39C3               	andlw	-61
  1611  0082  3830               	iorlw	48
  1612  0083  009F               	movwf	31	;volatile
  1613                           
  1614                           ;ADC.c: 60:             break;
  1615  0084  28CF               	goto	l1259
  1616  0085                     l1247:
  1617                           
  1618                           ;ADC.c: 62:             ADCON0bits.CHS = 0b1101;
  1619  0085  081F               	movf	31,w	;volatile
  1620  0086  39C3               	andlw	-61
  1621  0087  3834               	iorlw	52
  1622  0088  009F               	movwf	31	;volatile
  1623                           
  1624                           ;ADC.c: 63:             break;
  1625  0089  28CF               	goto	l1259
  1626  008A                     l1249:
  1627                           
  1628                           ;ADC.c: 65:             ADCON0bits.CHS = 0b1110;
  1629  008A  081F               	movf	31,w	;volatile
  1630  008B  39C3               	andlw	-61
  1631  008C  3838               	iorlw	56
  1632  008D  009F               	movwf	31	;volatile
  1633                           
  1634                           ;ADC.c: 66:             break;
  1635  008E  28CF               	goto	l1259
  1636  008F                     l1251:
  1637                           
  1638                           ;ADC.c: 68:             ADCON0bits.CHS = 0b1111;
  1639  008F  303C               	movlw	60
  1640  0090  049F               	iorwf	31,f	;volatile
  1641                           
  1642                           ;ADC.c: 69:             break;
  1643  0091  28CF               	goto	l1259
  1644  0092                     l1253:
  1645                           
  1646                           ;ADC.c: 71:             ADCON0bits.CHS = 0b0000;
  1647  0092  30C3               	movlw	-61
  1648  0093  059F               	andwf	31,f	;volatile
  1649                           
  1650                           ;ADC.c: 72:             break;
  1651  0094  28CF               	goto	l1259
  1652  0095                     l1257:
  1653  0095  0873               	movf	ADC_setup@Channel,w
  1654  0096  00A0               	movwf	??_ADC_setup
  1655  0097  01A1               	clrf	??_ADC_setup+1
  1656                           
  1657                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1658                           ; Switch size 1, requested type "simple"
  1659                           ; Number of cases is 1, Range of values is 0 to 0
  1660                           ; switch strategies available:
  1661                           ; Name         Instructions Cycles
  1662                           ; simple_byte            4     3 (average)
  1663                           ; direct_byte           11     8 (fixed)
  1664                           ; jumptable            260     6 (fixed)
  1665                           ;	Chosen strategy is simple_byte
  1666  0098  0821               	movf	??_ADC_setup+1,w
  1667  0099  3A00               	xorlw	0	; case 0
  1668  009A  1903               	skipnz
  1669  009B  289D               	goto	l1405
  1670  009C  2892               	goto	l1253
  1671  009D                     l1405:
  1672                           
  1673                           ; Switch size 1, requested type "simple"
  1674                           ; Number of cases is 16, Range of values is 0 to 15
  1675                           ; switch strategies available:
  1676                           ; Name         Instructions Cycles
  1677                           ; simple_byte           49    25 (average)
  1678                           ; direct_byte           56     8 (fixed)
  1679                           ; jumptable            260     6 (fixed)
  1680                           ;	Chosen strategy is simple_byte
  1681  009D  0820               	movf	??_ADC_setup,w
  1682  009E  3A00               	xorlw	0	; case 0
  1683  009F  1903               	skipnz
  1684  00A0  2846               	goto	l1221
  1685  00A1  3A01               	xorlw	1	; case 1
  1686  00A2  1903               	skipnz
  1687  00A3  2849               	goto	l1223
  1688  00A4  3A03               	xorlw	3	; case 2
  1689  00A5  1903               	skipnz
  1690  00A6  284E               	goto	l1225
  1691  00A7  3A01               	xorlw	1	; case 3
  1692  00A8  1903               	skipnz
  1693  00A9  2853               	goto	l1227
  1694  00AA  3A07               	xorlw	7	; case 4
  1695  00AB  1903               	skipnz
  1696  00AC  2858               	goto	l1229
  1697  00AD  3A01               	xorlw	1	; case 5
  1698  00AE  1903               	skipnz
  1699  00AF  285D               	goto	l1231
  1700  00B0  3A03               	xorlw	3	; case 6
  1701  00B1  1903               	skipnz
  1702  00B2  2862               	goto	l1233
  1703  00B3  3A01               	xorlw	1	; case 7
  1704  00B4  1903               	skipnz
  1705  00B5  2867               	goto	l1235
  1706  00B6  3A0F               	xorlw	15	; case 8
  1707  00B7  1903               	skipnz
  1708  00B8  286C               	goto	l1237
  1709  00B9  3A01               	xorlw	1	; case 9
  1710  00BA  1903               	skipnz
  1711  00BB  2871               	goto	l1239
  1712  00BC  3A03               	xorlw	3	; case 10
  1713  00BD  1903               	skipnz
  1714  00BE  2876               	goto	l1241
  1715  00BF  3A01               	xorlw	1	; case 11
  1716  00C0  1903               	skipnz
  1717  00C1  287B               	goto	l1243
  1718  00C2  3A07               	xorlw	7	; case 12
  1719  00C3  1903               	skipnz
  1720  00C4  2880               	goto	l1245
  1721  00C5  3A01               	xorlw	1	; case 13
  1722  00C6  1903               	skipnz
  1723  00C7  2885               	goto	l1247
  1724  00C8  3A03               	xorlw	3	; case 14
  1725  00C9  1903               	skipnz
  1726  00CA  288A               	goto	l1249
  1727  00CB  3A01               	xorlw	1	; case 15
  1728  00CC  1903               	skipnz
  1729  00CD  288F               	goto	l1251
  1730  00CE  2892               	goto	l1253
  1731  00CF                     l1259:
  1732                           
  1733                           ;ADC.c: 74:     if (Format == 1) {
  1734  00CF  0374               	decf	ADC_setup@Format,w
  1735  00D0  1D03               	btfss	3,2
  1736  00D1  28D3               	goto	u181
  1737  00D2  28D4               	goto	u180
  1738  00D3                     u181:
  1739  00D3  28D8               	goto	l107
  1740  00D4                     u180:
  1741  00D4                     l1261:
  1742                           
  1743                           ;ADC.c: 75:         ADCON1bits.ADFM = 1;
  1744  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  1745  00D5  1303               	bcf	3,6	;RP1=0, select bank1
  1746  00D6  179F               	bsf	31,7	;volatile
  1747                           
  1748                           ;ADC.c: 76:     } else {
  1749  00D7  28F5               	goto	l1265
  1750  00D8                     l107:
  1751                           
  1752                           ;ADC.c: 77:         ADCON1bits.ADFM = 0;
  1753  00D8  1683               	bsf	3,5	;RP0=1, select bank1
  1754  00D9  1303               	bcf	3,6	;RP1=0, select bank1
  1755  00DA  139F               	bcf	31,7	;volatile
  1756  00DB  28F5               	goto	l1265
  1757  00DC                     l110:	
  1758                           ;ADC.c: 80:         case 1:
  1759                           
  1760                           
  1761                           ;ADC.c: 81:             ADCON1bits.VCFG0 = 0;
  1762  00DC  1683               	bsf	3,5	;RP0=1, select bank1
  1763  00DD  1303               	bcf	3,6	;RP1=0, select bank1
  1764  00DE  121F               	bcf	31,4	;volatile
  1765                           
  1766                           ;ADC.c: 82:             ADCON1bits.VCFG1 = 0;
  1767  00DF  129F               	bcf	31,5	;volatile
  1768                           
  1769                           ;ADC.c: 83:             break;
  1770  00E0  290D               	goto	l111
  1771  00E1                     l112:	
  1772                           ;ADC.c: 84:         case 2:
  1773                           
  1774                           
  1775                           ;ADC.c: 85:             ADCON1bits.VCFG0 = 1;
  1776  00E1  1683               	bsf	3,5	;RP0=1, select bank1
  1777  00E2  1303               	bcf	3,6	;RP1=0, select bank1
  1778  00E3  161F               	bsf	31,4	;volatile
  1779                           
  1780                           ;ADC.c: 86:             ADCON1bits.VCFG1 = 1;
  1781  00E4  169F               	bsf	31,5	;volatile
  1782                           
  1783                           ;ADC.c: 87:             break;
  1784  00E5  290D               	goto	l111
  1785  00E6                     l113:	
  1786                           ;ADC.c: 88:         case 3:
  1787                           
  1788                           
  1789                           ;ADC.c: 89:             ADCON1bits.VCFG0 = 0;
  1790  00E6  1683               	bsf	3,5	;RP0=1, select bank1
  1791  00E7  1303               	bcf	3,6	;RP1=0, select bank1
  1792  00E8  121F               	bcf	31,4	;volatile
  1793                           
  1794                           ;ADC.c: 90:             ADCON1bits.VCFG1 = 1;
  1795  00E9  169F               	bsf	31,5	;volatile
  1796                           
  1797                           ;ADC.c: 91:             break;
  1798  00EA  290D               	goto	l111
  1799  00EB                     l114:	
  1800                           ;ADC.c: 92:         case 4:
  1801                           
  1802                           
  1803                           ;ADC.c: 93:             ADCON1bits.VCFG0 = 1;
  1804  00EB  1683               	bsf	3,5	;RP0=1, select bank1
  1805  00EC  1303               	bcf	3,6	;RP1=0, select bank1
  1806  00ED  161F               	bsf	31,4	;volatile
  1807                           
  1808                           ;ADC.c: 94:             ADCON1bits.VCFG1 = 0;
  1809  00EE  129F               	bcf	31,5	;volatile
  1810                           
  1811                           ;ADC.c: 95:             break;
  1812  00EF  290D               	goto	l111
  1813  00F0                     l115:	
  1814                           ;ADC.c: 96:         default:
  1815                           
  1816                           
  1817                           ;ADC.c: 97:             ADCON1bits.VCFG0 = 0;
  1818  00F0  1683               	bsf	3,5	;RP0=1, select bank1
  1819  00F1  1303               	bcf	3,6	;RP1=0, select bank1
  1820  00F2  121F               	bcf	31,4	;volatile
  1821                           
  1822                           ;ADC.c: 98:             ADCON1bits.VCFG1 = 0;
  1823  00F3  129F               	bcf	31,5	;volatile
  1824                           
  1825                           ;ADC.c: 99:             break;
  1826  00F4  290D               	goto	l111
  1827  00F5                     l1265:
  1828  00F5  0875               	movf	ADC_setup@Vref,w
  1829  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  1830  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  1831  00F8  00A0               	movwf	??_ADC_setup
  1832  00F9  01A1               	clrf	??_ADC_setup+1
  1833                           
  1834                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1835                           ; Switch size 1, requested type "simple"
  1836                           ; Number of cases is 1, Range of values is 0 to 0
  1837                           ; switch strategies available:
  1838                           ; Name         Instructions Cycles
  1839                           ; simple_byte            4     3 (average)
  1840                           ; direct_byte           11     8 (fixed)
  1841                           ; jumptable            260     6 (fixed)
  1842                           ;	Chosen strategy is simple_byte
  1843  00FA  0821               	movf	??_ADC_setup+1,w
  1844  00FB  3A00               	xorlw	0	; case 0
  1845  00FC  1903               	skipnz
  1846  00FD  28FF               	goto	l1407
  1847  00FE  28F0               	goto	l115
  1848  00FF                     l1407:
  1849                           
  1850                           ; Switch size 1, requested type "simple"
  1851                           ; Number of cases is 4, Range of values is 1 to 4
  1852                           ; switch strategies available:
  1853                           ; Name         Instructions Cycles
  1854                           ; simple_byte           13     7 (average)
  1855                           ; direct_byte           23    11 (fixed)
  1856                           ; jumptable            263     9 (fixed)
  1857                           ;	Chosen strategy is simple_byte
  1858  00FF  0820               	movf	??_ADC_setup,w
  1859  0100  3A01               	xorlw	1	; case 1
  1860  0101  1903               	skipnz
  1861  0102  28DC               	goto	l110
  1862  0103  3A03               	xorlw	3	; case 2
  1863  0104  1903               	skipnz
  1864  0105  28E1               	goto	l112
  1865  0106  3A01               	xorlw	1	; case 3
  1866  0107  1903               	skipnz
  1867  0108  28E6               	goto	l113
  1868  0109  3A07               	xorlw	7	; case 4
  1869  010A  1903               	skipnz
  1870  010B  28EB               	goto	l114
  1871  010C  28F0               	goto	l115
  1872  010D                     l111:
  1873                           
  1874                           ;ADC.c: 101:     ADCON0bits.ADON=1;
  1875  010D  1283               	bcf	3,5	;RP0=0, select bank0
  1876  010E  1303               	bcf	3,6	;RP1=0, select bank0
  1877  010F  141F               	bsf	31,0	;volatile
  1878                           
  1879                           ;ADC.c: 102:     INTCONbits.GIE=1;
  1880  0110  178B               	bsf	11,7	;volatile
  1881                           
  1882                           ;ADC.c: 103:     INTCONbits.PEIE=1;
  1883  0111  170B               	bsf	11,6	;volatile
  1884                           
  1885                           ;ADC.c: 104:     PIE1bits.ADIE=1;
  1886  0112  1683               	bsf	3,5	;RP0=1, select bank1
  1887  0113  1303               	bcf	3,6	;RP1=0, select bank1
  1888  0114  170C               	bsf	12,6	;volatile
  1889  0115                     l116:
  1890  0115  0008               	return
  1891  0116                     __end_of_ADC_setup:
  1892                           
  1893                           	psect	text10
  1894  01EA                     __ptext10:	
  1895 ;; *************** function _oli *****************
  1896 ;; Defined at:
  1897 ;;		line 104 in file "SerialLCD.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;		None
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;		None
  1902 ;; Return value:  Size  Location     Type
  1903 ;;                  1    wreg      void 
  1904 ;; Registers used:
  1905 ;;		wreg, status,2, status,0
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1911 ;;      Params:         0       0       0       0       0
  1912 ;;      Locals:         0       0       0       0       0
  1913 ;;      Temps:          3       0       0       0       0
  1914 ;;      Totals:         3       0       0       0       0
  1915 ;;Total ram usage:        3 bytes
  1916 ;; Hardware stack levels used:    1
  1917 ;; This function calls:
  1918 ;;		Nothing
  1919 ;; This function is called by:
  1920 ;;		Interrupt level 1
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           
  1925                           ;psect for function _oli
  1926  01EA                     _oli:
  1927  01EA                     i1l919:
  1928  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  1929  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  1930  01EC  1F0C               	btfss	12,6	;volatile
  1931  01ED  29EF               	goto	u8_21
  1932  01EE  29F0               	goto	u8_20
  1933  01EF                     u8_21:
  1934  01EF  2A09               	goto	i1l70
  1935  01F0                     u8_20:
  1936  01F0                     i1l921:
  1937  01F0  130C               	bcf	12,6	;volatile
  1938  01F1                     i1l923:
  1939  01F1  037A               	decf	_Pots,w
  1940  01F2  1D03               	btfss	3,2
  1941  01F3  29F5               	goto	u9_21
  1942  01F4  29F6               	goto	u9_20
  1943  01F5                     u9_21:
  1944  01F5  29FC               	goto	i1l929
  1945  01F6                     u9_20:
  1946  01F6                     i1l925:
  1947  01F6  01FA               	clrf	_Pots
  1948  01F7                     i1l927:
  1949  01F7  081E               	movf	30,w	;volatile
  1950  01F8  00F0               	movwf	??_oli
  1951  01F9  0870               	movf	??_oli,w
  1952  01FA  00F9               	movwf	_ADC_value1
  1953  01FB  2A07               	goto	i1l935
  1954  01FC                     i1l929:
  1955  01FC  087A               	movf	_Pots,w
  1956  01FD  1D03               	btfss	3,2
  1957  01FE  2A00               	goto	u10_21
  1958  01FF  2A01               	goto	u10_20
  1959  0200                     u10_21:
  1960  0200  2A07               	goto	i1l935
  1961  0201                     u10_20:
  1962  0201                     i1l931:
  1963  0201  01FA               	clrf	_Pots
  1964  0202  0AFA               	incf	_Pots,f
  1965  0203                     i1l933:
  1966  0203  081E               	movf	30,w	;volatile
  1967  0204  00F0               	movwf	??_oli
  1968  0205  0870               	movf	??_oli,w
  1969  0206  00F8               	movwf	_ADC_value2
  1970  0207                     i1l935:
  1971  0207  01F7               	clrf	_ADC_finish
  1972  0208  0AF7               	incf	_ADC_finish,f
  1973  0209                     i1l70:
  1974  0209  0872               	movf	??_oli+2,w
  1975  020A  008A               	movwf	10
  1976  020B  0E71               	swapf	??_oli+1,w
  1977  020C  0083               	movwf	3
  1978  020D  0EFE               	swapf	btemp,f
  1979  020E  0E7E               	swapf	btemp,w
  1980  020F  0009               	retfie
  1981  0210                     __end_of_oli:
  1982  007E                     btemp	set	126	;btemp
  1983  007E                     wtemp0	set	126
  1984                           
  1985                           	psect	intentry
  1986  0004                     __pintentry:	
  1987                           ;incstack = 0
  1988                           ; Regs used in _oli: [wreg+status,2+status,0]
  1989                           
  1990  0004                     interrupt_function:
  1991  007E                     saved_w	set	btemp
  1992  0004  00FE               	movwf	btemp
  1993  0005  0E03               	swapf	3,w
  1994  0006  00F1               	movwf	??_oli+1
  1995  0007  080A               	movf	10,w
  1996  0008  00F2               	movwf	??_oli+2
  1997  0009  120A  118A  29EA   	ljmp	_oli
  1998                           
  1999                           	psect	config
  2000                           
  2001                           ;Config register CONFIG1 @ 0x2007
  2002                           ;	Oscillator Selection bits
  2003                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  2004                           ;	Watchdog Timer Enable bit
  2005                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2006                           ;	Power-up Timer Enable bit
  2007                           ;	PWRTE = OFF, PWRT disabled
  2008                           ;	RE3/MCLR pin function select bit
  2009                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2010                           ;	Code Protection bit
  2011                           ;	CP = OFF, Program memory code protection is disabled
  2012                           ;	Data Code Protection bit
  2013                           ;	CPD = OFF, Data memory code protection is disabled
  2014                           ;	Brown Out Reset Selection bits
  2015                           ;	BOREN = OFF, BOR disabled
  2016                           ;	Internal External Switchover bit
  2017                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2018                           ;	Fail-Safe Clock Monitor Enabled bit
  2019                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2020                           ;	Low Voltage Programming Enable bit
  2021                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2022                           ;	In-Circuit Debugger Mode bit
  2023                           ;	DEBUG = 0x1, unprogrammed default
  2024  2007                     	org	8199
  2025  2007  20F1               	dw	8433
  2026                           
  2027                           ;Config register CONFIG2 @ 0x2008
  2028                           ;	Brown-out Reset Selection bit
  2029                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2030                           ;	Flash Program Memory Self Write Enable bits
  2031                           ;	WRT = OFF, Write protection off
  2032  2008                     	org	8200
  2033  2008  3FFF               	dw	16383

Data Sizes:
    Strings     16
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80      4       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_ADC_setup
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _oli in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Lcd_Write_String

Critical Paths under _oli in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _oli in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _oli in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _oli in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     972
                                              3 BANK0      1     1      0
                          _ADC_setup
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     210
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       2     1      1     258
                                              0 BANK0      2     1      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_setup                                            6     3      3     394
                                              3 COMMON     4     1      3
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _oli                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_setup
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup

 _oli (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       F      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 18:35:48 2021

                        pc 0002                         l61 0287                         fsr 0004  
                      l110 00DC                        l111 010D                        l112 00E1  
                      l113 00E6                        l114 00EB                        l130 0247  
                      l115 00F0                        l107 00D8                        l116 0115  
                      l133 0294                        l142 01C0                        l127 029A  
                      l151 01E9                        l145 0273         __size_of_ADC_setup 00FF  
                      l139 022D                        l771 0274                        l781 0284  
                      l773 027C                        l783 0285                        l775 027D  
                      l777 0282                        l779 0283                        _RB0 0030  
                      _RB1 0031                        u200 0226                        u201 0225  
                      u210 01E9                        u211 01E8                        u220 0136  
                      u221 0135                        u230 0144                        u231 0143  
                      u240 0151                        u241 0150                        u307 023F  
                      u180 00D4                        u181 00D3                        u190 0218  
                      u191 0217                        u257 013B                        u267 026D  
                      u277 017D                        u287 018D                        u297 019D  
                      _oli 01EA                        fsr0 0004                       l1201 026B  
                     l1211 0021                       l1203 0270                       l1221 0046  
                     l1213 0026                       l1205 0018                       l1301 01C7  
                     l1231 005D                       l1223 0049                       l1215 0029  
                     l1207 0019                       l1303 01D4                       l1311 0129  
                     l1241 0076                       l1233 0062                       l1225 004E  
                     l1209 001C                       l1305 01DC                       l1321 013F  
                     l1313 012E                       l1251 008F                       l1243 007B  
                     l1235 0067                       l1227 0053                       l1403 0038  
                     l1219 002E                       l1331 0157                       l1323 0144  
                     l1315 0131                       l1307 0116                       l1261 00D4  
                     l1405 009D                       l1253 0092                       l1245 0080  
                     l1237 006C                       l1229 0058                       l1325 014A  
                     l1317 0136                       l1333 0158                       l1309 011B  
                     l1407 00FF                       l1247 0085                       l1239 0071  
                     l1183 0296                       l1191 023B                       l1335 015D  
                     l1327 014C                       l1319 0137                       l1265 00F5  
                     l1249 008A                       l1257 0095                       l1193 0244  
                     l1185 022F                       l1281 0177                       l1337 0167  
                     l1329 0151                       l1259 00CF                       l1187 0232  
                     l1283 0181                       l1291 0213                       l1195 025F  
                     l1189 0238                       l1285 0191                       l1293 0218  
                     l1197 0262                       l1287 0197                       l1279 0171  
                     l1295 0220                       l1199 0268                       l1289 0288  
                     l1297 0226                       l1299 01C4                       ?_oli 0070  
                     STR_1 024E                       i1l70 0209                       u8_20 01F0  
                     u8_21 01EF                       u9_20 01F6                       u9_21 01F5  
                     _Pots 007A          ?_Lcd_Write_String 0070                       _main 0116  
                     btemp 007E                       start 000C         ??_Lcd_Write_String 0076  
          __end_of_Lcd_Cmd 0248                      ??_oli 0070                      ?_main 0070  
                    _ANSEL 0188                      i1l921 01F0                      i1l931 0201  
                    i1l923 01F1                      i1l933 0203                      i1l925 01F6  
                    i1l935 0207                      i1l927 01F7                      i1l919 01EA  
                    i1l929 01FC                      u10_20 0201                      u10_21 0200  
                    _PORTD 0008    __size_of_Lcd_Set_Cursor 001E                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _setup 0274                      pclath 000A                      status 0003  
                    wtemp0 007E          __end_of_ADC_setup 0116           __end_of_Lcd_Init 01C1  
         __end_of_Lcd_Port 029B            __initialization 000F               __end_of_main 0171  
                   ??_main 0023              ADC_setup@Vref 0075         __size_of_Lcd_Clear 000D  
                   _ADRESH 001E                     ?_setup 0070                     _ANSELH 0189  
                ??_Lcd_Cmd 0074    __size_of_Lcd_Write_Char 0016           ADC_setup@Channel 0073  
                   saved_w 007E            Lcd_Set_Cursor@a 0021            Lcd_Set_Cursor@b 0020  
  __end_of__initialization 0013          __end_of_Lcd_Clear 0295             __pcstackCOMMON 0070  
            __end_of_setup 0288             _Lcd_Set_Cursor 0210                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                    ??_setup 0073                 __pmaintext 0116  
               __pintentry 0004  __size_of_Lcd_Write_String 0029     __end_of_Lcd_Set_Cursor 022E  
               ??_Lcd_Init 0020                 ??_Lcd_Port 0073                 __stringtab 0248  
           _Lcd_Write_Char 025E                    _Lcd_Cmd 022E                  _ADC_setup 0017  
                _ANSELbits 0188            ?_Lcd_Set_Cursor 0020                    __ptext1 0274  
                  __ptext2 01C1                    __ptext3 025E                    __ptext4 0210  
                  __ptext5 0171                    __ptext6 0288                    __ptext7 022E  
                  __ptext8 0295                    __ptext9 0017               __size_of_oli 0026  
        ADC_setup@ConClock 0076     __end_of_Lcd_Write_Char 0274       end_of_initialization 0013  
               ?_ADC_setup 0073                  Lcd_Port@a 0073                  _TRISAbits 0085  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0020          Lcd_Write_String@i 0021  
                _Lcd_Clear 0288           _Lcd_Write_String 01C1        start_initialization 000F  
              __end_of_oli 0210          __size_of_Lcd_Init 0050          __size_of_Lcd_Port 0006  
              ??_ADC_setup 0020                 ?_Lcd_Clear 0070            ADC_setup@Format 0074  
          Lcd_Write_Char@a 0075                __pbssCOMMON 0077                  ___latbits 0002  
            __pcstackBANK0 0020                   ?_Lcd_Cmd 0070           ??_Lcd_Set_Cursor 0077  
                __pstrings 0248             __size_of_setup 0014          interrupt_function 0004  
                 _PIE1bits 008C                   Lcd_Cmd@a 0076                   _PIR1bits 000C  
              ??_Lcd_Clear 0077                 _ADCON0bits 001F                __stringbase 024D  
               _ADCON1bits 009F           ??_Lcd_Write_Char 0074                   _Lcd_Init 0171  
                 _Lcd_Port 0295   __end_of_Lcd_Write_String 01EA           __size_of_Lcd_Cmd 001A  
               _ADC_finish 0077                 _ADC_value1 0079                 _ADC_value2 0078  
       __end_of__stringtab 024E                   __ptext10 01EA              __size_of_main 005B  
               _INTCONbits 000B                   intlevel1 0000                  stringcode 0248  
                 stringdir 0248                   stringtab 0248  
