

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 22:05:18 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2,group=3
    39                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    58                           	dabs	1,0x7E,2
    59  0000                     
    60                           ; Version 2.20
    61                           ; Generated 12/02/2020 GMT
    62                           ; 
    63                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC16F887 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     	;# 
    95  0001                     	;# 
    96  0002                     	;# 
    97  0003                     	;# 
    98  0004                     	;# 
    99  0005                     	;# 
   100  0006                     	;# 
   101  0007                     	;# 
   102  0008                     	;# 
   103  0009                     	;# 
   104  000A                     	;# 
   105  000B                     	;# 
   106  000C                     	;# 
   107  000D                     	;# 
   108  000E                     	;# 
   109  000E                     	;# 
   110  000F                     	;# 
   111  0010                     	;# 
   112  0011                     	;# 
   113  0012                     	;# 
   114  0013                     	;# 
   115  0014                     	;# 
   116  0015                     	;# 
   117  0015                     	;# 
   118  0016                     	;# 
   119  0017                     	;# 
   120  0018                     	;# 
   121  0019                     	;# 
   122  001A                     	;# 
   123  001B                     	;# 
   124  001B                     	;# 
   125  001C                     	;# 
   126  001D                     	;# 
   127  001E                     	;# 
   128  001F                     	;# 
   129  0081                     	;# 
   130  0085                     	;# 
   131  0086                     	;# 
   132  0087                     	;# 
   133  0088                     	;# 
   134  0089                     	;# 
   135  008C                     	;# 
   136  008D                     	;# 
   137  008E                     	;# 
   138  008F                     	;# 
   139  0090                     	;# 
   140  0091                     	;# 
   141  0092                     	;# 
   142  0093                     	;# 
   143  0093                     	;# 
   144  0093                     	;# 
   145  0094                     	;# 
   146  0095                     	;# 
   147  0096                     	;# 
   148  0097                     	;# 
   149  0098                     	;# 
   150  0099                     	;# 
   151  009A                     	;# 
   152  009B                     	;# 
   153  009C                     	;# 
   154  009D                     	;# 
   155  009E                     	;# 
   156  009F                     	;# 
   157  0105                     	;# 
   158  0107                     	;# 
   159  0108                     	;# 
   160  0109                     	;# 
   161  010C                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  0185                     	;# 
   167  0187                     	;# 
   168  0188                     	;# 
   169  0189                     	;# 
   170  018C                     	;# 
   171  018D                     	;# 
   172  0000                     	;# 
   173  0001                     	;# 
   174  0002                     	;# 
   175  0003                     	;# 
   176  0004                     	;# 
   177  0005                     	;# 
   178  0006                     	;# 
   179  0007                     	;# 
   180  0008                     	;# 
   181  0009                     	;# 
   182  000A                     	;# 
   183  000B                     	;# 
   184  000C                     	;# 
   185  000D                     	;# 
   186  000E                     	;# 
   187  000E                     	;# 
   188  000F                     	;# 
   189  0010                     	;# 
   190  0011                     	;# 
   191  0012                     	;# 
   192  0013                     	;# 
   193  0014                     	;# 
   194  0015                     	;# 
   195  0015                     	;# 
   196  0016                     	;# 
   197  0017                     	;# 
   198  0018                     	;# 
   199  0019                     	;# 
   200  001A                     	;# 
   201  001B                     	;# 
   202  001B                     	;# 
   203  001C                     	;# 
   204  001D                     	;# 
   205  001E                     	;# 
   206  001F                     	;# 
   207  0081                     	;# 
   208  0085                     	;# 
   209  0086                     	;# 
   210  0087                     	;# 
   211  0088                     	;# 
   212  0089                     	;# 
   213  008C                     	;# 
   214  008D                     	;# 
   215  008E                     	;# 
   216  008F                     	;# 
   217  0090                     	;# 
   218  0091                     	;# 
   219  0092                     	;# 
   220  0093                     	;# 
   221  0093                     	;# 
   222  0093                     	;# 
   223  0094                     	;# 
   224  0095                     	;# 
   225  0096                     	;# 
   226  0097                     	;# 
   227  0098                     	;# 
   228  0099                     	;# 
   229  009A                     	;# 
   230  009B                     	;# 
   231  009C                     	;# 
   232  009D                     	;# 
   233  009E                     	;# 
   234  009F                     	;# 
   235  0105                     	;# 
   236  0107                     	;# 
   237  0108                     	;# 
   238  0109                     	;# 
   239  010C                     	;# 
   240  010C                     	;# 
   241  010D                     	;# 
   242  010E                     	;# 
   243  010F                     	;# 
   244  0185                     	;# 
   245  0187                     	;# 
   246  0188                     	;# 
   247  0189                     	;# 
   248  018C                     	;# 
   249  018D                     	;# 
   250  0000                     	;# 
   251  0001                     	;# 
   252  0002                     	;# 
   253  0003                     	;# 
   254  0004                     	;# 
   255  0005                     	;# 
   256  0006                     	;# 
   257  0007                     	;# 
   258  0008                     	;# 
   259  0009                     	;# 
   260  000A                     	;# 
   261  000B                     	;# 
   262  000C                     	;# 
   263  000D                     	;# 
   264  000E                     	;# 
   265  000E                     	;# 
   266  000F                     	;# 
   267  0010                     	;# 
   268  0011                     	;# 
   269  0012                     	;# 
   270  0013                     	;# 
   271  0014                     	;# 
   272  0015                     	;# 
   273  0015                     	;# 
   274  0016                     	;# 
   275  0017                     	;# 
   276  0018                     	;# 
   277  0019                     	;# 
   278  001A                     	;# 
   279  001B                     	;# 
   280  001B                     	;# 
   281  001C                     	;# 
   282  001D                     	;# 
   283  001E                     	;# 
   284  001F                     	;# 
   285  0081                     	;# 
   286  0085                     	;# 
   287  0086                     	;# 
   288  0087                     	;# 
   289  0088                     	;# 
   290  0089                     	;# 
   291  008C                     	;# 
   292  008D                     	;# 
   293  008E                     	;# 
   294  008F                     	;# 
   295  0090                     	;# 
   296  0091                     	;# 
   297  0092                     	;# 
   298  0093                     	;# 
   299  0093                     	;# 
   300  0093                     	;# 
   301  0094                     	;# 
   302  0095                     	;# 
   303  0096                     	;# 
   304  0097                     	;# 
   305  0098                     	;# 
   306  0099                     	;# 
   307  009A                     	;# 
   308  009B                     	;# 
   309  009C                     	;# 
   310  009D                     	;# 
   311  009E                     	;# 
   312  009F                     	;# 
   313  0105                     	;# 
   314  0107                     	;# 
   315  0108                     	;# 
   316  0109                     	;# 
   317  010C                     	;# 
   318  010C                     	;# 
   319  010D                     	;# 
   320  010E                     	;# 
   321  010F                     	;# 
   322  0185                     	;# 
   323  0187                     	;# 
   324  0188                     	;# 
   325  0189                     	;# 
   326  018C                     	;# 
   327  018D                     	;# 
   328  0000                     	;# 
   329  0001                     	;# 
   330  0002                     	;# 
   331  0003                     	;# 
   332  0004                     	;# 
   333  0005                     	;# 
   334  0006                     	;# 
   335  0007                     	;# 
   336  0008                     	;# 
   337  0009                     	;# 
   338  000A                     	;# 
   339  000B                     	;# 
   340  000C                     	;# 
   341  000D                     	;# 
   342  000E                     	;# 
   343  000E                     	;# 
   344  000F                     	;# 
   345  0010                     	;# 
   346  0011                     	;# 
   347  0012                     	;# 
   348  0013                     	;# 
   349  0014                     	;# 
   350  0015                     	;# 
   351  0015                     	;# 
   352  0016                     	;# 
   353  0017                     	;# 
   354  0018                     	;# 
   355  0019                     	;# 
   356  001A                     	;# 
   357  001B                     	;# 
   358  001B                     	;# 
   359  001C                     	;# 
   360  001D                     	;# 
   361  001E                     	;# 
   362  001F                     	;# 
   363  0081                     	;# 
   364  0085                     	;# 
   365  0086                     	;# 
   366  0087                     	;# 
   367  0088                     	;# 
   368  0089                     	;# 
   369  008C                     	;# 
   370  008D                     	;# 
   371  008E                     	;# 
   372  008F                     	;# 
   373  0090                     	;# 
   374  0091                     	;# 
   375  0092                     	;# 
   376  0093                     	;# 
   377  0093                     	;# 
   378  0093                     	;# 
   379  0094                     	;# 
   380  0095                     	;# 
   381  0096                     	;# 
   382  0097                     	;# 
   383  0098                     	;# 
   384  0099                     	;# 
   385  009A                     	;# 
   386  009B                     	;# 
   387  009C                     	;# 
   388  009D                     	;# 
   389  009E                     	;# 
   390  009F                     	;# 
   391  0105                     	;# 
   392  0107                     	;# 
   393  0108                     	;# 
   394  0109                     	;# 
   395  010C                     	;# 
   396  010C                     	;# 
   397  010D                     	;# 
   398  010E                     	;# 
   399  010F                     	;# 
   400  0185                     	;# 
   401  0187                     	;# 
   402  0188                     	;# 
   403  0189                     	;# 
   404  018C                     	;# 
   405  018D                     	;# 
   406  0000                     	;# 
   407  0001                     	;# 
   408  0002                     	;# 
   409  0003                     	;# 
   410  0004                     	;# 
   411  0005                     	;# 
   412  0006                     	;# 
   413  0007                     	;# 
   414  0008                     	;# 
   415  0009                     	;# 
   416  000A                     	;# 
   417  000B                     	;# 
   418  000C                     	;# 
   419  000D                     	;# 
   420  000E                     	;# 
   421  000E                     	;# 
   422  000F                     	;# 
   423  0010                     	;# 
   424  0011                     	;# 
   425  0012                     	;# 
   426  0013                     	;# 
   427  0014                     	;# 
   428  0015                     	;# 
   429  0015                     	;# 
   430  0016                     	;# 
   431  0017                     	;# 
   432  0018                     	;# 
   433  0019                     	;# 
   434  001A                     	;# 
   435  001B                     	;# 
   436  001B                     	;# 
   437  001C                     	;# 
   438  001D                     	;# 
   439  001E                     	;# 
   440  001F                     	;# 
   441  0081                     	;# 
   442  0085                     	;# 
   443  0086                     	;# 
   444  0087                     	;# 
   445  0088                     	;# 
   446  0089                     	;# 
   447  008C                     	;# 
   448  008D                     	;# 
   449  008E                     	;# 
   450  008F                     	;# 
   451  0090                     	;# 
   452  0091                     	;# 
   453  0092                     	;# 
   454  0093                     	;# 
   455  0093                     	;# 
   456  0093                     	;# 
   457  0094                     	;# 
   458  0095                     	;# 
   459  0096                     	;# 
   460  0097                     	;# 
   461  0098                     	;# 
   462  0099                     	;# 
   463  009A                     	;# 
   464  009B                     	;# 
   465  009C                     	;# 
   466  009D                     	;# 
   467  009E                     	;# 
   468  009F                     	;# 
   469  0105                     	;# 
   470  0107                     	;# 
   471  0108                     	;# 
   472  0109                     	;# 
   473  010C                     	;# 
   474  010C                     	;# 
   475  010D                     	;# 
   476  010E                     	;# 
   477  010F                     	;# 
   478  0185                     	;# 
   479  0187                     	;# 
   480  0188                     	;# 
   481  0189                     	;# 
   482  018C                     	;# 
   483  018D                     	;# 
   484                           
   485                           	psect	strings
   486  1800                     __pstrings:
   487  1800                     stringtab:
   488  1800                     __stringtab:
   489                           
   490                           ;	String table - string pointers are 1 byte each
   491  1800  1BFF               	btfsc	btemp+1,7
   492  1801  280A               	ljmp	stringcode
   493  1802  1383               	bcf	3,7
   494  1803  187F               	btfsc	btemp+1,0
   495  1804  1783               	bsf	3,7
   496  1805  0800               	movf	0,w
   497  1806  0A84               	incf	4,f
   498  1807  1903               	skipnz
   499  1808  0AFF               	incf	btemp+1,f
   500  1809  0008               	return
   501  180A                     stringcode:
   502  180A                     stringdir:
   503  180A  3018               	movlw	high stringdir
   504  180B  008A               	movwf	10
   505  180C  0804               	movf	4,w
   506  180D  0A84               	incf	4,f
   507  180E  0782               	addwf	2,f
   508  180F                     __stringbase:
   509  180F  3400               	retlw	0
   510  1810                     __end_of__stringtab:
   511  1810                     __powers_:
   512  1810  3400               	retlw	0
   513  1811  3400               	retlw	0
   514  1812  3480               	retlw	128
   515  1813  343F               	retlw	63
   516  1814  3400               	retlw	0
   517  1815  3400               	retlw	0
   518  1816  3420               	retlw	32
   519  1817  3441               	retlw	65
   520  1818  3400               	retlw	0
   521  1819  3400               	retlw	0
   522  181A  34C8               	retlw	200
   523  181B  3442               	retlw	66
   524  181C  3400               	retlw	0
   525  181D  3400               	retlw	0
   526  181E  347A               	retlw	122
   527  181F  3444               	retlw	68
   528  1820  3400               	retlw	0
   529  1821  3440               	retlw	64
   530  1822  341C               	retlw	28
   531  1823  3446               	retlw	70
   532  1824  3400               	retlw	0
   533  1825  3450               	retlw	80
   534  1826  34C3               	retlw	195
   535  1827  3447               	retlw	71
   536  1828  3400               	retlw	0
   537  1829  3424               	retlw	36
   538  182A  3474               	retlw	116
   539  182B  3449               	retlw	73
   540  182C  3480               	retlw	128
   541  182D  3496               	retlw	150
   542  182E  3418               	retlw	24
   543  182F  344B               	retlw	75
   544  1830  3420               	retlw	32
   545  1831  34BC               	retlw	188
   546  1832  34BE               	retlw	190
   547  1833  344C               	retlw	76
   548  1834  3428               	retlw	40
   549  1835  346B               	retlw	107
   550  1836  346E               	retlw	110
   551  1837  344E               	retlw	78
   552  1838  34F9               	retlw	249
   553  1839  3402               	retlw	2
   554  183A  3415               	retlw	21
   555  183B  3450               	retlw	80
   556  183C  34EC               	retlw	236
   557  183D  3478               	retlw	120
   558  183E  34AD               	retlw	173
   559  183F  3460               	retlw	96
   560  1840  34CA               	retlw	202
   561  1841  34F2               	retlw	242
   562  1842  3449               	retlw	73
   563  1843  3471               	retlw	113
   564  1844                     __end_of__powers_:
   565  1844                     __npowers_:
   566  1844  3400               	retlw	0
   567  1845  3400               	retlw	0
   568  1846  3480               	retlw	128
   569  1847  343F               	retlw	63
   570  1848  34CD               	retlw	205
   571  1849  34CC               	retlw	204
   572  184A  34CC               	retlw	204
   573  184B  343D               	retlw	61
   574  184C  340A               	retlw	10
   575  184D  34D7               	retlw	215
   576  184E  3423               	retlw	35
   577  184F  343C               	retlw	60
   578  1850  346F               	retlw	111
   579  1851  3412               	retlw	18
   580  1852  3483               	retlw	131
   581  1853  343A               	retlw	58
   582  1854  3417               	retlw	23
   583  1855  34B7               	retlw	183
   584  1856  34D1               	retlw	209
   585  1857  3438               	retlw	56
   586  1858  34AC               	retlw	172
   587  1859  34C5               	retlw	197
   588  185A  3427               	retlw	39
   589  185B  3437               	retlw	55
   590  185C  34BD               	retlw	189
   591  185D  3437               	retlw	55
   592  185E  3486               	retlw	134
   593  185F  3435               	retlw	53
   594  1860  3495               	retlw	149
   595  1861  34BF               	retlw	191
   596  1862  34D6               	retlw	214
   597  1863  3433               	retlw	51
   598  1864  3477               	retlw	119
   599  1865  34CC               	retlw	204
   600  1866  342B               	retlw	43
   601  1867  3432               	retlw	50
   602  1868  345F               	retlw	95
   603  1869  3470               	retlw	112
   604  186A  3489               	retlw	137
   605  186B  3430               	retlw	48
   606  186C  34FF               	retlw	255
   607  186D  34E6               	retlw	230
   608  186E  34DB               	retlw	219
   609  186F  342E               	retlw	46
   610  1870  3408               	retlw	8
   611  1871  34E5               	retlw	229
   612  1872  343C               	retlw	60
   613  1873  341E               	retlw	30
   614  1874  3460               	retlw	96
   615  1875  3442               	retlw	66
   616  1876  34A2               	retlw	162
   617  1877  340D               	retlw	13
   618  1878                     __end_of__npowers_:
   619  1878                     _dpowers:
   620  1878  3401               	retlw	1
   621  1879  3400               	retlw	0
   622  187A  3400               	retlw	0
   623  187B  3400               	retlw	0
   624  187C  340A               	retlw	10
   625  187D  3400               	retlw	0
   626  187E  3400               	retlw	0
   627  187F  3400               	retlw	0
   628  1880  3464               	retlw	100
   629  1881  3400               	retlw	0
   630  1882  3400               	retlw	0
   631  1883  3400               	retlw	0
   632  1884  34E8               	retlw	232
   633  1885  3403               	retlw	3
   634  1886  3400               	retlw	0
   635  1887  3400               	retlw	0
   636  1888  3410               	retlw	16
   637  1889  3427               	retlw	39
   638  188A  3400               	retlw	0
   639  188B  3400               	retlw	0
   640  188C  34A0               	retlw	160
   641  188D  3486               	retlw	134
   642  188E  3401               	retlw	1
   643  188F  3400               	retlw	0
   644  1890  3440               	retlw	64
   645  1891  3442               	retlw	66
   646  1892  340F               	retlw	15
   647  1893  3400               	retlw	0
   648  1894  3480               	retlw	128
   649  1895  3496               	retlw	150
   650  1896  3498               	retlw	152
   651  1897  3400               	retlw	0
   652  1898  3400               	retlw	0
   653  1899  34E1               	retlw	225
   654  189A  34F5               	retlw	245
   655  189B  3405               	retlw	5
   656  189C  3400               	retlw	0
   657  189D  34CA               	retlw	202
   658  189E  349A               	retlw	154
   659  189F  343B               	retlw	59
   660  18A0                     __end_of_dpowers:
   661  18A0                     STR_1:
   662  18A0  3420               	retlw	32	;' '
   663  18A1  3453               	retlw	83	;'S'
   664  18A2  3431               	retlw	49	;'1'
   665  18A3  343A               	retlw	58	;':'
   666  18A4  3420               	retlw	32	;' '
   667  18A5  3420               	retlw	32	;' '
   668  18A6  3420               	retlw	32	;' '
   669  18A7  3453               	retlw	83	;'S'
   670  18A8  3432               	retlw	50	;'2'
   671  18A9  343A               	retlw	58	;':'
   672  18AA  3420               	retlw	32	;' '
   673  18AB  3420               	retlw	32	;' '
   674  18AC  3453               	retlw	83	;'S'
   675  18AD  3433               	retlw	51	;'3'
   676  18AE  343A               	retlw	58	;':'
   677  18AF  3400               	retlw	0
   678  18B0                     STR_4:
   679  18B0  3425               	retlw	37	;'%'
   680  18B1  342E               	retlw	46	;'.'
   681  18B2  3432               	retlw	50	;'2'
   682  18B3  3466               	retlw	102	;'f'
   683  18B4  3400               	retlw	0
   684  18B5                     STR_2:
   685  18B5  3456               	retlw	86	;'V'
   686  18B6  3420               	retlw	32	;' '
   687  18B7  3400               	retlw	0
   688  18B5                     
   689                           	psect	nvBANK1
   690  00CB                     __pnvBANK1:
   691  00CB                     _vol2:
   692  00CB                     	ds	4
   693  00CF                     _vol1:
   694  00CF                     	ds	4
   695  0018                     _RCSTAbits	set	24
   696  0008                     _PORTD	set	8
   697  001E                     _ADRESH	set	30
   698  000C                     _PIR1bits	set	12
   699  000B                     _INTCONbits	set	11
   700  0007                     _PORTC	set	7
   701  001F                     _ADCON0bits	set	31
   702  0031                     _RB1	set	49
   703  0030                     _RB0	set	48
   704  009A                     _SPBRGH	set	154
   705  0099                     _SPBRG	set	153
   706  0098                     _TXSTAbits	set	152
   707  008C                     _PIE1bits	set	140
   708  009F                     _ADCON1bits	set	159
   709  0085                     _TRISAbits	set	133
   710  0086                     _TRISB	set	134
   711  0085                     _TRISA	set	133
   712  0088                     _TRISD	set	136
   713  0087                     _TRISC	set	135
   714  0187                     _BAUDCTLbits	set	391
   715  0188                     _ANSELbits	set	392
   716  0189                     _ANSELH	set	393
   717  0188                     _ANSEL	set	392
   718                           
   719                           	psect	cinit
   720  0019                     start_initialization:	
   721                           ; #config settings
   722                           
   723  0019                     __initialization:
   724                           
   725                           ; Clear objects allocated to BANK0
   726  0019  1283               	bcf	3,5	;RP0=0, select bank0
   727  001A  1303               	bcf	3,6	;RP1=0, select bank0
   728  001B  01EE               	clrf	__pbssBANK0& (0+127)
   729                           
   730                           ; Clear objects allocated to BANK1
   731  001C  1683               	bsf	3,5	;RP0=1, select bank1
   732  001D  1303               	bcf	3,6	;RP1=0, select bank1
   733  001E  01D3               	clrf	__pbssBANK1& (0+127)
   734                           
   735                           ; Clear objects allocated to BANK3
   736  001F  1783               	bsf	3,7	;select IRP bank2
   737  0020  3090               	movlw	low __pbssBANK3
   738  0021  0084               	movwf	4
   739  0022  30D3               	movlw	low (__pbssBANK3+67)
   740  0023  120A  118A  27F8  120A  118A  	fcall	clear_ram0
   741                           
   742                           ; Clear objects allocated to BANK2
   743  0028  3010               	movlw	low __pbssBANK2
   744  0029  0084               	movwf	4
   745  002A  3050               	movlw	low (__pbssBANK2+64)
   746  002B  120A  118A  27F8  120A  118A  	fcall	clear_ram0
   747  0030                     end_of_initialization:	
   748                           ;End of C runtime variable initialization code
   749                           
   750  0030                     __end_of__initialization:
   751  0030  0183               	clrf	3
   752  0031  160A  158A  2E07   	ljmp	_main	;jump to C main() function
   753                           
   754                           	psect	bssBANK0
   755  006E                     __pbssBANK0:
   756  006E                     _a:
   757  006E                     	ds	1
   758                           
   759                           	psect	bssBANK1
   760  00D3                     __pbssBANK1:
   761  00D3                     _ADC_value2:
   762  00D3                     	ds	1
   763                           
   764                           	psect	bssBANK3
   765  0190                     __pbssBANK3:
   766  0190                     _ADC_finish:
   767  0190                     	ds	1
   768  0191                     _ADC_value1:
   769  0191                     	ds	1
   770  0192                     _Pots:
   771  0192                     	ds	1
   772  0193                     _str_vol1:
   773  0193                     	ds	64
   774                           
   775                           	psect	bssBANK2
   776  0110                     __pbssBANK2:
   777  0110                     _str_vol2:
   778  0110                     	ds	64
   779                           
   780                           	psect	clrtext
   781  07F8                     clear_ram0:	
   782                           ;	Called with FSR containing the base address, and
   783                           ;	W with the last address+1
   784                           
   785  07F8  0064               	clrwdt	;clear the watchdog before getting into this loop
   786  07F9                     clrloop0:
   787  07F9  0180               	clrf	0	;clear RAM location pointed to by FSR
   788  07FA  0A84               	incf	4,f	;increment pointer
   789  07FB  0604               	xorwf	4,w	;XOR with final address
   790  07FC  1903               	btfsc	3,2	;have we reached the end yet?
   791  07FD  3400               	retlw	0	;all done for this memory range, return
   792  07FE  0604               	xorwf	4,w	;XOR again to restore value
   793  07FF  2FF9               	goto	clrloop0	;do the next byte
   794                           
   795                           	psect	cstackBANK3
   796  01D3                     __pcstackBANK3:
   797  01D3                     ??_setup:
   798  01D3                     ?_ADC_setup:	
   799                           ; 1 bytes @ 0x0
   800                           
   801  01D3                     ??_EUSART_conf:	
   802                           ; 1 bytes @ 0x0
   803                           
   804  01D3                     ??_Lcd_Port:	
   805                           ; 1 bytes @ 0x0
   806                           
   807  01D3                     ADC_setup@Channel:	
   808                           ; 1 bytes @ 0x0
   809                           
   810  01D3                     Lcd_Port@a:	
   811                           ; 1 bytes @ 0x0
   812                           
   813                           
   814                           ; 1 bytes @ 0x0
   815  01D3                     	ds	1
   816  01D4                     ??_Lcd_Cmd:
   817  01D4                     ??_Lcd_Write_Char:	
   818                           ; 1 bytes @ 0x1
   819                           
   820  01D4                     ADC_setup@Format:	
   821                           ; 1 bytes @ 0x1
   822                           
   823                           
   824                           ; 1 bytes @ 0x1
   825  01D4                     	ds	1
   826  01D5                     ADC_setup@Vref:
   827  01D5                     Lcd_Write_Char@a:	
   828                           ; 1 bytes @ 0x2
   829                           
   830                           
   831                           ; 1 bytes @ 0x2
   832  01D5                     	ds	1
   833  01D6                     ??_ADC_setup:
   834  01D6                     ?_Lcd_Write_String:	
   835                           ; 1 bytes @ 0x3
   836                           
   837  01D6                     Lcd_Cmd@a:	
   838                           ; 1 bytes @ 0x3
   839                           
   840  01D6                     Lcd_Write_String@a:	
   841                           ; 1 bytes @ 0x3
   842                           
   843                           
   844                           ; 2 bytes @ 0x3
   845  01D6                     	ds	1
   846  01D7                     ??_Lcd_Init:
   847  01D7                     ??_Lcd_Clear:	
   848                           ; 1 bytes @ 0x4
   849                           
   850  01D7                     ?_Lcd_Set_Cursor:	
   851                           ; 1 bytes @ 0x4
   852                           
   853  01D7                     Lcd_Set_Cursor@b:	
   854                           ; 1 bytes @ 0x4
   855                           
   856                           
   857                           ; 1 bytes @ 0x4
   858  01D7                     	ds	1
   859  01D8                     ??_Lcd_Set_Cursor:
   860  01D8                     ??_Lcd_Write_String:	
   861                           ; 1 bytes @ 0x5
   862                           
   863  01D8                     ADC_setup@ConClock:	
   864                           ; 1 bytes @ 0x5
   865                           
   866  01D8                     Lcd_Set_Cursor@a:	
   867                           ; 1 bytes @ 0x5
   868                           
   869                           
   870                           ; 1 bytes @ 0x5
   871  01D8                     	ds	3
   872  01DB                     Lcd_Write_String@i:
   873                           
   874                           ; 2 bytes @ 0x8
   875  01DB                     	ds	2
   876  01DD                     ??_main:
   877                           
   878                           ; 1 bytes @ 0xA
   879  01DD                     	ds	1
   880                           
   881                           	psect	cstackBANK1
   882  00A0                     __pcstackBANK1:
   883  00A0                     ?_sprintf:
   884  00A0                     sprintf@f:	
   885                           ; 2 bytes @ 0x0
   886                           
   887                           
   888                           ; 1 bytes @ 0x0
   889  00A0                     	ds	5
   890  00A5                     ??_sprintf:
   891                           
   892                           ; 1 bytes @ 0x5
   893  00A5                     	ds	5
   894  00AA                     _sprintf$1207:
   895                           
   896                           ; 4 bytes @ 0xA
   897  00AA                     	ds	4
   898  00AE                     sprintf@ap:
   899                           
   900                           ; 1 bytes @ 0xE
   901  00AE                     	ds	1
   902  00AF                     sprintf@flag:
   903                           
   904                           ; 2 bytes @ 0xF
   905  00AF                     	ds	2
   906  00B1                     sprintf@val:
   907                           
   908                           ; 4 bytes @ 0x11
   909  00B1                     	ds	4
   910  00B5                     sprintf@eexp:
   911                           
   912                           ; 2 bytes @ 0x15
   913  00B5                     	ds	2
   914  00B7                     sprintf@tmpval:
   915                           
   916                           ; 4 bytes @ 0x17
   917  00B7                     	ds	4
   918  00BB                     sprintf@sp:
   919                           
   920                           ; 1 bytes @ 0x1B
   921  00BB                     	ds	1
   922  00BC                     sprintf@prec:
   923                           
   924                           ; 2 bytes @ 0x1C
   925  00BC                     	ds	2
   926  00BE                     sprintf@fval:
   927                           
   928                           ; 4 bytes @ 0x1E
   929  00BE                     	ds	4
   930  00C2                     sprintf@c:
   931                           
   932                           ; 1 bytes @ 0x22
   933  00C2                     	ds	1
   934  00C3                     ??_oli:
   935                           
   936                           ; 1 bytes @ 0x23
   937  00C3                     	ds	8
   938                           
   939                           	psect	cstackCOMMON
   940  0070                     __pcstackCOMMON:
   941  0070                     ?_isdigit:
   942  0070                     ?___fleq:	
   943                           ; 1 bit 
   944                           
   945  0070                     ?___flge:	
   946                           ; 1 bit 
   947                           
   948  0070                     ?_setup:	
   949                           ; 1 bit 
   950                           
   951  0070                     ?_Lcd_Init:	
   952                           ; 1 bytes @ 0x0
   953                           
   954  0070                     ?_EUSART_conf:	
   955                           ; 1 bytes @ 0x0
   956                           
   957  0070                     ?_Lcd_Clear:	
   958                           ; 1 bytes @ 0x0
   959                           
   960  0070                     ??_isdigit:	
   961                           ; 1 bytes @ 0x0
   962                           
   963  0070                     ?_main:	
   964                           ; 1 bytes @ 0x0
   965                           
   966  0070                     ?_oli:	
   967                           ; 1 bytes @ 0x0
   968                           
   969  0070                     ?_Lcd_Port:	
   970                           ; 1 bytes @ 0x0
   971                           
   972  0070                     ?_Lcd_Cmd:	
   973                           ; 1 bytes @ 0x0
   974                           
   975  0070                     ?_Lcd_Write_Char:	
   976                           ; 1 bytes @ 0x0
   977                           
   978  0070                     ?i1_Lcd_Port:	
   979                           ; 1 bytes @ 0x0
   980                           
   981  0070                     ??i1_Lcd_Port:	
   982                           ; 1 bytes @ 0x0
   983                           
   984  0070                     ?i1_Lcd_Cmd:	
   985                           ; 1 bytes @ 0x0
   986                           
   987  0070                     ?i1_Lcd_Write_Char:	
   988                           ; 1 bytes @ 0x0
   989                           
   990  0070                     ?__Umul8_16:	
   991                           ; 1 bytes @ 0x0
   992                           
   993  0070                     ?___wmul:	
   994                           ; 2 bytes @ 0x0
   995                           
   996  0070                     ?___awmod:	
   997                           ; 2 bytes @ 0x0
   998                           
   999  0070                     ?___lwmod:	
  1000                           ; 2 bytes @ 0x0
  1001                           
  1002  0070                     ?__tdiv_to_l_:	
  1003                           ; 2 bytes @ 0x0
  1004                           
  1005  0070                     ?__div_to_l_:	
  1006                           ; 4 bytes @ 0x0
  1007                           
  1008  0070                     ?___lldiv:	
  1009                           ; 4 bytes @ 0x0
  1010                           
  1011  0070                     ?___flneg:	
  1012                           ; 4 bytes @ 0x0
  1013                           
  1014  0070                     ?___llmod:	
  1015                           ; 4 bytes @ 0x0
  1016                           
  1017  0070                     ?___xxtofl:	
  1018                           ; 4 bytes @ 0x0
  1019                           
  1020  0070                     __Umul8_16@multiplicand:	
  1021                           ; 4 bytes @ 0x0
  1022                           
  1023  0070                     _isdigit$1023:	
  1024                           ; 1 bytes @ 0x0
  1025                           
  1026  0070                     i1Lcd_Port@a:	
  1027                           ; 1 bytes @ 0x0
  1028                           
  1029  0070                     ___wmul@multiplier:	
  1030                           ; 1 bytes @ 0x0
  1031                           
  1032  0070                     ___awmod@divisor:	
  1033                           ; 2 bytes @ 0x0
  1034                           
  1035  0070                     ___lwmod@divisor:	
  1036                           ; 2 bytes @ 0x0
  1037                           
  1038  0070                     ___lldiv@divisor:	
  1039                           ; 2 bytes @ 0x0
  1040                           
  1041  0070                     __div_to_l_@f1:	
  1042                           ; 4 bytes @ 0x0
  1043                           
  1044  0070                     ___fleq@ff1:	
  1045                           ; 4 bytes @ 0x0
  1046                           
  1047  0070                     ___flge@ff1:	
  1048                           ; 4 bytes @ 0x0
  1049                           
  1050  0070                     ___flneg@f1:	
  1051                           ; 4 bytes @ 0x0
  1052                           
  1053  0070                     __tdiv_to_l_@f1:	
  1054                           ; 4 bytes @ 0x0
  1055                           
  1056  0070                     ___llmod@divisor:	
  1057                           ; 4 bytes @ 0x0
  1058                           
  1059  0070                     ___xxtofl@val:	
  1060                           ; 4 bytes @ 0x0
  1061                           
  1062                           
  1063                           ; 4 bytes @ 0x0
  1064  0070                     	ds	1
  1065  0071                     ??i1_Lcd_Cmd:
  1066  0071                     ??i1_Lcd_Write_Char:	
  1067                           ; 1 bytes @ 0x1
  1068                           
  1069  0071                     isdigit@c:	
  1070                           ; 1 bytes @ 0x1
  1071                           
  1072                           
  1073                           ; 1 bytes @ 0x1
  1074  0071                     	ds	1
  1075  0072                     ??__Umul8_16:
  1076  0072                     i1Lcd_Write_Char@a:	
  1077                           ; 1 bytes @ 0x2
  1078                           
  1079  0072                     ___wmul@multiplicand:	
  1080                           ; 1 bytes @ 0x2
  1081                           
  1082  0072                     ___awmod@dividend:	
  1083                           ; 2 bytes @ 0x2
  1084                           
  1085  0072                     ___lwmod@dividend:	
  1086                           ; 2 bytes @ 0x2
  1087                           
  1088                           
  1089                           ; 2 bytes @ 0x2
  1090  0072                     	ds	1
  1091  0073                     ?i1_Lcd_Write_String:
  1092  0073                     i1Lcd_Cmd@a:	
  1093                           ; 1 bytes @ 0x3
  1094                           
  1095  0073                     i1Lcd_Write_String@a:	
  1096                           ; 1 bytes @ 0x3
  1097                           
  1098                           
  1099                           ; 2 bytes @ 0x3
  1100  0073                     	ds	1
  1101  0074                     ??___wmul:
  1102  0074                     ??___awmod:	
  1103                           ; 1 bytes @ 0x4
  1104                           
  1105  0074                     ??___flneg:	
  1106                           ; 1 bytes @ 0x4
  1107                           
  1108  0074                     ??___lwmod:	
  1109                           ; 1 bytes @ 0x4
  1110                           
  1111  0074                     ??___xxtofl:	
  1112                           ; 1 bytes @ 0x4
  1113                           
  1114  0074                     ?i1_Lcd_Set_Cursor:	
  1115                           ; 1 bytes @ 0x4
  1116                           
  1117  0074                     i1Lcd_Set_Cursor@b:	
  1118                           ; 1 bytes @ 0x4
  1119                           
  1120  0074                     ___wmul@product:	
  1121                           ; 1 bytes @ 0x4
  1122                           
  1123  0074                     __Umul8_16@product:	
  1124                           ; 2 bytes @ 0x4
  1125                           
  1126  0074                     ___lldiv@dividend:	
  1127                           ; 2 bytes @ 0x4
  1128                           
  1129  0074                     __div_to_l_@f2:	
  1130                           ; 4 bytes @ 0x4
  1131                           
  1132  0074                     ___fleq@ff2:	
  1133                           ; 4 bytes @ 0x4
  1134                           
  1135  0074                     ___flge@ff2:	
  1136                           ; 4 bytes @ 0x4
  1137                           
  1138  0074                     __tdiv_to_l_@f2:	
  1139                           ; 4 bytes @ 0x4
  1140                           
  1141  0074                     ___llmod@dividend:	
  1142                           ; 4 bytes @ 0x4
  1143                           
  1144                           
  1145                           ; 4 bytes @ 0x4
  1146  0074                     	ds	1
  1147  0075                     ??i1_Lcd_Set_Cursor:
  1148  0075                     ??i1_Lcd_Write_String:	
  1149                           ; 1 bytes @ 0x5
  1150                           
  1151  0075                     ___awmod@counter:	
  1152                           ; 1 bytes @ 0x5
  1153                           
  1154  0075                     ___lwmod@counter:	
  1155                           ; 1 bytes @ 0x5
  1156                           
  1157  0075                     i1Lcd_Set_Cursor@a:	
  1158                           ; 1 bytes @ 0x5
  1159                           
  1160                           
  1161                           ; 1 bytes @ 0x5
  1162  0075                     	ds	1
  1163  0076                     ?___lwdiv:
  1164  0076                     ___awmod@sign:	
  1165                           ; 2 bytes @ 0x6
  1166                           
  1167  0076                     ___lwdiv@divisor:	
  1168                           ; 1 bytes @ 0x6
  1169                           
  1170  0076                     __Umul8_16@word_mpld:	
  1171                           ; 2 bytes @ 0x6
  1172                           
  1173                           
  1174                           ; 2 bytes @ 0x6
  1175  0076                     	ds	1
  1176  0077                     ?___awdiv:
  1177  0077                     ___awdiv@divisor:	
  1178                           ; 2 bytes @ 0x7
  1179                           
  1180                           
  1181                           ; 2 bytes @ 0x7
  1182  0077                     	ds	1
  1183  0078                     ??__tdiv_to_l_:
  1184  0078                     ??__div_to_l_:	
  1185                           ; 1 bytes @ 0x8
  1186                           
  1187  0078                     ??___lldiv:	
  1188                           ; 1 bytes @ 0x8
  1189                           
  1190  0078                     ??___fleq:	
  1191                           ; 1 bytes @ 0x8
  1192                           
  1193  0078                     ??___flge:	
  1194                           ; 1 bytes @ 0x8
  1195                           
  1196  0078                     ??___llmod:	
  1197                           ; 1 bytes @ 0x8
  1198                           
  1199  0078                     __Umul8_16@multiplier:	
  1200                           ; 1 bytes @ 0x8
  1201                           
  1202  0078                     ___xxtofl@sign:	
  1203                           ; 1 bytes @ 0x8
  1204                           
  1205  0078                     ___lwdiv@dividend:	
  1206                           ; 1 bytes @ 0x8
  1207                           
  1208  0078                     i1Lcd_Write_String@i:	
  1209                           ; 2 bytes @ 0x8
  1210                           
  1211                           
  1212                           ; 2 bytes @ 0x8
  1213  0078                     	ds	1
  1214  0079                     ___llmod@counter:
  1215  0079                     ___xxtofl@exp:	
  1216                           ; 1 bytes @ 0x9
  1217                           
  1218  0079                     ___awdiv@dividend:	
  1219                           ; 1 bytes @ 0x9
  1220                           
  1221  0079                     ___lldiv@quotient:	
  1222                           ; 2 bytes @ 0x9
  1223                           
  1224                           
  1225                           ; 4 bytes @ 0x9
  1226  0079                     	ds	1
  1227  007A                     ??___lwdiv:
  1228  007A                     ___xxtofl@arg:	
  1229                           ; 1 bytes @ 0xA
  1230                           
  1231                           
  1232                           ; 4 bytes @ 0xA
  1233  007A                     	ds	1
  1234  007B                     ??___awdiv:
  1235  007B                     ___lwdiv@quotient:	
  1236                           ; 1 bytes @ 0xB
  1237                           
  1238                           
  1239                           ; 2 bytes @ 0xB
  1240  007B                     	ds	2
  1241  007D                     ___lldiv@counter:
  1242  007D                     ___lwdiv@counter:	
  1243                           ; 1 bytes @ 0xD
  1244                           
  1245                           
  1246                           ; 1 bytes @ 0xD
  1247  007D                     	ds	1
  1248  007E                     ??___flsub:
  1249                           
  1250                           	psect	cstackBANK0
  1251  0020                     __pcstackBANK0:	
  1252                           ; 1 bytes @ 0xE
  1253                           
  1254  0020                     ___awdiv@counter:
  1255  0020                     __div_to_l_@quot:	
  1256                           ; 1 bytes @ 0x0
  1257                           
  1258  0020                     __tdiv_to_l_@quot:	
  1259                           ; 4 bytes @ 0x0
  1260                           
  1261                           
  1262                           ; 4 bytes @ 0x0
  1263  0020                     	ds	1
  1264  0021                     ___awdiv@sign:
  1265                           
  1266                           ; 1 bytes @ 0x1
  1267  0021                     	ds	1
  1268  0022                     ___awdiv@quotient:
  1269                           
  1270                           ; 2 bytes @ 0x2
  1271  0022                     	ds	2
  1272  0024                     ?___flmul:
  1273  0024                     __div_to_l_@cntr:	
  1274                           ; 4 bytes @ 0x4
  1275                           
  1276  0024                     __tdiv_to_l_@cntr:	
  1277                           ; 1 bytes @ 0x4
  1278                           
  1279  0024                     ___flmul@b:	
  1280                           ; 1 bytes @ 0x4
  1281                           
  1282                           
  1283                           ; 4 bytes @ 0x4
  1284  0024                     	ds	1
  1285  0025                     __div_to_l_@exp1:
  1286  0025                     __tdiv_to_l_@exp1:	
  1287                           ; 1 bytes @ 0x5
  1288                           
  1289                           
  1290                           ; 1 bytes @ 0x5
  1291  0025                     	ds	3
  1292  0028                     ___flmul@a:
  1293                           
  1294                           ; 4 bytes @ 0x8
  1295  0028                     	ds	4
  1296  002C                     ??___flmul:
  1297                           
  1298                           ; 1 bytes @ 0xC
  1299  002C                     	ds	5
  1300  0031                     ___flmul@sign:
  1301                           
  1302                           ; 1 bytes @ 0x11
  1303  0031                     	ds	1
  1304  0032                     ___flmul@grs:
  1305                           
  1306                           ; 4 bytes @ 0x12
  1307  0032                     	ds	4
  1308  0036                     ___flmul@aexp:
  1309                           
  1310                           ; 1 bytes @ 0x16
  1311  0036                     	ds	1
  1312  0037                     ___flmul@bexp:
  1313                           
  1314                           ; 1 bytes @ 0x17
  1315  0037                     	ds	1
  1316  0038                     ___flmul@prod:
  1317                           
  1318                           ; 4 bytes @ 0x18
  1319  0038                     	ds	4
  1320  003C                     ___flmul@temp:
  1321                           
  1322                           ; 2 bytes @ 0x1C
  1323  003C                     	ds	2
  1324  003E                     ?_fround:
  1325  003E                     ?_scale:	
  1326                           ; 4 bytes @ 0x1E
  1327                           
  1328  003E                     ?___fldiv:	
  1329                           ; 4 bytes @ 0x1E
  1330                           
  1331  003E                     ___fldiv@a:	
  1332                           ; 4 bytes @ 0x1E
  1333                           
  1334                           
  1335                           ; 4 bytes @ 0x1E
  1336  003E                     	ds	4
  1337  0042                     ??_fround:
  1338  0042                     ??_scale:	
  1339                           ; 1 bytes @ 0x22
  1340                           
  1341  0042                     ___fldiv@b:	
  1342                           ; 1 bytes @ 0x22
  1343                           
  1344                           
  1345                           ; 4 bytes @ 0x22
  1346  0042                     	ds	4
  1347  0046                     ??___fldiv:
  1348                           
  1349                           ; 1 bytes @ 0x26
  1350  0046                     	ds	3
  1351  0049                     _fround$1205:
  1352                           
  1353                           ; 4 bytes @ 0x29
  1354  0049                     	ds	2
  1355  004B                     ___fldiv@rem:
  1356                           
  1357                           ; 4 bytes @ 0x2B
  1358  004B                     	ds	1
  1359  004C                     _scale$1206:
  1360                           
  1361                           ; 4 bytes @ 0x2C
  1362  004C                     	ds	1
  1363  004D                     _fround$1204:
  1364                           
  1365                           ; 4 bytes @ 0x2D
  1366  004D                     	ds	2
  1367  004F                     ___fldiv@sign:
  1368                           
  1369                           ; 1 bytes @ 0x2F
  1370  004F                     	ds	1
  1371  0050                     scale@scl:
  1372  0050                     ___fldiv@new_exp:	
  1373                           ; 1 bytes @ 0x30
  1374                           
  1375                           
  1376                           ; 2 bytes @ 0x30
  1377  0050                     	ds	1
  1378  0051                     ?___fltol:
  1379  0051                     fround@prec:	
  1380                           ; 4 bytes @ 0x31
  1381                           
  1382  0051                     ___fltol@f1:	
  1383                           ; 1 bytes @ 0x31
  1384                           
  1385                           
  1386                           ; 4 bytes @ 0x31
  1387  0051                     	ds	1
  1388  0052                     ?___fladd:
  1389  0052                     ___fladd@b:	
  1390                           ; 4 bytes @ 0x32
  1391                           
  1392  0052                     ___fldiv@grs:	
  1393                           ; 4 bytes @ 0x32
  1394                           
  1395                           
  1396                           ; 4 bytes @ 0x32
  1397  0052                     	ds	3
  1398  0055                     ??___fltol:
  1399                           
  1400                           ; 1 bytes @ 0x35
  1401  0055                     	ds	1
  1402  0056                     ___fldiv@bexp:
  1403  0056                     ___fladd@a:	
  1404                           ; 1 bytes @ 0x36
  1405                           
  1406                           
  1407                           ; 4 bytes @ 0x36
  1408  0056                     	ds	1
  1409  0057                     ___fldiv@aexp:
  1410                           
  1411                           ; 1 bytes @ 0x37
  1412  0057                     	ds	3
  1413  005A                     ??___fladd:
  1414  005A                     ___fltol@sign1:	
  1415                           ; 1 bytes @ 0x3A
  1416                           
  1417                           
  1418                           ; 1 bytes @ 0x3A
  1419  005A                     	ds	1
  1420  005B                     ___fltol@exp1:
  1421                           
  1422                           ; 1 bytes @ 0x3B
  1423  005B                     	ds	7
  1424  0062                     ___fladd@signs:
  1425                           
  1426                           ; 1 bytes @ 0x42
  1427  0062                     	ds	1
  1428  0063                     ___fladd@aexp:
  1429                           
  1430                           ; 1 bytes @ 0x43
  1431  0063                     	ds	1
  1432  0064                     ___fladd@bexp:
  1433                           
  1434                           ; 1 bytes @ 0x44
  1435  0064                     	ds	1
  1436  0065                     ___fladd@grs:
  1437                           
  1438                           ; 1 bytes @ 0x45
  1439  0065                     	ds	1
  1440  0066                     ?___flsub:
  1441  0066                     ___flsub@a:	
  1442                           ; 4 bytes @ 0x46
  1443                           
  1444                           
  1445                           ; 4 bytes @ 0x46
  1446  0066                     	ds	4
  1447  006A                     ___flsub@b:
  1448                           
  1449                           ; 4 bytes @ 0x4A
  1450  006A                     	ds	4
  1451                           
  1452                           	psect	maintext
  1453  1E07                     __pmaintext:	
  1454 ;;
  1455 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1456 ;;
  1457 ;; *************** function _main *****************
  1458 ;; Defined at:
  1459 ;;		line 61 in file "SerialLCD.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;		None
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;		None
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  1    wreg      void 
  1466 ;; Registers used:
  1467 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1468 ;; Tracked objects:
  1469 ;;		On entry : B00/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1473 ;;      Params:         0       0       0       0       0
  1474 ;;      Locals:         0       0       0       0       0
  1475 ;;      Temps:          0       0       0       1       0
  1476 ;;      Totals:         0       0       0       1       0
  1477 ;;Total ram usage:        1 bytes
  1478 ;; Hardware stack levels required when called:    8
  1479 ;; This function calls:
  1480 ;;		_ADC_setup
  1481 ;;		_EUSART_conf
  1482 ;;		_Lcd_Clear
  1483 ;;		_Lcd_Init
  1484 ;;		_Lcd_Set_Cursor
  1485 ;;		_Lcd_Write_String
  1486 ;;		_setup
  1487 ;; This function is called by:
  1488 ;;		Startup code after reset
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492                           
  1493                           ;psect for function _main
  1494  1E07                     _main:
  1495  1E07                     l3932:	
  1496                           ;incstack = 0
  1497                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1498                           
  1499                           
  1500                           ;SerialLCD.c: 62: void setup(void) {
  1501  1E07  120A  118A  27D0  160A  158A  	fcall	_setup
  1502  1E0C                     l3934:
  1503                           
  1504                           ;SerialLCD.c: 63: 
  1505  1E0C  3002               	movlw	2
  1506  1E0D  1683               	bsf	3,5	;RP0=1, select bank3
  1507  1E0E  1703               	bsf	3,6	;RP1=1, select bank3
  1508  1E0F  00DD               	movwf	??_main^(0+384)
  1509  1E10  085D               	movf	??_main^(0+384),w
  1510  1E11  00D3               	movwf	ADC_setup@Channel^(0+384)
  1511  1E12  01D4               	clrf	ADC_setup@Format^(0+384)
  1512  1E13  01D5               	clrf	ADC_setup@Vref^(0+384)
  1513  1E14  3003               	movlw	3
  1514  1E15  120A  158A  2011  160A  158A  	fcall	_ADC_setup
  1515  1E1A                     l3936:
  1516                           
  1517                           ;SerialLCD.c: 64: 
  1518  1E1A  160A  158A  245F  160A  158A  	fcall	_Lcd_Init
  1519  1E1F                     l3938:
  1520                           
  1521                           ;SerialLCD.c: 65:     TRISC = 0;
  1522  1E1F  160A  158A  2150  160A  158A  	fcall	_EUSART_conf
  1523  1E24                     l3940:
  1524                           
  1525                           ;SerialLCD.c: 66:     TRISD = 0;
  1526  1E24  1283               	bcf	3,5	;RP0=0, select bank0
  1527  1E25  1303               	bcf	3,6	;RP1=0, select bank0
  1528  1E26  149F               	bsf	31,1	;volatile
  1529  1E27                     l3942:
  1530                           
  1531                           ;SerialLCD.c: 68:     ANSELH = 0;
  1532  1E27  1683               	bsf	3,5	;RP0=1, select bank3
  1533  1E28  1703               	bsf	3,6	;RP1=1, select bank3
  1534  1E29  0310               	decf	_ADC_finish^(0+384),w
  1535  1E2A  1D03               	btfss	3,2
  1536  1E2B  2E2D               	goto	u6031
  1537  1E2C  2E2E               	goto	u6030
  1538  1E2D                     u6031:
  1539  1E2D  2E52               	goto	l3960
  1540  1E2E                     u6030:
  1541  1E2E                     l3944:
  1542                           
  1543                           ;SerialLCD.c: 69:     ANSELbits.ANS2 = 1;
  1544  1E2E  0190               	clrf	_ADC_finish^(0+384)
  1545  1E2F                     l3946:
  1546                           
  1547                           ;SerialLCD.c: 70:     ANSELbits.ANS3 = 1;
  1548  1E2F  309F               	movlw	159
  1549  1E30  1683               	bsf	3,5	;RP0=1, select bank3
  1550  1E31  1703               	bsf	3,6	;RP1=1, select bank3
  1551  1E32  00DD               	movwf	??_main^(0+384)
  1552  1E33                     u6097:
  1553  1E33  2E34               	nop2
  1554  1E34  0BDD               	decfsz	??_main^(0+384),f
  1555  1E35  2E33               	goto	u6097
  1556  1E36  2E37               	nop2
  1557  1E37                     l3948:
  1558                           
  1559                           ;SerialLCD.c: 71:     TRISA = 0;
  1560  1E37  1683               	bsf	3,5	;RP0=1, select bank3
  1561  1E38  1703               	bsf	3,6	;RP1=1, select bank3
  1562  1E39  0812               	movf	_Pots^(0+384),w
  1563  1E3A  1D03               	btfss	3,2
  1564  1E3B  2E3D               	goto	u6041
  1565  1E3C  2E3E               	goto	u6040
  1566  1E3D                     u6041:
  1567  1E3D  2E46               	goto	l3954
  1568  1E3E                     u6040:
  1569  1E3E                     l3950:
  1570                           
  1571                           ;SerialLCD.c: 72:     TRISB = 0;
  1572  1E3E  1283               	bcf	3,5	;RP0=0, select bank0
  1573  1E3F  1303               	bcf	3,6	;RP1=0, select bank0
  1574  1E40  081F               	movf	31,w	;volatile
  1575  1E41  39C3               	andlw	-61
  1576  1E42  3808               	iorlw	8
  1577  1E43  009F               	movwf	31	;volatile
  1578  1E44                     l3952:
  1579                           
  1580                           ;SerialLCD.c: 73:     TRISAbits.TRISA2 = 1;
  1581  1E44  149F               	bsf	31,1	;volatile
  1582                           
  1583                           ;SerialLCD.c: 74:     TRISAbits.TRISA3 = 1;
  1584  1E45  2E52               	goto	l3960
  1585  1E46                     l3954:
  1586  1E46  0312               	decf	_Pots^(0+384),w
  1587  1E47  1D03               	btfss	3,2
  1588  1E48  2E4A               	goto	u6051
  1589  1E49  2E4B               	goto	u6050
  1590  1E4A                     u6051:
  1591  1E4A  2E52               	goto	l3960
  1592  1E4B                     u6050:
  1593  1E4B                     l3956:
  1594                           
  1595                           ;SerialLCD.c: 75:     INTCONbits.GIE = 1;
  1596  1E4B  1283               	bcf	3,5	;RP0=0, select bank0
  1597  1E4C  1303               	bcf	3,6	;RP1=0, select bank0
  1598  1E4D  081F               	movf	31,w	;volatile
  1599  1E4E  39C3               	andlw	-61
  1600  1E4F  380C               	iorlw	12
  1601  1E50  009F               	movwf	31	;volatile
  1602  1E51                     l3958:
  1603                           
  1604                           ;SerialLCD.c: 76:     INTCONbits.PEIE = 1;
  1605  1E51  149F               	bsf	31,1	;volatile
  1606  1E52                     l3960:
  1607                           
  1608                           ;SerialLCD.c: 79:     vol2 = 0;
  1609  1E52  120A  158A  2004  160A  158A  	fcall	_Lcd_Clear
  1610  1E57                     l3962:
  1611                           
  1612                           ;SerialLCD.c: 80: 
  1613  1E57  1683               	bsf	3,5	;RP0=1, select bank3
  1614  1E58  1703               	bsf	3,6	;RP1=1, select bank3
  1615  1E59  01D7               	clrf	Lcd_Set_Cursor@b^(0+384)
  1616  1E5A  0AD7               	incf	Lcd_Set_Cursor@b^(0+384),f
  1617  1E5B  3001               	movlw	1
  1618  1E5C  160A  158A  21A2  160A  158A  	fcall	_Lcd_Set_Cursor
  1619  1E61                     l3964:
  1620                           
  1621                           ;SerialLCD.c: 81: }
  1622  1E61  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1623  1E62  1683               	bsf	3,5	;RP0=1, select bank3
  1624  1E63  1703               	bsf	3,6	;RP1=1, select bank3
  1625  1E64  00D6               	movwf	Lcd_Write_String@a^(0+384)
  1626  1E65  3080               	movlw	128
  1627  1E66  00D7               	movwf	(Lcd_Write_String@a+1)^(0+384)
  1628  1E67  160A  158A  23B2  160A  158A  	fcall	_Lcd_Write_String
  1629  1E6C                     l3966:
  1630                           
  1631                           ;SerialLCD.c: 83: 
  1632  1E6C  3005               	movlw	5
  1633  1E6D  1683               	bsf	3,5	;RP0=1, select bank3
  1634  1E6E  1703               	bsf	3,6	;RP1=1, select bank3
  1635  1E6F  00DD               	movwf	??_main^(0+384)
  1636  1E70  085D               	movf	??_main^(0+384),w
  1637  1E71  00D7               	movwf	Lcd_Set_Cursor@b^(0+384)
  1638  1E72  3002               	movlw	2
  1639  1E73  160A  158A  21A2  160A  158A  	fcall	_Lcd_Set_Cursor
  1640  1E78                     l3968:
  1641                           
  1642                           ;SerialLCD.c: 84: 
  1643  1E78  30A6               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1644  1E79  1683               	bsf	3,5	;RP0=1, select bank3
  1645  1E7A  1703               	bsf	3,6	;RP1=1, select bank3
  1646  1E7B  00D6               	movwf	Lcd_Write_String@a^(0+384)
  1647  1E7C  3080               	movlw	128
  1648  1E7D  00D7               	movwf	(Lcd_Write_String@a+1)^(0+384)
  1649  1E7E  160A  158A  23B2  160A  158A  	fcall	_Lcd_Write_String
  1650  1E83                     l3970:
  1651                           
  1652                           ;SerialLCD.c: 86: 
  1653  1E83  300B               	movlw	11
  1654  1E84  1683               	bsf	3,5	;RP0=1, select bank3
  1655  1E85  1703               	bsf	3,6	;RP1=1, select bank3
  1656  1E86  00DD               	movwf	??_main^(0+384)
  1657  1E87  085D               	movf	??_main^(0+384),w
  1658  1E88  00D7               	movwf	Lcd_Set_Cursor@b^(0+384)
  1659  1E89  3002               	movlw	2
  1660  1E8A  160A  158A  21A2  160A  158A  	fcall	_Lcd_Set_Cursor
  1661  1E8F                     l3972:
  1662                           
  1663                           ;SerialLCD.c: 87: void __attribute__((picinterrupt(("")))) oli(void) {
  1664  1E8F  30A6               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1665  1E90  1683               	bsf	3,5	;RP0=1, select bank3
  1666  1E91  1703               	bsf	3,6	;RP1=1, select bank3
  1667  1E92  00D6               	movwf	Lcd_Write_String@a^(0+384)
  1668  1E93  3080               	movlw	128
  1669  1E94  00D7               	movwf	(Lcd_Write_String@a+1)^(0+384)
  1670  1E95  160A  158A  23B2  160A  158A  	fcall	_Lcd_Write_String
  1671  1E9A                     l3974:
  1672                           
  1673                           ;SerialLCD.c: 88:     if (PIR1bits.ADIF == 1) {
  1674  1E9A  1683               	bsf	3,5	;RP0=1, select bank3
  1675  1E9B  1703               	bsf	3,6	;RP1=1, select bank3
  1676  1E9C  0811               	movf	_ADC_value1^(0+384),w
  1677  1E9D  1283               	bcf	3,5	;RP0=0, select bank0
  1678  1E9E  1303               	bcf	3,6	;RP1=0, select bank0
  1679  1E9F  0087               	movwf	7	;volatile
  1680  1EA0  2E27               	goto	l3942
  1681  1EA1  120A  118A  2816   	ljmp	start
  1682  1EA4                     __end_of_main:
  1683                           
  1684                           	psect	text1
  1685  07D0                     __ptext1:	
  1686 ;; *************** function _setup *****************
  1687 ;; Defined at:
  1688 ;;		line 98 in file "SerialLCD.c"
  1689 ;; Parameters:    Size  Location     Type
  1690 ;;		None
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;		None
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  1    wreg      void 
  1695 ;; Registers used:
  1696 ;;		wreg, status,2
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1702 ;;      Params:         0       0       0       0       0
  1703 ;;      Locals:         0       0       0       0       0
  1704 ;;      Temps:          0       0       0       0       0
  1705 ;;      Totals:         0       0       0       0       0
  1706 ;;Total ram usage:        0 bytes
  1707 ;; Hardware stack levels used:    1
  1708 ;; Hardware stack levels required when called:    5
  1709 ;; This function calls:
  1710 ;;		Nothing
  1711 ;; This function is called by:
  1712 ;;		_main
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716                           
  1717                           ;psect for function _setup
  1718  07D0                     _setup:
  1719  07D0                     l3420:	
  1720                           ;incstack = 0
  1721                           ; Regs used in _setup: [wreg+status,2]
  1722                           
  1723                           
  1724                           ;SerialLCD.c: 101:             sprintf(str_vol2, "%.2f", vol2);
  1725  07D0  1683               	bsf	3,5	;RP0=1, select bank1
  1726  07D1  1303               	bcf	3,6	;RP1=0, select bank1
  1727  07D2  0187               	clrf	7	;volatile
  1728                           
  1729                           ;SerialLCD.c: 102:             Lcd_Set_Cursor(2, 7);
  1730  07D3  0188               	clrf	8	;volatile
  1731                           
  1732                           ;SerialLCD.c: 103:             Lcd_Write_String(str_vol2);
  1733  07D4  1683               	bsf	3,5	;RP0=1, select bank3
  1734  07D5  1703               	bsf	3,6	;RP1=1, select bank3
  1735  07D6  0188               	clrf	8	;volatile
  1736                           
  1737                           ;SerialLCD.c: 104:         }
  1738  07D7  0189               	clrf	9	;volatile
  1739  07D8                     l3422:
  1740                           
  1741                           ;SerialLCD.c: 105:         ADC_finish = 1;
  1742  07D8  1508               	bsf	8,2	;volatile
  1743  07D9                     l3424:
  1744                           
  1745                           ;SerialLCD.c: 106:     }
  1746  07D9  1588               	bsf	8,3	;volatile
  1747                           
  1748                           ;SerialLCD.c: 107: 
  1749  07DA  1683               	bsf	3,5	;RP0=1, select bank1
  1750  07DB  1303               	bcf	3,6	;RP1=0, select bank1
  1751  07DC  0185               	clrf	5	;volatile
  1752                           
  1753                           ;SerialLCD.c: 108: }
  1754  07DD  0186               	clrf	6	;volatile
  1755  07DE                     l3426:
  1756  07DE  1505               	bsf	5,2	;volatile
  1757  07DF                     l3428:
  1758  07DF  1585               	bsf	5,3	;volatile
  1759  07E0                     l3430:
  1760  07E0  178B               	bsf	11,7	;volatile
  1761  07E1                     l3432:
  1762  07E1  170B               	bsf	11,6	;volatile
  1763  07E2  1683               	bsf	3,5	;RP0=1, select bank3
  1764  07E3  1703               	bsf	3,6	;RP1=1, select bank3
  1765  07E4  0192               	clrf	_Pots^(0+384)
  1766  07E5                     l3434:
  1767  07E5  3000               	movlw	0
  1768  07E6  1683               	bsf	3,5	;RP0=1, select bank1
  1769  07E7  1303               	bcf	3,6	;RP1=0, select bank1
  1770  07E8  00D2               	movwf	(_vol1+3)^(0+128)
  1771  07E9  3000               	movlw	0
  1772  07EA  00D1               	movwf	(_vol1+2)^(0+128)
  1773  07EB  3000               	movlw	0
  1774  07EC  00D0               	movwf	(_vol1+1)^(0+128)
  1775  07ED  3000               	movlw	0
  1776  07EE  00CF               	movwf	_vol1^(0+128)
  1777  07EF                     l3436:
  1778  07EF  3000               	movlw	0
  1779  07F0  00CE               	movwf	(_vol2+3)^(0+128)
  1780  07F1  3000               	movlw	0
  1781  07F2  00CD               	movwf	(_vol2+2)^(0+128)
  1782  07F3  3000               	movlw	0
  1783  07F4  00CC               	movwf	(_vol2+1)^(0+128)
  1784  07F5  3000               	movlw	0
  1785  07F6  00CB               	movwf	_vol2^(0+128)
  1786  07F7                     l77:
  1787  07F7  0008               	return
  1788  07F8                     __end_of_setup:
  1789                           
  1790                           	psect	text2
  1791  1BB2                     __ptext2:	
  1792 ;; *************** function _Lcd_Write_String *****************
  1793 ;; Defined at:
  1794 ;;		line 54 in file "LCD8.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;  a               2    3[BANK3 ] PTR unsigned char 
  1797 ;;		 -> str_vol2(64), str_vol1(64), STR_3(3), STR_2(3), 
  1798 ;;		 -> STR_1(16), 
  1799 ;; Auto vars:     Size  Location     Type
  1800 ;;  i               2    8[BANK3 ] int 
  1801 ;; Return value:  Size  Location     Type
  1802 ;;                  1    wreg      void 
  1803 ;; Registers used:
  1804 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1810 ;;      Params:         0       0       0       2       0
  1811 ;;      Locals:         0       0       0       2       0
  1812 ;;      Temps:          0       0       0       3       0
  1813 ;;      Totals:         0       0       0       7       0
  1814 ;;Total ram usage:        7 bytes
  1815 ;; Hardware stack levels used:    1
  1816 ;; Hardware stack levels required when called:    7
  1817 ;; This function calls:
  1818 ;;		_Lcd_Write_Char
  1819 ;; This function is called by:
  1820 ;;		_main
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824                           
  1825                           ;psect for function _Lcd_Write_String
  1826  1BB2                     _Lcd_Write_String:
  1827  1BB2                     l3560:	
  1828                           ;incstack = 0
  1829 ;; using string table level
  1830                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1831                           
  1832                           
  1833                           ;LCD8.c: 55:     int i;;LCD8.c: 56:     for (i = 0; a[i] != '\0'; i++)
  1834  1BB2  1683               	bsf	3,5	;RP0=1, select bank3
  1835  1BB3  1703               	bsf	3,6	;RP1=1, select bank3
  1836  1BB4  01DB               	clrf	Lcd_Write_String@i^(0+384)
  1837  1BB5  01DC               	clrf	(Lcd_Write_String@i+1)^(0+384)
  1838  1BB6  2BE3               	goto	l3566
  1839  1BB7                     l3562:
  1840                           
  1841                           ;LCD8.c: 57:         Lcd_Write_Char(a[i]);
  1842  1BB7  1683               	bsf	3,5	;RP0=1, select bank3
  1843  1BB8  1703               	bsf	3,6	;RP1=1, select bank3
  1844  1BB9  085B               	movf	Lcd_Write_String@i^(0+384),w
  1845  1BBA  0756               	addwf	Lcd_Write_String@a^(0+384),w
  1846  1BBB  00D9               	movwf	(??_Lcd_Write_String+1)^(0+384)
  1847  1BBC  0857               	movf	(Lcd_Write_String@a+1)^(0+384),w
  1848  1BBD  00D8               	movwf	??_Lcd_Write_String^(0+384)
  1849  1BBE  1803               	skipnc
  1850  1BBF  0AD8               	incf	??_Lcd_Write_String^(0+384),f
  1851  1BC0  1FDB               	btfss	Lcd_Write_String@i^(0+384),7
  1852  1BC1  2BC3               	goto	u5310
  1853  1BC2  03D8               	decf	??_Lcd_Write_String^(0+384),f
  1854  1BC3                     u5310:
  1855  1BC3  1683               	bsf	3,5	;RP0=1, select bank3
  1856  1BC4  1703               	bsf	3,6	;RP1=1, select bank3
  1857  1BC5  0858               	movf	??_Lcd_Write_String^(0+384),w
  1858  1BC6  00DA               	movwf	((??_Lcd_Write_String+1)^(0+384)+1)
  1859  1BC7  085A               	movf	(??_Lcd_Write_String+2)^(0+384),w
  1860  1BC8  1283               	bcf	3,5	;RP0=0, select bank0
  1861  1BC9  1303               	bcf	3,6	;RP1=0, select bank0
  1862  1BCA  00FF               	movwf	btemp+1
  1863  1BCB  1683               	bsf	3,5	;RP0=1, select bank3
  1864  1BCC  1703               	bsf	3,6	;RP1=1, select bank3
  1865  1BCD  0859               	movf	(??_Lcd_Write_String+1)^(0+384),w
  1866  1BCE  0084               	movwf	4
  1867  1BCF  1283               	bcf	3,5	;RP0=0, select bank0
  1868  1BD0  1303               	bcf	3,6	;RP1=0, select bank0
  1869  1BD1  160A  158A  2000  160A  158A  	fcall	stringtab
  1870  1BD6  160A  158A  2186  160A  158A  	fcall	_Lcd_Write_Char
  1871  1BDB                     l3564:
  1872  1BDB  3001               	movlw	1
  1873  1BDC  1683               	bsf	3,5	;RP0=1, select bank3
  1874  1BDD  1703               	bsf	3,6	;RP1=1, select bank3
  1875  1BDE  07DB               	addwf	Lcd_Write_String@i^(0+384),f
  1876  1BDF  1803               	skipnc
  1877  1BE0  0ADC               	incf	(Lcd_Write_String@i+1)^(0+384),f
  1878  1BE1  3000               	movlw	0
  1879  1BE2  07DC               	addwf	(Lcd_Write_String@i+1)^(0+384),f
  1880  1BE3                     l3566:
  1881  1BE3  085B               	movf	Lcd_Write_String@i^(0+384),w
  1882  1BE4  0756               	addwf	Lcd_Write_String@a^(0+384),w
  1883  1BE5  00D9               	movwf	(??_Lcd_Write_String+1)^(0+384)
  1884  1BE6  0857               	movf	(Lcd_Write_String@a+1)^(0+384),w
  1885  1BE7  00D8               	movwf	??_Lcd_Write_String^(0+384)
  1886  1BE8  1803               	skipnc
  1887  1BE9  0AD8               	incf	??_Lcd_Write_String^(0+384),f
  1888  1BEA  1FDB               	btfss	Lcd_Write_String@i^(0+384),7
  1889  1BEB  2BED               	goto	u5320
  1890  1BEC  03D8               	decf	??_Lcd_Write_String^(0+384),f
  1891  1BED                     u5320:
  1892  1BED  1683               	bsf	3,5	;RP0=1, select bank3
  1893  1BEE  1703               	bsf	3,6	;RP1=1, select bank3
  1894  1BEF  0858               	movf	??_Lcd_Write_String^(0+384),w
  1895  1BF0  00DA               	movwf	((??_Lcd_Write_String+1)^(0+384)+1)
  1896  1BF1  085A               	movf	(??_Lcd_Write_String+2)^(0+384),w
  1897  1BF2  1283               	bcf	3,5	;RP0=0, select bank0
  1898  1BF3  1303               	bcf	3,6	;RP1=0, select bank0
  1899  1BF4  00FF               	movwf	btemp+1
  1900  1BF5  1683               	bsf	3,5	;RP0=1, select bank3
  1901  1BF6  1703               	bsf	3,6	;RP1=1, select bank3
  1902  1BF7  0859               	movf	(??_Lcd_Write_String+1)^(0+384),w
  1903  1BF8  0084               	movwf	4
  1904  1BF9  1283               	bcf	3,5	;RP0=0, select bank0
  1905  1BFA  1303               	bcf	3,6	;RP1=0, select bank0
  1906  1BFB  160A  158A  2000  160A  158A  	fcall	stringtab
  1907  1C00  3A00               	xorlw	0
  1908  1C01  1D03               	skipz
  1909  1C02  2C04               	goto	u5331
  1910  1C03  2C05               	goto	u5330
  1911  1C04                     u5331:
  1912  1C04  2BB7               	goto	l3562
  1913  1C05                     u5330:
  1914  1C05                     l167:
  1915  1C05  0008               	return
  1916  1C06                     __end_of_Lcd_Write_String:
  1917                           
  1918                           	psect	text3
  1919  1986                     __ptext3:	
  1920 ;; *************** function _Lcd_Write_Char *****************
  1921 ;; Defined at:
  1922 ;;		line 46 in file "LCD8.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;  a               1    wreg     unsigned char 
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;  a               1    2[BANK3 ] unsigned char 
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  1    wreg      void 
  1929 ;; Registers used:
  1930 ;;		wreg, status,2, status,0, pclath, cstack
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1936 ;;      Params:         0       0       0       0       0
  1937 ;;      Locals:         0       0       0       1       0
  1938 ;;      Temps:          0       0       0       1       0
  1939 ;;      Totals:         0       0       0       2       0
  1940 ;;Total ram usage:        2 bytes
  1941 ;; Hardware stack levels used:    1
  1942 ;; Hardware stack levels required when called:    6
  1943 ;; This function calls:
  1944 ;;		_Lcd_Port
  1945 ;; This function is called by:
  1946 ;;		_Lcd_Write_String
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           
  1951                           ;psect for function _Lcd_Write_Char
  1952  1986                     _Lcd_Write_Char:
  1953                           
  1954                           ;incstack = 0
  1955                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1956                           ;Lcd_Write_Char@a stored from wreg
  1957  1986  1683               	bsf	3,5	;RP0=1, select bank3
  1958  1987  1703               	bsf	3,6	;RP1=1, select bank3
  1959  1988  00D5               	movwf	Lcd_Write_Char@a^(0+384)
  1960  1989                     l3032:
  1961                           
  1962                           ;LCD8.c: 47:     RB0 = 1;
  1963  1989  1283               	bcf	3,5	;RP0=0, select bank0
  1964  198A  1303               	bcf	3,6	;RP1=0, select bank0
  1965  198B  1406               	bsf	6,0	;volatile
  1966  198C                     l3034:
  1967                           
  1968                           ;LCD8.c: 48:     Lcd_Port(a);
  1969  198C  1683               	bsf	3,5	;RP0=1, select bank3
  1970  198D  1703               	bsf	3,6	;RP1=1, select bank3
  1971  198E  0855               	movf	Lcd_Write_Char@a^(0+384),w
  1972  198F  160A  158A  210D  160A  158A  	fcall	_Lcd_Port
  1973  1994                     l3036:
  1974                           
  1975                           ;LCD8.c: 49:     RB1 = 1;
  1976  1994  1283               	bcf	3,5	;RP0=0, select bank0
  1977  1995  1303               	bcf	3,6	;RP1=0, select bank0
  1978  1996  1486               	bsf	6,1	;volatile
  1979  1997                     l3038:
  1980                           
  1981                           ;LCD8.c: 50:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1982  1997  3019               	movlw	25
  1983  1998  1683               	bsf	3,5	;RP0=1, select bank3
  1984  1999  1703               	bsf	3,6	;RP1=1, select bank3
  1985  199A  00D4               	movwf	??_Lcd_Write_Char^(0+384)
  1986  199B                     u6107:
  1987  199B  0BD4               	decfsz	??_Lcd_Write_Char^(0+384),f
  1988  199C  299B               	goto	u6107
  1989  199D  299E               	nop2
  1990  199E                     l3040:
  1991                           
  1992                           ;LCD8.c: 51:     RB1 = 0;
  1993  199E  1283               	bcf	3,5	;RP0=0, select bank0
  1994  199F  1303               	bcf	3,6	;RP1=0, select bank0
  1995  19A0  1086               	bcf	6,1	;volatile
  1996  19A1                     l161:
  1997  19A1  0008               	return
  1998  19A2                     __end_of_Lcd_Write_Char:
  1999                           
  2000                           	psect	text4
  2001  19A2                     __ptext4:	
  2002 ;; *************** function _Lcd_Set_Cursor *****************
  2003 ;; Defined at:
  2004 ;;		line 21 in file "LCD8.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;  a               1    wreg     unsigned char 
  2007 ;;  b               1    4[BANK3 ] unsigned char 
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;  a               1    5[BANK3 ] unsigned char 
  2010 ;; Return value:  Size  Location     Type
  2011 ;;                  1    wreg      void 
  2012 ;; Registers used:
  2013 ;;		wreg, status,2, status,0, pclath, cstack
  2014 ;; Tracked objects:
  2015 ;;		On entry : 0/0
  2016 ;;		On exit  : 0/0
  2017 ;;		Unchanged: 0/0
  2018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2019 ;;      Params:         0       0       0       1       0
  2020 ;;      Locals:         0       0       0       1       0
  2021 ;;      Temps:          0       0       0       0       0
  2022 ;;      Totals:         0       0       0       2       0
  2023 ;;Total ram usage:        2 bytes
  2024 ;; Hardware stack levels used:    1
  2025 ;; Hardware stack levels required when called:    7
  2026 ;; This function calls:
  2027 ;;		_Lcd_Cmd
  2028 ;; This function is called by:
  2029 ;;		_main
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033                           
  2034                           ;psect for function _Lcd_Set_Cursor
  2035  19A2                     _Lcd_Set_Cursor:
  2036                           
  2037                           ;incstack = 0
  2038                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2039                           ;Lcd_Set_Cursor@a stored from wreg
  2040  19A2  1683               	bsf	3,5	;RP0=1, select bank3
  2041  19A3  1703               	bsf	3,6	;RP1=1, select bank3
  2042  19A4  00D8               	movwf	Lcd_Set_Cursor@a^(0+384)
  2043  19A5                     l3552:
  2044                           
  2045                           ;LCD8.c: 22:     if (a == 1) {
  2046  19A5  0358               	decf	Lcd_Set_Cursor@a^(0+384),w
  2047  19A6  1D03               	btfss	3,2
  2048  19A7  29A9               	goto	u5291
  2049  19A8  29AA               	goto	u5290
  2050  19A9                     u5291:
  2051  19A9  29B2               	goto	l3556
  2052  19AA                     u5290:
  2053  19AA                     l3554:
  2054                           
  2055                           ;LCD8.c: 23:         Lcd_Cmd(0x80 + b - 1);
  2056  19AA  0857               	movf	Lcd_Set_Cursor@b^(0+384),w
  2057  19AB  3E7F               	addlw	127
  2058  19AC  160A  158A  21C0  160A  158A  	fcall	_Lcd_Cmd
  2059                           
  2060                           ;LCD8.c: 24:     } else if (a == 2) {
  2061  19B1  29BF               	goto	l155
  2062  19B2                     l3556:
  2063  19B2  3002               	movlw	2
  2064  19B3  0658               	xorwf	Lcd_Set_Cursor@a^(0+384),w
  2065  19B4  1D03               	btfss	3,2
  2066  19B5  29B7               	goto	u5301
  2067  19B6  29B8               	goto	u5300
  2068  19B7                     u5301:
  2069  19B7  29BF               	goto	l155
  2070  19B8                     u5300:
  2071  19B8                     l3558:
  2072                           
  2073                           ;LCD8.c: 25:         Lcd_Cmd(0xC0 + b - 1);
  2074  19B8  0857               	movf	Lcd_Set_Cursor@b^(0+384),w
  2075  19B9  3EBF               	addlw	191
  2076  19BA  160A  158A  21C0  160A  158A  	fcall	_Lcd_Cmd
  2077  19BF                     l155:
  2078  19BF  0008               	return
  2079  19C0                     __end_of_Lcd_Set_Cursor:
  2080                           
  2081                           	psect	text5
  2082  1C5F                     __ptext5:	
  2083 ;; *************** function _Lcd_Init *****************
  2084 ;; Defined at:
  2085 ;;		line 29 in file "LCD8.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;		None
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;		None
  2090 ;; Return value:  Size  Location     Type
  2091 ;;                  1    wreg      void 
  2092 ;; Registers used:
  2093 ;;		wreg, status,2, status,0, pclath, cstack
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2099 ;;      Params:         0       0       0       0       0
  2100 ;;      Locals:         0       0       0       0       0
  2101 ;;      Temps:          0       0       0       2       0
  2102 ;;      Totals:         0       0       0       2       0
  2103 ;;Total ram usage:        2 bytes
  2104 ;; Hardware stack levels used:    1
  2105 ;; Hardware stack levels required when called:    7
  2106 ;; This function calls:
  2107 ;;		_Lcd_Cmd
  2108 ;;		_Lcd_Port
  2109 ;; This function is called by:
  2110 ;;		_main
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114                           
  2115                           ;psect for function _Lcd_Init
  2116  1C5F                     _Lcd_Init:
  2117  1C5F                     l3518:	
  2118                           ;incstack = 0
  2119                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2120                           
  2121                           
  2122                           ;LCD8.c: 30:     _delay((unsigned long)((15)*(8000000/4000.0)));
  2123  1C5F  3027               	movlw	39
  2124  1C60  1683               	bsf	3,5	;RP0=1, select bank3
  2125  1C61  1703               	bsf	3,6	;RP1=1, select bank3
  2126  1C62  00D8               	movwf	(??_Lcd_Init^(0+384)+1)
  2127  1C63  30F4               	movlw	244
  2128  1C64  00D7               	movwf	??_Lcd_Init^(0+384)
  2129  1C65                     u6117:
  2130  1C65  0BD7               	decfsz	??_Lcd_Init^(0+384),f
  2131  1C66  2C65               	goto	u6117
  2132  1C67  0BD8               	decfsz	(??_Lcd_Init^(0+384)+1),f
  2133  1C68  2C65               	goto	u6117
  2134  1C69  0000               	nop
  2135  1C6A                     l3520:
  2136                           
  2137                           ;LCD8.c: 31:     Lcd_Port(0x00);
  2138  1C6A  3000               	movlw	0
  2139  1C6B  160A  158A  210D  160A  158A  	fcall	_Lcd_Port
  2140  1C70                     l3522:
  2141                           
  2142                           ;LCD8.c: 32:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2143  1C70  3034               	movlw	52
  2144  1C71  1683               	bsf	3,5	;RP0=1, select bank3
  2145  1C72  1703               	bsf	3,6	;RP1=1, select bank3
  2146  1C73  00D8               	movwf	(??_Lcd_Init^(0+384)+1)
  2147  1C74  30F1               	movlw	241
  2148  1C75  00D7               	movwf	??_Lcd_Init^(0+384)
  2149  1C76                     u6127:
  2150  1C76  0BD7               	decfsz	??_Lcd_Init^(0+384),f
  2151  1C77  2C76               	goto	u6127
  2152  1C78  0BD8               	decfsz	(??_Lcd_Init^(0+384)+1),f
  2153  1C79  2C76               	goto	u6127
  2154                           
  2155                           ;LCD8.c: 33:     Lcd_Cmd(0x30);
  2156  1C7A  3030               	movlw	48
  2157  1C7B  160A  158A  21C0  160A  158A  	fcall	_Lcd_Cmd
  2158  1C80                     l3524:
  2159                           
  2160                           ;LCD8.c: 34:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2161  1C80  300D               	movlw	13
  2162  1C81  1683               	bsf	3,5	;RP0=1, select bank3
  2163  1C82  1703               	bsf	3,6	;RP1=1, select bank3
  2164  1C83  00D8               	movwf	(??_Lcd_Init^(0+384)+1)
  2165  1C84  30FB               	movlw	251
  2166  1C85  00D7               	movwf	??_Lcd_Init^(0+384)
  2167  1C86                     u6137:
  2168  1C86  0BD7               	decfsz	??_Lcd_Init^(0+384),f
  2169  1C87  2C86               	goto	u6137
  2170  1C88  0BD8               	decfsz	(??_Lcd_Init^(0+384)+1),f
  2171  1C89  2C86               	goto	u6137
  2172  1C8A                     l3526:
  2173                           
  2174                           ;LCD8.c: 35:     Lcd_Cmd(0x30);
  2175  1C8A  3030               	movlw	48
  2176  1C8B  160A  158A  21C0  160A  158A  	fcall	_Lcd_Cmd
  2177                           
  2178                           ;LCD8.c: 36:     _delay((unsigned long)((160)*(8000000/4000000.0)));
  2179  1C90  3069               	movlw	105
  2180  1C91  1683               	bsf	3,5	;RP0=1, select bank3
  2181  1C92  1703               	bsf	3,6	;RP1=1, select bank3
  2182  1C93  00D7               	movwf	??_Lcd_Init^(0+384)
  2183  1C94                     u6147:
  2184  1C94  0BD7               	decfsz	??_Lcd_Init^(0+384),f
  2185  1C95  2C94               	goto	u6147
  2186  1C96  2C97               	nop2
  2187  1C97                     l3528:
  2188                           
  2189                           ;LCD8.c: 37:     Lcd_Cmd(0x30);
  2190  1C97  3030               	movlw	48
  2191  1C98  160A  158A  21C0  160A  158A  	fcall	_Lcd_Cmd
  2192  1C9D                     l3530:
  2193                           
  2194                           ;LCD8.c: 39:     Lcd_Cmd(0x38);
  2195  1C9D  3038               	movlw	56
  2196  1C9E  160A  158A  21C0  160A  158A  	fcall	_Lcd_Cmd
  2197  1CA3                     l3532:
  2198                           
  2199                           ;LCD8.c: 40:     Lcd_Cmd(0x10);
  2200  1CA3  3010               	movlw	16
  2201  1CA4  160A  158A  21C0  160A  158A  	fcall	_Lcd_Cmd
  2202  1CA9                     l3534:
  2203                           
  2204                           ;LCD8.c: 41:     Lcd_Cmd(0x01);
  2205  1CA9  3001               	movlw	1
  2206  1CAA  160A  158A  21C0  160A  158A  	fcall	_Lcd_Cmd
  2207  1CAF                     l3536:
  2208                           
  2209                           ;LCD8.c: 42:     Lcd_Cmd(0x06);
  2210  1CAF  3006               	movlw	6
  2211  1CB0  160A  158A  21C0  160A  158A  	fcall	_Lcd_Cmd
  2212  1CB5                     l3538:
  2213                           
  2214                           ;LCD8.c: 43:     Lcd_Cmd(0x0C);
  2215  1CB5  300C               	movlw	12
  2216  1CB6  160A  158A  21C0  160A  158A  	fcall	_Lcd_Cmd
  2217  1CBB                     l158:
  2218  1CBB  0008               	return
  2219  1CBC                     __end_of_Lcd_Init:
  2220                           
  2221                           	psect	text6
  2222  0804                     __ptext6:	
  2223 ;; *************** function _Lcd_Clear *****************
  2224 ;; Defined at:
  2225 ;;		line 16 in file "LCD8.c"
  2226 ;; Parameters:    Size  Location     Type
  2227 ;;		None
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;		None
  2230 ;; Return value:  Size  Location     Type
  2231 ;;                  1    wreg      void 
  2232 ;; Registers used:
  2233 ;;		wreg, status,2, status,0, pclath, cstack
  2234 ;; Tracked objects:
  2235 ;;		On entry : 0/0
  2236 ;;		On exit  : 0/0
  2237 ;;		Unchanged: 0/0
  2238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2239 ;;      Params:         0       0       0       0       0
  2240 ;;      Locals:         0       0       0       0       0
  2241 ;;      Temps:          0       0       0       0       0
  2242 ;;      Totals:         0       0       0       0       0
  2243 ;;Total ram usage:        0 bytes
  2244 ;; Hardware stack levels used:    1
  2245 ;; Hardware stack levels required when called:    7
  2246 ;; This function calls:
  2247 ;;		_Lcd_Cmd
  2248 ;; This function is called by:
  2249 ;;		_main
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           
  2254                           ;psect for function _Lcd_Clear
  2255  0804                     _Lcd_Clear:
  2256  0804                     l3550:	
  2257                           ;incstack = 0
  2258                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2259                           
  2260                           
  2261                           ;LCD8.c: 17:     Lcd_Cmd(0);
  2262  0804  3000               	movlw	0
  2263  0805  160A  158A  21C0  120A  158A  	fcall	_Lcd_Cmd
  2264                           
  2265                           ;LCD8.c: 18:     Lcd_Cmd(1);
  2266  080A  3001               	movlw	1
  2267  080B  160A  158A  21C0  120A  158A  	fcall	_Lcd_Cmd
  2268  0810                     l149:
  2269  0810  0008               	return
  2270  0811                     __end_of_Lcd_Clear:
  2271                           
  2272                           	psect	text7
  2273  19C0                     __ptext7:	
  2274 ;; *************** function _Lcd_Cmd *****************
  2275 ;; Defined at:
  2276 ;;		line 8 in file "LCD8.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;  a               1    wreg     unsigned char 
  2279 ;; Auto vars:     Size  Location     Type
  2280 ;;  a               1    3[BANK3 ] unsigned char 
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  1    wreg      void 
  2283 ;; Registers used:
  2284 ;;		wreg, status,2, status,0, pclath, cstack
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2290 ;;      Params:         0       0       0       0       0
  2291 ;;      Locals:         0       0       0       1       0
  2292 ;;      Temps:          0       0       0       2       0
  2293 ;;      Totals:         0       0       0       3       0
  2294 ;;Total ram usage:        3 bytes
  2295 ;; Hardware stack levels used:    1
  2296 ;; Hardware stack levels required when called:    6
  2297 ;; This function calls:
  2298 ;;		_Lcd_Port
  2299 ;; This function is called by:
  2300 ;;		_Lcd_Clear
  2301 ;;		_Lcd_Set_Cursor
  2302 ;;		_Lcd_Init
  2303 ;;		_Lcd_Shift_Right
  2304 ;;		_Lcd_Shift_Left
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308                           
  2309                           ;psect for function _Lcd_Cmd
  2310  19C0                     _Lcd_Cmd:
  2311                           
  2312                           ;incstack = 0
  2313                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2314                           ;Lcd_Cmd@a stored from wreg
  2315  19C0  1683               	bsf	3,5	;RP0=1, select bank3
  2316  19C1  1703               	bsf	3,6	;RP1=1, select bank3
  2317  19C2  00D6               	movwf	Lcd_Cmd@a^(0+384)
  2318  19C3                     l3022:
  2319                           
  2320                           ;LCD8.c: 9:     RB0 = 0;
  2321  19C3  1283               	bcf	3,5	;RP0=0, select bank0
  2322  19C4  1303               	bcf	3,6	;RP1=0, select bank0
  2323  19C5  1006               	bcf	6,0	;volatile
  2324  19C6                     l3024:
  2325                           
  2326                           ;LCD8.c: 10:     Lcd_Port(a);
  2327  19C6  1683               	bsf	3,5	;RP0=1, select bank3
  2328  19C7  1703               	bsf	3,6	;RP1=1, select bank3
  2329  19C8  0856               	movf	Lcd_Cmd@a^(0+384),w
  2330  19C9  160A  158A  210D  160A  158A  	fcall	_Lcd_Port
  2331  19CE                     l3026:
  2332                           
  2333                           ;LCD8.c: 11:     RB1 = 1;
  2334  19CE  1283               	bcf	3,5	;RP0=0, select bank0
  2335  19CF  1303               	bcf	3,6	;RP1=0, select bank0
  2336  19D0  1486               	bsf	6,1	;volatile
  2337  19D1                     l3028:
  2338                           
  2339                           ;LCD8.c: 12:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2340  19D1  300B               	movlw	11
  2341  19D2  1683               	bsf	3,5	;RP0=1, select bank3
  2342  19D3  1703               	bsf	3,6	;RP1=1, select bank3
  2343  19D4  00D5               	movwf	(??_Lcd_Cmd^(0+384)+1)
  2344  19D5  3061               	movlw	97
  2345  19D6  00D4               	movwf	??_Lcd_Cmd^(0+384)
  2346  19D7                     u6157:
  2347  19D7  0BD4               	decfsz	??_Lcd_Cmd^(0+384),f
  2348  19D8  29D7               	goto	u6157
  2349  19D9  0BD5               	decfsz	(??_Lcd_Cmd^(0+384)+1),f
  2350  19DA  29D7               	goto	u6157
  2351  19DB  29DC               	nop2
  2352  19DC                     l3030:
  2353                           
  2354                           ;LCD8.c: 13:     RB1 = 0;
  2355  19DC  1283               	bcf	3,5	;RP0=0, select bank0
  2356  19DD  1303               	bcf	3,6	;RP1=0, select bank0
  2357  19DE  1086               	bcf	6,1	;volatile
  2358  19DF                     l146:
  2359  19DF  0008               	return
  2360  19E0                     __end_of_Lcd_Cmd:
  2361                           
  2362                           	psect	text8
  2363  190D                     __ptext8:	
  2364 ;; *************** function _Lcd_Port *****************
  2365 ;; Defined at:
  2366 ;;		line 4 in file "LCD8.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;  a               1    wreg     unsigned char 
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;  a               1    0[BANK3 ] unsigned char 
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  1    wreg      void 
  2373 ;; Registers used:
  2374 ;;		wreg
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2380 ;;      Params:         0       0       0       0       0
  2381 ;;      Locals:         0       0       0       1       0
  2382 ;;      Temps:          0       0       0       0       0
  2383 ;;      Totals:         0       0       0       1       0
  2384 ;;Total ram usage:        1 bytes
  2385 ;; Hardware stack levels used:    1
  2386 ;; Hardware stack levels required when called:    5
  2387 ;; This function calls:
  2388 ;;		Nothing
  2389 ;; This function is called by:
  2390 ;;		_Lcd_Cmd
  2391 ;;		_Lcd_Init
  2392 ;;		_Lcd_Write_Char
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396                           
  2397                           ;psect for function _Lcd_Port
  2398  190D                     _Lcd_Port:
  2399                           
  2400                           ;incstack = 0
  2401                           ; Regs used in _Lcd_Port: [wreg]
  2402                           ;Lcd_Port@a stored from wreg
  2403  190D  1683               	bsf	3,5	;RP0=1, select bank3
  2404  190E  1703               	bsf	3,6	;RP1=1, select bank3
  2405  190F  00D3               	movwf	Lcd_Port@a^(0+384)
  2406  1910                     l2554:
  2407                           
  2408                           ;LCD8.c: 5:     PORTD = a;
  2409  1910  0853               	movf	Lcd_Port@a^(0+384),w
  2410  1911  1283               	bcf	3,5	;RP0=0, select bank0
  2411  1912  1303               	bcf	3,6	;RP1=0, select bank0
  2412  1913  0088               	movwf	8	;volatile
  2413  1914                     l143:
  2414  1914  0008               	return
  2415  1915                     __end_of_Lcd_Port:
  2416                           
  2417                           	psect	text9
  2418  1950                     __ptext9:	
  2419 ;; *************** function _EUSART_conf *****************
  2420 ;; Defined at:
  2421 ;;		line 3 in file "EUSART.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;		None
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;		None
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  1    wreg      void 
  2428 ;; Registers used:
  2429 ;;		wreg, status,2
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2435 ;;      Params:         0       0       0       0       0
  2436 ;;      Locals:         0       0       0       0       0
  2437 ;;      Temps:          0       0       0       0       0
  2438 ;;      Totals:         0       0       0       0       0
  2439 ;;Total ram usage:        0 bytes
  2440 ;; Hardware stack levels used:    1
  2441 ;; Hardware stack levels required when called:    5
  2442 ;; This function calls:
  2443 ;;		Nothing
  2444 ;; This function is called by:
  2445 ;;		_main
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           
  2450                           ;psect for function _EUSART_conf
  2451  1950                     _EUSART_conf:
  2452  1950                     l3540:	
  2453                           ;incstack = 0
  2454                           ; Regs used in _EUSART_conf: [wreg+status,2]
  2455                           
  2456                           
  2457                           ;EUSART.c: 4:     TXSTAbits.TXEN=1;
  2458  1950  1683               	bsf	3,5	;RP0=1, select bank1
  2459  1951  1303               	bcf	3,6	;RP1=0, select bank1
  2460  1952  1698               	bsf	24,5	;volatile
  2461                           
  2462                           ;EUSART.c: 5:     TXSTAbits.SYNC=0;
  2463  1953  1218               	bcf	24,4	;volatile
  2464                           
  2465                           ;EUSART.c: 6:     RCSTAbits.SPEN=1;
  2466  1954  1283               	bcf	3,5	;RP0=0, select bank0
  2467  1955  1303               	bcf	3,6	;RP1=0, select bank0
  2468  1956  1798               	bsf	24,7	;volatile
  2469                           
  2470                           ;EUSART.c: 7:     TXSTAbits.TX9=0;
  2471  1957  1683               	bsf	3,5	;RP0=1, select bank1
  2472  1958  1303               	bcf	3,6	;RP1=0, select bank1
  2473  1959  1318               	bcf	24,6	;volatile
  2474                           
  2475                           ;EUSART.c: 8:     RCSTAbits.RC9=0;
  2476  195A  1283               	bcf	3,5	;RP0=0, select bank0
  2477  195B  1303               	bcf	3,6	;RP1=0, select bank0
  2478  195C  1318               	bcf	24,6	;volatile
  2479                           
  2480                           ;EUSART.c: 9:     BAUDCTLbits.BRG16 = 0;
  2481  195D  1683               	bsf	3,5	;RP0=1, select bank3
  2482  195E  1703               	bsf	3,6	;RP1=1, select bank3
  2483  195F  1187               	bcf	7,3	;volatile
  2484  1960                     l3542:
  2485                           
  2486                           ;EUSART.c: 10:     SPBRG = 8000000/(16*(9600+1));
  2487  1960  3062               	movlw	98
  2488  1961  1683               	bsf	3,5	;RP0=1, select bank1
  2489  1962  1303               	bcf	3,6	;RP1=0, select bank1
  2490  1963  0099               	movwf	25	;volatile
  2491  1964                     l3544:
  2492                           
  2493                           ;EUSART.c: 11:     TXSTAbits.BRGH=1;
  2494  1964  1518               	bsf	24,2	;volatile
  2495  1965                     l3546:
  2496                           
  2497                           ;EUSART.c: 12:     SPBRGH = 0;
  2498  1965  019A               	clrf	26	;volatile
  2499  1966                     l3548:
  2500                           
  2501                           ;EUSART.c: 13:     RCSTAbits.CREN=1;
  2502  1966  1283               	bcf	3,5	;RP0=0, select bank0
  2503  1967  1303               	bcf	3,6	;RP1=0, select bank0
  2504  1968  1618               	bsf	24,4	;volatile
  2505  1969                     l186:
  2506  1969  0008               	return
  2507  196A                     __end_of_EUSART_conf:
  2508                           
  2509                           	psect	text10
  2510  0811                     __ptext10:	
  2511 ;; *************** function _ADC_setup *****************
  2512 ;; Defined at:
  2513 ;;		line 3 in file "ADC.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;  ConClock        1    wreg     unsigned char 
  2516 ;;  Channel         1    0[BANK3 ] unsigned char 
  2517 ;;  Format          1    1[BANK3 ] unsigned char 
  2518 ;;  Vref            1    2[BANK3 ] unsigned char 
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;  ConClock        1    5[BANK3 ] unsigned char 
  2521 ;; Return value:  Size  Location     Type
  2522 ;;                  1    wreg      void 
  2523 ;; Registers used:
  2524 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2530 ;;      Params:         0       0       0       3       0
  2531 ;;      Locals:         0       0       0       1       0
  2532 ;;      Temps:          0       0       0       2       0
  2533 ;;      Totals:         0       0       0       6       0
  2534 ;;Total ram usage:        6 bytes
  2535 ;; Hardware stack levels used:    1
  2536 ;; Hardware stack levels required when called:    5
  2537 ;; This function calls:
  2538 ;;		Nothing
  2539 ;; This function is called by:
  2540 ;;		_main
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           
  2545                           ;psect for function _ADC_setup
  2546  0811                     _ADC_setup:
  2547                           
  2548                           ;incstack = 0
  2549                           ; Regs used in _ADC_setup: [wreg-fsr0h+status,2+status,0]
  2550                           ;ADC_setup@ConClock stored from wreg
  2551  0811  1683               	bsf	3,5	;RP0=1, select bank3
  2552  0812  1703               	bsf	3,6	;RP1=1, select bank3
  2553  0813  00D8               	movwf	ADC_setup@ConClock^(0+384)
  2554  0814                     l3438:
  2555                           
  2556                           ;ADC.c: 4:     switch (ConClock) {
  2557  0814  2834               	goto	l3452
  2558  0815                     l3440:
  2559                           
  2560                           ;ADC.c: 6:             ADCON0bits.ADCS = 0b00;
  2561  0815  303F               	movlw	-193
  2562  0816  1283               	bcf	3,5	;RP0=0, select bank0
  2563  0817  1303               	bcf	3,6	;RP1=0, select bank0
  2564  0818  059F               	andwf	31,f	;volatile
  2565                           
  2566                           ;ADC.c: 7:             break;
  2567  0819  28BB               	goto	l3490
  2568  081A                     l3442:
  2569                           
  2570                           ;ADC.c: 9:             ADCON0bits.ADCS = 0b01;
  2571  081A  1283               	bcf	3,5	;RP0=0, select bank0
  2572  081B  1303               	bcf	3,6	;RP1=0, select bank0
  2573  081C  081F               	movf	31,w	;volatile
  2574  081D  393F               	andlw	-193
  2575  081E  3840               	iorlw	64
  2576  081F  009F               	movwf	31	;volatile
  2577                           
  2578                           ;ADC.c: 10:             break;
  2579  0820  28BB               	goto	l3490
  2580  0821                     l3444:
  2581                           
  2582                           ;ADC.c: 12:             ADCON0bits.ADCS = 0b10;
  2583  0821  1283               	bcf	3,5	;RP0=0, select bank0
  2584  0822  1303               	bcf	3,6	;RP1=0, select bank0
  2585  0823  081F               	movf	31,w	;volatile
  2586  0824  393F               	andlw	-193
  2587  0825  3880               	iorlw	128
  2588  0826  009F               	movwf	31	;volatile
  2589                           
  2590                           ;ADC.c: 13:             break;
  2591  0827  28BB               	goto	l3490
  2592  0828                     l3446:
  2593                           
  2594                           ;ADC.c: 15:             ADCON0bits.ADCS = 0b11;
  2595  0828  30C0               	movlw	192
  2596  0829  1283               	bcf	3,5	;RP0=0, select bank0
  2597  082A  1303               	bcf	3,6	;RP1=0, select bank0
  2598  082B  049F               	iorwf	31,f	;volatile
  2599                           
  2600                           ;ADC.c: 16:             break;
  2601  082C  28BB               	goto	l3490
  2602  082D                     l3448:
  2603                           
  2604                           ;ADC.c: 18:             ADCON0bits.ADCS = 0b10;
  2605  082D  1283               	bcf	3,5	;RP0=0, select bank0
  2606  082E  1303               	bcf	3,6	;RP1=0, select bank0
  2607  082F  081F               	movf	31,w	;volatile
  2608  0830  393F               	andlw	-193
  2609  0831  3880               	iorlw	128
  2610  0832  009F               	movwf	31	;volatile
  2611                           
  2612                           ;ADC.c: 19:             break;
  2613  0833  28BB               	goto	l3490
  2614  0834                     l3452:
  2615  0834  0858               	movf	ADC_setup@ConClock^(0+384),w
  2616  0835  00D6               	movwf	??_ADC_setup^(0+384)
  2617  0836  01D7               	clrf	(??_ADC_setup^(0+384)+1)
  2618                           
  2619                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2620                           ; Switch size 1, requested type "simple"
  2621                           ; Number of cases is 1, Range of values is 0 to 0
  2622                           ; switch strategies available:
  2623                           ; Name         Instructions Cycles
  2624                           ; simple_byte            4     3 (average)
  2625                           ; direct_byte           11     8 (fixed)
  2626                           ; jumptable            260     6 (fixed)
  2627                           ;	Chosen strategy is simple_byte
  2628  0837  0857               	movf	(??_ADC_setup+1)^(0+384),w
  2629  0838  3A00               	xorlw	0	; case 0
  2630  0839  1903               	skipnz
  2631  083A  283C               	goto	l4134
  2632  083B  282D               	goto	l3448
  2633  083C                     l4134:
  2634                           
  2635                           ; Switch size 1, requested type "simple"
  2636                           ; Number of cases is 4, Range of values is 1 to 4
  2637                           ; switch strategies available:
  2638                           ; Name         Instructions Cycles
  2639                           ; simple_byte           13     7 (average)
  2640                           ; direct_byte           23    11 (fixed)
  2641                           ; jumptable            263     9 (fixed)
  2642                           ;	Chosen strategy is simple_byte
  2643  083C  0856               	movf	??_ADC_setup^(0+384),w
  2644  083D  3A01               	xorlw	1	; case 1
  2645  083E  1903               	skipnz
  2646  083F  2815               	goto	l3440
  2647  0840  3A03               	xorlw	3	; case 2
  2648  0841  1903               	skipnz
  2649  0842  281A               	goto	l3442
  2650  0843  3A01               	xorlw	1	; case 3
  2651  0844  1903               	skipnz
  2652  0845  2821               	goto	l3444
  2653  0846  3A07               	xorlw	7	; case 4
  2654  0847  1903               	skipnz
  2655  0848  2828               	goto	l3446
  2656  0849  282D               	goto	l3448
  2657  084A                     l3454:
  2658                           
  2659                           ;ADC.c: 23:             ADCON0bits.CHS = 0b0000;
  2660  084A  30C3               	movlw	-61
  2661  084B  1283               	bcf	3,5	;RP0=0, select bank0
  2662  084C  1303               	bcf	3,6	;RP1=0, select bank0
  2663  084D  059F               	andwf	31,f	;volatile
  2664                           
  2665                           ;ADC.c: 24:             break;
  2666  084E  28F7               	goto	l3492
  2667  084F                     l3456:
  2668                           
  2669                           ;ADC.c: 26:             ADCON0bits.CHS = 0b0001;
  2670  084F  1283               	bcf	3,5	;RP0=0, select bank0
  2671  0850  1303               	bcf	3,6	;RP1=0, select bank0
  2672  0851  081F               	movf	31,w	;volatile
  2673  0852  39C3               	andlw	-61
  2674  0853  3804               	iorlw	4
  2675  0854  009F               	movwf	31	;volatile
  2676                           
  2677                           ;ADC.c: 27:             break;
  2678  0855  28F7               	goto	l3492
  2679  0856                     l3458:
  2680                           
  2681                           ;ADC.c: 29:             ADCON0bits.CHS = 0b0010;
  2682  0856  1283               	bcf	3,5	;RP0=0, select bank0
  2683  0857  1303               	bcf	3,6	;RP1=0, select bank0
  2684  0858  081F               	movf	31,w	;volatile
  2685  0859  39C3               	andlw	-61
  2686  085A  3808               	iorlw	8
  2687  085B  009F               	movwf	31	;volatile
  2688                           
  2689                           ;ADC.c: 30:             break;
  2690  085C  28F7               	goto	l3492
  2691  085D                     l3460:
  2692                           
  2693                           ;ADC.c: 32:             ADCON0bits.CHS = 0b0011;
  2694  085D  1283               	bcf	3,5	;RP0=0, select bank0
  2695  085E  1303               	bcf	3,6	;RP1=0, select bank0
  2696  085F  081F               	movf	31,w	;volatile
  2697  0860  39C3               	andlw	-61
  2698  0861  380C               	iorlw	12
  2699  0862  009F               	movwf	31	;volatile
  2700                           
  2701                           ;ADC.c: 33:             break;
  2702  0863  28F7               	goto	l3492
  2703  0864                     l3462:
  2704                           
  2705                           ;ADC.c: 35:             ADCON0bits.CHS = 0b0100;
  2706  0864  1283               	bcf	3,5	;RP0=0, select bank0
  2707  0865  1303               	bcf	3,6	;RP1=0, select bank0
  2708  0866  081F               	movf	31,w	;volatile
  2709  0867  39C3               	andlw	-61
  2710  0868  3810               	iorlw	16
  2711  0869  009F               	movwf	31	;volatile
  2712                           
  2713                           ;ADC.c: 36:             break;
  2714  086A  28F7               	goto	l3492
  2715  086B                     l3464:
  2716                           
  2717                           ;ADC.c: 38:             ADCON0bits.CHS = 0b0101;
  2718  086B  1283               	bcf	3,5	;RP0=0, select bank0
  2719  086C  1303               	bcf	3,6	;RP1=0, select bank0
  2720  086D  081F               	movf	31,w	;volatile
  2721  086E  39C3               	andlw	-61
  2722  086F  3814               	iorlw	20
  2723  0870  009F               	movwf	31	;volatile
  2724                           
  2725                           ;ADC.c: 39:             break;
  2726  0871  28F7               	goto	l3492
  2727  0872                     l3466:
  2728                           
  2729                           ;ADC.c: 41:             ADCON0bits.CHS = 0b0110;
  2730  0872  1283               	bcf	3,5	;RP0=0, select bank0
  2731  0873  1303               	bcf	3,6	;RP1=0, select bank0
  2732  0874  081F               	movf	31,w	;volatile
  2733  0875  39C3               	andlw	-61
  2734  0876  3818               	iorlw	24
  2735  0877  009F               	movwf	31	;volatile
  2736                           
  2737                           ;ADC.c: 42:             break;
  2738  0878  28F7               	goto	l3492
  2739  0879                     l3468:
  2740                           
  2741                           ;ADC.c: 44:             ADCON0bits.CHS = 0b0111;
  2742  0879  1283               	bcf	3,5	;RP0=0, select bank0
  2743  087A  1303               	bcf	3,6	;RP1=0, select bank0
  2744  087B  081F               	movf	31,w	;volatile
  2745  087C  39C3               	andlw	-61
  2746  087D  381C               	iorlw	28
  2747  087E  009F               	movwf	31	;volatile
  2748                           
  2749                           ;ADC.c: 45:             break;
  2750  087F  28F7               	goto	l3492
  2751  0880                     l3470:
  2752                           
  2753                           ;ADC.c: 47:             ADCON0bits.CHS = 0b1000;
  2754  0880  1283               	bcf	3,5	;RP0=0, select bank0
  2755  0881  1303               	bcf	3,6	;RP1=0, select bank0
  2756  0882  081F               	movf	31,w	;volatile
  2757  0883  39C3               	andlw	-61
  2758  0884  3820               	iorlw	32
  2759  0885  009F               	movwf	31	;volatile
  2760                           
  2761                           ;ADC.c: 48:             break;
  2762  0886  28F7               	goto	l3492
  2763  0887                     l3472:
  2764                           
  2765                           ;ADC.c: 50:             ADCON0bits.CHS = 0b1001;
  2766  0887  1283               	bcf	3,5	;RP0=0, select bank0
  2767  0888  1303               	bcf	3,6	;RP1=0, select bank0
  2768  0889  081F               	movf	31,w	;volatile
  2769  088A  39C3               	andlw	-61
  2770  088B  3824               	iorlw	36
  2771  088C  009F               	movwf	31	;volatile
  2772                           
  2773                           ;ADC.c: 51:             break;
  2774  088D  28F7               	goto	l3492
  2775  088E                     l3474:
  2776                           
  2777                           ;ADC.c: 53:             ADCON0bits.CHS = 0b1010;
  2778  088E  1283               	bcf	3,5	;RP0=0, select bank0
  2779  088F  1303               	bcf	3,6	;RP1=0, select bank0
  2780  0890  081F               	movf	31,w	;volatile
  2781  0891  39C3               	andlw	-61
  2782  0892  3828               	iorlw	40
  2783  0893  009F               	movwf	31	;volatile
  2784                           
  2785                           ;ADC.c: 54:             break;
  2786  0894  28F7               	goto	l3492
  2787  0895                     l3476:
  2788                           
  2789                           ;ADC.c: 56:             ADCON0bits.CHS = 0b1011;
  2790  0895  1283               	bcf	3,5	;RP0=0, select bank0
  2791  0896  1303               	bcf	3,6	;RP1=0, select bank0
  2792  0897  081F               	movf	31,w	;volatile
  2793  0898  39C3               	andlw	-61
  2794  0899  382C               	iorlw	44
  2795  089A  009F               	movwf	31	;volatile
  2796                           
  2797                           ;ADC.c: 57:             break;
  2798  089B  28F7               	goto	l3492
  2799  089C                     l3478:
  2800                           
  2801                           ;ADC.c: 59:             ADCON0bits.CHS = 0b1100;
  2802  089C  1283               	bcf	3,5	;RP0=0, select bank0
  2803  089D  1303               	bcf	3,6	;RP1=0, select bank0
  2804  089E  081F               	movf	31,w	;volatile
  2805  089F  39C3               	andlw	-61
  2806  08A0  3830               	iorlw	48
  2807  08A1  009F               	movwf	31	;volatile
  2808                           
  2809                           ;ADC.c: 60:             break;
  2810  08A2  28F7               	goto	l3492
  2811  08A3                     l3480:
  2812                           
  2813                           ;ADC.c: 62:             ADCON0bits.CHS = 0b1101;
  2814  08A3  1283               	bcf	3,5	;RP0=0, select bank0
  2815  08A4  1303               	bcf	3,6	;RP1=0, select bank0
  2816  08A5  081F               	movf	31,w	;volatile
  2817  08A6  39C3               	andlw	-61
  2818  08A7  3834               	iorlw	52
  2819  08A8  009F               	movwf	31	;volatile
  2820                           
  2821                           ;ADC.c: 63:             break;
  2822  08A9  28F7               	goto	l3492
  2823  08AA                     l3482:
  2824                           
  2825                           ;ADC.c: 65:             ADCON0bits.CHS = 0b1110;
  2826  08AA  1283               	bcf	3,5	;RP0=0, select bank0
  2827  08AB  1303               	bcf	3,6	;RP1=0, select bank0
  2828  08AC  081F               	movf	31,w	;volatile
  2829  08AD  39C3               	andlw	-61
  2830  08AE  3838               	iorlw	56
  2831  08AF  009F               	movwf	31	;volatile
  2832                           
  2833                           ;ADC.c: 66:             break;
  2834  08B0  28F7               	goto	l3492
  2835  08B1                     l3484:
  2836                           
  2837                           ;ADC.c: 68:             ADCON0bits.CHS = 0b1111;
  2838  08B1  303C               	movlw	60
  2839  08B2  1283               	bcf	3,5	;RP0=0, select bank0
  2840  08B3  1303               	bcf	3,6	;RP1=0, select bank0
  2841  08B4  049F               	iorwf	31,f	;volatile
  2842                           
  2843                           ;ADC.c: 69:             break;
  2844  08B5  28F7               	goto	l3492
  2845  08B6                     l3486:
  2846                           
  2847                           ;ADC.c: 71:             ADCON0bits.CHS = 0b0000;
  2848  08B6  30C3               	movlw	-61
  2849  08B7  1283               	bcf	3,5	;RP0=0, select bank0
  2850  08B8  1303               	bcf	3,6	;RP1=0, select bank0
  2851  08B9  059F               	andwf	31,f	;volatile
  2852                           
  2853                           ;ADC.c: 72:             break;
  2854  08BA  28F7               	goto	l3492
  2855  08BB                     l3490:
  2856  08BB  1683               	bsf	3,5	;RP0=1, select bank3
  2857  08BC  1703               	bsf	3,6	;RP1=1, select bank3
  2858  08BD  0853               	movf	ADC_setup@Channel^(0+384),w
  2859  08BE  00D6               	movwf	??_ADC_setup^(0+384)
  2860  08BF  01D7               	clrf	(??_ADC_setup^(0+384)+1)
  2861                           
  2862                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2863                           ; Switch size 1, requested type "simple"
  2864                           ; Number of cases is 1, Range of values is 0 to 0
  2865                           ; switch strategies available:
  2866                           ; Name         Instructions Cycles
  2867                           ; simple_byte            4     3 (average)
  2868                           ; direct_byte           11     8 (fixed)
  2869                           ; jumptable            260     6 (fixed)
  2870                           ;	Chosen strategy is simple_byte
  2871  08C0  0857               	movf	(??_ADC_setup+1)^(0+384),w
  2872  08C1  3A00               	xorlw	0	; case 0
  2873  08C2  1903               	skipnz
  2874  08C3  28C5               	goto	l4136
  2875  08C4  28B6               	goto	l3486
  2876  08C5                     l4136:
  2877                           
  2878                           ; Switch size 1, requested type "simple"
  2879                           ; Number of cases is 16, Range of values is 0 to 15
  2880                           ; switch strategies available:
  2881                           ; Name         Instructions Cycles
  2882                           ; simple_byte           49    25 (average)
  2883                           ; direct_byte           56     8 (fixed)
  2884                           ; jumptable            260     6 (fixed)
  2885                           ;	Chosen strategy is simple_byte
  2886  08C5  0856               	movf	??_ADC_setup^(0+384),w
  2887  08C6  3A00               	xorlw	0	; case 0
  2888  08C7  1903               	skipnz
  2889  08C8  284A               	goto	l3454
  2890  08C9  3A01               	xorlw	1	; case 1
  2891  08CA  1903               	skipnz
  2892  08CB  284F               	goto	l3456
  2893  08CC  3A03               	xorlw	3	; case 2
  2894  08CD  1903               	skipnz
  2895  08CE  2856               	goto	l3458
  2896  08CF  3A01               	xorlw	1	; case 3
  2897  08D0  1903               	skipnz
  2898  08D1  285D               	goto	l3460
  2899  08D2  3A07               	xorlw	7	; case 4
  2900  08D3  1903               	skipnz
  2901  08D4  2864               	goto	l3462
  2902  08D5  3A01               	xorlw	1	; case 5
  2903  08D6  1903               	skipnz
  2904  08D7  286B               	goto	l3464
  2905  08D8  3A03               	xorlw	3	; case 6
  2906  08D9  1903               	skipnz
  2907  08DA  2872               	goto	l3466
  2908  08DB  3A01               	xorlw	1	; case 7
  2909  08DC  1903               	skipnz
  2910  08DD  2879               	goto	l3468
  2911  08DE  3A0F               	xorlw	15	; case 8
  2912  08DF  1903               	skipnz
  2913  08E0  2880               	goto	l3470
  2914  08E1  3A01               	xorlw	1	; case 9
  2915  08E2  1903               	skipnz
  2916  08E3  2887               	goto	l3472
  2917  08E4  3A03               	xorlw	3	; case 10
  2918  08E5  1903               	skipnz
  2919  08E6  288E               	goto	l3474
  2920  08E7  3A01               	xorlw	1	; case 11
  2921  08E8  1903               	skipnz
  2922  08E9  2895               	goto	l3476
  2923  08EA  3A07               	xorlw	7	; case 12
  2924  08EB  1903               	skipnz
  2925  08EC  289C               	goto	l3478
  2926  08ED  3A01               	xorlw	1	; case 13
  2927  08EE  1903               	skipnz
  2928  08EF  28A3               	goto	l3480
  2929  08F0  3A03               	xorlw	3	; case 14
  2930  08F1  1903               	skipnz
  2931  08F2  28AA               	goto	l3482
  2932  08F3  3A01               	xorlw	1	; case 15
  2933  08F4  1903               	skipnz
  2934  08F5  28B1               	goto	l3484
  2935  08F6  28B6               	goto	l3486
  2936  08F7                     l3492:
  2937                           
  2938                           ;ADC.c: 74:     if (Format == 1) {
  2939  08F7  1683               	bsf	3,5	;RP0=1, select bank3
  2940  08F8  1703               	bsf	3,6	;RP1=1, select bank3
  2941  08F9  0354               	decf	ADC_setup@Format^(0+384),w
  2942  08FA  1D03               	btfss	3,2
  2943  08FB  28FD               	goto	u5281
  2944  08FC  28FE               	goto	u5280
  2945  08FD                     u5281:
  2946  08FD  2902               	goto	l123
  2947  08FE                     u5280:
  2948  08FE                     l3494:
  2949                           
  2950                           ;ADC.c: 75:         ADCON1bits.ADFM = 1;
  2951  08FE  1683               	bsf	3,5	;RP0=1, select bank1
  2952  08FF  1303               	bcf	3,6	;RP1=0, select bank1
  2953  0900  179F               	bsf	31,7	;volatile
  2954                           
  2955                           ;ADC.c: 76:     } else {
  2956  0901  291F               	goto	l3498
  2957  0902                     l123:
  2958                           
  2959                           ;ADC.c: 77:         ADCON1bits.ADFM = 0;
  2960  0902  1683               	bsf	3,5	;RP0=1, select bank1
  2961  0903  1303               	bcf	3,6	;RP1=0, select bank1
  2962  0904  139F               	bcf	31,7	;volatile
  2963  0905  291F               	goto	l3498
  2964  0906                     l126:	
  2965                           ;ADC.c: 80:         case 1:
  2966                           
  2967                           
  2968                           ;ADC.c: 81:             ADCON1bits.VCFG0 = 0;
  2969  0906  1683               	bsf	3,5	;RP0=1, select bank1
  2970  0907  1303               	bcf	3,6	;RP1=0, select bank1
  2971  0908  121F               	bcf	31,4	;volatile
  2972                           
  2973                           ;ADC.c: 82:             ADCON1bits.VCFG1 = 0;
  2974  0909  129F               	bcf	31,5	;volatile
  2975                           
  2976                           ;ADC.c: 83:             break;
  2977  090A  2937               	goto	l127
  2978  090B                     l128:	
  2979                           ;ADC.c: 84:         case 2:
  2980                           
  2981                           
  2982                           ;ADC.c: 85:             ADCON1bits.VCFG0 = 1;
  2983  090B  1683               	bsf	3,5	;RP0=1, select bank1
  2984  090C  1303               	bcf	3,6	;RP1=0, select bank1
  2985  090D  161F               	bsf	31,4	;volatile
  2986                           
  2987                           ;ADC.c: 86:             ADCON1bits.VCFG1 = 1;
  2988  090E  169F               	bsf	31,5	;volatile
  2989                           
  2990                           ;ADC.c: 87:             break;
  2991  090F  2937               	goto	l127
  2992  0910                     l129:	
  2993                           ;ADC.c: 88:         case 3:
  2994                           
  2995                           
  2996                           ;ADC.c: 89:             ADCON1bits.VCFG0 = 0;
  2997  0910  1683               	bsf	3,5	;RP0=1, select bank1
  2998  0911  1303               	bcf	3,6	;RP1=0, select bank1
  2999  0912  121F               	bcf	31,4	;volatile
  3000                           
  3001                           ;ADC.c: 90:             ADCON1bits.VCFG1 = 1;
  3002  0913  169F               	bsf	31,5	;volatile
  3003                           
  3004                           ;ADC.c: 91:             break;
  3005  0914  2937               	goto	l127
  3006  0915                     l130:	
  3007                           ;ADC.c: 92:         case 4:
  3008                           
  3009                           
  3010                           ;ADC.c: 93:             ADCON1bits.VCFG0 = 1;
  3011  0915  1683               	bsf	3,5	;RP0=1, select bank1
  3012  0916  1303               	bcf	3,6	;RP1=0, select bank1
  3013  0917  161F               	bsf	31,4	;volatile
  3014                           
  3015                           ;ADC.c: 94:             ADCON1bits.VCFG1 = 0;
  3016  0918  129F               	bcf	31,5	;volatile
  3017                           
  3018                           ;ADC.c: 95:             break;
  3019  0919  2937               	goto	l127
  3020  091A                     l131:	
  3021                           ;ADC.c: 96:         default:
  3022                           
  3023                           
  3024                           ;ADC.c: 97:             ADCON1bits.VCFG0 = 0;
  3025  091A  1683               	bsf	3,5	;RP0=1, select bank1
  3026  091B  1303               	bcf	3,6	;RP1=0, select bank1
  3027  091C  121F               	bcf	31,4	;volatile
  3028                           
  3029                           ;ADC.c: 98:             ADCON1bits.VCFG1 = 0;
  3030  091D  129F               	bcf	31,5	;volatile
  3031                           
  3032                           ;ADC.c: 99:             break;
  3033  091E  2937               	goto	l127
  3034  091F                     l3498:
  3035  091F  1683               	bsf	3,5	;RP0=1, select bank3
  3036  0920  1703               	bsf	3,6	;RP1=1, select bank3
  3037  0921  0855               	movf	ADC_setup@Vref^(0+384),w
  3038  0922  00D6               	movwf	??_ADC_setup^(0+384)
  3039  0923  01D7               	clrf	(??_ADC_setup^(0+384)+1)
  3040                           
  3041                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3042                           ; Switch size 1, requested type "simple"
  3043                           ; Number of cases is 1, Range of values is 0 to 0
  3044                           ; switch strategies available:
  3045                           ; Name         Instructions Cycles
  3046                           ; simple_byte            4     3 (average)
  3047                           ; direct_byte           11     8 (fixed)
  3048                           ; jumptable            260     6 (fixed)
  3049                           ;	Chosen strategy is simple_byte
  3050  0924  0857               	movf	(??_ADC_setup+1)^(0+384),w
  3051  0925  3A00               	xorlw	0	; case 0
  3052  0926  1903               	skipnz
  3053  0927  2929               	goto	l4138
  3054  0928  291A               	goto	l131
  3055  0929                     l4138:
  3056                           
  3057                           ; Switch size 1, requested type "simple"
  3058                           ; Number of cases is 4, Range of values is 1 to 4
  3059                           ; switch strategies available:
  3060                           ; Name         Instructions Cycles
  3061                           ; simple_byte           13     7 (average)
  3062                           ; direct_byte           23    11 (fixed)
  3063                           ; jumptable            263     9 (fixed)
  3064                           ;	Chosen strategy is simple_byte
  3065  0929  0856               	movf	??_ADC_setup^(0+384),w
  3066  092A  3A01               	xorlw	1	; case 1
  3067  092B  1903               	skipnz
  3068  092C  2906               	goto	l126
  3069  092D  3A03               	xorlw	3	; case 2
  3070  092E  1903               	skipnz
  3071  092F  290B               	goto	l128
  3072  0930  3A01               	xorlw	1	; case 3
  3073  0931  1903               	skipnz
  3074  0932  2910               	goto	l129
  3075  0933  3A07               	xorlw	7	; case 4
  3076  0934  1903               	skipnz
  3077  0935  2915               	goto	l130
  3078  0936  291A               	goto	l131
  3079  0937                     l127:
  3080                           
  3081                           ;ADC.c: 101:     ADCON0bits.ADON=1;
  3082  0937  1283               	bcf	3,5	;RP0=0, select bank0
  3083  0938  1303               	bcf	3,6	;RP1=0, select bank0
  3084  0939  141F               	bsf	31,0	;volatile
  3085                           
  3086                           ;ADC.c: 102:     INTCONbits.GIE=1;
  3087  093A  178B               	bsf	11,7	;volatile
  3088                           
  3089                           ;ADC.c: 103:     INTCONbits.PEIE=1;
  3090  093B  170B               	bsf	11,6	;volatile
  3091                           
  3092                           ;ADC.c: 104:     PIE1bits.ADIE=1;
  3093  093C  1683               	bsf	3,5	;RP0=1, select bank1
  3094  093D  1303               	bcf	3,6	;RP1=0, select bank1
  3095  093E  170C               	bsf	12,6	;volatile
  3096  093F                     l132:
  3097  093F  0008               	return
  3098  0940                     __end_of_ADC_setup:
  3099                           
  3100                           	psect	text11
  3101  068C                     __ptext11:	
  3102 ;; *************** function _oli *****************
  3103 ;; Defined at:
  3104 ;;		line 123 in file "SerialLCD.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;		None
  3107 ;; Auto vars:     Size  Location     Type
  3108 ;;		None
  3109 ;; Return value:  Size  Location     Type
  3110 ;;                  1    wreg      void 
  3111 ;; Registers used:
  3112 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3113 ;; Tracked objects:
  3114 ;;		On entry : 0/0
  3115 ;;		On exit  : 0/0
  3116 ;;		Unchanged: 0/0
  3117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3118 ;;      Params:         0       0       0       0       0
  3119 ;;      Locals:         0       0       0       0       0
  3120 ;;      Temps:          0       0       8       0       0
  3121 ;;      Totals:         0       0       8       0       0
  3122 ;;Total ram usage:        8 bytes
  3123 ;; Hardware stack levels used:    1
  3124 ;; Hardware stack levels required when called:    4
  3125 ;; This function calls:
  3126 ;;		___fldiv
  3127 ;;		___flmul
  3128 ;;		___xxtofl
  3129 ;;		_sprintf
  3130 ;;		i1_Lcd_Set_Cursor
  3131 ;;		i1_Lcd_Write_String
  3132 ;; This function is called by:
  3133 ;;		Interrupt level 1
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           
  3138                           ;psect for function _oli
  3139  068C                     _oli:
  3140  068C                     i1l3976:
  3141  068C  1283               	bcf	3,5	;RP0=0, select bank0
  3142  068D  1303               	bcf	3,6	;RP1=0, select bank0
  3143  068E  1F0C               	btfss	12,6	;volatile
  3144  068F  2E91               	goto	u606_21
  3145  0690  2E92               	goto	u606_20
  3146  0691                     u606_21:
  3147  0691  2FBF               	goto	i1l86
  3148  0692                     u606_20:
  3149  0692                     i1l3978:
  3150  0692  130C               	bcf	12,6	;volatile
  3151  0693                     i1l3980:
  3152  0693  1683               	bsf	3,5	;RP0=1, select bank3
  3153  0694  1703               	bsf	3,6	;RP1=1, select bank3
  3154  0695  0312               	decf	_Pots^(0+384),w
  3155  0696  1D03               	btfss	3,2
  3156  0697  2E99               	goto	u607_21
  3157  0698  2E9A               	goto	u607_20
  3158  0699                     u607_21:
  3159  0699  2F28               	goto	i1l3994
  3160  069A                     u607_20:
  3161  069A                     i1l3982:
  3162  069A  0192               	clrf	_Pots^(0+384)
  3163  069B                     i1l3984:
  3164  069B  1283               	bcf	3,5	;RP0=0, select bank0
  3165  069C  1303               	bcf	3,6	;RP1=0, select bank0
  3166  069D  081E               	movf	30,w	;volatile
  3167  069E  1683               	bsf	3,5	;RP0=1, select bank1
  3168  069F  1303               	bcf	3,6	;RP1=0, select bank1
  3169  06A0  00C3               	movwf	??_oli^(0+128)
  3170  06A1  0843               	movf	??_oli^(0+128),w
  3171  06A2  1683               	bsf	3,5	;RP0=1, select bank3
  3172  06A3  1703               	bsf	3,6	;RP1=1, select bank3
  3173  06A4  0091               	movwf	_ADC_value1^(0+384)
  3174  06A5                     i1l3986:
  3175  06A5  3043               	movlw	67
  3176  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  3177  06A7  1303               	bcf	3,6	;RP1=0, select bank0
  3178  06A8  00C1               	movwf	___fldiv@a+3
  3179  06A9  307F               	movlw	127
  3180  06AA  00C0               	movwf	___fldiv@a+2
  3181  06AB  3000               	movlw	0
  3182  06AC  00BF               	movwf	___fldiv@a+1
  3183  06AD  3000               	movlw	0
  3184  06AE  00BE               	movwf	___fldiv@a
  3185  06AF  3040               	movlw	64
  3186  06B0  00A7               	movwf	___flmul@b+3
  3187  06B1  30A0               	movlw	160
  3188  06B2  00A6               	movwf	___flmul@b+2
  3189  06B3  3000               	movlw	0
  3190  06B4  00A5               	movwf	___flmul@b+1
  3191  06B5  3000               	movlw	0
  3192  06B6  00A4               	movwf	___flmul@b
  3193  06B7  1683               	bsf	3,5	;RP0=1, select bank3
  3194  06B8  1703               	bsf	3,6	;RP1=1, select bank3
  3195  06B9  0811               	movf	_ADC_value1^(0+384),w
  3196  06BA  1683               	bsf	3,5	;RP0=1, select bank1
  3197  06BB  1303               	bcf	3,6	;RP1=0, select bank1
  3198  06BC  00C3               	movwf	??_oli^(0+128)
  3199  06BD  01C4               	clrf	(??_oli^(0+128)+1)
  3200  06BE  01C5               	clrf	(??_oli^(0+128)+2)
  3201  06BF  01C6               	clrf	(??_oli^(0+128)+3)
  3202  06C0  0846               	movf	(??_oli+3)^(0+128),w
  3203  06C1  00F3               	movwf	___xxtofl@val+3
  3204  06C2  0845               	movf	(??_oli+2)^(0+128),w
  3205  06C3  00F2               	movwf	___xxtofl@val+2
  3206  06C4  0844               	movf	(??_oli+1)^(0+128),w
  3207  06C5  00F1               	movwf	___xxtofl@val+1
  3208  06C6  0843               	movf	??_oli^(0+128),w
  3209  06C7  00F0               	movwf	___xxtofl@val
  3210  06C8  3001               	movlw	1
  3211  06C9  160A  158A  2746  120A  118A  	fcall	___xxtofl
  3212  06CE  0873               	movf	?___xxtofl+3,w
  3213  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  3214  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  3215  06D1  00AB               	movwf	___flmul@a+3
  3216  06D2  0872               	movf	?___xxtofl+2,w
  3217  06D3  00AA               	movwf	___flmul@a+2
  3218  06D4  0871               	movf	?___xxtofl+1,w
  3219  06D5  00A9               	movwf	___flmul@a+1
  3220  06D6  0870               	movf	?___xxtofl,w
  3221  06D7  00A8               	movwf	___flmul@a
  3222  06D8  120A  158A  249F  120A  118A  	fcall	___flmul
  3223  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  3224  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  3225  06DF  0827               	movf	?___flmul+3,w
  3226  06E0  00C5               	movwf	___fldiv@b+3
  3227  06E1  0826               	movf	?___flmul+2,w
  3228  06E2  00C4               	movwf	___fldiv@b+2
  3229  06E3  0825               	movf	?___flmul+1,w
  3230  06E4  00C3               	movwf	___fldiv@b+1
  3231  06E5  0824               	movf	?___flmul,w
  3232  06E6  00C2               	movwf	___fldiv@b
  3233  06E7  160A  118A  2190  120A  118A  	fcall	___fldiv
  3234  06EC  1283               	bcf	3,5	;RP0=0, select bank0
  3235  06ED  1303               	bcf	3,6	;RP1=0, select bank0
  3236  06EE  0841               	movf	?___fldiv+3,w
  3237  06EF  1683               	bsf	3,5	;RP0=1, select bank1
  3238  06F0  1303               	bcf	3,6	;RP1=0, select bank1
  3239  06F1  00D2               	movwf	(_vol1+3)^(0+128)
  3240  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  3241  06F3  1303               	bcf	3,6	;RP1=0, select bank0
  3242  06F4  0840               	movf	?___fldiv+2,w
  3243  06F5  1683               	bsf	3,5	;RP0=1, select bank1
  3244  06F6  1303               	bcf	3,6	;RP1=0, select bank1
  3245  06F7  00D1               	movwf	(_vol1+2)^(0+128)
  3246  06F8  1283               	bcf	3,5	;RP0=0, select bank0
  3247  06F9  1303               	bcf	3,6	;RP1=0, select bank0
  3248  06FA  083F               	movf	?___fldiv+1,w
  3249  06FB  1683               	bsf	3,5	;RP0=1, select bank1
  3250  06FC  1303               	bcf	3,6	;RP1=0, select bank1
  3251  06FD  00D0               	movwf	(_vol1+1)^(0+128)
  3252  06FE  1283               	bcf	3,5	;RP0=0, select bank0
  3253  06FF  1303               	bcf	3,6	;RP1=0, select bank0
  3254  0700  083E               	movf	?___fldiv,w
  3255  0701  1683               	bsf	3,5	;RP0=1, select bank1
  3256  0702  1303               	bcf	3,6	;RP1=0, select bank1
  3257  0703  00CF               	movwf	_vol1^(0+128)
  3258  0704                     i1l3988:
  3259  0704  30A1               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  3260  0705  00C3               	movwf	??_oli^(0+128)
  3261  0706  0843               	movf	??_oli^(0+128),w
  3262  0707  00A0               	movwf	sprintf@f^(0+128)
  3263  0708  0852               	movf	(_vol1+3)^(0+128),w
  3264  0709  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  3265  070A  0851               	movf	(_vol1+2)^(0+128),w
  3266  070B  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  3267  070C  0850               	movf	(_vol1+1)^(0+128),w
  3268  070D  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  3269  070E  084F               	movf	_vol1^(0+128),w
  3270  070F  00A1               	movwf	(?_sprintf^(0+128)+1)
  3271  0710  3093               	movlw	(low (_str_vol1| (0+256)))& (0+255)
  3272  0711  120A  118A  2034  120A  118A  	fcall	_sprintf
  3273  0716                     i1l3990:
  3274  0716  01F4               	clrf	i1Lcd_Set_Cursor@b
  3275  0717  0AF4               	incf	i1Lcd_Set_Cursor@b,f
  3276  0718  3002               	movlw	2
  3277  0719  160A  158A  216A  120A  118A  	fcall	i1_Lcd_Set_Cursor
  3278  071E                     i1l3992:
  3279  071E  3093               	movlw	(low (_str_vol1| (0+256)))& (0+255)
  3280  071F  00F3               	movwf	i1Lcd_Write_String@a
  3281  0720  3001               	movlw	1
  3282  0721  00F4               	movwf	i1Lcd_Write_String@a+1
  3283  0722  160A  158A  228A  120A  118A  	fcall	i1_Lcd_Write_String
  3284  0727  2FBB               	goto	i1l4008
  3285  0728                     i1l3994:
  3286  0728  0812               	movf	_Pots^(0+384),w
  3287  0729  1D03               	btfss	3,2
  3288  072A  2F2C               	goto	u608_21
  3289  072B  2F2D               	goto	u608_20
  3290  072C                     u608_21:
  3291  072C  2FBB               	goto	i1l4008
  3292  072D                     u608_20:
  3293  072D                     i1l3996:
  3294  072D  0192               	clrf	_Pots^(0+384)
  3295  072E  0A92               	incf	_Pots^(0+384),f
  3296  072F                     i1l3998:
  3297  072F  1283               	bcf	3,5	;RP0=0, select bank0
  3298  0730  1303               	bcf	3,6	;RP1=0, select bank0
  3299  0731  081E               	movf	30,w	;volatile
  3300  0732  1683               	bsf	3,5	;RP0=1, select bank1
  3301  0733  1303               	bcf	3,6	;RP1=0, select bank1
  3302  0734  00C3               	movwf	??_oli^(0+128)
  3303  0735  0843               	movf	??_oli^(0+128),w
  3304  0736  00D3               	movwf	_ADC_value2^(0+128)
  3305  0737                     i1l4000:
  3306  0737  3043               	movlw	67
  3307  0738  1283               	bcf	3,5	;RP0=0, select bank0
  3308  0739  1303               	bcf	3,6	;RP1=0, select bank0
  3309  073A  00C1               	movwf	___fldiv@a+3
  3310  073B  307F               	movlw	127
  3311  073C  00C0               	movwf	___fldiv@a+2
  3312  073D  3000               	movlw	0
  3313  073E  00BF               	movwf	___fldiv@a+1
  3314  073F  3000               	movlw	0
  3315  0740  00BE               	movwf	___fldiv@a
  3316  0741  3040               	movlw	64
  3317  0742  00A7               	movwf	___flmul@b+3
  3318  0743  30A0               	movlw	160
  3319  0744  00A6               	movwf	___flmul@b+2
  3320  0745  3000               	movlw	0
  3321  0746  00A5               	movwf	___flmul@b+1
  3322  0747  3000               	movlw	0
  3323  0748  00A4               	movwf	___flmul@b
  3324  0749  1683               	bsf	3,5	;RP0=1, select bank1
  3325  074A  1303               	bcf	3,6	;RP1=0, select bank1
  3326  074B  0853               	movf	_ADC_value2^(0+128),w
  3327  074C  00C3               	movwf	??_oli^(0+128)
  3328  074D  01C4               	clrf	(??_oli^(0+128)+1)
  3329  074E  01C5               	clrf	(??_oli^(0+128)+2)
  3330  074F  01C6               	clrf	(??_oli^(0+128)+3)
  3331  0750  0846               	movf	(??_oli+3)^(0+128),w
  3332  0751  00F3               	movwf	___xxtofl@val+3
  3333  0752  0845               	movf	(??_oli+2)^(0+128),w
  3334  0753  00F2               	movwf	___xxtofl@val+2
  3335  0754  0844               	movf	(??_oli+1)^(0+128),w
  3336  0755  00F1               	movwf	___xxtofl@val+1
  3337  0756  0843               	movf	??_oli^(0+128),w
  3338  0757  00F0               	movwf	___xxtofl@val
  3339  0758  3001               	movlw	1
  3340  0759  160A  158A  2746  120A  118A  	fcall	___xxtofl
  3341  075E  0873               	movf	?___xxtofl+3,w
  3342  075F  1283               	bcf	3,5	;RP0=0, select bank0
  3343  0760  1303               	bcf	3,6	;RP1=0, select bank0
  3344  0761  00AB               	movwf	___flmul@a+3
  3345  0762  0872               	movf	?___xxtofl+2,w
  3346  0763  00AA               	movwf	___flmul@a+2
  3347  0764  0871               	movf	?___xxtofl+1,w
  3348  0765  00A9               	movwf	___flmul@a+1
  3349  0766  0870               	movf	?___xxtofl,w
  3350  0767  00A8               	movwf	___flmul@a
  3351  0768  120A  158A  249F  120A  118A  	fcall	___flmul
  3352  076D  1283               	bcf	3,5	;RP0=0, select bank0
  3353  076E  1303               	bcf	3,6	;RP1=0, select bank0
  3354  076F  0827               	movf	?___flmul+3,w
  3355  0770  00C5               	movwf	___fldiv@b+3
  3356  0771  0826               	movf	?___flmul+2,w
  3357  0772  00C4               	movwf	___fldiv@b+2
  3358  0773  0825               	movf	?___flmul+1,w
  3359  0774  00C3               	movwf	___fldiv@b+1
  3360  0775  0824               	movf	?___flmul,w
  3361  0776  00C2               	movwf	___fldiv@b
  3362  0777  160A  118A  2190  120A  118A  	fcall	___fldiv
  3363  077C  1283               	bcf	3,5	;RP0=0, select bank0
  3364  077D  1303               	bcf	3,6	;RP1=0, select bank0
  3365  077E  0841               	movf	?___fldiv+3,w
  3366  077F  1683               	bsf	3,5	;RP0=1, select bank1
  3367  0780  1303               	bcf	3,6	;RP1=0, select bank1
  3368  0781  00CE               	movwf	(_vol2+3)^(0+128)
  3369  0782  1283               	bcf	3,5	;RP0=0, select bank0
  3370  0783  1303               	bcf	3,6	;RP1=0, select bank0
  3371  0784  0840               	movf	?___fldiv+2,w
  3372  0785  1683               	bsf	3,5	;RP0=1, select bank1
  3373  0786  1303               	bcf	3,6	;RP1=0, select bank1
  3374  0787  00CD               	movwf	(_vol2+2)^(0+128)
  3375  0788  1283               	bcf	3,5	;RP0=0, select bank0
  3376  0789  1303               	bcf	3,6	;RP1=0, select bank0
  3377  078A  083F               	movf	?___fldiv+1,w
  3378  078B  1683               	bsf	3,5	;RP0=1, select bank1
  3379  078C  1303               	bcf	3,6	;RP1=0, select bank1
  3380  078D  00CC               	movwf	(_vol2+1)^(0+128)
  3381  078E  1283               	bcf	3,5	;RP0=0, select bank0
  3382  078F  1303               	bcf	3,6	;RP1=0, select bank0
  3383  0790  083E               	movf	?___fldiv,w
  3384  0791  1683               	bsf	3,5	;RP0=1, select bank1
  3385  0792  1303               	bcf	3,6	;RP1=0, select bank1
  3386  0793  00CB               	movwf	_vol2^(0+128)
  3387  0794                     i1l4002:
  3388  0794  30A1               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  3389  0795  00C3               	movwf	??_oli^(0+128)
  3390  0796  0843               	movf	??_oli^(0+128),w
  3391  0797  00A0               	movwf	sprintf@f^(0+128)
  3392  0798  084E               	movf	(_vol2+3)^(0+128),w
  3393  0799  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  3394  079A  084D               	movf	(_vol2+2)^(0+128),w
  3395  079B  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  3396  079C  084C               	movf	(_vol2+1)^(0+128),w
  3397  079D  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  3398  079E  084B               	movf	_vol2^(0+128),w
  3399  079F  00A1               	movwf	(?_sprintf^(0+128)+1)
  3400  07A0  3010               	movlw	(low (_str_vol2| (0+256)))& (0+255)
  3401  07A1  120A  118A  2034  120A  118A  	fcall	_sprintf
  3402  07A6                     i1l4004:
  3403  07A6  3007               	movlw	7
  3404  07A7  1683               	bsf	3,5	;RP0=1, select bank1
  3405  07A8  1303               	bcf	3,6	;RP1=0, select bank1
  3406  07A9  00C3               	movwf	??_oli^(0+128)
  3407  07AA  0843               	movf	??_oli^(0+128),w
  3408  07AB  00F4               	movwf	i1Lcd_Set_Cursor@b
  3409  07AC  3002               	movlw	2
  3410  07AD  160A  158A  216A  120A  118A  	fcall	i1_Lcd_Set_Cursor
  3411  07B2                     i1l4006:
  3412  07B2  3010               	movlw	(low (_str_vol2| (0+256)))& (0+255)
  3413  07B3  00F3               	movwf	i1Lcd_Write_String@a
  3414  07B4  3001               	movlw	1
  3415  07B5  00F4               	movwf	i1Lcd_Write_String@a+1
  3416  07B6  160A  158A  228A  120A  118A  	fcall	i1_Lcd_Write_String
  3417  07BB                     i1l4008:
  3418  07BB  1683               	bsf	3,5	;RP0=1, select bank3
  3419  07BC  1703               	bsf	3,6	;RP1=1, select bank3
  3420  07BD  0190               	clrf	_ADC_finish^(0+384)
  3421  07BE  0A90               	incf	_ADC_finish^(0+384),f
  3422  07BF                     i1l86:
  3423  07BF  1683               	bsf	3,5	;RP0=1, select bank1
  3424  07C0  1303               	bcf	3,6	;RP1=0, select bank1
  3425  07C1  084A               	movf	(??_oli+7)^(0+128),w
  3426  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  3427  07C3  1303               	bcf	3,6	;RP1=0, select bank0
  3428  07C4  00FF               	movwf	btemp+1
  3429  07C5  1683               	bsf	3,5	;RP0=1, select bank1
  3430  07C6  1303               	bcf	3,6	;RP1=0, select bank1
  3431  07C7  0849               	movf	(??_oli+6)^(0+128),w
  3432  07C8  008A               	movwf	10
  3433  07C9  0848               	movf	(??_oli+5)^(0+128),w
  3434  07CA  0084               	movwf	4
  3435  07CB  0E47               	swapf	(??_oli+4)^(0+128),w
  3436  07CC  0083               	movwf	3
  3437  07CD  0EFE               	swapf	btemp,f
  3438  07CE  0E7E               	swapf	btemp,w
  3439  07CF  0009               	retfie
  3440  07D0                     __end_of_oli:
  3441                           
  3442                           	psect	intentry
  3443  0004                     __pintentry:	
  3444                           ;incstack = 0
  3445                           ; Regs used in _oli: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3446                           
  3447  0004                     interrupt_function:
  3448  007E                     saved_w	set	btemp
  3449  0004  00FE               	movwf	btemp
  3450  0005  0E03               	swapf	3,w
  3451  0006  1683               	bsf	3,5	;RP0=1, select bank1
  3452  0007  1303               	bcf	3,6	;RP1=0, select bank1
  3453  0008  00C7               	movwf	(??_oli+4)^(0+128)
  3454  0009  0804               	movf	4,w
  3455  000A  00C8               	movwf	(??_oli+5)^(0+128)
  3456  000B  080A               	movf	10,w
  3457  000C  00C9               	movwf	(??_oli+6)^(0+128)
  3458  000D  1283               	bcf	3,5	;RP0=0, select bank0
  3459  000E  1303               	bcf	3,6	;RP1=0, select bank0
  3460  000F  087F               	movf	btemp+1,w
  3461  0010  1683               	bsf	3,5	;RP0=1, select bank1
  3462  0011  1303               	bcf	3,6	;RP1=0, select bank1
  3463  0012  00CA               	movwf	(??_oli+7)^(0+128)
  3464  0013  120A  118A  2E8C   	ljmp	_oli
  3465                           
  3466                           	psect	text12
  3467  1A8A                     __ptext12:	
  3468 ;; *************** function i1_Lcd_Write_String *****************
  3469 ;; Defined at:
  3470 ;;		line 54 in file "LCD8.c"
  3471 ;; Parameters:    Size  Location     Type
  3472 ;;  a               2    3[COMMON] PTR unsigned char 
  3473 ;;		 -> str_vol2(64), str_vol1(64), STR_3(3), STR_2(3), 
  3474 ;;		 -> STR_1(16), 
  3475 ;; Auto vars:     Size  Location     Type
  3476 ;;  i               2    8[COMMON] int 
  3477 ;; Return value:  Size  Location     Type
  3478 ;;                  1    wreg      void 
  3479 ;; Registers used:
  3480 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3481 ;; Tracked objects:
  3482 ;;		On entry : 0/0
  3483 ;;		On exit  : 0/0
  3484 ;;		Unchanged: 0/0
  3485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3486 ;;      Params:         2       0       0       0       0
  3487 ;;      Locals:         2       0       0       0       0
  3488 ;;      Temps:          3       0       0       0       0
  3489 ;;      Totals:         7       0       0       0       0
  3490 ;;Total ram usage:        7 bytes
  3491 ;; Hardware stack levels used:    1
  3492 ;; Hardware stack levels required when called:    2
  3493 ;; This function calls:
  3494 ;;		i1_Lcd_Write_Char
  3495 ;; This function is called by:
  3496 ;;		_oli
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499                           
  3500                           
  3501                           ;psect for function i1_Lcd_Write_String
  3502  1A8A                     i1_Lcd_Write_String:
  3503  1A8A                     i1l3924:	
  3504                           ;incstack = 0
  3505                           ; Regs used in i1_Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3506                           
  3507                           
  3508                           ;LCD8.c: 55:     int i;;LCD8.c: 56:     for (i = 0; a[i] != '\0'; i++)
  3509  1A8A  01F8               	clrf	i1Lcd_Write_String@i
  3510  1A8B  01F9               	clrf	i1Lcd_Write_String@i+1
  3511  1A8C  2AAF               	goto	i1l3930
  3512  1A8D                     i1l3926:
  3513                           
  3514                           ;LCD8.c: 57:         Lcd_Write_Char(a[i]);
  3515  1A8D  0878               	movf	i1Lcd_Write_String@i,w
  3516  1A8E  0773               	addwf	i1Lcd_Write_String@a,w
  3517  1A8F  00F6               	movwf	??i1_Lcd_Write_String+1
  3518  1A90  0874               	movf	i1Lcd_Write_String@a+1,w
  3519  1A91  00F5               	movwf	??i1_Lcd_Write_String
  3520  1A92  1803               	skipnc
  3521  1A93  0AF5               	incf	??i1_Lcd_Write_String,f
  3522  1A94  1FF8               	btfss	i1Lcd_Write_String@i,7
  3523  1A95  2A97               	goto	u600_20
  3524  1A96  03F5               	decf	??i1_Lcd_Write_String,f
  3525  1A97                     u600_20:
  3526  1A97  0875               	movf	??i1_Lcd_Write_String,w
  3527  1A98  00F7               	movwf	??i1_Lcd_Write_String+2
  3528  1A99  0877               	movf	??i1_Lcd_Write_String+2,w
  3529  1A9A  1283               	bcf	3,5	;RP0=0, select bank0
  3530  1A9B  1303               	bcf	3,6	;RP1=0, select bank0
  3531  1A9C  00FF               	movwf	btemp+1
  3532  1A9D  0876               	movf	??i1_Lcd_Write_String+1,w
  3533  1A9E  0084               	movwf	4
  3534  1A9F  160A  158A  2000  160A  158A  	fcall	stringtab
  3535  1AA4  160A  158A  2120  160A  158A  	fcall	i1_Lcd_Write_Char
  3536  1AA9                     i1l3928:
  3537  1AA9  3001               	movlw	1
  3538  1AAA  07F8               	addwf	i1Lcd_Write_String@i,f
  3539  1AAB  1803               	skipnc
  3540  1AAC  0AF9               	incf	i1Lcd_Write_String@i+1,f
  3541  1AAD  3000               	movlw	0
  3542  1AAE  07F9               	addwf	i1Lcd_Write_String@i+1,f
  3543  1AAF                     i1l3930:
  3544  1AAF  0878               	movf	i1Lcd_Write_String@i,w
  3545  1AB0  0773               	addwf	i1Lcd_Write_String@a,w
  3546  1AB1  00F6               	movwf	??i1_Lcd_Write_String+1
  3547  1AB2  0874               	movf	i1Lcd_Write_String@a+1,w
  3548  1AB3  00F5               	movwf	??i1_Lcd_Write_String
  3549  1AB4  1803               	skipnc
  3550  1AB5  0AF5               	incf	??i1_Lcd_Write_String,f
  3551  1AB6  1FF8               	btfss	i1Lcd_Write_String@i,7
  3552  1AB7  2AB9               	goto	u601_20
  3553  1AB8  03F5               	decf	??i1_Lcd_Write_String,f
  3554  1AB9                     u601_20:
  3555  1AB9  0875               	movf	??i1_Lcd_Write_String,w
  3556  1ABA  00F7               	movwf	??i1_Lcd_Write_String+2
  3557  1ABB  0877               	movf	??i1_Lcd_Write_String+2,w
  3558  1ABC  1283               	bcf	3,5	;RP0=0, select bank0
  3559  1ABD  1303               	bcf	3,6	;RP1=0, select bank0
  3560  1ABE  00FF               	movwf	btemp+1
  3561  1ABF  0876               	movf	??i1_Lcd_Write_String+1,w
  3562  1AC0  0084               	movwf	4
  3563  1AC1  160A  158A  2000  160A  158A  	fcall	stringtab
  3564  1AC6  3A00               	xorlw	0
  3565  1AC7  1D03               	skipz
  3566  1AC8  2ACA               	goto	u602_21
  3567  1AC9  2ACB               	goto	u602_20
  3568  1ACA                     u602_21:
  3569  1ACA  2A8D               	goto	i1l3926
  3570  1ACB                     u602_20:
  3571  1ACB                     i1l167:
  3572  1ACB  0008               	return
  3573  1ACC                     __end_ofi1_Lcd_Write_String:
  3574                           
  3575                           	psect	text13
  3576  1920                     __ptext13:	
  3577 ;; *************** function i1_Lcd_Write_Char *****************
  3578 ;; Defined at:
  3579 ;;		line 46 in file "LCD8.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;  a               1    wreg     unsigned char 
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;  a               1    2[COMMON] unsigned char 
  3584 ;; Return value:  Size  Location     Type
  3585 ;;                  1    wreg      void 
  3586 ;; Registers used:
  3587 ;;		wreg, status,2, status,0, pclath, cstack
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3593 ;;      Params:         0       0       0       0       0
  3594 ;;      Locals:         1       0       0       0       0
  3595 ;;      Temps:          1       0       0       0       0
  3596 ;;      Totals:         2       0       0       0       0
  3597 ;;Total ram usage:        2 bytes
  3598 ;; Hardware stack levels used:    1
  3599 ;; Hardware stack levels required when called:    1
  3600 ;; This function calls:
  3601 ;;		i1_Lcd_Port
  3602 ;; This function is called by:
  3603 ;;		i1_Lcd_Write_String
  3604 ;; This function uses a non-reentrant model
  3605 ;;
  3606                           
  3607                           
  3608                           ;psect for function i1_Lcd_Write_Char
  3609  1920                     i1_Lcd_Write_Char:
  3610                           
  3611                           ;incstack = 0
  3612                           ; Regs used in i1_Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3613                           ;i1Lcd_Write_Char@a stored from wreg
  3614  1920  00F2               	movwf	i1Lcd_Write_Char@a
  3615  1921                     i1l3410:
  3616                           
  3617                           ;LCD8.c: 47:     RB0 = 1;
  3618  1921  1283               	bcf	3,5	;RP0=0, select bank0
  3619  1922  1303               	bcf	3,6	;RP1=0, select bank0
  3620  1923  1406               	bsf	6,0	;volatile
  3621  1924                     i1l3412:
  3622                           
  3623                           ;LCD8.c: 48:     Lcd_Port(a);
  3624  1924  0872               	movf	i1Lcd_Write_Char@a,w
  3625  1925  160A  158A  2107  160A  158A  	fcall	i1_Lcd_Port
  3626  192A                     i1l3414:
  3627                           
  3628                           ;LCD8.c: 49:     RB1 = 1;
  3629  192A  1283               	bcf	3,5	;RP0=0, select bank0
  3630  192B  1303               	bcf	3,6	;RP1=0, select bank0
  3631  192C  1486               	bsf	6,1	;volatile
  3632  192D                     i1l3416:
  3633                           
  3634                           ;LCD8.c: 50:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3635  192D  301A               	movlw	26
  3636  192E  00F1               	movwf	??i1_Lcd_Write_Char
  3637  192F                     u616_27:
  3638  192F  0BF1               	decfsz	??i1_Lcd_Write_Char,f
  3639  1930  292F               	goto	u616_27
  3640  1931  0000               	nop
  3641  1932                     i1l3418:
  3642                           
  3643                           ;LCD8.c: 51:     RB1 = 0;
  3644  1932  1283               	bcf	3,5	;RP0=0, select bank0
  3645  1933  1303               	bcf	3,6	;RP1=0, select bank0
  3646  1934  1086               	bcf	6,1	;volatile
  3647  1935                     i1l161:
  3648  1935  0008               	return
  3649  1936                     __end_ofi1_Lcd_Write_Char:
  3650                           
  3651                           	psect	text14
  3652  196A                     __ptext14:	
  3653 ;; *************** function i1_Lcd_Set_Cursor *****************
  3654 ;; Defined at:
  3655 ;;		line 21 in file "LCD8.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;  a               1    wreg     unsigned char 
  3658 ;;  b               1    4[COMMON] unsigned char 
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;  a               1    5[COMMON] unsigned char 
  3661 ;; Return value:  Size  Location     Type
  3662 ;;                  1    wreg      void 
  3663 ;; Registers used:
  3664 ;;		wreg, status,2, status,0, pclath, cstack
  3665 ;; Tracked objects:
  3666 ;;		On entry : 0/0
  3667 ;;		On exit  : 0/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3670 ;;      Params:         1       0       0       0       0
  3671 ;;      Locals:         1       0       0       0       0
  3672 ;;      Temps:          0       0       0       0       0
  3673 ;;      Totals:         2       0       0       0       0
  3674 ;;Total ram usage:        2 bytes
  3675 ;; Hardware stack levels used:    1
  3676 ;; Hardware stack levels required when called:    2
  3677 ;; This function calls:
  3678 ;;		i1_Lcd_Cmd
  3679 ;; This function is called by:
  3680 ;;		_oli
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           
  3684                           
  3685                           ;psect for function i1_Lcd_Set_Cursor
  3686  196A                     i1_Lcd_Set_Cursor:
  3687                           
  3688                           ;incstack = 0
  3689                           ; Regs used in i1_Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3690                           ;i1Lcd_Set_Cursor@a stored from wreg
  3691  196A  00F5               	movwf	i1Lcd_Set_Cursor@a
  3692  196B                     i1l3916:
  3693                           
  3694                           ;LCD8.c: 22:     if (a == 1) {
  3695  196B  0375               	decf	i1Lcd_Set_Cursor@a,w
  3696  196C  1D03               	btfss	3,2
  3697  196D  296F               	goto	u598_21
  3698  196E  2970               	goto	u598_20
  3699  196F                     u598_21:
  3700  196F  2978               	goto	i1l3920
  3701  1970                     u598_20:
  3702  1970                     i1l3918:
  3703                           
  3704                           ;LCD8.c: 23:         Lcd_Cmd(0x80 + b - 1);
  3705  1970  0874               	movf	i1Lcd_Set_Cursor@b,w
  3706  1971  3E7F               	addlw	127
  3707  1972  160A  158A  2136  160A  158A  	fcall	i1_Lcd_Cmd
  3708                           
  3709                           ;LCD8.c: 24:     } else if (a == 2) {
  3710  1977  2985               	goto	i1l155
  3711  1978                     i1l3920:
  3712  1978  3002               	movlw	2
  3713  1979  0675               	xorwf	i1Lcd_Set_Cursor@a,w
  3714  197A  1D03               	btfss	3,2
  3715  197B  297D               	goto	u599_21
  3716  197C  297E               	goto	u599_20
  3717  197D                     u599_21:
  3718  197D  2985               	goto	i1l155
  3719  197E                     u599_20:
  3720  197E                     i1l3922:
  3721                           
  3722                           ;LCD8.c: 25:         Lcd_Cmd(0xC0 + b - 1);
  3723  197E  0874               	movf	i1Lcd_Set_Cursor@b,w
  3724  197F  3EBF               	addlw	191
  3725  1980  160A  158A  2136  160A  158A  	fcall	i1_Lcd_Cmd
  3726  1985                     i1l155:
  3727  1985  0008               	return
  3728  1986                     __end_ofi1_Lcd_Set_Cursor:
  3729                           
  3730                           	psect	text15
  3731  1936                     __ptext15:	
  3732 ;; *************** function i1_Lcd_Cmd *****************
  3733 ;; Defined at:
  3734 ;;		line 8 in file "LCD8.c"
  3735 ;; Parameters:    Size  Location     Type
  3736 ;;  a               1    wreg     unsigned char 
  3737 ;; Auto vars:     Size  Location     Type
  3738 ;;  a               1    3[COMMON] unsigned char 
  3739 ;; Return value:  Size  Location     Type
  3740 ;;                  1    wreg      void 
  3741 ;; Registers used:
  3742 ;;		wreg, status,2, status,0, pclath, cstack
  3743 ;; Tracked objects:
  3744 ;;		On entry : 0/0
  3745 ;;		On exit  : 0/0
  3746 ;;		Unchanged: 0/0
  3747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3748 ;;      Params:         0       0       0       0       0
  3749 ;;      Locals:         1       0       0       0       0
  3750 ;;      Temps:          2       0       0       0       0
  3751 ;;      Totals:         3       0       0       0       0
  3752 ;;Total ram usage:        3 bytes
  3753 ;; Hardware stack levels used:    1
  3754 ;; Hardware stack levels required when called:    1
  3755 ;; This function calls:
  3756 ;;		i1_Lcd_Port
  3757 ;; This function is called by:
  3758 ;;		i1_Lcd_Set_Cursor
  3759 ;; This function uses a non-reentrant model
  3760 ;;
  3761                           
  3762                           
  3763                           ;psect for function i1_Lcd_Cmd
  3764  1936                     i1_Lcd_Cmd:
  3765                           
  3766                           ;incstack = 0
  3767                           ; Regs used in i1_Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3768                           ;i1Lcd_Cmd@a stored from wreg
  3769  1936  00F3               	movwf	i1Lcd_Cmd@a
  3770  1937                     i1l3400:
  3771                           
  3772                           ;LCD8.c: 9:     RB0 = 0;
  3773  1937  1283               	bcf	3,5	;RP0=0, select bank0
  3774  1938  1303               	bcf	3,6	;RP1=0, select bank0
  3775  1939  1006               	bcf	6,0	;volatile
  3776  193A                     i1l3402:
  3777                           
  3778                           ;LCD8.c: 10:     Lcd_Port(a);
  3779  193A  0873               	movf	i1Lcd_Cmd@a,w
  3780  193B  160A  158A  2107  160A  158A  	fcall	i1_Lcd_Port
  3781  1940                     i1l3404:
  3782                           
  3783                           ;LCD8.c: 11:     RB1 = 1;
  3784  1940  1283               	bcf	3,5	;RP0=0, select bank0
  3785  1941  1303               	bcf	3,6	;RP1=0, select bank0
  3786  1942  1486               	bsf	6,1	;volatile
  3787  1943                     i1l3406:
  3788                           
  3789                           ;LCD8.c: 12:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3790  1943  300B               	movlw	11
  3791  1944  00F2               	movwf	??i1_Lcd_Cmd+1
  3792  1945  3062               	movlw	98
  3793  1946  00F1               	movwf	??i1_Lcd_Cmd
  3794  1947                     u617_27:
  3795  1947  0BF1               	decfsz	??i1_Lcd_Cmd,f
  3796  1948  2947               	goto	u617_27
  3797  1949  0BF2               	decfsz	??i1_Lcd_Cmd+1,f
  3798  194A  2947               	goto	u617_27
  3799  194B  0000               	nop
  3800  194C                     i1l3408:
  3801                           
  3802                           ;LCD8.c: 13:     RB1 = 0;
  3803  194C  1283               	bcf	3,5	;RP0=0, select bank0
  3804  194D  1303               	bcf	3,6	;RP1=0, select bank0
  3805  194E  1086               	bcf	6,1	;volatile
  3806  194F                     i1l146:
  3807  194F  0008               	return
  3808  1950                     __end_ofi1_Lcd_Cmd:
  3809                           
  3810                           	psect	text16
  3811  1907                     __ptext16:	
  3812 ;; *************** function i1_Lcd_Port *****************
  3813 ;; Defined at:
  3814 ;;		line 4 in file "LCD8.c"
  3815 ;; Parameters:    Size  Location     Type
  3816 ;;  a               1    wreg     unsigned char 
  3817 ;; Auto vars:     Size  Location     Type
  3818 ;;  a               1    0[COMMON] unsigned char 
  3819 ;; Return value:  Size  Location     Type
  3820 ;;                  1    wreg      void 
  3821 ;; Registers used:
  3822 ;;		wreg
  3823 ;; Tracked objects:
  3824 ;;		On entry : 0/0
  3825 ;;		On exit  : 0/0
  3826 ;;		Unchanged: 0/0
  3827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3828 ;;      Params:         0       0       0       0       0
  3829 ;;      Locals:         1       0       0       0       0
  3830 ;;      Temps:          0       0       0       0       0
  3831 ;;      Totals:         1       0       0       0       0
  3832 ;;Total ram usage:        1 bytes
  3833 ;; Hardware stack levels used:    1
  3834 ;; This function calls:
  3835 ;;		Nothing
  3836 ;; This function is called by:
  3837 ;;		i1_Lcd_Cmd
  3838 ;;		i1_Lcd_Write_Char
  3839 ;; This function uses a non-reentrant model
  3840 ;;
  3841                           
  3842                           
  3843                           ;psect for function i1_Lcd_Port
  3844  1907                     i1_Lcd_Port:
  3845                           
  3846                           ;incstack = 0
  3847                           ; Regs used in i1_Lcd_Port: [wreg]
  3848                           ;i1Lcd_Port@a stored from wreg
  3849  1907  00F0               	movwf	i1Lcd_Port@a
  3850  1908                     i1l3020:
  3851                           
  3852                           ;LCD8.c: 5:     PORTD = a;
  3853  1908  0870               	movf	i1Lcd_Port@a,w
  3854  1909  1283               	bcf	3,5	;RP0=0, select bank0
  3855  190A  1303               	bcf	3,6	;RP1=0, select bank0
  3856  190B  0088               	movwf	8	;volatile
  3857  190C                     i1l143:
  3858  190C  0008               	return
  3859  190D                     __end_ofi1_Lcd_Port:
  3860                           
  3861                           	psect	text17
  3862  0034                     __ptext17:	
  3863 ;; *************** function _sprintf *****************
  3864 ;; Defined at:
  3865 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;  sp              1    wreg     PTR unsigned char 
  3868 ;;		 -> str_vol2(64), str_vol1(64), 
  3869 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  3870 ;;		 -> STR_5(5), STR_4(5), 
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  3873 ;;		 -> str_vol2(64), str_vol1(64), 
  3874 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  3875 ;;  tmpval          4   23[BANK1 ] struct .
  3876 ;;  val             4   17[BANK1 ] unsigned long 
  3877 ;;  prec            2   28[BANK1 ] int 
  3878 ;;  eexp            2   21[BANK1 ] int 
  3879 ;;  flag            2   15[BANK1 ] unsigned short 
  3880 ;;  cp              2    0        PTR const unsigned char 
  3881 ;;  len             2    0        unsigned int 
  3882 ;;  width           2    0        int 
  3883 ;;  c               1   34[BANK1 ] unsigned char 
  3884 ;;  ap              1   14[BANK1 ] PTR void [1]
  3885 ;;		 -> ?_sprintf(2), 
  3886 ;;  d               1    0        unsigned char 
  3887 ;; Return value:  Size  Location     Type
  3888 ;;                  2    0[BANK1 ] int 
  3889 ;; Registers used:
  3890 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3891 ;; Tracked objects:
  3892 ;;		On entry : 0/0
  3893 ;;		On exit  : 0/0
  3894 ;;		Unchanged: 0/0
  3895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3896 ;;      Params:         0       0       5       0       0
  3897 ;;      Locals:         0       0      25       0       0
  3898 ;;      Temps:          0       0       5       0       0
  3899 ;;      Totals:         0       0      35       0       0
  3900 ;;Total ram usage:       35 bytes
  3901 ;; Hardware stack levels used:    1
  3902 ;; Hardware stack levels required when called:    3
  3903 ;; This function calls:
  3904 ;;		___awdiv
  3905 ;;		___fladd
  3906 ;;		___fleq
  3907 ;;		___flge
  3908 ;;		___flmul
  3909 ;;		___flneg
  3910 ;;		___flsub
  3911 ;;		___fltol
  3912 ;;		___lldiv
  3913 ;;		___llmod
  3914 ;;		___wmul
  3915 ;;		___xxtofl
  3916 ;;		__div_to_l_
  3917 ;;		__tdiv_to_l_
  3918 ;;		_fround
  3919 ;;		_isdigit
  3920 ;;		_scale
  3921 ;; This function is called by:
  3922 ;;		_oli
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925                           
  3926                           
  3927                           ;psect for function _sprintf
  3928  0034                     _sprintf:
  3929                           
  3930                           ;incstack = 0
  3931 ;; using string table level
  3932                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3933                           ;sprintf@sp stored from wreg
  3934  0034  1683               	bsf	3,5	;RP0=1, select bank1
  3935  0035  1303               	bcf	3,6	;RP1=0, select bank1
  3936  0036  00BB               	movwf	sprintf@sp^(0+128)
  3937  0037                     i1l3568:
  3938                           
  3939                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  3940  0037  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3941  0038  00A5               	movwf	??_sprintf^(0+128)
  3942  0039  0825               	movf	??_sprintf^(0+128),w
  3943  003A  00AE               	movwf	sprintf@ap^(0+128)
  3944                           
  3945                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3946  003B  2E75               	goto	i1l3762
  3947  003C                     i1l3570:
  3948                           
  3949                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  3950  003C  3025               	movlw	37
  3951  003D  0642               	xorwf	sprintf@c^(0+128),w
  3952  003E  1903               	btfsc	3,2
  3953  003F  2841               	goto	u534_21
  3954  0040  2842               	goto	u534_20
  3955  0041                     u534_21:
  3956  0041  284E               	goto	i1l3576
  3957  0042                     u534_20:
  3958  0042                     i1l3572:
  3959                           
  3960                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  3961  0042  0842               	movf	sprintf@c^(0+128),w
  3962  0043  00A5               	movwf	??_sprintf^(0+128)
  3963  0044  083B               	movf	sprintf@sp^(0+128),w
  3964  0045  0084               	movwf	4
  3965  0046  0825               	movf	??_sprintf^(0+128),w
  3966  0047  1783               	bsf	3,7	;select IRP bank2
  3967  0048  0080               	movwf	0
  3968  0049                     i1l3574:
  3969  0049  3001               	movlw	1
  3970  004A  00A5               	movwf	??_sprintf^(0+128)
  3971  004B  0825               	movf	??_sprintf^(0+128),w
  3972  004C  07BB               	addwf	sprintf@sp^(0+128),f
  3973                           
  3974                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  3975  004D  2E75               	goto	i1l3762
  3976  004E                     i1l3576:
  3977                           
  3978                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3979  004E  01AF               	clrf	sprintf@flag^(0+128)
  3980  004F  01B0               	clrf	(sprintf@flag+1)^(0+128)
  3981  0050                     i1l3578:
  3982                           
  3983                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  3984  0050  0820               	movf	sprintf@f^(0+128),w
  3985  0051  0084               	movwf	4
  3986  0052  160A  158A  200A  120A  118A  	fcall	stringdir
  3987  0057  3A2E               	xorlw	46
  3988  0058  1D03               	skipz
  3989  0059  285B               	goto	u535_21
  3990  005A  285C               	goto	u535_20
  3991  005B                     u535_21:
  3992  005B  28A1               	goto	i1l3594
  3993  005C                     u535_20:
  3994  005C                     i1l3580:
  3995                           
  3996                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  3997  005C  1730               	bsf	(sprintf@flag^(0+128)+1),6
  3998  005D                     i1l3582:
  3999                           
  4000                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  4001  005D  3001               	movlw	1
  4002  005E  00A5               	movwf	??_sprintf^(0+128)
  4003  005F  0825               	movf	??_sprintf^(0+128),w
  4004  0060  07A0               	addwf	sprintf@f^(0+128),f
  4005  0061                     i1l3584:
  4006                           
  4007                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  4008  0061  01BC               	clrf	sprintf@prec^(0+128)
  4009  0062  01BD               	clrf	(sprintf@prec+1)^(0+128)
  4010                           
  4011                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  4012  0063  2890               	goto	i1l3592
  4013  0064                     i1l3586:
  4014                           
  4015                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  4016  0064  300A               	movlw	10
  4017  0065  00F0               	movwf	___wmul@multiplier
  4018  0066  3000               	movlw	0
  4019  0067  00F1               	movwf	___wmul@multiplier+1
  4020  0068  1683               	bsf	3,5	;RP0=1, select bank1
  4021  0069  1303               	bcf	3,6	;RP1=0, select bank1
  4022  006A  083D               	movf	(sprintf@prec+1)^(0+128),w
  4023  006B  00F3               	movwf	___wmul@multiplicand+1
  4024  006C  083C               	movf	sprintf@prec^(0+128),w
  4025  006D  00F2               	movwf	___wmul@multiplicand
  4026  006E  160A  158A  2204  120A  118A  	fcall	___wmul
  4027  0073  0871               	movf	?___wmul+1,w
  4028  0074  1683               	bsf	3,5	;RP0=1, select bank1
  4029  0075  1303               	bcf	3,6	;RP1=0, select bank1
  4030  0076  00BD               	movwf	(sprintf@prec+1)^(0+128)
  4031  0077  0870               	movf	?___wmul,w
  4032  0078  00BC               	movwf	sprintf@prec^(0+128)
  4033  0079                     i1l3588:
  4034                           
  4035                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  4036  0079  0820               	movf	sprintf@f^(0+128),w
  4037  007A  0084               	movwf	4
  4038  007B  160A  158A  200A  120A  118A  	fcall	stringdir
  4039  0080  3ED0               	addlw	208
  4040  0081  00A5               	movwf	??_sprintf^(0+128)
  4041  0082  30FF               	movlw	255
  4042  0083  1803               	skipnc
  4043  0084  3000               	movlw	0
  4044  0085  00A6               	movwf	(??_sprintf^(0+128)+1)
  4045  0086  0825               	movf	??_sprintf^(0+128),w
  4046  0087  07BC               	addwf	sprintf@prec^(0+128),f
  4047  0088  1803               	skipnc
  4048  0089  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  4049  008A  0826               	movf	(??_sprintf+1)^(0+128),w
  4050  008B  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  4051  008C                     i1l3590:
  4052  008C  3001               	movlw	1
  4053  008D  00A5               	movwf	??_sprintf^(0+128)
  4054  008E  0825               	movf	??_sprintf^(0+128),w
  4055  008F  07A0               	addwf	sprintf@f^(0+128),f
  4056  0090                     i1l3592:
  4057                           
  4058                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  4059  0090  0820               	movf	sprintf@f^(0+128),w
  4060  0091  0084               	movwf	4
  4061  0092  160A  158A  200A  120A  118A  	fcall	stringdir
  4062  0097  160A  118A  2003  120A  118A  	fcall	_isdigit
  4063  009C  1803               	btfsc	3,0
  4064  009D  289F               	goto	u536_21
  4065  009E  28A0               	goto	u536_20
  4066  009F                     u536_21:
  4067  009F  2864               	goto	i1l3586
  4068  00A0                     u536_20:
  4069  00A0  28A7               	goto	i1l3600
  4070  00A1                     i1l3594:
  4071                           
  4072                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  4073  00A1  01BC               	clrf	sprintf@prec^(0+128)
  4074  00A2  01BD               	clrf	(sprintf@prec+1)^(0+128)
  4075  00A3                     i1l3596:
  4076                           
  4077                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  4078  00A3  1630               	bsf	(sprintf@flag^(0+128)+1),4
  4079  00A4  28A7               	goto	i1l3600
  4080  00A5                     i1l314:	
  4081                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  4082                           
  4083                           
  4084                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  4085  00A5  1530               	bsf	(sprintf@flag^(0+128)+1),2
  4086                           
  4087                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  4088  00A6  28C3               	goto	i1l3602
  4089  00A7                     i1l3600:
  4090  00A7  3001               	movlw	1
  4091  00A8  1683               	bsf	3,5	;RP0=1, select bank1
  4092  00A9  1303               	bcf	3,6	;RP1=0, select bank1
  4093  00AA  07A0               	addwf	sprintf@f^(0+128),f
  4094  00AB  30FF               	movlw	-1
  4095  00AC  0720               	addwf	sprintf@f^(0+128),w
  4096  00AD  0084               	movwf	4
  4097  00AE  160A  158A  200A  120A  118A  	fcall	stringdir
  4098  00B3  00C2               	movwf	sprintf@c^(0+128)
  4099  00B4  00A5               	movwf	??_sprintf^(0+128)
  4100  00B5  01A6               	clrf	(??_sprintf^(0+128)+1)
  4101                           
  4102                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4103                           ; Switch size 1, requested type "simple"
  4104                           ; Number of cases is 1, Range of values is 0 to 0
  4105                           ; switch strategies available:
  4106                           ; Name         Instructions Cycles
  4107                           ; simple_byte            4     3 (average)
  4108                           ; direct_byte           11     8 (fixed)
  4109                           ; jumptable            260     6 (fixed)
  4110                           ;	Chosen strategy is simple_byte
  4111  00B6  0826               	movf	(??_sprintf+1)^(0+128),w
  4112  00B7  3A00               	xorlw	0	; case 0
  4113  00B8  1903               	skipnz
  4114  00B9  28BB               	goto	i1l4140
  4115  00BA  2E75               	goto	i1l3762
  4116  00BB                     i1l4140:
  4117                           
  4118                           ; Switch size 1, requested type "simple"
  4119                           ; Number of cases is 2, Range of values is 0 to 102
  4120                           ; switch strategies available:
  4121                           ; Name         Instructions Cycles
  4122                           ; simple_byte            7     4 (average)
  4123                           ; jumptable            260     6 (fixed)
  4124                           ;	Chosen strategy is simple_byte
  4125  00BB  0825               	movf	??_sprintf^(0+128),w
  4126  00BC  3A00               	xorlw	0	; case 0
  4127  00BD  1903               	skipnz
  4128  00BE  2E87               	goto	i1l3764
  4129  00BF  3A66               	xorlw	102	; case 102
  4130  00C0  1903               	skipnz
  4131  00C1  28A5               	goto	i1l314
  4132  00C2  2E75               	goto	i1l3762
  4133  00C3                     i1l3602:
  4134                           
  4135                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  4136  00C3  3000               	movlw	0
  4137  00C4  052F               	andwf	sprintf@flag^(0+128),w
  4138  00C5  00A5               	movwf	??_sprintf^(0+128)
  4139  00C6  3007               	movlw	7
  4140  00C7  0530               	andwf	(sprintf@flag+1)^(0+128),w
  4141  00C8  00A6               	movwf	(??_sprintf+1)^(0+128)
  4142  00C9  0825               	movf	??_sprintf^(0+128),w
  4143  00CA  0426               	iorwf	(??_sprintf^(0+128)+1),w
  4144  00CB  1903               	btfsc	3,2
  4145  00CC  28CE               	goto	u537_21
  4146  00CD  28CF               	goto	u537_20
  4147  00CE                     u537_21:
  4148  00CE  2E30               	goto	i1l3744
  4149  00CF                     u537_20:
  4150  00CF                     i1l3604:
  4151                           
  4152                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  4153  00CF  1E30               	btfss	(sprintf@flag+1)^(0+128),4
  4154  00D0  28D2               	goto	u538_21
  4155  00D1  28D3               	goto	u538_20
  4156  00D2                     u538_21:
  4157  00D2  28D7               	goto	i1l3608
  4158  00D3                     u538_20:
  4159  00D3                     i1l3606:
  4160                           
  4161                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  4162  00D3  3006               	movlw	6
  4163  00D4  00BC               	movwf	sprintf@prec^(0+128)
  4164  00D5  3000               	movlw	0
  4165  00D6  00BD               	movwf	(sprintf@prec^(0+128)+1)
  4166  00D7                     i1l3608:
  4167                           
  4168                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  4169  00D7  082E               	movf	sprintf@ap^(0+128),w
  4170  00D8  0084               	movwf	4
  4171  00D9  1383               	bcf	3,7	;select IRP bank0
  4172  00DA  0800               	movf	0,w
  4173  00DB  00BE               	movwf	sprintf@fval^(0+128)
  4174  00DC  0A84               	incf	4,f
  4175  00DD  0800               	movf	0,w
  4176  00DE  00BF               	movwf	(sprintf@fval+1)^(0+128)
  4177  00DF  0A84               	incf	4,f
  4178  00E0  0800               	movf	0,w
  4179  00E1  00C0               	movwf	(sprintf@fval+2)^(0+128)
  4180  00E2  0A84               	incf	4,f
  4181  00E3  0800               	movf	0,w
  4182  00E4  00C1               	movwf	(sprintf@fval+3)^(0+128)
  4183  00E5                     i1l3610:
  4184  00E5  3004               	movlw	4
  4185  00E6  00A5               	movwf	??_sprintf^(0+128)
  4186  00E7  0825               	movf	??_sprintf^(0+128),w
  4187  00E8  07AE               	addwf	sprintf@ap^(0+128),f
  4188  00E9                     i1l3612:
  4189                           
  4190                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  4191  00E9  0841               	movf	(sprintf@fval+3)^(0+128),w
  4192  00EA  00F3               	movwf	___flge@ff1+3
  4193  00EB  0840               	movf	(sprintf@fval+2)^(0+128),w
  4194  00EC  00F2               	movwf	___flge@ff1+2
  4195  00ED  083F               	movf	(sprintf@fval+1)^(0+128),w
  4196  00EE  00F1               	movwf	___flge@ff1+1
  4197  00EF  083E               	movf	sprintf@fval^(0+128),w
  4198  00F0  00F0               	movwf	___flge@ff1
  4199  00F1  3000               	movlw	0
  4200  00F2  00F7               	movwf	___flge@ff2+3
  4201  00F3  3000               	movlw	0
  4202  00F4  00F6               	movwf	___flge@ff2+2
  4203  00F5  3000               	movlw	0
  4204  00F6  00F5               	movwf	___flge@ff2+1
  4205  00F7  3000               	movlw	0
  4206  00F8  00F4               	movwf	___flge@ff2
  4207  00F9  160A  158A  26A4  120A  118A  	fcall	___flge
  4208  00FE  1803               	btfsc	3,0
  4209  00FF  2901               	goto	u539_21
  4210  0100  2902               	goto	u539_20
  4211  0101                     u539_21:
  4212  0101  291F               	goto	i1l3618
  4213  0102                     u539_20:
  4214  0102                     i1l3614:
  4215                           
  4216                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  4217  0102  1683               	bsf	3,5	;RP0=1, select bank1
  4218  0103  1303               	bcf	3,6	;RP1=0, select bank1
  4219  0104  0841               	movf	(sprintf@fval+3)^(0+128),w
  4220  0105  00F3               	movwf	___flneg@f1+3
  4221  0106  0840               	movf	(sprintf@fval+2)^(0+128),w
  4222  0107  00F2               	movwf	___flneg@f1+2
  4223  0108  083F               	movf	(sprintf@fval+1)^(0+128),w
  4224  0109  00F1               	movwf	___flneg@f1+1
  4225  010A  083E               	movf	sprintf@fval^(0+128),w
  4226  010B  00F0               	movwf	___flneg@f1
  4227  010C  160A  158A  2115  120A  118A  	fcall	___flneg
  4228  0111  0873               	movf	?___flneg+3,w
  4229  0112  1683               	bsf	3,5	;RP0=1, select bank1
  4230  0113  1303               	bcf	3,6	;RP1=0, select bank1
  4231  0114  00C1               	movwf	(sprintf@fval+3)^(0+128)
  4232  0115  0872               	movf	?___flneg+2,w
  4233  0116  00C0               	movwf	(sprintf@fval+2)^(0+128)
  4234  0117  0871               	movf	?___flneg+1,w
  4235  0118  00BF               	movwf	(sprintf@fval+1)^(0+128)
  4236  0119  0870               	movf	?___flneg,w
  4237  011A  00BE               	movwf	sprintf@fval^(0+128)
  4238  011B                     i1l3616:
  4239                           
  4240                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  4241  011B  3003               	movlw	3
  4242  011C  04AF               	iorwf	sprintf@flag^(0+128),f
  4243  011D  3000               	movlw	0
  4244  011E  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  4245  011F                     i1l3618:
  4246                           
  4247                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  4248  011F  1683               	bsf	3,5	;RP0=1, select bank1
  4249  0120  1303               	bcf	3,6	;RP1=0, select bank1
  4250  0121  01B5               	clrf	sprintf@eexp^(0+128)
  4251  0122  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  4252  0123                     i1l3620:
  4253                           
  4254                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  4255  0123  0841               	movf	(sprintf@fval+3)^(0+128),w
  4256  0124  00F3               	movwf	___fleq@ff1+3
  4257  0125  0840               	movf	(sprintf@fval+2)^(0+128),w
  4258  0126  00F2               	movwf	___fleq@ff1+2
  4259  0127  083F               	movf	(sprintf@fval+1)^(0+128),w
  4260  0128  00F1               	movwf	___fleq@ff1+1
  4261  0129  083E               	movf	sprintf@fval^(0+128),w
  4262  012A  00F0               	movwf	___fleq@ff1
  4263  012B  3000               	movlw	0
  4264  012C  00F7               	movwf	___fleq@ff2+3
  4265  012D  3000               	movlw	0
  4266  012E  00F6               	movwf	___fleq@ff2+2
  4267  012F  3000               	movlw	0
  4268  0130  00F5               	movwf	___fleq@ff2+1
  4269  0131  3000               	movlw	0
  4270  0132  00F4               	movwf	___fleq@ff2
  4271  0133  160A  158A  2310  120A  118A  	fcall	___fleq
  4272  0138  1803               	btfsc	3,0
  4273  0139  293B               	goto	u540_21
  4274  013A  293C               	goto	u540_20
  4275  013B                     u540_21:
  4276  013B  2A2C               	goto	i1l3646
  4277  013C                     u540_20:
  4278  013C                     i1l3622:
  4279                           
  4280                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  4281  013C  1003               	clrc
  4282  013D  1683               	bsf	3,5	;RP0=1, select bank1
  4283  013E  1303               	bcf	3,6	;RP1=0, select bank1
  4284  013F  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  4285  0140  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  4286  0141  3E82               	addlw	130
  4287  0142  00B5               	movwf	sprintf@eexp^(0+128)
  4288  0143  30FF               	movlw	255
  4289  0144  1803               	skipnc
  4290  0145  3000               	movlw	0
  4291  0146  00B6               	movwf	(sprintf@eexp^(0+128)+1)
  4292  0147                     i1l3624:
  4293                           
  4294                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  4295  0147  30FF               	movlw	255
  4296  0148  07B5               	addwf	sprintf@eexp^(0+128),f
  4297  0149  1803               	skipnc
  4298  014A  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  4299  014B  30FF               	movlw	255
  4300  014C  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  4301  014D                     i1l3626:
  4302                           
  4303                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  4304  014D  3003               	movlw	3
  4305  014E  00F0               	movwf	___wmul@multiplier
  4306  014F  3000               	movlw	0
  4307  0150  00F1               	movwf	___wmul@multiplier+1
  4308  0151  0836               	movf	(sprintf@eexp+1)^(0+128),w
  4309  0152  00F3               	movwf	___wmul@multiplicand+1
  4310  0153  0835               	movf	sprintf@eexp^(0+128),w
  4311  0154  00F2               	movwf	___wmul@multiplicand
  4312  0155  160A  158A  2204  120A  118A  	fcall	___wmul
  4313  015A  0871               	movf	?___wmul+1,w
  4314  015B  1683               	bsf	3,5	;RP0=1, select bank1
  4315  015C  1303               	bcf	3,6	;RP1=0, select bank1
  4316  015D  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  4317  015E  0870               	movf	?___wmul,w
  4318  015F  00B5               	movwf	sprintf@eexp^(0+128)
  4319  0160                     i1l3628:
  4320                           
  4321                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  4322  0160  300A               	movlw	10
  4323  0161  00F7               	movwf	___awdiv@divisor
  4324  0162  3000               	movlw	0
  4325  0163  00F8               	movwf	___awdiv@divisor+1
  4326  0164  0836               	movf	(sprintf@eexp+1)^(0+128),w
  4327  0165  00FA               	movwf	___awdiv@dividend+1
  4328  0166  0835               	movf	sprintf@eexp^(0+128),w
  4329  0167  00F9               	movwf	___awdiv@dividend
  4330  0168  160A  158A  2522  120A  118A  	fcall	___awdiv
  4331  016D  0878               	movf	?___awdiv+1,w
  4332  016E  1683               	bsf	3,5	;RP0=1, select bank1
  4333  016F  1303               	bcf	3,6	;RP1=0, select bank1
  4334  0170  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  4335  0171  0877               	movf	?___awdiv,w
  4336  0172  00B5               	movwf	sprintf@eexp^(0+128)
  4337  0173                     i1l3630:
  4338                           
  4339                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  4340  0173  1FB6               	btfss	(sprintf@eexp+1)^(0+128),7
  4341  0174  2976               	goto	u541_21
  4342  0175  2977               	goto	u541_20
  4343  0176                     u541_21:
  4344  0176  297D               	goto	i1l3634
  4345  0177                     u541_20:
  4346  0177                     i1l3632:
  4347                           
  4348                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  4349  0177  30FF               	movlw	255
  4350  0178  07B5               	addwf	sprintf@eexp^(0+128),f
  4351  0179  1803               	skipnc
  4352  017A  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  4353  017B  30FF               	movlw	255
  4354  017C  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  4355  017D                     i1l3634:
  4356                           
  4357                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  4358  017D  0335               	decf	sprintf@eexp^(0+128),w
  4359  017E  3AFF               	xorlw	255
  4360  017F  120A  158A  2140  120A  118A  	fcall	_scale
  4361  0184  1283               	bcf	3,5	;RP0=0, select bank0
  4362  0185  1303               	bcf	3,6	;RP1=0, select bank0
  4363  0186  0841               	movf	?_scale+3,w
  4364  0187  1683               	bsf	3,5	;RP0=1, select bank1
  4365  0188  1303               	bcf	3,6	;RP1=0, select bank1
  4366  0189  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  4367  018A  1283               	bcf	3,5	;RP0=0, select bank0
  4368  018B  1303               	bcf	3,6	;RP1=0, select bank0
  4369  018C  0840               	movf	?_scale+2,w
  4370  018D  1683               	bsf	3,5	;RP0=1, select bank1
  4371  018E  1303               	bcf	3,6	;RP1=0, select bank1
  4372  018F  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  4373  0190  1283               	bcf	3,5	;RP0=0, select bank0
  4374  0191  1303               	bcf	3,6	;RP1=0, select bank0
  4375  0192  083F               	movf	?_scale+1,w
  4376  0193  1683               	bsf	3,5	;RP0=1, select bank1
  4377  0194  1303               	bcf	3,6	;RP1=0, select bank1
  4378  0195  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  4379  0196  1283               	bcf	3,5	;RP0=0, select bank0
  4380  0197  1303               	bcf	3,6	;RP1=0, select bank0
  4381  0198  083E               	movf	?_scale,w
  4382  0199  1683               	bsf	3,5	;RP0=1, select bank1
  4383  019A  1303               	bcf	3,6	;RP1=0, select bank1
  4384  019B  00B7               	movwf	sprintf@tmpval^(0+128)
  4385  019C                     i1l3636:
  4386                           
  4387                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  4388  019C  0841               	movf	(sprintf@fval+3)^(0+128),w
  4389  019D  1283               	bcf	3,5	;RP0=0, select bank0
  4390  019E  1303               	bcf	3,6	;RP1=0, select bank0
  4391  019F  00A7               	movwf	___flmul@b+3
  4392  01A0  1683               	bsf	3,5	;RP0=1, select bank1
  4393  01A1  1303               	bcf	3,6	;RP1=0, select bank1
  4394  01A2  0840               	movf	(sprintf@fval+2)^(0+128),w
  4395  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  4396  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  4397  01A5  00A6               	movwf	___flmul@b+2
  4398  01A6  1683               	bsf	3,5	;RP0=1, select bank1
  4399  01A7  1303               	bcf	3,6	;RP1=0, select bank1
  4400  01A8  083F               	movf	(sprintf@fval+1)^(0+128),w
  4401  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  4402  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  4403  01AB  00A5               	movwf	___flmul@b+1
  4404  01AC  1683               	bsf	3,5	;RP0=1, select bank1
  4405  01AD  1303               	bcf	3,6	;RP1=0, select bank1
  4406  01AE  083E               	movf	sprintf@fval^(0+128),w
  4407  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  4408  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  4409  01B1  00A4               	movwf	___flmul@b
  4410  01B2  1683               	bsf	3,5	;RP0=1, select bank1
  4411  01B3  1303               	bcf	3,6	;RP1=0, select bank1
  4412  01B4  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  4413  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  4414  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  4415  01B7  00AB               	movwf	___flmul@a+3
  4416  01B8  1683               	bsf	3,5	;RP0=1, select bank1
  4417  01B9  1303               	bcf	3,6	;RP1=0, select bank1
  4418  01BA  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  4419  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  4420  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  4421  01BD  00AA               	movwf	___flmul@a+2
  4422  01BE  1683               	bsf	3,5	;RP0=1, select bank1
  4423  01BF  1303               	bcf	3,6	;RP1=0, select bank1
  4424  01C0  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  4425  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  4426  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  4427  01C3  00A9               	movwf	___flmul@a+1
  4428  01C4  1683               	bsf	3,5	;RP0=1, select bank1
  4429  01C5  1303               	bcf	3,6	;RP1=0, select bank1
  4430  01C6  0837               	movf	sprintf@tmpval^(0+128),w
  4431  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  4432  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  4433  01C9  00A8               	movwf	___flmul@a
  4434  01CA  120A  158A  249F  120A  118A  	fcall	___flmul
  4435  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  4436  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  4437  01D1  0827               	movf	?___flmul+3,w
  4438  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  4439  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  4440  01D4  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  4441  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  4442  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  4443  01D7  0826               	movf	?___flmul+2,w
  4444  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  4445  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  4446  01DA  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  4447  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  4448  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  4449  01DD  0825               	movf	?___flmul+1,w
  4450  01DE  1683               	bsf	3,5	;RP0=1, select bank1
  4451  01DF  1303               	bcf	3,6	;RP1=0, select bank1
  4452  01E0  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  4453  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  4454  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  4455  01E3  0824               	movf	?___flmul,w
  4456  01E4  1683               	bsf	3,5	;RP0=1, select bank1
  4457  01E5  1303               	bcf	3,6	;RP1=0, select bank1
  4458  01E6  00B7               	movwf	sprintf@tmpval^(0+128)
  4459  01E7                     i1l3638:
  4460                           
  4461                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  4462  01E7  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  4463  01E8  00F3               	movwf	___flge@ff1+3
  4464  01E9  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  4465  01EA  00F2               	movwf	___flge@ff1+2
  4466  01EB  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  4467  01EC  00F1               	movwf	___flge@ff1+1
  4468  01ED  0837               	movf	sprintf@tmpval^(0+128),w
  4469  01EE  00F0               	movwf	___flge@ff1
  4470  01EF  303F               	movlw	63
  4471  01F0  00F7               	movwf	___flge@ff2+3
  4472  01F1  3080               	movlw	128
  4473  01F2  00F6               	movwf	___flge@ff2+2
  4474  01F3  3000               	movlw	0
  4475  01F4  00F5               	movwf	___flge@ff2+1
  4476  01F5  3000               	movlw	0
  4477  01F6  00F4               	movwf	___flge@ff2
  4478  01F7  160A  158A  26A4  120A  118A  	fcall	___flge
  4479  01FC  1803               	btfsc	3,0
  4480  01FD  29FF               	goto	u542_21
  4481  01FE  2A00               	goto	u542_20
  4482  01FF                     u542_21:
  4483  01FF  2A09               	goto	i1l3642
  4484  0200                     u542_20:
  4485  0200                     i1l3640:
  4486                           
  4487                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  4488  0200  30FF               	movlw	255
  4489  0201  1683               	bsf	3,5	;RP0=1, select bank1
  4490  0202  1303               	bcf	3,6	;RP1=0, select bank1
  4491  0203  07B5               	addwf	sprintf@eexp^(0+128),f
  4492  0204  1803               	skipnc
  4493  0205  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  4494  0206  30FF               	movlw	255
  4495  0207  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  4496  0208  2A2C               	goto	i1l3646
  4497  0209                     i1l3642:
  4498  0209  1683               	bsf	3,5	;RP0=1, select bank1
  4499  020A  1303               	bcf	3,6	;RP1=0, select bank1
  4500  020B  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  4501  020C  00F3               	movwf	___flge@ff1+3
  4502  020D  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  4503  020E  00F2               	movwf	___flge@ff1+2
  4504  020F  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  4505  0210  00F1               	movwf	___flge@ff1+1
  4506  0211  0837               	movf	sprintf@tmpval^(0+128),w
  4507  0212  00F0               	movwf	___flge@ff1
  4508  0213  3041               	movlw	65
  4509  0214  00F7               	movwf	___flge@ff2+3
  4510  0215  3020               	movlw	32
  4511  0216  00F6               	movwf	___flge@ff2+2
  4512  0217  3000               	movlw	0
  4513  0218  00F5               	movwf	___flge@ff2+1
  4514  0219  3000               	movlw	0
  4515  021A  00F4               	movwf	___flge@ff2
  4516  021B  160A  158A  26A4  120A  118A  	fcall	___flge
  4517  0220  1C03               	btfss	3,0
  4518  0221  2A23               	goto	u543_21
  4519  0222  2A24               	goto	u543_20
  4520  0223                     u543_21:
  4521  0223  2A2C               	goto	i1l3646
  4522  0224                     u543_20:
  4523  0224                     i1l3644:
  4524                           
  4525                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  4526  0224  3001               	movlw	1
  4527  0225  1683               	bsf	3,5	;RP0=1, select bank1
  4528  0226  1303               	bcf	3,6	;RP1=0, select bank1
  4529  0227  07B5               	addwf	sprintf@eexp^(0+128),f
  4530  0228  1803               	skipnc
  4531  0229  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  4532  022A  3000               	movlw	0
  4533  022B  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  4534  022C                     i1l3646:
  4535                           
  4536                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  4537  022C  1683               	bsf	3,5	;RP0=1, select bank1
  4538  022D  1303               	bcf	3,6	;RP1=0, select bank1
  4539  022E  083D               	movf	(sprintf@prec+1)^(0+128),w
  4540  022F  3A80               	xorlw	128
  4541  0230  00FF               	movwf	btemp+1
  4542  0231  3080               	movlw	128
  4543  0232  027F               	subwf	btemp+1,w
  4544  0233  1D03               	skipz
  4545  0234  2A37               	goto	u544_25
  4546  0235  300D               	movlw	13
  4547  0236  023C               	subwf	sprintf@prec^(0+128),w
  4548  0237                     u544_25:
  4549  0237  1803               	skipnc
  4550  0238  2A3A               	goto	u544_21
  4551  0239  2A3B               	goto	u544_20
  4552  023A                     u544_21:
  4553  023A  2A82               	goto	i1l3650
  4554  023B                     u544_20:
  4555  023B                     i1l3648:
  4556                           
  4557                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  4558  023B  1683               	bsf	3,5	;RP0=1, select bank1
  4559  023C  1303               	bcf	3,6	;RP1=0, select bank1
  4560  023D  083C               	movf	sprintf@prec^(0+128),w
  4561  023E  160A  118A  236D  120A  118A  	fcall	_fround
  4562  0243  1283               	bcf	3,5	;RP0=0, select bank0
  4563  0244  1303               	bcf	3,6	;RP1=0, select bank0
  4564  0245  0841               	movf	?_fround+3,w
  4565  0246  00D5               	movwf	___fladd@b+3
  4566  0247  0840               	movf	?_fround+2,w
  4567  0248  00D4               	movwf	___fladd@b+2
  4568  0249  083F               	movf	?_fround+1,w
  4569  024A  00D3               	movwf	___fladd@b+1
  4570  024B  083E               	movf	?_fround,w
  4571  024C  00D2               	movwf	___fladd@b
  4572  024D  1683               	bsf	3,5	;RP0=1, select bank1
  4573  024E  1303               	bcf	3,6	;RP1=0, select bank1
  4574  024F  0841               	movf	(sprintf@fval+3)^(0+128),w
  4575  0250  1283               	bcf	3,5	;RP0=0, select bank0
  4576  0251  1303               	bcf	3,6	;RP1=0, select bank0
  4577  0252  00D9               	movwf	___fladd@a+3
  4578  0253  1683               	bsf	3,5	;RP0=1, select bank1
  4579  0254  1303               	bcf	3,6	;RP1=0, select bank1
  4580  0255  0840               	movf	(sprintf@fval+2)^(0+128),w
  4581  0256  1283               	bcf	3,5	;RP0=0, select bank0
  4582  0257  1303               	bcf	3,6	;RP1=0, select bank0
  4583  0258  00D8               	movwf	___fladd@a+2
  4584  0259  1683               	bsf	3,5	;RP0=1, select bank1
  4585  025A  1303               	bcf	3,6	;RP1=0, select bank1
  4586  025B  083F               	movf	(sprintf@fval+1)^(0+128),w
  4587  025C  1283               	bcf	3,5	;RP0=0, select bank0
  4588  025D  1303               	bcf	3,6	;RP1=0, select bank0
  4589  025E  00D7               	movwf	___fladd@a+1
  4590  025F  1683               	bsf	3,5	;RP0=1, select bank1
  4591  0260  1303               	bcf	3,6	;RP1=0, select bank1
  4592  0261  083E               	movf	sprintf@fval^(0+128),w
  4593  0262  1283               	bcf	3,5	;RP0=0, select bank0
  4594  0263  1303               	bcf	3,6	;RP1=0, select bank0
  4595  0264  00D6               	movwf	___fladd@a
  4596  0265  160A  118A  2578  120A  118A  	fcall	___fladd
  4597  026A  1283               	bcf	3,5	;RP0=0, select bank0
  4598  026B  1303               	bcf	3,6	;RP1=0, select bank0
  4599  026C  0855               	movf	?___fladd+3,w
  4600  026D  1683               	bsf	3,5	;RP0=1, select bank1
  4601  026E  1303               	bcf	3,6	;RP1=0, select bank1
  4602  026F  00C1               	movwf	(sprintf@fval+3)^(0+128)
  4603  0270  1283               	bcf	3,5	;RP0=0, select bank0
  4604  0271  1303               	bcf	3,6	;RP1=0, select bank0
  4605  0272  0854               	movf	?___fladd+2,w
  4606  0273  1683               	bsf	3,5	;RP0=1, select bank1
  4607  0274  1303               	bcf	3,6	;RP1=0, select bank1
  4608  0275  00C0               	movwf	(sprintf@fval+2)^(0+128)
  4609  0276  1283               	bcf	3,5	;RP0=0, select bank0
  4610  0277  1303               	bcf	3,6	;RP1=0, select bank0
  4611  0278  0853               	movf	?___fladd+1,w
  4612  0279  1683               	bsf	3,5	;RP0=1, select bank1
  4613  027A  1303               	bcf	3,6	;RP1=0, select bank1
  4614  027B  00BF               	movwf	(sprintf@fval+1)^(0+128)
  4615  027C  1283               	bcf	3,5	;RP0=0, select bank0
  4616  027D  1303               	bcf	3,6	;RP1=0, select bank0
  4617  027E  0852               	movf	?___fladd,w
  4618  027F  1683               	bsf	3,5	;RP0=1, select bank1
  4619  0280  1303               	bcf	3,6	;RP1=0, select bank1
  4620  0281  00BE               	movwf	sprintf@fval^(0+128)
  4621  0282                     i1l3650:
  4622                           
  4623                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  4624  0282  1683               	bsf	3,5	;RP0=1, select bank1
  4625  0283  1303               	bcf	3,6	;RP1=0, select bank1
  4626  0284  0836               	movf	(sprintf@eexp+1)^(0+128),w
  4627  0285  3A80               	xorlw	128
  4628  0286  00FF               	movwf	btemp+1
  4629  0287  3080               	movlw	128
  4630  0288  027F               	subwf	btemp+1,w
  4631  0289  1D03               	skipz
  4632  028A  2A8D               	goto	u545_25
  4633  028B  300A               	movlw	10
  4634  028C  0235               	subwf	sprintf@eexp^(0+128),w
  4635  028D                     u545_25:
  4636  028D  1803               	skipnc
  4637  028E  2A90               	goto	u545_21
  4638  028F  2A91               	goto	u545_20
  4639  0290                     u545_21:
  4640  0290  2AE2               	goto	i1l3658
  4641  0291                     u545_20:
  4642  0291                     i1l3652:
  4643  0291  1683               	bsf	3,5	;RP0=1, select bank1
  4644  0292  1303               	bcf	3,6	;RP1=0, select bank1
  4645  0293  0841               	movf	(sprintf@fval+3)^(0+128),w
  4646  0294  00F3               	movwf	___fleq@ff1+3
  4647  0295  0840               	movf	(sprintf@fval+2)^(0+128),w
  4648  0296  00F2               	movwf	___fleq@ff1+2
  4649  0297  083F               	movf	(sprintf@fval+1)^(0+128),w
  4650  0298  00F1               	movwf	___fleq@ff1+1
  4651  0299  083E               	movf	sprintf@fval^(0+128),w
  4652  029A  00F0               	movwf	___fleq@ff1
  4653  029B  3000               	movlw	0
  4654  029C  00F7               	movwf	___fleq@ff2+3
  4655  029D  3000               	movlw	0
  4656  029E  00F6               	movwf	___fleq@ff2+2
  4657  029F  3000               	movlw	0
  4658  02A0  00F5               	movwf	___fleq@ff2+1
  4659  02A1  3000               	movlw	0
  4660  02A2  00F4               	movwf	___fleq@ff2
  4661  02A3  160A  158A  2310  120A  118A  	fcall	___fleq
  4662  02A8  1803               	btfsc	3,0
  4663  02A9  2AAB               	goto	u546_21
  4664  02AA  2AAC               	goto	u546_20
  4665  02AB                     u546_21:
  4666  02AB  2B54               	goto	i1l3672
  4667  02AC                     u546_20:
  4668  02AC                     i1l3654:
  4669  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  4670  02AD  1303               	bcf	3,6	;RP1=0, select bank1
  4671  02AE  0841               	movf	(sprintf@fval+3)^(0+128),w
  4672  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  4673  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  4674  02B1  00D4               	movwf	___fltol@f1+3
  4675  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  4676  02B3  1303               	bcf	3,6	;RP1=0, select bank1
  4677  02B4  0840               	movf	(sprintf@fval+2)^(0+128),w
  4678  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  4679  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  4680  02B7  00D3               	movwf	___fltol@f1+2
  4681  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  4682  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  4683  02BA  083F               	movf	(sprintf@fval+1)^(0+128),w
  4684  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  4685  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  4686  02BD  00D2               	movwf	___fltol@f1+1
  4687  02BE  1683               	bsf	3,5	;RP0=1, select bank1
  4688  02BF  1303               	bcf	3,6	;RP1=0, select bank1
  4689  02C0  083E               	movf	sprintf@fval^(0+128),w
  4690  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  4691  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  4692  02C3  00D1               	movwf	___fltol@f1
  4693  02C4  160A  158A  258B  120A  118A  	fcall	___fltol
  4694  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  4695  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  4696  02CB  0854               	movf	?___fltol+3,w
  4697  02CC  0453               	iorwf	?___fltol+2,w
  4698  02CD  0452               	iorwf	?___fltol+1,w
  4699  02CE  0451               	iorwf	?___fltol,w
  4700  02CF  1D03               	skipz
  4701  02D0  2AD2               	goto	u547_21
  4702  02D1  2AD3               	goto	u547_20
  4703  02D2                     u547_21:
  4704  02D2  2B54               	goto	i1l3672
  4705  02D3                     u547_20:
  4706  02D3                     i1l3656:
  4707  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  4708  02D4  1303               	bcf	3,6	;RP1=0, select bank1
  4709  02D5  0836               	movf	(sprintf@eexp+1)^(0+128),w
  4710  02D6  3A80               	xorlw	128
  4711  02D7  00FF               	movwf	btemp+1
  4712  02D8  3080               	movlw	128
  4713  02D9  027F               	subwf	btemp+1,w
  4714  02DA  1D03               	skipz
  4715  02DB  2ADE               	goto	u548_25
  4716  02DC  3002               	movlw	2
  4717  02DD  0235               	subwf	sprintf@eexp^(0+128),w
  4718  02DE                     u548_25:
  4719  02DE  1C03               	skipc
  4720  02DF  2AE1               	goto	u548_21
  4721  02E0  2AE2               	goto	u548_20
  4722  02E1                     u548_21:
  4723  02E1  2B54               	goto	i1l3672
  4724  02E2                     u548_20:
  4725  02E2                     i1l3658:
  4726                           
  4727                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  4728  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  4729  02E3  1303               	bcf	3,6	;RP1=0, select bank1
  4730  02E4  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  4731  02E5  00F3               	movwf	___flge@ff1+3
  4732  02E6  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  4733  02E7  00F2               	movwf	___flge@ff1+2
  4734  02E8  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  4735  02E9  00F1               	movwf	___flge@ff1+1
  4736  02EA  0837               	movf	sprintf@tmpval^(0+128),w
  4737  02EB  00F0               	movwf	___flge@ff1
  4738  02EC  3040               	movlw	64
  4739  02ED  00F7               	movwf	___flge@ff2+3
  4740  02EE  3089               	movlw	137
  4741  02EF  00F6               	movwf	___flge@ff2+2
  4742  02F0  3070               	movlw	112
  4743  02F1  00F5               	movwf	___flge@ff2+1
  4744  02F2  305F               	movlw	95
  4745  02F3  00F4               	movwf	___flge@ff2
  4746  02F4  160A  158A  26A4  120A  118A  	fcall	___flge
  4747  02F9  1803               	btfsc	3,0
  4748  02FA  2AFC               	goto	u549_21
  4749  02FB  2AFD               	goto	u549_20
  4750  02FC                     u549_21:
  4751  02FC  2B06               	goto	i1l3662
  4752  02FD                     u549_20:
  4753  02FD                     i1l3660:
  4754                           
  4755                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  4756  02FD  30F7               	movlw	247
  4757  02FE  1683               	bsf	3,5	;RP0=1, select bank1
  4758  02FF  1303               	bcf	3,6	;RP1=0, select bank1
  4759  0300  07B5               	addwf	sprintf@eexp^(0+128),f
  4760  0301  1803               	skipnc
  4761  0302  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  4762  0303  30FF               	movlw	255
  4763  0304  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  4764                           
  4765                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  4766  0305  2B0E               	goto	i1l3664
  4767  0306                     i1l3662:
  4768                           
  4769                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  4770  0306  30F8               	movlw	248
  4771  0307  1683               	bsf	3,5	;RP0=1, select bank1
  4772  0308  1303               	bcf	3,6	;RP1=0, select bank1
  4773  0309  07B5               	addwf	sprintf@eexp^(0+128),f
  4774  030A  1803               	skipnc
  4775  030B  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  4776  030C  30FF               	movlw	255
  4777  030D  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  4778  030E                     i1l3664:
  4779                           
  4780                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  4781  030E  0835               	movf	sprintf@eexp^(0+128),w
  4782  030F  120A  158A  2140  120A  118A  	fcall	_scale
  4783  0314  1283               	bcf	3,5	;RP0=0, select bank0
  4784  0315  1303               	bcf	3,6	;RP1=0, select bank0
  4785  0316  0841               	movf	?_scale+3,w
  4786  0317  1683               	bsf	3,5	;RP0=1, select bank1
  4787  0318  1303               	bcf	3,6	;RP1=0, select bank1
  4788  0319  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  4789  031A  1283               	bcf	3,5	;RP0=0, select bank0
  4790  031B  1303               	bcf	3,6	;RP1=0, select bank0
  4791  031C  0840               	movf	?_scale+2,w
  4792  031D  1683               	bsf	3,5	;RP0=1, select bank1
  4793  031E  1303               	bcf	3,6	;RP1=0, select bank1
  4794  031F  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  4795  0320  1283               	bcf	3,5	;RP0=0, select bank0
  4796  0321  1303               	bcf	3,6	;RP1=0, select bank0
  4797  0322  083F               	movf	?_scale+1,w
  4798  0323  1683               	bsf	3,5	;RP0=1, select bank1
  4799  0324  1303               	bcf	3,6	;RP1=0, select bank1
  4800  0325  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  4801  0326  1283               	bcf	3,5	;RP0=0, select bank0
  4802  0327  1303               	bcf	3,6	;RP1=0, select bank0
  4803  0328  083E               	movf	?_scale,w
  4804  0329  1683               	bsf	3,5	;RP0=1, select bank1
  4805  032A  1303               	bcf	3,6	;RP1=0, select bank1
  4806  032B  00B7               	movwf	sprintf@tmpval^(0+128)
  4807  032C                     i1l3666:
  4808  032C  0841               	movf	(sprintf@fval+3)^(0+128),w
  4809  032D  00F3               	movwf	__div_to_l_@f1+3
  4810  032E  0840               	movf	(sprintf@fval+2)^(0+128),w
  4811  032F  00F2               	movwf	__div_to_l_@f1+2
  4812  0330  083F               	movf	(sprintf@fval+1)^(0+128),w
  4813  0331  00F1               	movwf	__div_to_l_@f1+1
  4814  0332  083E               	movf	sprintf@fval^(0+128),w
  4815  0333  00F0               	movwf	__div_to_l_@f1
  4816  0334  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  4817  0335  00F7               	movwf	__div_to_l_@f2+3
  4818  0336  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  4819  0337  00F6               	movwf	__div_to_l_@f2+2
  4820  0338  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  4821  0339  00F5               	movwf	__div_to_l_@f2+1
  4822  033A  0837               	movf	sprintf@tmpval^(0+128),w
  4823  033B  00F4               	movwf	__div_to_l_@f2
  4824  033C  160A  118A  20D2  120A  118A  	fcall	__div_to_l_
  4825  0341  0873               	movf	?__div_to_l_+3,w
  4826  0342  1683               	bsf	3,5	;RP0=1, select bank1
  4827  0343  1303               	bcf	3,6	;RP1=0, select bank1
  4828  0344  00B4               	movwf	(sprintf@val+3)^(0+128)
  4829  0345  0872               	movf	?__div_to_l_+2,w
  4830  0346  00B3               	movwf	(sprintf@val+2)^(0+128)
  4831  0347  0871               	movf	?__div_to_l_+1,w
  4832  0348  00B2               	movwf	(sprintf@val+1)^(0+128)
  4833  0349  0870               	movf	?__div_to_l_,w
  4834  034A  00B1               	movwf	sprintf@val^(0+128)
  4835  034B                     i1l3670:
  4836                           
  4837                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  4838  034B  3000               	movlw	0
  4839  034C  00C1               	movwf	(sprintf@fval+3)^(0+128)
  4840  034D  3000               	movlw	0
  4841  034E  00C0               	movwf	(sprintf@fval+2)^(0+128)
  4842  034F  3000               	movlw	0
  4843  0350  00BF               	movwf	(sprintf@fval+1)^(0+128)
  4844  0351  3000               	movlw	0
  4845  0352  00BE               	movwf	sprintf@fval^(0+128)
  4846                           
  4847                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  4848  0353  2BD8               	goto	i1l3678
  4849  0354                     i1l3672:
  4850                           
  4851                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  4852  0354  1683               	bsf	3,5	;RP0=1, select bank1
  4853  0355  1303               	bcf	3,6	;RP1=0, select bank1
  4854  0356  0841               	movf	(sprintf@fval+3)^(0+128),w
  4855  0357  1283               	bcf	3,5	;RP0=0, select bank0
  4856  0358  1303               	bcf	3,6	;RP1=0, select bank0
  4857  0359  00D4               	movwf	___fltol@f1+3
  4858  035A  1683               	bsf	3,5	;RP0=1, select bank1
  4859  035B  1303               	bcf	3,6	;RP1=0, select bank1
  4860  035C  0840               	movf	(sprintf@fval+2)^(0+128),w
  4861  035D  1283               	bcf	3,5	;RP0=0, select bank0
  4862  035E  1303               	bcf	3,6	;RP1=0, select bank0
  4863  035F  00D3               	movwf	___fltol@f1+2
  4864  0360  1683               	bsf	3,5	;RP0=1, select bank1
  4865  0361  1303               	bcf	3,6	;RP1=0, select bank1
  4866  0362  083F               	movf	(sprintf@fval+1)^(0+128),w
  4867  0363  1283               	bcf	3,5	;RP0=0, select bank0
  4868  0364  1303               	bcf	3,6	;RP1=0, select bank0
  4869  0365  00D2               	movwf	___fltol@f1+1
  4870  0366  1683               	bsf	3,5	;RP0=1, select bank1
  4871  0367  1303               	bcf	3,6	;RP1=0, select bank1
  4872  0368  083E               	movf	sprintf@fval^(0+128),w
  4873  0369  1283               	bcf	3,5	;RP0=0, select bank0
  4874  036A  1303               	bcf	3,6	;RP1=0, select bank0
  4875  036B  00D1               	movwf	___fltol@f1
  4876  036C  160A  158A  258B  120A  118A  	fcall	___fltol
  4877  0371  1283               	bcf	3,5	;RP0=0, select bank0
  4878  0372  1303               	bcf	3,6	;RP1=0, select bank0
  4879  0373  0854               	movf	?___fltol+3,w
  4880  0374  1683               	bsf	3,5	;RP0=1, select bank1
  4881  0375  1303               	bcf	3,6	;RP1=0, select bank1
  4882  0376  00B4               	movwf	(sprintf@val+3)^(0+128)
  4883  0377  1283               	bcf	3,5	;RP0=0, select bank0
  4884  0378  1303               	bcf	3,6	;RP1=0, select bank0
  4885  0379  0853               	movf	?___fltol+2,w
  4886  037A  1683               	bsf	3,5	;RP0=1, select bank1
  4887  037B  1303               	bcf	3,6	;RP1=0, select bank1
  4888  037C  00B3               	movwf	(sprintf@val+2)^(0+128)
  4889  037D  1283               	bcf	3,5	;RP0=0, select bank0
  4890  037E  1303               	bcf	3,6	;RP1=0, select bank0
  4891  037F  0852               	movf	?___fltol+1,w
  4892  0380  1683               	bsf	3,5	;RP0=1, select bank1
  4893  0381  1303               	bcf	3,6	;RP1=0, select bank1
  4894  0382  00B2               	movwf	(sprintf@val+1)^(0+128)
  4895  0383  1283               	bcf	3,5	;RP0=0, select bank0
  4896  0384  1303               	bcf	3,6	;RP1=0, select bank0
  4897  0385  0851               	movf	?___fltol,w
  4898  0386  1683               	bsf	3,5	;RP0=1, select bank1
  4899  0387  1303               	bcf	3,6	;RP1=0, select bank1
  4900  0388  00B1               	movwf	sprintf@val^(0+128)
  4901  0389                     i1l3674:
  4902                           
  4903                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  4904  0389  0834               	movf	(sprintf@val+3)^(0+128),w
  4905  038A  00F3               	movwf	___xxtofl@val+3
  4906  038B  0833               	movf	(sprintf@val+2)^(0+128),w
  4907  038C  00F2               	movwf	___xxtofl@val+2
  4908  038D  0832               	movf	(sprintf@val+1)^(0+128),w
  4909  038E  00F1               	movwf	___xxtofl@val+1
  4910  038F  0831               	movf	sprintf@val^(0+128),w
  4911  0390  00F0               	movwf	___xxtofl@val
  4912  0391  3000               	movlw	0
  4913  0392  160A  158A  2746  120A  118A  	fcall	___xxtofl
  4914  0397  0873               	movf	?___xxtofl+3,w
  4915  0398  1283               	bcf	3,5	;RP0=0, select bank0
  4916  0399  1303               	bcf	3,6	;RP1=0, select bank0
  4917  039A  00E9               	movwf	___flsub@a+3
  4918  039B  0872               	movf	?___xxtofl+2,w
  4919  039C  00E8               	movwf	___flsub@a+2
  4920  039D  0871               	movf	?___xxtofl+1,w
  4921  039E  00E7               	movwf	___flsub@a+1
  4922  039F  0870               	movf	?___xxtofl,w
  4923  03A0  00E6               	movwf	___flsub@a
  4924  03A1  1683               	bsf	3,5	;RP0=1, select bank1
  4925  03A2  1303               	bcf	3,6	;RP1=0, select bank1
  4926  03A3  0841               	movf	(sprintf@fval+3)^(0+128),w
  4927  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  4928  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  4929  03A6  00ED               	movwf	___flsub@b+3
  4930  03A7  1683               	bsf	3,5	;RP0=1, select bank1
  4931  03A8  1303               	bcf	3,6	;RP1=0, select bank1
  4932  03A9  0840               	movf	(sprintf@fval+2)^(0+128),w
  4933  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  4934  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  4935  03AC  00EC               	movwf	___flsub@b+2
  4936  03AD  1683               	bsf	3,5	;RP0=1, select bank1
  4937  03AE  1303               	bcf	3,6	;RP1=0, select bank1
  4938  03AF  083F               	movf	(sprintf@fval+1)^(0+128),w
  4939  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  4940  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  4941  03B2  00EB               	movwf	___flsub@b+1
  4942  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  4943  03B4  1303               	bcf	3,6	;RP1=0, select bank1
  4944  03B5  083E               	movf	sprintf@fval^(0+128),w
  4945  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  4946  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  4947  03B8  00EA               	movwf	___flsub@b
  4948  03B9  160A  158A  21E0  120A  118A  	fcall	___flsub
  4949  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  4950  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  4951  03C0  0869               	movf	?___flsub+3,w
  4952  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  4953  03C2  1303               	bcf	3,6	;RP1=0, select bank1
  4954  03C3  00C1               	movwf	(sprintf@fval+3)^(0+128)
  4955  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  4956  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  4957  03C6  0868               	movf	?___flsub+2,w
  4958  03C7  1683               	bsf	3,5	;RP0=1, select bank1
  4959  03C8  1303               	bcf	3,6	;RP1=0, select bank1
  4960  03C9  00C0               	movwf	(sprintf@fval+2)^(0+128)
  4961  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  4962  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  4963  03CC  0867               	movf	?___flsub+1,w
  4964  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  4965  03CE  1303               	bcf	3,6	;RP1=0, select bank1
  4966  03CF  00BF               	movwf	(sprintf@fval+1)^(0+128)
  4967  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  4968  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  4969  03D2  0866               	movf	?___flsub,w
  4970  03D3  1683               	bsf	3,5	;RP0=1, select bank1
  4971  03D4  1303               	bcf	3,6	;RP1=0, select bank1
  4972  03D5  00BE               	movwf	sprintf@fval^(0+128)
  4973  03D6                     i1l3676:
  4974                           
  4975                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  4976  03D6  01B5               	clrf	sprintf@eexp^(0+128)
  4977  03D7  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  4978  03D8                     i1l3678:
  4979                           
  4980                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  4981  03D8  01C2               	clrf	sprintf@c^(0+128)
  4982  03D9  0AC2               	incf	sprintf@c^(0+128),f
  4983  03DA                     i1l3684:
  4984                           
  4985                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  4986  03DA  0842               	movf	sprintf@c^(0+128),w
  4987  03DB  00A5               	movwf	??_sprintf^(0+128)
  4988  03DC  3001               	movlw	1
  4989  03DD                     u550_25:
  4990  03DD  1003               	clrc
  4991  03DE  0DA5               	rlf	??_sprintf^(0+128),f
  4992  03DF  3EFF               	addlw	-1
  4993  03E0  1D03               	skipz
  4994  03E1  2BDD               	goto	u550_25
  4995  03E2  1003               	clrc
  4996  03E3  0D25               	rlf	??_sprintf^(0+128),w
  4997  03E4  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4998  03E5  0084               	movwf	4
  4999  03E6  160A  158A  200A  120A  118A  	fcall	stringdir
  5000  03EB  00A6               	movwf	(??_sprintf+1)^(0+128)
  5001  03EC  160A  158A  200A  120A  118A  	fcall	stringdir
  5002  03F1  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  5003  03F2  160A  158A  200A  120A  118A  	fcall	stringdir
  5004  03F7  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  5005  03F8  160A  158A  200A  120A  118A  	fcall	stringdir
  5006  03FD  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  5007  03FE  0829               	movf	(??_sprintf+4)^(0+128),w
  5008  03FF  0234               	subwf	(sprintf@val+3)^(0+128),w
  5009  0400  1D03               	skipz
  5010  0401  2C0C               	goto	u551_25
  5011  0402  0828               	movf	(??_sprintf+3)^(0+128),w
  5012  0403  0233               	subwf	(sprintf@val+2)^(0+128),w
  5013  0404  1D03               	skipz
  5014  0405  2C0C               	goto	u551_25
  5015  0406  0827               	movf	(??_sprintf+2)^(0+128),w
  5016  0407  0232               	subwf	(sprintf@val+1)^(0+128),w
  5017  0408  1D03               	skipz
  5018  0409  2C0C               	goto	u551_25
  5019  040A  0826               	movf	(??_sprintf+1)^(0+128),w
  5020  040B  0231               	subwf	sprintf@val^(0+128),w
  5021  040C                     u551_25:
  5022  040C  1803               	skipnc
  5023  040D  2C0F               	goto	u551_21
  5024  040E  2C10               	goto	u551_20
  5025  040F                     u551_21:
  5026  040F  2C11               	goto	i1l3688
  5027  0410                     u551_20:
  5028  0410  2C1B               	goto	i1l3690
  5029  0411                     i1l3688:
  5030  0411  3001               	movlw	1
  5031  0412  00A5               	movwf	??_sprintf^(0+128)
  5032  0413  0825               	movf	??_sprintf^(0+128),w
  5033  0414  07C2               	addwf	sprintf@c^(0+128),f
  5034  0415  300A               	movlw	10
  5035  0416  0642               	xorwf	sprintf@c^(0+128),w
  5036  0417  1D03               	btfss	3,2
  5037  0418  2C1A               	goto	u552_21
  5038  0419  2C1B               	goto	u552_20
  5039  041A                     u552_21:
  5040  041A  2BDA               	goto	i1l3684
  5041  041B                     u552_20:
  5042  041B                     i1l3690:
  5043                           
  5044                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  5045  041B  3003               	movlw	3
  5046  041C  052F               	andwf	sprintf@flag^(0+128),w
  5047  041D  00A5               	movwf	??_sprintf^(0+128)
  5048  041E  3000               	movlw	0
  5049  041F  0530               	andwf	(sprintf@flag+1)^(0+128),w
  5050  0420  00A6               	movwf	(??_sprintf+1)^(0+128)
  5051  0421  0825               	movf	??_sprintf^(0+128),w
  5052  0422  0426               	iorwf	(??_sprintf^(0+128)+1),w
  5053  0423  1903               	btfsc	3,2
  5054  0424  2C26               	goto	u553_21
  5055  0425  2C27               	goto	u553_20
  5056  0426                     u553_21:
  5057  0426  2C99               	goto	i1l340
  5058  0427                     u553_20:
  5059  0427                     i1l3692:
  5060                           
  5061                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  5062  0427  302D               	movlw	45
  5063  0428  00A5               	movwf	??_sprintf^(0+128)
  5064  0429  083B               	movf	sprintf@sp^(0+128),w
  5065  042A  0084               	movwf	4
  5066  042B  0825               	movf	??_sprintf^(0+128),w
  5067  042C  1783               	bsf	3,7	;select IRP bank2
  5068  042D  0080               	movwf	0
  5069  042E                     i1l3694:
  5070  042E  3001               	movlw	1
  5071  042F  00A5               	movwf	??_sprintf^(0+128)
  5072  0430  0825               	movf	??_sprintf^(0+128),w
  5073  0431  07BB               	addwf	sprintf@sp^(0+128),f
  5074  0432  2C99               	goto	i1l340
  5075  0433                     i1l3696:
  5076                           
  5077                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  5078  0433  0842               	movf	sprintf@c^(0+128),w
  5079  0434  00A5               	movwf	??_sprintf^(0+128)
  5080  0435  3001               	movlw	1
  5081  0436                     u554_25:
  5082  0436  1003               	clrc
  5083  0437  0DA5               	rlf	??_sprintf^(0+128),f
  5084  0438  3EFF               	addlw	-1
  5085  0439  1D03               	skipz
  5086  043A  2C36               	goto	u554_25
  5087  043B  1003               	clrc
  5088  043C  0D25               	rlf	??_sprintf^(0+128),w
  5089  043D  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  5090  043E  0084               	movwf	4
  5091  043F  160A  158A  200A  120A  118A  	fcall	stringdir
  5092  0444  00F0               	movwf	___lldiv@divisor
  5093  0445  160A  158A  200A  120A  118A  	fcall	stringdir
  5094  044A  00F1               	movwf	___lldiv@divisor+1
  5095  044B  160A  158A  200A  120A  118A  	fcall	stringdir
  5096  0450  00F2               	movwf	___lldiv@divisor+2
  5097  0451  160A  158A  200A  120A  118A  	fcall	stringdir
  5098  0456  00F3               	movwf	___lldiv@divisor+3
  5099  0457  0834               	movf	(sprintf@val+3)^(0+128),w
  5100  0458  00F7               	movwf	___lldiv@dividend+3
  5101  0459  0833               	movf	(sprintf@val+2)^(0+128),w
  5102  045A  00F6               	movwf	___lldiv@dividend+2
  5103  045B  0832               	movf	(sprintf@val+1)^(0+128),w
  5104  045C  00F5               	movwf	___lldiv@dividend+1
  5105  045D  0831               	movf	sprintf@val^(0+128),w
  5106  045E  00F4               	movwf	___lldiv@dividend
  5107  045F  160A  158A  24BC  120A  118A  	fcall	___lldiv
  5108  0464  0873               	movf	?___lldiv+3,w
  5109  0465  1683               	bsf	3,5	;RP0=1, select bank1
  5110  0466  1303               	bcf	3,6	;RP1=0, select bank1
  5111  0467  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  5112  0468  0872               	movf	?___lldiv+2,w
  5113  0469  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  5114  046A  0871               	movf	?___lldiv+1,w
  5115  046B  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  5116  046C  0870               	movf	?___lldiv,w
  5117  046D  00B7               	movwf	sprintf@tmpval^(0+128)
  5118  046E                     i1l3698:
  5119                           
  5120                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  5121  046E  3000               	movlw	0
  5122  046F  00F3               	movwf	___llmod@divisor+3
  5123  0470  3000               	movlw	0
  5124  0471  00F2               	movwf	___llmod@divisor+2
  5125  0472  3000               	movlw	0
  5126  0473  00F1               	movwf	___llmod@divisor+1
  5127  0474  300A               	movlw	10
  5128  0475  00F0               	movwf	___llmod@divisor
  5129  0476  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  5130  0477  00F7               	movwf	___llmod@dividend+3
  5131  0478  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  5132  0479  00F6               	movwf	___llmod@dividend+2
  5133  047A  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  5134  047B  00F5               	movwf	___llmod@dividend+1
  5135  047C  0837               	movf	sprintf@tmpval^(0+128),w
  5136  047D  00F4               	movwf	___llmod@dividend
  5137  047E  160A  158A  235E  120A  118A  	fcall	___llmod
  5138  0483  0873               	movf	?___llmod+3,w
  5139  0484  1683               	bsf	3,5	;RP0=1, select bank1
  5140  0485  1303               	bcf	3,6	;RP1=0, select bank1
  5141  0486  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  5142  0487  0872               	movf	?___llmod+2,w
  5143  0488  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  5144  0489  0871               	movf	?___llmod+1,w
  5145  048A  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  5146  048B  0870               	movf	?___llmod,w
  5147  048C  00B7               	movwf	sprintf@tmpval^(0+128)
  5148  048D                     i1l3700:
  5149                           
  5150                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  5151  048D  0837               	movf	sprintf@tmpval^(0+128),w
  5152  048E  3E30               	addlw	48
  5153  048F  00A5               	movwf	??_sprintf^(0+128)
  5154  0490  083B               	movf	sprintf@sp^(0+128),w
  5155  0491  0084               	movwf	4
  5156  0492  0825               	movf	??_sprintf^(0+128),w
  5157  0493  1783               	bsf	3,7	;select IRP bank2
  5158  0494  0080               	movwf	0
  5159  0495  3001               	movlw	1
  5160  0496  00A5               	movwf	??_sprintf^(0+128)
  5161  0497  0825               	movf	??_sprintf^(0+128),w
  5162  0498  07BB               	addwf	sprintf@sp^(0+128),f
  5163  0499                     i1l340:	
  5164                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  5165                           
  5166                           
  5167                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  5168  0499  3001               	movlw	1
  5169  049A  02C2               	subwf	sprintf@c^(0+128),f
  5170  049B  0A42               	incf	sprintf@c^(0+128),w
  5171  049C  1D03               	btfss	3,2
  5172  049D  2C9F               	goto	u555_21
  5173  049E  2CA0               	goto	u555_20
  5174  049F                     u555_21:
  5175  049F  2C33               	goto	i1l3696
  5176  04A0                     u555_20:
  5177  04A0  2CB4               	goto	i1l3708
  5178  04A1                     i1l3702:
  5179                           
  5180                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  5181  04A1  3030               	movlw	48
  5182  04A2  1683               	bsf	3,5	;RP0=1, select bank1
  5183  04A3  1303               	bcf	3,6	;RP1=0, select bank1
  5184  04A4  00A5               	movwf	??_sprintf^(0+128)
  5185  04A5  083B               	movf	sprintf@sp^(0+128),w
  5186  04A6  0084               	movwf	4
  5187  04A7  0825               	movf	??_sprintf^(0+128),w
  5188  04A8  1783               	bsf	3,7	;select IRP bank2
  5189  04A9  0080               	movwf	0
  5190  04AA                     i1l3704:
  5191  04AA  3001               	movlw	1
  5192  04AB  00A5               	movwf	??_sprintf^(0+128)
  5193  04AC  0825               	movf	??_sprintf^(0+128),w
  5194  04AD  07BB               	addwf	sprintf@sp^(0+128),f
  5195  04AE                     i1l3706:
  5196                           
  5197                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  5198  04AE  30FF               	movlw	255
  5199  04AF  07B5               	addwf	sprintf@eexp^(0+128),f
  5200  04B0  1803               	skipnc
  5201  04B1  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  5202  04B2  30FF               	movlw	255
  5203  04B3  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  5204  04B4                     i1l3708:
  5205                           
  5206                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  5207  04B4  0836               	movf	(sprintf@eexp+1)^(0+128),w
  5208  04B5  3A80               	xorlw	128
  5209  04B6  00FF               	movwf	btemp+1
  5210  04B7  3080               	movlw	128
  5211  04B8  027F               	subwf	btemp+1,w
  5212  04B9  1D03               	skipz
  5213  04BA  2CBD               	goto	u556_25
  5214  04BB  3001               	movlw	1
  5215  04BC  0235               	subwf	sprintf@eexp^(0+128),w
  5216  04BD                     u556_25:
  5217  04BD  1803               	skipnc
  5218  04BE  2CC0               	goto	u556_21
  5219  04BF  2CC1               	goto	u556_20
  5220  04C0                     u556_21:
  5221  04C0  2CA1               	goto	i1l3702
  5222  04C1                     u556_20:
  5223  04C1                     i1l3710:
  5224                           
  5225                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  5226  04C1  1683               	bsf	3,5	;RP0=1, select bank1
  5227  04C2  1303               	bcf	3,6	;RP1=0, select bank1
  5228  04C3  083D               	movf	(sprintf@prec+1)^(0+128),w
  5229  04C4  3A80               	xorlw	128
  5230  04C5  00FF               	movwf	btemp+1
  5231  04C6  3080               	movlw	128
  5232  04C7  027F               	subwf	btemp+1,w
  5233  04C8  1D03               	skipz
  5234  04C9  2CCC               	goto	u557_25
  5235  04CA  3009               	movlw	9
  5236  04CB  023C               	subwf	sprintf@prec^(0+128),w
  5237  04CC                     u557_25:
  5238  04CC  1C03               	skipc
  5239  04CD  2CCF               	goto	u557_21
  5240  04CE  2CD0               	goto	u557_20
  5241  04CF                     u557_21:
  5242  04CF  2CD7               	goto	i1l3714
  5243  04D0                     u557_20:
  5244  04D0                     i1l3712:
  5245                           
  5246                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  5247  04D0  3008               	movlw	8
  5248  04D1  1683               	bsf	3,5	;RP0=1, select bank1
  5249  04D2  1303               	bcf	3,6	;RP1=0, select bank1
  5250  04D3  00A5               	movwf	??_sprintf^(0+128)
  5251  04D4  0825               	movf	??_sprintf^(0+128),w
  5252  04D5  00C2               	movwf	sprintf@c^(0+128)
  5253  04D6  2CDD               	goto	i1l347
  5254  04D7                     i1l3714:
  5255                           
  5256                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  5257  04D7  1683               	bsf	3,5	;RP0=1, select bank1
  5258  04D8  1303               	bcf	3,6	;RP1=0, select bank1
  5259  04D9  083C               	movf	sprintf@prec^(0+128),w
  5260  04DA  00A5               	movwf	??_sprintf^(0+128)
  5261  04DB  0825               	movf	??_sprintf^(0+128),w
  5262  04DC  00C2               	movwf	sprintf@c^(0+128)
  5263  04DD                     i1l347:
  5264                           
  5265                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  5266  04DD  0842               	movf	sprintf@c^(0+128),w
  5267  04DE  00A5               	movwf	??_sprintf^(0+128)
  5268  04DF  01A6               	clrf	(??_sprintf^(0+128)+1)
  5269  04E0  0825               	movf	??_sprintf^(0+128),w
  5270  04E1  02BC               	subwf	sprintf@prec^(0+128),f
  5271  04E2  0826               	movf	(??_sprintf+1)^(0+128),w
  5272  04E3  1C03               	skipc
  5273  04E4  03BD               	decf	(sprintf@prec+1)^(0+128),f
  5274  04E5  02BD               	subwf	(sprintf@prec+1)^(0+128),f
  5275  04E6                     i1l3716:
  5276                           
  5277                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  5278  04E6  0842               	movf	sprintf@c^(0+128),w
  5279  04E7  1903               	btfsc	3,2
  5280  04E8  2CEA               	goto	u558_21
  5281  04E9  2CEB               	goto	u558_20
  5282  04EA                     u558_21:
  5283  04EA  2CF6               	goto	i1l3722
  5284  04EB                     u558_20:
  5285  04EB                     i1l3718:
  5286                           
  5287                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  5288  04EB  302E               	movlw	46
  5289  04EC  00A5               	movwf	??_sprintf^(0+128)
  5290  04ED  083B               	movf	sprintf@sp^(0+128),w
  5291  04EE  0084               	movwf	4
  5292  04EF  0825               	movf	??_sprintf^(0+128),w
  5293  04F0  1783               	bsf	3,7	;select IRP bank2
  5294  04F1  0080               	movwf	0
  5295  04F2                     i1l3720:
  5296  04F2  3001               	movlw	1
  5297  04F3  00A5               	movwf	??_sprintf^(0+128)
  5298  04F4  0825               	movf	??_sprintf^(0+128),w
  5299  04F5  07BB               	addwf	sprintf@sp^(0+128),f
  5300  04F6                     i1l3722:
  5301                           
  5302                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  5303  04F6  0842               	movf	sprintf@c^(0+128),w
  5304  04F7  120A  158A  2140  120A  118A  	fcall	_scale
  5305  04FC  1283               	bcf	3,5	;RP0=0, select bank0
  5306  04FD  1303               	bcf	3,6	;RP1=0, select bank0
  5307  04FE  0841               	movf	?_scale+3,w
  5308  04FF  1683               	bsf	3,5	;RP0=1, select bank1
  5309  0500  1303               	bcf	3,6	;RP1=0, select bank1
  5310  0501  00AD               	movwf	(_sprintf$1207+3)^(0+128)
  5311  0502  1283               	bcf	3,5	;RP0=0, select bank0
  5312  0503  1303               	bcf	3,6	;RP1=0, select bank0
  5313  0504  0840               	movf	?_scale+2,w
  5314  0505  1683               	bsf	3,5	;RP0=1, select bank1
  5315  0506  1303               	bcf	3,6	;RP1=0, select bank1
  5316  0507  00AC               	movwf	(_sprintf$1207+2)^(0+128)
  5317  0508  1283               	bcf	3,5	;RP0=0, select bank0
  5318  0509  1303               	bcf	3,6	;RP1=0, select bank0
  5319  050A  083F               	movf	?_scale+1,w
  5320  050B  1683               	bsf	3,5	;RP0=1, select bank1
  5321  050C  1303               	bcf	3,6	;RP1=0, select bank1
  5322  050D  00AB               	movwf	(_sprintf$1207+1)^(0+128)
  5323  050E  1283               	bcf	3,5	;RP0=0, select bank0
  5324  050F  1303               	bcf	3,6	;RP1=0, select bank0
  5325  0510  083E               	movf	?_scale,w
  5326  0511  1683               	bsf	3,5	;RP0=1, select bank1
  5327  0512  1303               	bcf	3,6	;RP1=0, select bank1
  5328  0513  00AA               	movwf	_sprintf$1207^(0+128)
  5329  0514                     i1l3724:
  5330                           
  5331                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  5332  0514  082D               	movf	(_sprintf$1207+3)^(0+128),w
  5333  0515  1283               	bcf	3,5	;RP0=0, select bank0
  5334  0516  1303               	bcf	3,6	;RP1=0, select bank0
  5335  0517  00AB               	movwf	___flmul@a+3
  5336  0518  1683               	bsf	3,5	;RP0=1, select bank1
  5337  0519  1303               	bcf	3,6	;RP1=0, select bank1
  5338  051A  082C               	movf	(_sprintf$1207+2)^(0+128),w
  5339  051B  1283               	bcf	3,5	;RP0=0, select bank0
  5340  051C  1303               	bcf	3,6	;RP1=0, select bank0
  5341  051D  00AA               	movwf	___flmul@a+2
  5342  051E  1683               	bsf	3,5	;RP0=1, select bank1
  5343  051F  1303               	bcf	3,6	;RP1=0, select bank1
  5344  0520  082B               	movf	(_sprintf$1207+1)^(0+128),w
  5345  0521  1283               	bcf	3,5	;RP0=0, select bank0
  5346  0522  1303               	bcf	3,6	;RP1=0, select bank0
  5347  0523  00A9               	movwf	___flmul@a+1
  5348  0524  1683               	bsf	3,5	;RP0=1, select bank1
  5349  0525  1303               	bcf	3,6	;RP1=0, select bank1
  5350  0526  082A               	movf	_sprintf$1207^(0+128),w
  5351  0527  1283               	bcf	3,5	;RP0=0, select bank0
  5352  0528  1303               	bcf	3,6	;RP1=0, select bank0
  5353  0529  00A8               	movwf	___flmul@a
  5354  052A  1683               	bsf	3,5	;RP0=1, select bank1
  5355  052B  1303               	bcf	3,6	;RP1=0, select bank1
  5356  052C  0841               	movf	(sprintf@fval+3)^(0+128),w
  5357  052D  1283               	bcf	3,5	;RP0=0, select bank0
  5358  052E  1303               	bcf	3,6	;RP1=0, select bank0
  5359  052F  00A7               	movwf	___flmul@b+3
  5360  0530  1683               	bsf	3,5	;RP0=1, select bank1
  5361  0531  1303               	bcf	3,6	;RP1=0, select bank1
  5362  0532  0840               	movf	(sprintf@fval+2)^(0+128),w
  5363  0533  1283               	bcf	3,5	;RP0=0, select bank0
  5364  0534  1303               	bcf	3,6	;RP1=0, select bank0
  5365  0535  00A6               	movwf	___flmul@b+2
  5366  0536  1683               	bsf	3,5	;RP0=1, select bank1
  5367  0537  1303               	bcf	3,6	;RP1=0, select bank1
  5368  0538  083F               	movf	(sprintf@fval+1)^(0+128),w
  5369  0539  1283               	bcf	3,5	;RP0=0, select bank0
  5370  053A  1303               	bcf	3,6	;RP1=0, select bank0
  5371  053B  00A5               	movwf	___flmul@b+1
  5372  053C  1683               	bsf	3,5	;RP0=1, select bank1
  5373  053D  1303               	bcf	3,6	;RP1=0, select bank1
  5374  053E  083E               	movf	sprintf@fval^(0+128),w
  5375  053F  1283               	bcf	3,5	;RP0=0, select bank0
  5376  0540  1303               	bcf	3,6	;RP1=0, select bank0
  5377  0541  00A4               	movwf	___flmul@b
  5378  0542  120A  158A  249F  120A  118A  	fcall	___flmul
  5379  0547  1283               	bcf	3,5	;RP0=0, select bank0
  5380  0548  1303               	bcf	3,6	;RP1=0, select bank0
  5381  0549  0827               	movf	?___flmul+3,w
  5382  054A  00D4               	movwf	___fltol@f1+3
  5383  054B  0826               	movf	?___flmul+2,w
  5384  054C  00D3               	movwf	___fltol@f1+2
  5385  054D  0825               	movf	?___flmul+1,w
  5386  054E  00D2               	movwf	___fltol@f1+1
  5387  054F  0824               	movf	?___flmul,w
  5388  0550  00D1               	movwf	___fltol@f1
  5389  0551  160A  158A  258B  120A  118A  	fcall	___fltol
  5390  0556  1283               	bcf	3,5	;RP0=0, select bank0
  5391  0557  1303               	bcf	3,6	;RP1=0, select bank0
  5392  0558  0854               	movf	?___fltol+3,w
  5393  0559  1683               	bsf	3,5	;RP0=1, select bank1
  5394  055A  1303               	bcf	3,6	;RP1=0, select bank1
  5395  055B  00B4               	movwf	(sprintf@val+3)^(0+128)
  5396  055C  1283               	bcf	3,5	;RP0=0, select bank0
  5397  055D  1303               	bcf	3,6	;RP1=0, select bank0
  5398  055E  0853               	movf	?___fltol+2,w
  5399  055F  1683               	bsf	3,5	;RP0=1, select bank1
  5400  0560  1303               	bcf	3,6	;RP1=0, select bank1
  5401  0561  00B3               	movwf	(sprintf@val+2)^(0+128)
  5402  0562  1283               	bcf	3,5	;RP0=0, select bank0
  5403  0563  1303               	bcf	3,6	;RP1=0, select bank0
  5404  0564  0852               	movf	?___fltol+1,w
  5405  0565  1683               	bsf	3,5	;RP0=1, select bank1
  5406  0566  1303               	bcf	3,6	;RP1=0, select bank1
  5407  0567  00B2               	movwf	(sprintf@val+1)^(0+128)
  5408  0568  1283               	bcf	3,5	;RP0=0, select bank0
  5409  0569  1303               	bcf	3,6	;RP1=0, select bank0
  5410  056A  0851               	movf	?___fltol,w
  5411  056B  1683               	bsf	3,5	;RP0=1, select bank1
  5412  056C  1303               	bcf	3,6	;RP1=0, select bank1
  5413  056D  00B1               	movwf	sprintf@val^(0+128)
  5414                           
  5415                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  5416  056E  2E10               	goto	i1l3734
  5417  056F                     i1l3726:
  5418                           
  5419                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  5420  056F  0842               	movf	sprintf@c^(0+128),w
  5421  0570  00A5               	movwf	??_sprintf^(0+128)
  5422  0571  3001               	movlw	1
  5423  0572                     u559_25:
  5424  0572  1003               	clrc
  5425  0573  0DA5               	rlf	??_sprintf^(0+128),f
  5426  0574  3EFF               	addlw	-1
  5427  0575  1D03               	skipz
  5428  0576  2D72               	goto	u559_25
  5429  0577  1003               	clrc
  5430  0578  0D25               	rlf	??_sprintf^(0+128),w
  5431  0579  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  5432  057A  0084               	movwf	4
  5433  057B  160A  158A  200A  120A  118A  	fcall	stringdir
  5434  0580  00F0               	movwf	___lldiv@divisor
  5435  0581  160A  158A  200A  120A  118A  	fcall	stringdir
  5436  0586  00F1               	movwf	___lldiv@divisor+1
  5437  0587  160A  158A  200A  120A  118A  	fcall	stringdir
  5438  058C  00F2               	movwf	___lldiv@divisor+2
  5439  058D  160A  158A  200A  120A  118A  	fcall	stringdir
  5440  0592  00F3               	movwf	___lldiv@divisor+3
  5441  0593  0834               	movf	(sprintf@val+3)^(0+128),w
  5442  0594  00F7               	movwf	___lldiv@dividend+3
  5443  0595  0833               	movf	(sprintf@val+2)^(0+128),w
  5444  0596  00F6               	movwf	___lldiv@dividend+2
  5445  0597  0832               	movf	(sprintf@val+1)^(0+128),w
  5446  0598  00F5               	movwf	___lldiv@dividend+1
  5447  0599  0831               	movf	sprintf@val^(0+128),w
  5448  059A  00F4               	movwf	___lldiv@dividend
  5449  059B  160A  158A  24BC  120A  118A  	fcall	___lldiv
  5450  05A0  0873               	movf	?___lldiv+3,w
  5451  05A1  1683               	bsf	3,5	;RP0=1, select bank1
  5452  05A2  1303               	bcf	3,6	;RP1=0, select bank1
  5453  05A3  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  5454  05A4  0872               	movf	?___lldiv+2,w
  5455  05A5  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  5456  05A6  0871               	movf	?___lldiv+1,w
  5457  05A7  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  5458  05A8  0870               	movf	?___lldiv,w
  5459  05A9  00B7               	movwf	sprintf@tmpval^(0+128)
  5460  05AA                     i1l3728:
  5461                           
  5462                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  5463  05AA  3000               	movlw	0
  5464  05AB  00F3               	movwf	___llmod@divisor+3
  5465  05AC  3000               	movlw	0
  5466  05AD  00F2               	movwf	___llmod@divisor+2
  5467  05AE  3000               	movlw	0
  5468  05AF  00F1               	movwf	___llmod@divisor+1
  5469  05B0  300A               	movlw	10
  5470  05B1  00F0               	movwf	___llmod@divisor
  5471  05B2  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  5472  05B3  00F7               	movwf	___llmod@dividend+3
  5473  05B4  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  5474  05B5  00F6               	movwf	___llmod@dividend+2
  5475  05B6  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  5476  05B7  00F5               	movwf	___llmod@dividend+1
  5477  05B8  0837               	movf	sprintf@tmpval^(0+128),w
  5478  05B9  00F4               	movwf	___llmod@dividend
  5479  05BA  160A  158A  235E  120A  118A  	fcall	___llmod
  5480  05BF  0873               	movf	?___llmod+3,w
  5481  05C0  1683               	bsf	3,5	;RP0=1, select bank1
  5482  05C1  1303               	bcf	3,6	;RP1=0, select bank1
  5483  05C2  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  5484  05C3  0872               	movf	?___llmod+2,w
  5485  05C4  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  5486  05C5  0871               	movf	?___llmod+1,w
  5487  05C6  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  5488  05C7  0870               	movf	?___llmod,w
  5489  05C8  00B7               	movwf	sprintf@tmpval^(0+128)
  5490  05C9                     i1l3730:
  5491                           
  5492                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  5493  05C9  0837               	movf	sprintf@tmpval^(0+128),w
  5494  05CA  3E30               	addlw	48
  5495  05CB  00A5               	movwf	??_sprintf^(0+128)
  5496  05CC  083B               	movf	sprintf@sp^(0+128),w
  5497  05CD  0084               	movwf	4
  5498  05CE  0825               	movf	??_sprintf^(0+128),w
  5499  05CF  1783               	bsf	3,7	;select IRP bank2
  5500  05D0  0080               	movwf	0
  5501  05D1  3001               	movlw	1
  5502  05D2  00A5               	movwf	??_sprintf^(0+128)
  5503  05D3  0825               	movf	??_sprintf^(0+128),w
  5504  05D4  07BB               	addwf	sprintf@sp^(0+128),f
  5505  05D5                     i1l3732:
  5506                           
  5507                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  5508  05D5  0842               	movf	sprintf@c^(0+128),w
  5509  05D6  00A5               	movwf	??_sprintf^(0+128)
  5510  05D7  3001               	movlw	1
  5511  05D8                     u560_25:
  5512  05D8  1003               	clrc
  5513  05D9  0DA5               	rlf	??_sprintf^(0+128),f
  5514  05DA  3EFF               	addlw	-1
  5515  05DB  1D03               	skipz
  5516  05DC  2DD8               	goto	u560_25
  5517  05DD  1003               	clrc
  5518  05DE  0D25               	rlf	??_sprintf^(0+128),w
  5519  05DF  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  5520  05E0  0084               	movwf	4
  5521  05E1  160A  158A  200A  120A  118A  	fcall	stringdir
  5522  05E6  00F0               	movwf	___llmod@divisor
  5523  05E7  160A  158A  200A  120A  118A  	fcall	stringdir
  5524  05EC  00F1               	movwf	___llmod@divisor+1
  5525  05ED  160A  158A  200A  120A  118A  	fcall	stringdir
  5526  05F2  00F2               	movwf	___llmod@divisor+2
  5527  05F3  160A  158A  200A  120A  118A  	fcall	stringdir
  5528  05F8  00F3               	movwf	___llmod@divisor+3
  5529  05F9  0834               	movf	(sprintf@val+3)^(0+128),w
  5530  05FA  00F7               	movwf	___llmod@dividend+3
  5531  05FB  0833               	movf	(sprintf@val+2)^(0+128),w
  5532  05FC  00F6               	movwf	___llmod@dividend+2
  5533  05FD  0832               	movf	(sprintf@val+1)^(0+128),w
  5534  05FE  00F5               	movwf	___llmod@dividend+1
  5535  05FF  0831               	movf	sprintf@val^(0+128),w
  5536  0600  00F4               	movwf	___llmod@dividend
  5537  0601  160A  158A  235E  120A  118A  	fcall	___llmod
  5538  0606  0873               	movf	?___llmod+3,w
  5539  0607  1683               	bsf	3,5	;RP0=1, select bank1
  5540  0608  1303               	bcf	3,6	;RP1=0, select bank1
  5541  0609  00B4               	movwf	(sprintf@val+3)^(0+128)
  5542  060A  0872               	movf	?___llmod+2,w
  5543  060B  00B3               	movwf	(sprintf@val+2)^(0+128)
  5544  060C  0871               	movf	?___llmod+1,w
  5545  060D  00B2               	movwf	(sprintf@val+1)^(0+128)
  5546  060E  0870               	movf	?___llmod,w
  5547  060F  00B1               	movwf	sprintf@val^(0+128)
  5548  0610                     i1l3734:
  5549                           
  5550                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  5551  0610  3001               	movlw	1
  5552  0611  02C2               	subwf	sprintf@c^(0+128),f
  5553  0612  0A42               	incf	sprintf@c^(0+128),w
  5554  0613  1D03               	btfss	3,2
  5555  0614  2E16               	goto	u561_21
  5556  0615  2E17               	goto	u561_20
  5557  0616                     u561_21:
  5558  0616  2D6F               	goto	i1l3726
  5559  0617                     u561_20:
  5560  0617  2E29               	goto	i1l3742
  5561  0618                     i1l3736:
  5562                           
  5563                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  5564  0618  3030               	movlw	48
  5565  0619  00A5               	movwf	??_sprintf^(0+128)
  5566  061A  083B               	movf	sprintf@sp^(0+128),w
  5567  061B  0084               	movwf	4
  5568  061C  0825               	movf	??_sprintf^(0+128),w
  5569  061D  1783               	bsf	3,7	;select IRP bank2
  5570  061E  0080               	movwf	0
  5571  061F                     i1l3738:
  5572  061F  3001               	movlw	1
  5573  0620  00A5               	movwf	??_sprintf^(0+128)
  5574  0621  0825               	movf	??_sprintf^(0+128),w
  5575  0622  07BB               	addwf	sprintf@sp^(0+128),f
  5576  0623                     i1l3740:
  5577                           
  5578                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  5579  0623  30FF               	movlw	255
  5580  0624  07BC               	addwf	sprintf@prec^(0+128),f
  5581  0625  1803               	skipnc
  5582  0626  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  5583  0627  30FF               	movlw	255
  5584  0628  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  5585  0629                     i1l3742:
  5586                           
  5587                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  5588  0629  083C               	movf	sprintf@prec^(0+128),w
  5589  062A  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  5590  062B  1D03               	btfss	3,2
  5591  062C  2E2E               	goto	u562_21
  5592  062D  2E2F               	goto	u562_20
  5593  062E                     u562_21:
  5594  062E  2E18               	goto	i1l3736
  5595  062F                     u562_20:
  5596  062F  2E75               	goto	i1l3762
  5597  0630                     i1l3744:
  5598                           
  5599                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  5600  0630  083C               	movf	sprintf@prec^(0+128),w
  5601  0631  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  5602  0632  1D03               	btfss	3,2
  5603  0633  2E35               	goto	u563_21
  5604  0634  2E36               	goto	u563_20
  5605  0635                     u563_21:
  5606  0635  2E44               	goto	i1l355
  5607  0636                     u563_20:
  5608  0636                     i1l3746:
  5609  0636  0834               	movf	(sprintf@val+3)^(0+128),w
  5610  0637  0433               	iorwf	(sprintf@val+2)^(0+128),w
  5611  0638  0432               	iorwf	(sprintf@val+1)^(0+128),w
  5612  0639  0431               	iorwf	sprintf@val^(0+128),w
  5613  063A  1D03               	skipz
  5614  063B  2E3D               	goto	u564_21
  5615  063C  2E3E               	goto	u564_20
  5616  063D                     u564_21:
  5617  063D  2E44               	goto	i1l355
  5618  063E                     u564_20:
  5619  063E                     i1l3748:
  5620                           
  5621                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  5622  063E  3001               	movlw	1
  5623  063F  07BC               	addwf	sprintf@prec^(0+128),f
  5624  0640  1803               	skipnc
  5625  0641  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  5626  0642  3000               	movlw	0
  5627  0643  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  5628  0644                     i1l355:
  5629                           
  5630                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  5631  0644  083D               	movf	(sprintf@prec+1)^(0+128),w
  5632  0645  3A80               	xorlw	128
  5633  0646  3C80               	sublw	128
  5634  0647  1D03               	skipz
  5635  0648  2E4B               	goto	u565_25
  5636  0649  083C               	movf	sprintf@prec^(0+128),w
  5637  064A  0242               	subwf	sprintf@c^(0+128),w
  5638  064B                     u565_25:
  5639  064B  1803               	skipnc
  5640  064C  2E4E               	goto	u565_21
  5641  064D  2E4F               	goto	u565_20
  5642  064E                     u565_21:
  5643  064E  2E50               	goto	i1l3752
  5644  064F                     u565_20:
  5645  064F                     i1l3750:
  5646  064F  2E5F               	goto	i1l3756
  5647  0650                     i1l3752:
  5648  0650  1683               	bsf	3,5	;RP0=1, select bank1
  5649  0651  1303               	bcf	3,6	;RP1=0, select bank1
  5650  0652  083D               	movf	(sprintf@prec+1)^(0+128),w
  5651  0653  3A80               	xorlw	128
  5652  0654  00A5               	movwf	??_sprintf^(0+128)
  5653  0655  3080               	movlw	128
  5654  0656  0225               	subwf	??_sprintf^(0+128),w
  5655  0657  1D03               	skipz
  5656  0658  2E5B               	goto	u566_25
  5657  0659  0842               	movf	sprintf@c^(0+128),w
  5658  065A  023C               	subwf	sprintf@prec^(0+128),w
  5659  065B                     u566_25:
  5660  065B  1803               	skipnc
  5661  065C  2E5E               	goto	u566_21
  5662  065D  2E5F               	goto	u566_20
  5663  065E                     u566_21:
  5664  065E  2E5F               	goto	i1l3756
  5665  065F                     u566_20:
  5666  065F                     i1l3754:
  5667  065F                     i1l3756:
  5668                           
  5669                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  5670  065F  3003               	movlw	3
  5671  0660  1683               	bsf	3,5	;RP0=1, select bank1
  5672  0661  1303               	bcf	3,6	;RP1=0, select bank1
  5673  0662  052F               	andwf	sprintf@flag^(0+128),w
  5674  0663  00A5               	movwf	??_sprintf^(0+128)
  5675  0664  3000               	movlw	0
  5676  0665  0530               	andwf	(sprintf@flag+1)^(0+128),w
  5677  0666  00A6               	movwf	(??_sprintf+1)^(0+128)
  5678  0667  0825               	movf	??_sprintf^(0+128),w
  5679  0668  0426               	iorwf	(??_sprintf^(0+128)+1),w
  5680  0669  1903               	btfsc	3,2
  5681  066A  2E6C               	goto	u567_21
  5682  066B  2E6D               	goto	u567_20
  5683  066C                     u567_21:
  5684  066C  2E75               	goto	i1l3762
  5685  066D                     u567_20:
  5686  066D                     i1l3758:
  5687                           
  5688                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  5689  066D  302D               	movlw	45
  5690  066E  00A5               	movwf	??_sprintf^(0+128)
  5691  066F  083B               	movf	sprintf@sp^(0+128),w
  5692  0670  0084               	movwf	4
  5693  0671  0825               	movf	??_sprintf^(0+128),w
  5694  0672  1783               	bsf	3,7	;select IRP bank2
  5695  0673  0080               	movwf	0
  5696  0674  2849               	goto	i1l3574
  5697  0675                     i1l3762:
  5698                           
  5699                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  5700  0675  3001               	movlw	1
  5701  0676  07A0               	addwf	sprintf@f^(0+128),f
  5702  0677  30FF               	movlw	-1
  5703  0678  0720               	addwf	sprintf@f^(0+128),w
  5704  0679  0084               	movwf	4
  5705  067A  160A  158A  200A  120A  118A  	fcall	stringdir
  5706  067F  00A5               	movwf	??_sprintf^(0+128)
  5707  0680  0825               	movf	??_sprintf^(0+128),w
  5708  0681  00C2               	movwf	sprintf@c^(0+128)
  5709  0682  0842               	movf	sprintf@c^(0+128),w
  5710  0683  1D03               	btfss	3,2
  5711  0684  2E86               	goto	u568_21
  5712  0685  2E87               	goto	u568_20
  5713  0686                     u568_21:
  5714  0686  283C               	goto	i1l3570
  5715  0687                     u568_20:
  5716  0687                     i1l3764:
  5717                           
  5718                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  5719  0687  083B               	movf	sprintf@sp^(0+128),w
  5720  0688  0084               	movwf	4
  5721  0689  1783               	bsf	3,7	;select IRP bank2
  5722  068A  0180               	clrf	0
  5723  068B                     i1l361:
  5724  068B  0008               	return
  5725  068C                     __end_of_sprintf:
  5726                           
  5727                           	psect	text18
  5728  0940                     __ptext18:	
  5729 ;; *************** function _scale *****************
  5730 ;; Defined at:
  5731 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  5732 ;; Parameters:    Size  Location     Type
  5733 ;;  scl             1    wreg     char 
  5734 ;; Auto vars:     Size  Location     Type
  5735 ;;  scl             1   48[BANK0 ] char 
  5736 ;; Return value:  Size  Location     Type
  5737 ;;                  4   30[BANK0 ] char 
  5738 ;; Registers used:
  5739 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5740 ;; Tracked objects:
  5741 ;;		On entry : 0/0
  5742 ;;		On exit  : 0/0
  5743 ;;		Unchanged: 0/0
  5744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5745 ;;      Params:         0       4       0       0       0
  5746 ;;      Locals:         0       5       0       0       0
  5747 ;;      Temps:          0      10       0       0       0
  5748 ;;      Totals:         0      19       0       0       0
  5749 ;;Total ram usage:       19 bytes
  5750 ;; Hardware stack levels used:    1
  5751 ;; Hardware stack levels required when called:    2
  5752 ;; This function calls:
  5753 ;;		___awdiv
  5754 ;;		___awmod
  5755 ;;		___flmul
  5756 ;; This function is called by:
  5757 ;;		_sprintf
  5758 ;; This function uses a non-reentrant model
  5759 ;;
  5760                           
  5761                           
  5762                           ;psect for function _scale
  5763  0940                     _scale:
  5764                           
  5765                           ;incstack = 0
  5766 ;; using string table level
  5767                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5768                           ;scale@scl stored from wreg
  5769  0940  1283               	bcf	3,5	;RP0=0, select bank0
  5770  0941  1303               	bcf	3,6	;RP1=0, select bank0
  5771  0942  00D0               	movwf	scale@scl
  5772  0943                     i1l3060:
  5773                           
  5774                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  5775  0943  1FD0               	btfss	scale@scl,7
  5776  0944  2946               	goto	u431_21
  5777  0945  2947               	goto	u431_20
  5778  0946                     u431_21:
  5779  0946  2AF4               	goto	i1l3082
  5780  0947                     u431_20:
  5781  0947                     i1l3062:
  5782                           
  5783                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  5784  0947  09D0               	comf	scale@scl,f
  5785  0948  0AD0               	incf	scale@scl,f
  5786  0949                     i1l3064:
  5787                           
  5788                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  5789  0949  0850               	movf	scale@scl,w
  5790  094A  3A80               	xorlw	128
  5791  094B  3E12               	addlw	-238
  5792  094C  1C03               	skipc
  5793  094D  294F               	goto	u432_21
  5794  094E  2950               	goto	u432_20
  5795  094F                     u432_21:
  5796  094F  2A38               	goto	i1l3072
  5797  0950                     u432_20:
  5798  0950                     i1l3066:
  5799                           
  5800                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  5801  0950  300A               	movlw	10
  5802  0951  00F7               	movwf	___awdiv@divisor
  5803  0952  3000               	movlw	0
  5804  0953  00F8               	movwf	___awdiv@divisor+1
  5805  0954  0850               	movf	scale@scl,w
  5806  0955  00F2               	movwf	___awmod@dividend
  5807  0956  01F3               	clrf	___awmod@dividend+1
  5808  0957  1BF2               	btfsc	___awmod@dividend,7
  5809  0958  03F3               	decf	___awmod@dividend+1,f
  5810  0959  3064               	movlw	100
  5811  095A  00F0               	movwf	___awmod@divisor
  5812  095B  3000               	movlw	0
  5813  095C  00F1               	movwf	___awmod@divisor+1
  5814  095D  160A  158A  2406  120A  158A  	fcall	___awmod
  5815  0962  0871               	movf	?___awmod+1,w
  5816  0963  00FA               	movwf	___awdiv@dividend+1
  5817  0964  0870               	movf	?___awmod,w
  5818  0965  00F9               	movwf	___awdiv@dividend
  5819  0966  160A  158A  2522  120A  158A  	fcall	___awdiv
  5820  096B  0877               	movf	?___awdiv,w
  5821  096C  1283               	bcf	3,5	;RP0=0, select bank0
  5822  096D  1303               	bcf	3,6	;RP1=0, select bank0
  5823  096E  00C2               	movwf	??_scale
  5824  096F  3001               	movlw	1
  5825  0970                     u433_25:
  5826  0970  1003               	clrc
  5827  0971  0DC2               	rlf	??_scale,f
  5828  0972  3EFF               	addlw	-1
  5829  0973  1D03               	skipz
  5830  0974  2970               	goto	u433_25
  5831  0975  1003               	clrc
  5832  0976  0D42               	rlf	??_scale,w
  5833  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5834  0978  0084               	movwf	4
  5835  0979  160A  158A  200A  120A  158A  	fcall	stringdir
  5836  097E  00C3               	movwf	??_scale+1
  5837  097F  160A  158A  200A  120A  158A  	fcall	stringdir
  5838  0984  00C4               	movwf	??_scale+2
  5839  0985  160A  158A  200A  120A  158A  	fcall	stringdir
  5840  098A  00C5               	movwf	??_scale+3
  5841  098B  160A  158A  200A  120A  158A  	fcall	stringdir
  5842  0990  00C6               	movwf	??_scale+4
  5843  0991  0846               	movf	??_scale+4,w
  5844  0992  00A7               	movwf	___flmul@b+3
  5845  0993  0845               	movf	??_scale+3,w
  5846  0994  00A6               	movwf	___flmul@b+2
  5847  0995  0844               	movf	??_scale+2,w
  5848  0996  00A5               	movwf	___flmul@b+1
  5849  0997  0843               	movf	??_scale+1,w
  5850  0998  00A4               	movwf	___flmul@b
  5851  0999  3064               	movlw	100
  5852  099A  00F7               	movwf	___awdiv@divisor
  5853  099B  3000               	movlw	0
  5854  099C  00F8               	movwf	___awdiv@divisor+1
  5855  099D  0850               	movf	scale@scl,w
  5856  099E  00F9               	movwf	___awdiv@dividend
  5857  099F  01FA               	clrf	___awdiv@dividend+1
  5858  09A0  1BF9               	btfsc	___awdiv@dividend,7
  5859  09A1  03FA               	decf	___awdiv@dividend+1,f
  5860  09A2  160A  158A  2522  120A  158A  	fcall	___awdiv
  5861  09A7  0877               	movf	?___awdiv,w
  5862  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  5863  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  5864  09AA  00C7               	movwf	??_scale+5
  5865  09AB  3001               	movlw	1
  5866  09AC                     u434_25:
  5867  09AC  1003               	clrc
  5868  09AD  0DC7               	rlf	??_scale+5,f
  5869  09AE  3EFF               	addlw	-1
  5870  09AF  1D03               	skipz
  5871  09B0  29AC               	goto	u434_25
  5872  09B1  1003               	clrc
  5873  09B2  0D47               	rlf	??_scale+5,w
  5874  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5875  09B4  0084               	movwf	4
  5876  09B5  160A  158A  200A  120A  158A  	fcall	stringdir
  5877  09BA  00C8               	movwf	??_scale+6
  5878  09BB  160A  158A  200A  120A  158A  	fcall	stringdir
  5879  09C0  00C9               	movwf	??_scale+7
  5880  09C1  160A  158A  200A  120A  158A  	fcall	stringdir
  5881  09C6  00CA               	movwf	??_scale+8
  5882  09C7  160A  158A  200A  120A  158A  	fcall	stringdir
  5883  09CC  00CB               	movwf	??_scale+9
  5884  09CD  084B               	movf	??_scale+9,w
  5885  09CE  00AB               	movwf	___flmul@a+3
  5886  09CF  084A               	movf	??_scale+8,w
  5887  09D0  00AA               	movwf	___flmul@a+2
  5888  09D1  0849               	movf	??_scale+7,w
  5889  09D2  00A9               	movwf	___flmul@a+1
  5890  09D3  0848               	movf	??_scale+6,w
  5891  09D4  00A8               	movwf	___flmul@a
  5892  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  5893  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  5894  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  5895  09DC  0827               	movf	?___flmul+3,w
  5896  09DD  00CF               	movwf	_scale$1206+3
  5897  09DE  0826               	movf	?___flmul+2,w
  5898  09DF  00CE               	movwf	_scale$1206+2
  5899  09E0  0825               	movf	?___flmul+1,w
  5900  09E1  00CD               	movwf	_scale$1206+1
  5901  09E2  0824               	movf	?___flmul,w
  5902  09E3  00CC               	movwf	_scale$1206
  5903                           
  5904                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  5905  09E4  300A               	movlw	10
  5906  09E5  00F0               	movwf	___awmod@divisor
  5907  09E6  3000               	movlw	0
  5908  09E7  00F1               	movwf	___awmod@divisor+1
  5909  09E8  0850               	movf	scale@scl,w
  5910  09E9  00F2               	movwf	___awmod@dividend
  5911  09EA  01F3               	clrf	___awmod@dividend+1
  5912  09EB  1BF2               	btfsc	___awmod@dividend,7
  5913  09EC  03F3               	decf	___awmod@dividend+1,f
  5914  09ED  160A  158A  2406  120A  158A  	fcall	___awmod
  5915  09F2  0870               	movf	?___awmod,w
  5916  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  5917  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  5918  09F5  00C2               	movwf	??_scale
  5919  09F6  3001               	movlw	1
  5920  09F7                     u435_25:
  5921  09F7  1003               	clrc
  5922  09F8  0DC2               	rlf	??_scale,f
  5923  09F9  3EFF               	addlw	-1
  5924  09FA  1D03               	skipz
  5925  09FB  29F7               	goto	u435_25
  5926  09FC  1003               	clrc
  5927  09FD  0D42               	rlf	??_scale,w
  5928  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5929  09FF  0084               	movwf	4
  5930  0A00  160A  158A  200A  120A  158A  	fcall	stringdir
  5931  0A05  00C3               	movwf	??_scale+1
  5932  0A06  160A  158A  200A  120A  158A  	fcall	stringdir
  5933  0A0B  00C4               	movwf	??_scale+2
  5934  0A0C  160A  158A  200A  120A  158A  	fcall	stringdir
  5935  0A11  00C5               	movwf	??_scale+3
  5936  0A12  160A  158A  200A  120A  158A  	fcall	stringdir
  5937  0A17  00C6               	movwf	??_scale+4
  5938  0A18  0846               	movf	??_scale+4,w
  5939  0A19  00A7               	movwf	___flmul@b+3
  5940  0A1A  0845               	movf	??_scale+3,w
  5941  0A1B  00A6               	movwf	___flmul@b+2
  5942  0A1C  0844               	movf	??_scale+2,w
  5943  0A1D  00A5               	movwf	___flmul@b+1
  5944  0A1E  0843               	movf	??_scale+1,w
  5945  0A1F  00A4               	movwf	___flmul@b
  5946  0A20  084F               	movf	_scale$1206+3,w
  5947  0A21  00AB               	movwf	___flmul@a+3
  5948  0A22  084E               	movf	_scale$1206+2,w
  5949  0A23  00AA               	movwf	___flmul@a+2
  5950  0A24  084D               	movf	_scale$1206+1,w
  5951  0A25  00A9               	movwf	___flmul@a+1
  5952  0A26  084C               	movf	_scale$1206,w
  5953  0A27  00A8               	movwf	___flmul@a
  5954  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  5955  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  5956  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  5957  0A2F  0827               	movf	?___flmul+3,w
  5958  0A30  00C1               	movwf	?_scale+3
  5959  0A31  0826               	movf	?___flmul+2,w
  5960  0A32  00C0               	movwf	?_scale+2
  5961  0A33  0825               	movf	?___flmul+1,w
  5962  0A34  00BF               	movwf	?_scale+1
  5963  0A35  0824               	movf	?___flmul,w
  5964  0A36  00BE               	movwf	?_scale
  5965  0A37  2C9E               	goto	i1l295
  5966  0A38                     i1l3072:
  5967  0A38  0850               	movf	scale@scl,w
  5968  0A39  3A80               	xorlw	128
  5969  0A3A  3E75               	addlw	-139
  5970  0A3B  1C03               	skipc
  5971  0A3C  2A3E               	goto	u436_21
  5972  0A3D  2A3F               	goto	u436_20
  5973  0A3E                     u436_21:
  5974  0A3E  2AC7               	goto	i1l3078
  5975  0A3F                     u436_20:
  5976  0A3F                     i1l3074:
  5977                           
  5978                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  5979  0A3F  300A               	movlw	10
  5980  0A40  00F0               	movwf	___awmod@divisor
  5981  0A41  3000               	movlw	0
  5982  0A42  00F1               	movwf	___awmod@divisor+1
  5983  0A43  0850               	movf	scale@scl,w
  5984  0A44  00F2               	movwf	___awmod@dividend
  5985  0A45  01F3               	clrf	___awmod@dividend+1
  5986  0A46  1BF2               	btfsc	___awmod@dividend,7
  5987  0A47  03F3               	decf	___awmod@dividend+1,f
  5988  0A48  160A  158A  2406  120A  158A  	fcall	___awmod
  5989  0A4D  0870               	movf	?___awmod,w
  5990  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  5991  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  5992  0A50  00C2               	movwf	??_scale
  5993  0A51  3001               	movlw	1
  5994  0A52                     u437_25:
  5995  0A52  1003               	clrc
  5996  0A53  0DC2               	rlf	??_scale,f
  5997  0A54  3EFF               	addlw	-1
  5998  0A55  1D03               	skipz
  5999  0A56  2A52               	goto	u437_25
  6000  0A57  1003               	clrc
  6001  0A58  0D42               	rlf	??_scale,w
  6002  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  6003  0A5A  0084               	movwf	4
  6004  0A5B  160A  158A  200A  120A  158A  	fcall	stringdir
  6005  0A60  00C3               	movwf	??_scale+1
  6006  0A61  160A  158A  200A  120A  158A  	fcall	stringdir
  6007  0A66  00C4               	movwf	??_scale+2
  6008  0A67  160A  158A  200A  120A  158A  	fcall	stringdir
  6009  0A6C  00C5               	movwf	??_scale+3
  6010  0A6D  160A  158A  200A  120A  158A  	fcall	stringdir
  6011  0A72  00C6               	movwf	??_scale+4
  6012  0A73  0846               	movf	??_scale+4,w
  6013  0A74  00A7               	movwf	___flmul@b+3
  6014  0A75  0845               	movf	??_scale+3,w
  6015  0A76  00A6               	movwf	___flmul@b+2
  6016  0A77  0844               	movf	??_scale+2,w
  6017  0A78  00A5               	movwf	___flmul@b+1
  6018  0A79  0843               	movf	??_scale+1,w
  6019  0A7A  00A4               	movwf	___flmul@b
  6020  0A7B  300A               	movlw	10
  6021  0A7C  00F7               	movwf	___awdiv@divisor
  6022  0A7D  3000               	movlw	0
  6023  0A7E  00F8               	movwf	___awdiv@divisor+1
  6024  0A7F  0850               	movf	scale@scl,w
  6025  0A80  00F9               	movwf	___awdiv@dividend
  6026  0A81  01FA               	clrf	___awdiv@dividend+1
  6027  0A82  1BF9               	btfsc	___awdiv@dividend,7
  6028  0A83  03FA               	decf	___awdiv@dividend+1,f
  6029  0A84  160A  158A  2522  120A  158A  	fcall	___awdiv
  6030  0A89  0877               	movf	?___awdiv,w
  6031  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  6032  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  6033  0A8C  00C7               	movwf	??_scale+5
  6034  0A8D  3001               	movlw	1
  6035  0A8E                     u438_25:
  6036  0A8E  1003               	clrc
  6037  0A8F  0DC7               	rlf	??_scale+5,f
  6038  0A90  3EFF               	addlw	-1
  6039  0A91  1D03               	skipz
  6040  0A92  2A8E               	goto	u438_25
  6041  0A93  1003               	clrc
  6042  0A94  0D47               	rlf	??_scale+5,w
  6043  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  6044  0A96  0084               	movwf	4
  6045  0A97  160A  158A  200A  120A  158A  	fcall	stringdir
  6046  0A9C  00C8               	movwf	??_scale+6
  6047  0A9D  160A  158A  200A  120A  158A  	fcall	stringdir
  6048  0AA2  00C9               	movwf	??_scale+7
  6049  0AA3  160A  158A  200A  120A  158A  	fcall	stringdir
  6050  0AA8  00CA               	movwf	??_scale+8
  6051  0AA9  160A  158A  200A  120A  158A  	fcall	stringdir
  6052  0AAE  00CB               	movwf	??_scale+9
  6053  0AAF  084B               	movf	??_scale+9,w
  6054  0AB0  00AB               	movwf	___flmul@a+3
  6055  0AB1  084A               	movf	??_scale+8,w
  6056  0AB2  00AA               	movwf	___flmul@a+2
  6057  0AB3  0849               	movf	??_scale+7,w
  6058  0AB4  00A9               	movwf	___flmul@a+1
  6059  0AB5  0848               	movf	??_scale+6,w
  6060  0AB6  00A8               	movwf	___flmul@a
  6061  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  6062  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  6063  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  6064  0ABE  0827               	movf	?___flmul+3,w
  6065  0ABF  00C1               	movwf	?_scale+3
  6066  0AC0  0826               	movf	?___flmul+2,w
  6067  0AC1  00C0               	movwf	?_scale+2
  6068  0AC2  0825               	movf	?___flmul+1,w
  6069  0AC3  00BF               	movwf	?_scale+1
  6070  0AC4  0824               	movf	?___flmul,w
  6071  0AC5  00BE               	movwf	?_scale
  6072  0AC6  2C9E               	goto	i1l295
  6073  0AC7                     i1l3078:
  6074                           
  6075                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  6076  0AC7  0850               	movf	scale@scl,w
  6077  0AC8  00C2               	movwf	??_scale
  6078  0AC9  3001               	movlw	1
  6079  0ACA                     u439_25:
  6080  0ACA  1003               	clrc
  6081  0ACB  0DC2               	rlf	??_scale,f
  6082  0ACC  3EFF               	addlw	-1
  6083  0ACD  1D03               	skipz
  6084  0ACE  2ACA               	goto	u439_25
  6085  0ACF  1003               	clrc
  6086  0AD0  0D42               	rlf	??_scale,w
  6087  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  6088  0AD2  0084               	movwf	4
  6089  0AD3  160A  158A  200A  120A  158A  	fcall	stringdir
  6090  0AD8  00C3               	movwf	??_scale+1
  6091  0AD9  160A  158A  200A  120A  158A  	fcall	stringdir
  6092  0ADE  00C4               	movwf	??_scale+2
  6093  0ADF  160A  158A  200A  120A  158A  	fcall	stringdir
  6094  0AE4  00C5               	movwf	??_scale+3
  6095  0AE5  160A  158A  200A  120A  158A  	fcall	stringdir
  6096  0AEA  00C6               	movwf	??_scale+4
  6097  0AEB  0846               	movf	??_scale+4,w
  6098  0AEC  00C1               	movwf	?_scale+3
  6099  0AED  0845               	movf	??_scale+3,w
  6100  0AEE  00C0               	movwf	?_scale+2
  6101  0AEF  0844               	movf	??_scale+2,w
  6102  0AF0  00BF               	movwf	?_scale+1
  6103  0AF1  0843               	movf	??_scale+1,w
  6104  0AF2  00BE               	movwf	?_scale
  6105  0AF3  2C9E               	goto	i1l295
  6106  0AF4                     i1l3082:
  6107                           
  6108                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  6109  0AF4  0850               	movf	scale@scl,w
  6110  0AF5  3A80               	xorlw	128
  6111  0AF6  3E12               	addlw	-238
  6112  0AF7  1C03               	skipc
  6113  0AF8  2AFA               	goto	u440_21
  6114  0AF9  2AFB               	goto	u440_20
  6115  0AFA                     u440_21:
  6116  0AFA  2BE3               	goto	i1l3090
  6117  0AFB                     u440_20:
  6118  0AFB                     i1l3084:
  6119                           
  6120                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  6121  0AFB  300A               	movlw	10
  6122  0AFC  00F7               	movwf	___awdiv@divisor
  6123  0AFD  3000               	movlw	0
  6124  0AFE  00F8               	movwf	___awdiv@divisor+1
  6125  0AFF  0850               	movf	scale@scl,w
  6126  0B00  00F2               	movwf	___awmod@dividend
  6127  0B01  01F3               	clrf	___awmod@dividend+1
  6128  0B02  1BF2               	btfsc	___awmod@dividend,7
  6129  0B03  03F3               	decf	___awmod@dividend+1,f
  6130  0B04  3064               	movlw	100
  6131  0B05  00F0               	movwf	___awmod@divisor
  6132  0B06  3000               	movlw	0
  6133  0B07  00F1               	movwf	___awmod@divisor+1
  6134  0B08  160A  158A  2406  120A  158A  	fcall	___awmod
  6135  0B0D  0871               	movf	?___awmod+1,w
  6136  0B0E  00FA               	movwf	___awdiv@dividend+1
  6137  0B0F  0870               	movf	?___awmod,w
  6138  0B10  00F9               	movwf	___awdiv@dividend
  6139  0B11  160A  158A  2522  120A  158A  	fcall	___awdiv
  6140  0B16  0877               	movf	?___awdiv,w
  6141  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  6142  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  6143  0B19  00C2               	movwf	??_scale
  6144  0B1A  3001               	movlw	1
  6145  0B1B                     u441_25:
  6146  0B1B  1003               	clrc
  6147  0B1C  0DC2               	rlf	??_scale,f
  6148  0B1D  3EFF               	addlw	-1
  6149  0B1E  1D03               	skipz
  6150  0B1F  2B1B               	goto	u441_25
  6151  0B20  1003               	clrc
  6152  0B21  0D42               	rlf	??_scale,w
  6153  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  6154  0B23  0084               	movwf	4
  6155  0B24  160A  158A  200A  120A  158A  	fcall	stringdir
  6156  0B29  00C3               	movwf	??_scale+1
  6157  0B2A  160A  158A  200A  120A  158A  	fcall	stringdir
  6158  0B2F  00C4               	movwf	??_scale+2
  6159  0B30  160A  158A  200A  120A  158A  	fcall	stringdir
  6160  0B35  00C5               	movwf	??_scale+3
  6161  0B36  160A  158A  200A  120A  158A  	fcall	stringdir
  6162  0B3B  00C6               	movwf	??_scale+4
  6163  0B3C  0846               	movf	??_scale+4,w
  6164  0B3D  00A7               	movwf	___flmul@b+3
  6165  0B3E  0845               	movf	??_scale+3,w
  6166  0B3F  00A6               	movwf	___flmul@b+2
  6167  0B40  0844               	movf	??_scale+2,w
  6168  0B41  00A5               	movwf	___flmul@b+1
  6169  0B42  0843               	movf	??_scale+1,w
  6170  0B43  00A4               	movwf	___flmul@b
  6171  0B44  3064               	movlw	100
  6172  0B45  00F7               	movwf	___awdiv@divisor
  6173  0B46  3000               	movlw	0
  6174  0B47  00F8               	movwf	___awdiv@divisor+1
  6175  0B48  0850               	movf	scale@scl,w
  6176  0B49  00F9               	movwf	___awdiv@dividend
  6177  0B4A  01FA               	clrf	___awdiv@dividend+1
  6178  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  6179  0B4C  03FA               	decf	___awdiv@dividend+1,f
  6180  0B4D  160A  158A  2522  120A  158A  	fcall	___awdiv
  6181  0B52  0877               	movf	?___awdiv,w
  6182  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  6183  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  6184  0B55  00C7               	movwf	??_scale+5
  6185  0B56  3001               	movlw	1
  6186  0B57                     u442_25:
  6187  0B57  1003               	clrc
  6188  0B58  0DC7               	rlf	??_scale+5,f
  6189  0B59  3EFF               	addlw	-1
  6190  0B5A  1D03               	skipz
  6191  0B5B  2B57               	goto	u442_25
  6192  0B5C  1003               	clrc
  6193  0B5D  0D47               	rlf	??_scale+5,w
  6194  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  6195  0B5F  0084               	movwf	4
  6196  0B60  160A  158A  200A  120A  158A  	fcall	stringdir
  6197  0B65  00C8               	movwf	??_scale+6
  6198  0B66  160A  158A  200A  120A  158A  	fcall	stringdir
  6199  0B6B  00C9               	movwf	??_scale+7
  6200  0B6C  160A  158A  200A  120A  158A  	fcall	stringdir
  6201  0B71  00CA               	movwf	??_scale+8
  6202  0B72  160A  158A  200A  120A  158A  	fcall	stringdir
  6203  0B77  00CB               	movwf	??_scale+9
  6204  0B78  084B               	movf	??_scale+9,w
  6205  0B79  00AB               	movwf	___flmul@a+3
  6206  0B7A  084A               	movf	??_scale+8,w
  6207  0B7B  00AA               	movwf	___flmul@a+2
  6208  0B7C  0849               	movf	??_scale+7,w
  6209  0B7D  00A9               	movwf	___flmul@a+1
  6210  0B7E  0848               	movf	??_scale+6,w
  6211  0B7F  00A8               	movwf	___flmul@a
  6212  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  6213  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  6214  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  6215  0B87  0827               	movf	?___flmul+3,w
  6216  0B88  00CF               	movwf	_scale$1206+3
  6217  0B89  0826               	movf	?___flmul+2,w
  6218  0B8A  00CE               	movwf	_scale$1206+2
  6219  0B8B  0825               	movf	?___flmul+1,w
  6220  0B8C  00CD               	movwf	_scale$1206+1
  6221  0B8D  0824               	movf	?___flmul,w
  6222  0B8E  00CC               	movwf	_scale$1206
  6223                           
  6224                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  6225  0B8F  300A               	movlw	10
  6226  0B90  00F0               	movwf	___awmod@divisor
  6227  0B91  3000               	movlw	0
  6228  0B92  00F1               	movwf	___awmod@divisor+1
  6229  0B93  0850               	movf	scale@scl,w
  6230  0B94  00F2               	movwf	___awmod@dividend
  6231  0B95  01F3               	clrf	___awmod@dividend+1
  6232  0B96  1BF2               	btfsc	___awmod@dividend,7
  6233  0B97  03F3               	decf	___awmod@dividend+1,f
  6234  0B98  160A  158A  2406  120A  158A  	fcall	___awmod
  6235  0B9D  0870               	movf	?___awmod,w
  6236  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  6237  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  6238  0BA0  00C2               	movwf	??_scale
  6239  0BA1  3001               	movlw	1
  6240  0BA2                     u443_25:
  6241  0BA2  1003               	clrc
  6242  0BA3  0DC2               	rlf	??_scale,f
  6243  0BA4  3EFF               	addlw	-1
  6244  0BA5  1D03               	skipz
  6245  0BA6  2BA2               	goto	u443_25
  6246  0BA7  1003               	clrc
  6247  0BA8  0D42               	rlf	??_scale,w
  6248  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  6249  0BAA  0084               	movwf	4
  6250  0BAB  160A  158A  200A  120A  158A  	fcall	stringdir
  6251  0BB0  00C3               	movwf	??_scale+1
  6252  0BB1  160A  158A  200A  120A  158A  	fcall	stringdir
  6253  0BB6  00C4               	movwf	??_scale+2
  6254  0BB7  160A  158A  200A  120A  158A  	fcall	stringdir
  6255  0BBC  00C5               	movwf	??_scale+3
  6256  0BBD  160A  158A  200A  120A  158A  	fcall	stringdir
  6257  0BC2  00C6               	movwf	??_scale+4
  6258  0BC3  0846               	movf	??_scale+4,w
  6259  0BC4  00A7               	movwf	___flmul@b+3
  6260  0BC5  0845               	movf	??_scale+3,w
  6261  0BC6  00A6               	movwf	___flmul@b+2
  6262  0BC7  0844               	movf	??_scale+2,w
  6263  0BC8  00A5               	movwf	___flmul@b+1
  6264  0BC9  0843               	movf	??_scale+1,w
  6265  0BCA  00A4               	movwf	___flmul@b
  6266  0BCB  084F               	movf	_scale$1206+3,w
  6267  0BCC  00AB               	movwf	___flmul@a+3
  6268  0BCD  084E               	movf	_scale$1206+2,w
  6269  0BCE  00AA               	movwf	___flmul@a+2
  6270  0BCF  084D               	movf	_scale$1206+1,w
  6271  0BD0  00A9               	movwf	___flmul@a+1
  6272  0BD1  084C               	movf	_scale$1206,w
  6273  0BD2  00A8               	movwf	___flmul@a
  6274  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  6275  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  6276  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  6277  0BDA  0827               	movf	?___flmul+3,w
  6278  0BDB  00C1               	movwf	?_scale+3
  6279  0BDC  0826               	movf	?___flmul+2,w
  6280  0BDD  00C0               	movwf	?_scale+2
  6281  0BDE  0825               	movf	?___flmul+1,w
  6282  0BDF  00BF               	movwf	?_scale+1
  6283  0BE0  0824               	movf	?___flmul,w
  6284  0BE1  00BE               	movwf	?_scale
  6285  0BE2  2C9E               	goto	i1l295
  6286  0BE3                     i1l3090:
  6287  0BE3  0850               	movf	scale@scl,w
  6288  0BE4  3A80               	xorlw	128
  6289  0BE5  3E75               	addlw	-139
  6290  0BE6  1C03               	skipc
  6291  0BE7  2BE9               	goto	u444_21
  6292  0BE8  2BEA               	goto	u444_20
  6293  0BE9                     u444_21:
  6294  0BE9  2C72               	goto	i1l3096
  6295  0BEA                     u444_20:
  6296  0BEA                     i1l3092:
  6297                           
  6298                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  6299  0BEA  300A               	movlw	10
  6300  0BEB  00F0               	movwf	___awmod@divisor
  6301  0BEC  3000               	movlw	0
  6302  0BED  00F1               	movwf	___awmod@divisor+1
  6303  0BEE  0850               	movf	scale@scl,w
  6304  0BEF  00F2               	movwf	___awmod@dividend
  6305  0BF0  01F3               	clrf	___awmod@dividend+1
  6306  0BF1  1BF2               	btfsc	___awmod@dividend,7
  6307  0BF2  03F3               	decf	___awmod@dividend+1,f
  6308  0BF3  160A  158A  2406  120A  158A  	fcall	___awmod
  6309  0BF8  0870               	movf	?___awmod,w
  6310  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  6311  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  6312  0BFB  00C2               	movwf	??_scale
  6313  0BFC  3001               	movlw	1
  6314  0BFD                     u445_25:
  6315  0BFD  1003               	clrc
  6316  0BFE  0DC2               	rlf	??_scale,f
  6317  0BFF  3EFF               	addlw	-1
  6318  0C00  1D03               	skipz
  6319  0C01  2BFD               	goto	u445_25
  6320  0C02  1003               	clrc
  6321  0C03  0D42               	rlf	??_scale,w
  6322  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  6323  0C05  0084               	movwf	4
  6324  0C06  160A  158A  200A  120A  158A  	fcall	stringdir
  6325  0C0B  00C3               	movwf	??_scale+1
  6326  0C0C  160A  158A  200A  120A  158A  	fcall	stringdir
  6327  0C11  00C4               	movwf	??_scale+2
  6328  0C12  160A  158A  200A  120A  158A  	fcall	stringdir
  6329  0C17  00C5               	movwf	??_scale+3
  6330  0C18  160A  158A  200A  120A  158A  	fcall	stringdir
  6331  0C1D  00C6               	movwf	??_scale+4
  6332  0C1E  0846               	movf	??_scale+4,w
  6333  0C1F  00A7               	movwf	___flmul@b+3
  6334  0C20  0845               	movf	??_scale+3,w
  6335  0C21  00A6               	movwf	___flmul@b+2
  6336  0C22  0844               	movf	??_scale+2,w
  6337  0C23  00A5               	movwf	___flmul@b+1
  6338  0C24  0843               	movf	??_scale+1,w
  6339  0C25  00A4               	movwf	___flmul@b
  6340  0C26  300A               	movlw	10
  6341  0C27  00F7               	movwf	___awdiv@divisor
  6342  0C28  3000               	movlw	0
  6343  0C29  00F8               	movwf	___awdiv@divisor+1
  6344  0C2A  0850               	movf	scale@scl,w
  6345  0C2B  00F9               	movwf	___awdiv@dividend
  6346  0C2C  01FA               	clrf	___awdiv@dividend+1
  6347  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  6348  0C2E  03FA               	decf	___awdiv@dividend+1,f
  6349  0C2F  160A  158A  2522  120A  158A  	fcall	___awdiv
  6350  0C34  0877               	movf	?___awdiv,w
  6351  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  6352  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  6353  0C37  00C7               	movwf	??_scale+5
  6354  0C38  3001               	movlw	1
  6355  0C39                     u446_25:
  6356  0C39  1003               	clrc
  6357  0C3A  0DC7               	rlf	??_scale+5,f
  6358  0C3B  3EFF               	addlw	-1
  6359  0C3C  1D03               	skipz
  6360  0C3D  2C39               	goto	u446_25
  6361  0C3E  1003               	clrc
  6362  0C3F  0D47               	rlf	??_scale+5,w
  6363  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  6364  0C41  0084               	movwf	4
  6365  0C42  160A  158A  200A  120A  158A  	fcall	stringdir
  6366  0C47  00C8               	movwf	??_scale+6
  6367  0C48  160A  158A  200A  120A  158A  	fcall	stringdir
  6368  0C4D  00C9               	movwf	??_scale+7
  6369  0C4E  160A  158A  200A  120A  158A  	fcall	stringdir
  6370  0C53  00CA               	movwf	??_scale+8
  6371  0C54  160A  158A  200A  120A  158A  	fcall	stringdir
  6372  0C59  00CB               	movwf	??_scale+9
  6373  0C5A  084B               	movf	??_scale+9,w
  6374  0C5B  00AB               	movwf	___flmul@a+3
  6375  0C5C  084A               	movf	??_scale+8,w
  6376  0C5D  00AA               	movwf	___flmul@a+2
  6377  0C5E  0849               	movf	??_scale+7,w
  6378  0C5F  00A9               	movwf	___flmul@a+1
  6379  0C60  0848               	movf	??_scale+6,w
  6380  0C61  00A8               	movwf	___flmul@a
  6381  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  6382  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  6383  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  6384  0C69  0827               	movf	?___flmul+3,w
  6385  0C6A  00C1               	movwf	?_scale+3
  6386  0C6B  0826               	movf	?___flmul+2,w
  6387  0C6C  00C0               	movwf	?_scale+2
  6388  0C6D  0825               	movf	?___flmul+1,w
  6389  0C6E  00BF               	movwf	?_scale+1
  6390  0C6F  0824               	movf	?___flmul,w
  6391  0C70  00BE               	movwf	?_scale
  6392  0C71  2C9E               	goto	i1l295
  6393  0C72                     i1l3096:
  6394                           
  6395                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  6396  0C72  0850               	movf	scale@scl,w
  6397  0C73  00C2               	movwf	??_scale
  6398  0C74  3001               	movlw	1
  6399  0C75                     u447_25:
  6400  0C75  1003               	clrc
  6401  0C76  0DC2               	rlf	??_scale,f
  6402  0C77  3EFF               	addlw	-1
  6403  0C78  1D03               	skipz
  6404  0C79  2C75               	goto	u447_25
  6405  0C7A  1003               	clrc
  6406  0C7B  0D42               	rlf	??_scale,w
  6407  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  6408  0C7D  0084               	movwf	4
  6409  0C7E  160A  158A  200A  120A  158A  	fcall	stringdir
  6410  0C83  00C3               	movwf	??_scale+1
  6411  0C84  160A  158A  200A  120A  158A  	fcall	stringdir
  6412  0C89  00C4               	movwf	??_scale+2
  6413  0C8A  160A  158A  200A  120A  158A  	fcall	stringdir
  6414  0C8F  00C5               	movwf	??_scale+3
  6415  0C90  160A  158A  200A  120A  158A  	fcall	stringdir
  6416  0C95  00C6               	movwf	??_scale+4
  6417  0C96  0846               	movf	??_scale+4,w
  6418  0C97  00C1               	movwf	?_scale+3
  6419  0C98  0845               	movf	??_scale+3,w
  6420  0C99  00C0               	movwf	?_scale+2
  6421  0C9A  0844               	movf	??_scale+2,w
  6422  0C9B  00BF               	movwf	?_scale+1
  6423  0C9C  0843               	movf	??_scale+1,w
  6424  0C9D  00BE               	movwf	?_scale
  6425  0C9E                     i1l295:
  6426  0C9E  0008               	return
  6427  0C9F                     __end_of_scale:
  6428                           
  6429                           	psect	text19
  6430  1C06                     __ptext19:	
  6431 ;; *************** function ___awmod *****************
  6432 ;; Defined at:
  6433 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  6434 ;; Parameters:    Size  Location     Type
  6435 ;;  divisor         2    0[COMMON] int 
  6436 ;;  dividend        2    2[COMMON] int 
  6437 ;; Auto vars:     Size  Location     Type
  6438 ;;  sign            1    6[COMMON] unsigned char 
  6439 ;;  counter         1    5[COMMON] unsigned char 
  6440 ;; Return value:  Size  Location     Type
  6441 ;;                  2    0[COMMON] int 
  6442 ;; Registers used:
  6443 ;;		wreg, status,2, status,0
  6444 ;; Tracked objects:
  6445 ;;		On entry : 0/0
  6446 ;;		On exit  : 0/0
  6447 ;;		Unchanged: 0/0
  6448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6449 ;;      Params:         4       0       0       0       0
  6450 ;;      Locals:         2       0       0       0       0
  6451 ;;      Temps:          1       0       0       0       0
  6452 ;;      Totals:         7       0       0       0       0
  6453 ;;Total ram usage:        7 bytes
  6454 ;; Hardware stack levels used:    1
  6455 ;; This function calls:
  6456 ;;		Nothing
  6457 ;; This function is called by:
  6458 ;;		_scale
  6459 ;; This function uses a non-reentrant model
  6460 ;;
  6461                           
  6462                           
  6463                           ;psect for function ___awmod
  6464  1C06                     ___awmod:
  6465  1C06                     i1l2600:	
  6466                           ;incstack = 0
  6467                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6468                           
  6469  1C06  01F6               	clrf	___awmod@sign
  6470  1C07                     i1l2602:
  6471  1C07  1FF3               	btfss	___awmod@dividend+1,7
  6472  1C08  2C0A               	goto	u318_21
  6473  1C09  2C0B               	goto	u318_20
  6474  1C0A                     u318_21:
  6475  1C0A  2C12               	goto	i1l2608
  6476  1C0B                     u318_20:
  6477  1C0B                     i1l2604:
  6478  1C0B  09F2               	comf	___awmod@dividend,f
  6479  1C0C  09F3               	comf	___awmod@dividend+1,f
  6480  1C0D  0AF2               	incf	___awmod@dividend,f
  6481  1C0E  1903               	skipnz
  6482  1C0F  0AF3               	incf	___awmod@dividend+1,f
  6483  1C10                     i1l2606:
  6484  1C10  01F6               	clrf	___awmod@sign
  6485  1C11  0AF6               	incf	___awmod@sign,f
  6486  1C12                     i1l2608:
  6487  1C12  1FF1               	btfss	___awmod@divisor+1,7
  6488  1C13  2C15               	goto	u319_21
  6489  1C14  2C16               	goto	u319_20
  6490  1C15                     u319_21:
  6491  1C15  2C1B               	goto	i1l2612
  6492  1C16                     u319_20:
  6493  1C16                     i1l2610:
  6494  1C16  09F0               	comf	___awmod@divisor,f
  6495  1C17  09F1               	comf	___awmod@divisor+1,f
  6496  1C18  0AF0               	incf	___awmod@divisor,f
  6497  1C19  1903               	skipnz
  6498  1C1A  0AF1               	incf	___awmod@divisor+1,f
  6499  1C1B                     i1l2612:
  6500  1C1B  0870               	movf	___awmod@divisor,w
  6501  1C1C  0471               	iorwf	___awmod@divisor+1,w
  6502  1C1D  1903               	btfsc	3,2
  6503  1C1E  2C20               	goto	u320_21
  6504  1C1F  2C21               	goto	u320_20
  6505  1C20                     u320_21:
  6506  1C20  2C50               	goto	i1l2630
  6507  1C21                     u320_20:
  6508  1C21                     i1l2614:
  6509  1C21  01F5               	clrf	___awmod@counter
  6510  1C22  0AF5               	incf	___awmod@counter,f
  6511  1C23  2C2F               	goto	i1l2620
  6512  1C24                     i1l2616:
  6513  1C24  3001               	movlw	1
  6514  1C25                     u321_25:
  6515  1C25  1003               	clrc
  6516  1C26  0DF0               	rlf	___awmod@divisor,f
  6517  1C27  0DF1               	rlf	___awmod@divisor+1,f
  6518  1C28  3EFF               	addlw	-1
  6519  1C29  1D03               	skipz
  6520  1C2A  2C25               	goto	u321_25
  6521  1C2B                     i1l2618:
  6522  1C2B  3001               	movlw	1
  6523  1C2C  00F4               	movwf	??___awmod
  6524  1C2D  0874               	movf	??___awmod,w
  6525  1C2E  07F5               	addwf	___awmod@counter,f
  6526  1C2F                     i1l2620:
  6527  1C2F  1FF1               	btfss	___awmod@divisor+1,7
  6528  1C30  2C32               	goto	u322_21
  6529  1C31  2C33               	goto	u322_20
  6530  1C32                     u322_21:
  6531  1C32  2C24               	goto	i1l2616
  6532  1C33                     u322_20:
  6533  1C33                     i1l2622:
  6534  1C33  0871               	movf	___awmod@divisor+1,w
  6535  1C34  0273               	subwf	___awmod@dividend+1,w
  6536  1C35  1D03               	skipz
  6537  1C36  2C39               	goto	u323_25
  6538  1C37  0870               	movf	___awmod@divisor,w
  6539  1C38  0272               	subwf	___awmod@dividend,w
  6540  1C39                     u323_25:
  6541  1C39  1C03               	skipc
  6542  1C3A  2C3C               	goto	u323_21
  6543  1C3B  2C3D               	goto	u323_20
  6544  1C3C                     u323_21:
  6545  1C3C  2C43               	goto	i1l2626
  6546  1C3D                     u323_20:
  6547  1C3D                     i1l2624:
  6548  1C3D  0870               	movf	___awmod@divisor,w
  6549  1C3E  02F2               	subwf	___awmod@dividend,f
  6550  1C3F  0871               	movf	___awmod@divisor+1,w
  6551  1C40  1C03               	skipc
  6552  1C41  03F3               	decf	___awmod@dividend+1,f
  6553  1C42  02F3               	subwf	___awmod@dividend+1,f
  6554  1C43                     i1l2626:
  6555  1C43  3001               	movlw	1
  6556  1C44                     u324_25:
  6557  1C44  1003               	clrc
  6558  1C45  0CF1               	rrf	___awmod@divisor+1,f
  6559  1C46  0CF0               	rrf	___awmod@divisor,f
  6560  1C47  3EFF               	addlw	-1
  6561  1C48  1D03               	skipz
  6562  1C49  2C44               	goto	u324_25
  6563  1C4A                     i1l2628:
  6564  1C4A  3001               	movlw	1
  6565  1C4B  02F5               	subwf	___awmod@counter,f
  6566  1C4C  1D03               	btfss	3,2
  6567  1C4D  2C4F               	goto	u325_21
  6568  1C4E  2C50               	goto	u325_20
  6569  1C4F                     u325_21:
  6570  1C4F  2C33               	goto	i1l2622
  6571  1C50                     u325_20:
  6572  1C50                     i1l2630:
  6573  1C50  0876               	movf	___awmod@sign,w
  6574  1C51  1903               	btfsc	3,2
  6575  1C52  2C54               	goto	u326_21
  6576  1C53  2C55               	goto	u326_20
  6577  1C54                     u326_21:
  6578  1C54  2C5A               	goto	i1l2634
  6579  1C55                     u326_20:
  6580  1C55                     i1l2632:
  6581  1C55  09F2               	comf	___awmod@dividend,f
  6582  1C56  09F3               	comf	___awmod@dividend+1,f
  6583  1C57  0AF2               	incf	___awmod@dividend,f
  6584  1C58  1903               	skipnz
  6585  1C59  0AF3               	incf	___awmod@dividend+1,f
  6586  1C5A                     i1l2634:
  6587  1C5A  0873               	movf	___awmod@dividend+1,w
  6588  1C5B  00F1               	movwf	?___awmod+1
  6589  1C5C  0872               	movf	___awmod@dividend,w
  6590  1C5D  00F0               	movwf	?___awmod
  6591  1C5E                     i1l531:
  6592  1C5E  0008               	return
  6593  1C5F                     __end_of___awmod:
  6594                           
  6595                           	psect	text20
  6596  1D22                     __ptext20:	
  6597 ;; *************** function ___awdiv *****************
  6598 ;; Defined at:
  6599 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  6600 ;; Parameters:    Size  Location     Type
  6601 ;;  divisor         2    7[COMMON] int 
  6602 ;;  dividend        2    9[COMMON] int 
  6603 ;; Auto vars:     Size  Location     Type
  6604 ;;  quotient        2    2[BANK0 ] int 
  6605 ;;  sign            1    1[BANK0 ] unsigned char 
  6606 ;;  counter         1    0[BANK0 ] unsigned char 
  6607 ;; Return value:  Size  Location     Type
  6608 ;;                  2    7[COMMON] int 
  6609 ;; Registers used:
  6610 ;;		wreg, status,2, status,0
  6611 ;; Tracked objects:
  6612 ;;		On entry : 0/0
  6613 ;;		On exit  : 0/0
  6614 ;;		Unchanged: 0/0
  6615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6616 ;;      Params:         4       0       0       0       0
  6617 ;;      Locals:         0       4       0       0       0
  6618 ;;      Temps:          1       0       0       0       0
  6619 ;;      Totals:         5       4       0       0       0
  6620 ;;Total ram usage:        9 bytes
  6621 ;; Hardware stack levels used:    1
  6622 ;; This function calls:
  6623 ;;		Nothing
  6624 ;; This function is called by:
  6625 ;;		_scale
  6626 ;;		_sprintf
  6627 ;; This function uses a non-reentrant model
  6628 ;;
  6629                           
  6630                           
  6631                           ;psect for function ___awdiv
  6632  1D22                     ___awdiv:
  6633  1D22                     i1l2556:	
  6634                           ;incstack = 0
  6635                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6636                           
  6637  1D22  1283               	bcf	3,5	;RP0=0, select bank0
  6638  1D23  1303               	bcf	3,6	;RP1=0, select bank0
  6639  1D24  01A1               	clrf	___awdiv@sign
  6640  1D25                     i1l2558:
  6641  1D25  1FF8               	btfss	___awdiv@divisor+1,7
  6642  1D26  2D28               	goto	u308_21
  6643  1D27  2D29               	goto	u308_20
  6644  1D28                     u308_21:
  6645  1D28  2D30               	goto	i1l2564
  6646  1D29                     u308_20:
  6647  1D29                     i1l2560:
  6648  1D29  09F7               	comf	___awdiv@divisor,f
  6649  1D2A  09F8               	comf	___awdiv@divisor+1,f
  6650  1D2B  0AF7               	incf	___awdiv@divisor,f
  6651  1D2C  1903               	skipnz
  6652  1D2D  0AF8               	incf	___awdiv@divisor+1,f
  6653  1D2E                     i1l2562:
  6654  1D2E  01A1               	clrf	___awdiv@sign
  6655  1D2F  0AA1               	incf	___awdiv@sign,f
  6656  1D30                     i1l2564:
  6657  1D30  1FFA               	btfss	___awdiv@dividend+1,7
  6658  1D31  2D33               	goto	u309_21
  6659  1D32  2D34               	goto	u309_20
  6660  1D33                     u309_21:
  6661  1D33  2D3D               	goto	i1l2570
  6662  1D34                     u309_20:
  6663  1D34                     i1l2566:
  6664  1D34  09F9               	comf	___awdiv@dividend,f
  6665  1D35  09FA               	comf	___awdiv@dividend+1,f
  6666  1D36  0AF9               	incf	___awdiv@dividend,f
  6667  1D37  1903               	skipnz
  6668  1D38  0AFA               	incf	___awdiv@dividend+1,f
  6669  1D39                     i1l2568:
  6670  1D39  3001               	movlw	1
  6671  1D3A  00FB               	movwf	??___awdiv
  6672  1D3B  087B               	movf	??___awdiv,w
  6673  1D3C  06A1               	xorwf	___awdiv@sign,f
  6674  1D3D                     i1l2570:
  6675  1D3D  01A2               	clrf	___awdiv@quotient
  6676  1D3E  01A3               	clrf	___awdiv@quotient+1
  6677  1D3F                     i1l2572:
  6678  1D3F  0877               	movf	___awdiv@divisor,w
  6679  1D40  0478               	iorwf	___awdiv@divisor+1,w
  6680  1D41  1903               	btfsc	3,2
  6681  1D42  2D44               	goto	u310_21
  6682  1D43  2D45               	goto	u310_20
  6683  1D44                     u310_21:
  6684  1D44  2D7C               	goto	i1l2592
  6685  1D45                     u310_20:
  6686  1D45                     i1l2574:
  6687  1D45  01A0               	clrf	___awdiv@counter
  6688  1D46  0AA0               	incf	___awdiv@counter,f
  6689  1D47  2D53               	goto	i1l2580
  6690  1D48                     i1l2576:
  6691  1D48  3001               	movlw	1
  6692  1D49                     u311_25:
  6693  1D49  1003               	clrc
  6694  1D4A  0DF7               	rlf	___awdiv@divisor,f
  6695  1D4B  0DF8               	rlf	___awdiv@divisor+1,f
  6696  1D4C  3EFF               	addlw	-1
  6697  1D4D  1D03               	skipz
  6698  1D4E  2D49               	goto	u311_25
  6699  1D4F                     i1l2578:
  6700  1D4F  3001               	movlw	1
  6701  1D50  00FB               	movwf	??___awdiv
  6702  1D51  087B               	movf	??___awdiv,w
  6703  1D52  07A0               	addwf	___awdiv@counter,f
  6704  1D53                     i1l2580:
  6705  1D53  1FF8               	btfss	___awdiv@divisor+1,7
  6706  1D54  2D56               	goto	u312_21
  6707  1D55  2D57               	goto	u312_20
  6708  1D56                     u312_21:
  6709  1D56  2D48               	goto	i1l2576
  6710  1D57                     u312_20:
  6711  1D57                     i1l2582:
  6712  1D57  3001               	movlw	1
  6713  1D58                     u313_25:
  6714  1D58  1003               	clrc
  6715  1D59  0DA2               	rlf	___awdiv@quotient,f
  6716  1D5A  0DA3               	rlf	___awdiv@quotient+1,f
  6717  1D5B  3EFF               	addlw	-1
  6718  1D5C  1D03               	skipz
  6719  1D5D  2D58               	goto	u313_25
  6720  1D5E  0878               	movf	___awdiv@divisor+1,w
  6721  1D5F  027A               	subwf	___awdiv@dividend+1,w
  6722  1D60  1D03               	skipz
  6723  1D61  2D64               	goto	u314_25
  6724  1D62  0877               	movf	___awdiv@divisor,w
  6725  1D63  0279               	subwf	___awdiv@dividend,w
  6726  1D64                     u314_25:
  6727  1D64  1C03               	skipc
  6728  1D65  2D67               	goto	u314_21
  6729  1D66  2D68               	goto	u314_20
  6730  1D67                     u314_21:
  6731  1D67  2D6F               	goto	i1l2588
  6732  1D68                     u314_20:
  6733  1D68                     i1l2584:
  6734  1D68  0877               	movf	___awdiv@divisor,w
  6735  1D69  02F9               	subwf	___awdiv@dividend,f
  6736  1D6A  0878               	movf	___awdiv@divisor+1,w
  6737  1D6B  1C03               	skipc
  6738  1D6C  03FA               	decf	___awdiv@dividend+1,f
  6739  1D6D  02FA               	subwf	___awdiv@dividend+1,f
  6740  1D6E                     i1l2586:
  6741  1D6E  1422               	bsf	___awdiv@quotient,0
  6742  1D6F                     i1l2588:
  6743  1D6F  3001               	movlw	1
  6744  1D70                     u315_25:
  6745  1D70  1003               	clrc
  6746  1D71  0CF8               	rrf	___awdiv@divisor+1,f
  6747  1D72  0CF7               	rrf	___awdiv@divisor,f
  6748  1D73  3EFF               	addlw	-1
  6749  1D74  1D03               	skipz
  6750  1D75  2D70               	goto	u315_25
  6751  1D76                     i1l2590:
  6752  1D76  3001               	movlw	1
  6753  1D77  02A0               	subwf	___awdiv@counter,f
  6754  1D78  1D03               	btfss	3,2
  6755  1D79  2D7B               	goto	u316_21
  6756  1D7A  2D7C               	goto	u316_20
  6757  1D7B                     u316_21:
  6758  1D7B  2D57               	goto	i1l2582
  6759  1D7C                     u316_20:
  6760  1D7C                     i1l2592:
  6761  1D7C  0821               	movf	___awdiv@sign,w
  6762  1D7D  1903               	btfsc	3,2
  6763  1D7E  2D80               	goto	u317_21
  6764  1D7F  2D81               	goto	u317_20
  6765  1D80                     u317_21:
  6766  1D80  2D86               	goto	i1l2596
  6767  1D81                     u317_20:
  6768  1D81                     i1l2594:
  6769  1D81  09A2               	comf	___awdiv@quotient,f
  6770  1D82  09A3               	comf	___awdiv@quotient+1,f
  6771  1D83  0AA2               	incf	___awdiv@quotient,f
  6772  1D84  1903               	skipnz
  6773  1D85  0AA3               	incf	___awdiv@quotient+1,f
  6774  1D86                     i1l2596:
  6775  1D86  0823               	movf	___awdiv@quotient+1,w
  6776  1D87  00F8               	movwf	?___awdiv+1
  6777  1D88  0822               	movf	___awdiv@quotient,w
  6778  1D89  00F7               	movwf	?___awdiv
  6779  1D8A                     i1l518:
  6780  1D8A  0008               	return
  6781  1D8B                     __end_of___awdiv:
  6782                           
  6783                           	psect	text21
  6784  1003                     __ptext21:	
  6785 ;; *************** function _isdigit *****************
  6786 ;; Defined at:
  6787 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  6788 ;; Parameters:    Size  Location     Type
  6789 ;;  c               1    wreg     unsigned char 
  6790 ;; Auto vars:     Size  Location     Type
  6791 ;;  c               1    1[COMMON] unsigned char 
  6792 ;; Return value:  Size  Location     Type
  6793 ;;		None               void
  6794 ;; Registers used:
  6795 ;;		wreg, status,2, status,0
  6796 ;; Tracked objects:
  6797 ;;		On entry : 0/0
  6798 ;;		On exit  : 0/0
  6799 ;;		Unchanged: 0/0
  6800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6801 ;;      Params:         0       0       0       0       0
  6802 ;;      Locals:         2       0       0       0       0
  6803 ;;      Temps:          0       0       0       0       0
  6804 ;;      Totals:         2       0       0       0       0
  6805 ;;Total ram usage:        2 bytes
  6806 ;; Hardware stack levels used:    1
  6807 ;; This function calls:
  6808 ;;		Nothing
  6809 ;; This function is called by:
  6810 ;;		_sprintf
  6811 ;; This function uses a non-reentrant model
  6812 ;;
  6813                           
  6814                           
  6815                           ;psect for function _isdigit
  6816  1003                     _isdigit:
  6817                           
  6818                           ;incstack = 0
  6819                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  6820                           ;isdigit@c stored from wreg
  6821  1003  00F1               	movwf	isdigit@c
  6822  1004                     i1l3100:
  6823  1004  01F0               	clrf	_isdigit$1023
  6824  1005                     i1l3102:
  6825  1005  303A               	movlw	58
  6826  1006  0271               	subwf	isdigit@c,w
  6827  1007  1803               	skipnc
  6828  1008  280A               	goto	u448_21
  6829  1009  280B               	goto	u448_20
  6830  100A                     u448_21:
  6831  100A  2813               	goto	i1l3108
  6832  100B                     u448_20:
  6833  100B                     i1l3104:
  6834  100B  3030               	movlw	48
  6835  100C  0271               	subwf	isdigit@c,w
  6836  100D  1C03               	skipc
  6837  100E  2810               	goto	u449_21
  6838  100F  2811               	goto	u449_20
  6839  1010                     u449_21:
  6840  1010  2813               	goto	i1l3108
  6841  1011                     u449_20:
  6842  1011                     i1l3106:
  6843  1011  01F0               	clrf	_isdigit$1023
  6844  1012  0AF0               	incf	_isdigit$1023,f
  6845  1013                     i1l3108:
  6846  1013  0C70               	rrf	_isdigit$1023,w
  6847  1014                     i1l852:
  6848  1014  0008               	return
  6849  1015                     __end_of_isdigit:
  6850                           
  6851                           	psect	text22
  6852  136D                     __ptext22:	
  6853 ;; *************** function _fround *****************
  6854 ;; Defined at:
  6855 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  6856 ;; Parameters:    Size  Location     Type
  6857 ;;  prec            1    wreg     unsigned char 
  6858 ;; Auto vars:     Size  Location     Type
  6859 ;;  prec            1   49[BANK0 ] unsigned char 
  6860 ;; Return value:  Size  Location     Type
  6861 ;;                  4   30[BANK0 ] unsigned char 
  6862 ;; Registers used:
  6863 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6864 ;; Tracked objects:
  6865 ;;		On entry : 0/0
  6866 ;;		On exit  : 0/0
  6867 ;;		Unchanged: 0/0
  6868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6869 ;;      Params:         0       4       0       0       0
  6870 ;;      Locals:         0       9       0       0       0
  6871 ;;      Temps:          0       7       0       0       0
  6872 ;;      Totals:         0      20       0       0       0
  6873 ;;Total ram usage:       20 bytes
  6874 ;; Hardware stack levels used:    1
  6875 ;; Hardware stack levels required when called:    2
  6876 ;; This function calls:
  6877 ;;		___flmul
  6878 ;;		___lwdiv
  6879 ;;		___lwmod
  6880 ;; This function is called by:
  6881 ;;		_sprintf
  6882 ;; This function uses a non-reentrant model
  6883 ;;
  6884                           
  6885                           
  6886                           ;psect for function _fround
  6887  136D                     _fround:
  6888                           
  6889                           ;incstack = 0
  6890 ;; using string table level
  6891                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6892                           ;fround@prec stored from wreg
  6893  136D  1283               	bcf	3,5	;RP0=0, select bank0
  6894  136E  1303               	bcf	3,6	;RP1=0, select bank0
  6895  136F  00D1               	movwf	fround@prec
  6896  1370                     i1l3042:
  6897                           
  6898                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  6899  1370  306E               	movlw	110
  6900  1371  0251               	subwf	fround@prec,w
  6901  1372  1C03               	skipc
  6902  1373  2B75               	goto	u423_21
  6903  1374  2B76               	goto	u423_20
  6904  1375                     u423_21:
  6905  1375  2C83               	goto	i1l3050
  6906  1376                     u423_20:
  6907  1376                     i1l3044:
  6908                           
  6909                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  6910  1376  303F               	movlw	63
  6911  1377  00A7               	movwf	___flmul@b+3
  6912  1378  3000               	movlw	0
  6913  1379  00A6               	movwf	___flmul@b+2
  6914  137A  3000               	movlw	0
  6915  137B  00A5               	movwf	___flmul@b+1
  6916  137C  3000               	movlw	0
  6917  137D  00A4               	movwf	___flmul@b
  6918  137E  3064               	movlw	100
  6919  137F  00F6               	movwf	___lwdiv@divisor
  6920  1380  3000               	movlw	0
  6921  1381  00F7               	movwf	___lwdiv@divisor+1
  6922  1382  0851               	movf	fround@prec,w
  6923  1383  00C2               	movwf	??_fround
  6924  1384  01C3               	clrf	??_fround+1
  6925  1385  0842               	movf	??_fround,w
  6926  1386  00F8               	movwf	___lwdiv@dividend
  6927  1387  0843               	movf	??_fround+1,w
  6928  1388  00F9               	movwf	___lwdiv@dividend+1
  6929  1389  160A  158A  22CC  160A  118A  	fcall	___lwdiv
  6930  138E  0876               	movf	?___lwdiv,w
  6931  138F  1283               	bcf	3,5	;RP0=0, select bank0
  6932  1390  1303               	bcf	3,6	;RP1=0, select bank0
  6933  1391  00C4               	movwf	??_fround+2
  6934  1392  3001               	movlw	1
  6935  1393                     u424_25:
  6936  1393  1003               	clrc
  6937  1394  0DC4               	rlf	??_fround+2,f
  6938  1395  3EFF               	addlw	-1
  6939  1396  1D03               	skipz
  6940  1397  2B93               	goto	u424_25
  6941  1398  1003               	clrc
  6942  1399  0D44               	rlf	??_fround+2,w
  6943  139A  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  6944  139B  0084               	movwf	4
  6945  139C  160A  158A  200A  160A  118A  	fcall	stringdir
  6946  13A1  00C5               	movwf	??_fround+3
  6947  13A2  160A  158A  200A  160A  118A  	fcall	stringdir
  6948  13A7  00C6               	movwf	??_fround+4
  6949  13A8  160A  158A  200A  160A  118A  	fcall	stringdir
  6950  13AD  00C7               	movwf	??_fround+5
  6951  13AE  160A  158A  200A  160A  118A  	fcall	stringdir
  6952  13B3  00C8               	movwf	??_fround+6
  6953  13B4  0848               	movf	??_fround+6,w
  6954  13B5  00AB               	movwf	___flmul@a+3
  6955  13B6  0847               	movf	??_fround+5,w
  6956  13B7  00AA               	movwf	___flmul@a+2
  6957  13B8  0846               	movf	??_fround+4,w
  6958  13B9  00A9               	movwf	___flmul@a+1
  6959  13BA  0845               	movf	??_fround+3,w
  6960  13BB  00A8               	movwf	___flmul@a
  6961  13BC  120A  158A  249F  160A  118A  	fcall	___flmul
  6962  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  6963  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  6964  13C3  0827               	movf	?___flmul+3,w
  6965  13C4  00D0               	movwf	_fround$1204+3
  6966  13C5  0826               	movf	?___flmul+2,w
  6967  13C6  00CF               	movwf	_fround$1204+2
  6968  13C7  0825               	movf	?___flmul+1,w
  6969  13C8  00CE               	movwf	_fround$1204+1
  6970  13C9  0824               	movf	?___flmul,w
  6971  13CA  00CD               	movwf	_fround$1204
  6972                           
  6973                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  6974  13CB  300A               	movlw	10
  6975  13CC  00F6               	movwf	___lwdiv@divisor
  6976  13CD  3000               	movlw	0
  6977  13CE  00F7               	movwf	___lwdiv@divisor+1
  6978  13CF  0851               	movf	fround@prec,w
  6979  13D0  00C2               	movwf	??_fround
  6980  13D1  01C3               	clrf	??_fround+1
  6981  13D2  0842               	movf	??_fround,w
  6982  13D3  00F2               	movwf	___lwmod@dividend
  6983  13D4  0843               	movf	??_fround+1,w
  6984  13D5  00F3               	movwf	___lwmod@dividend+1
  6985  13D6  3064               	movlw	100
  6986  13D7  00F0               	movwf	___lwmod@divisor
  6987  13D8  3000               	movlw	0
  6988  13D9  00F1               	movwf	___lwmod@divisor+1
  6989  13DA  160A  158A  2250  160A  118A  	fcall	___lwmod
  6990  13DF  0871               	movf	?___lwmod+1,w
  6991  13E0  00F9               	movwf	___lwdiv@dividend+1
  6992  13E1  0870               	movf	?___lwmod,w
  6993  13E2  00F8               	movwf	___lwdiv@dividend
  6994  13E3  160A  158A  22CC  160A  118A  	fcall	___lwdiv
  6995  13E8  0876               	movf	?___lwdiv,w
  6996  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  6997  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  6998  13EB  00C4               	movwf	??_fround+2
  6999  13EC  3001               	movlw	1
  7000  13ED                     u425_25:
  7001  13ED  1003               	clrc
  7002  13EE  0DC4               	rlf	??_fround+2,f
  7003  13EF  3EFF               	addlw	-1
  7004  13F0  1D03               	skipz
  7005  13F1  2BED               	goto	u425_25
  7006  13F2  1003               	clrc
  7007  13F3  0D44               	rlf	??_fround+2,w
  7008  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  7009  13F5  0084               	movwf	4
  7010  13F6  160A  158A  200A  160A  118A  	fcall	stringdir
  7011  13FB  00C5               	movwf	??_fround+3
  7012  13FC  160A  158A  200A  160A  118A  	fcall	stringdir
  7013  1401  00C6               	movwf	??_fround+4
  7014  1402  160A  158A  200A  160A  118A  	fcall	stringdir
  7015  1407  00C7               	movwf	??_fround+5
  7016  1408  160A  158A  200A  160A  118A  	fcall	stringdir
  7017  140D  00C8               	movwf	??_fround+6
  7018  140E  0848               	movf	??_fround+6,w
  7019  140F  00A7               	movwf	___flmul@b+3
  7020  1410  0847               	movf	??_fround+5,w
  7021  1411  00A6               	movwf	___flmul@b+2
  7022  1412  0846               	movf	??_fround+4,w
  7023  1413  00A5               	movwf	___flmul@b+1
  7024  1414  0845               	movf	??_fround+3,w
  7025  1415  00A4               	movwf	___flmul@b
  7026  1416  0850               	movf	_fround$1204+3,w
  7027  1417  00AB               	movwf	___flmul@a+3
  7028  1418  084F               	movf	_fround$1204+2,w
  7029  1419  00AA               	movwf	___flmul@a+2
  7030  141A  084E               	movf	_fround$1204+1,w
  7031  141B  00A9               	movwf	___flmul@a+1
  7032  141C  084D               	movf	_fround$1204,w
  7033  141D  00A8               	movwf	___flmul@a
  7034  141E  120A  158A  249F  160A  118A  	fcall	___flmul
  7035  1423  1283               	bcf	3,5	;RP0=0, select bank0
  7036  1424  1303               	bcf	3,6	;RP1=0, select bank0
  7037  1425  0827               	movf	?___flmul+3,w
  7038  1426  00CC               	movwf	_fround$1205+3
  7039  1427  0826               	movf	?___flmul+2,w
  7040  1428  00CB               	movwf	_fround$1205+2
  7041  1429  0825               	movf	?___flmul+1,w
  7042  142A  00CA               	movwf	_fround$1205+1
  7043  142B  0824               	movf	?___flmul,w
  7044  142C  00C9               	movwf	_fround$1205
  7045                           
  7046                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  7047  142D  300A               	movlw	10
  7048  142E  00F0               	movwf	___lwmod@divisor
  7049  142F  3000               	movlw	0
  7050  1430  00F1               	movwf	___lwmod@divisor+1
  7051  1431  0851               	movf	fround@prec,w
  7052  1432  00C2               	movwf	??_fround
  7053  1433  01C3               	clrf	??_fround+1
  7054  1434  0842               	movf	??_fround,w
  7055  1435  00F2               	movwf	___lwmod@dividend
  7056  1436  0843               	movf	??_fround+1,w
  7057  1437  00F3               	movwf	___lwmod@dividend+1
  7058  1438  160A  158A  2250  160A  118A  	fcall	___lwmod
  7059  143D  0870               	movf	?___lwmod,w
  7060  143E  1283               	bcf	3,5	;RP0=0, select bank0
  7061  143F  1303               	bcf	3,6	;RP1=0, select bank0
  7062  1440  00C4               	movwf	??_fround+2
  7063  1441  3001               	movlw	1
  7064  1442                     u426_25:
  7065  1442  1003               	clrc
  7066  1443  0DC4               	rlf	??_fround+2,f
  7067  1444  3EFF               	addlw	-1
  7068  1445  1D03               	skipz
  7069  1446  2C42               	goto	u426_25
  7070  1447  1003               	clrc
  7071  1448  0D44               	rlf	??_fround+2,w
  7072  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  7073  144A  0084               	movwf	4
  7074  144B  160A  158A  200A  160A  118A  	fcall	stringdir
  7075  1450  00C5               	movwf	??_fround+3
  7076  1451  160A  158A  200A  160A  118A  	fcall	stringdir
  7077  1456  00C6               	movwf	??_fround+4
  7078  1457  160A  158A  200A  160A  118A  	fcall	stringdir
  7079  145C  00C7               	movwf	??_fround+5
  7080  145D  160A  158A  200A  160A  118A  	fcall	stringdir
  7081  1462  00C8               	movwf	??_fround+6
  7082  1463  0848               	movf	??_fround+6,w
  7083  1464  00A7               	movwf	___flmul@b+3
  7084  1465  0847               	movf	??_fround+5,w
  7085  1466  00A6               	movwf	___flmul@b+2
  7086  1467  0846               	movf	??_fround+4,w
  7087  1468  00A5               	movwf	___flmul@b+1
  7088  1469  0845               	movf	??_fround+3,w
  7089  146A  00A4               	movwf	___flmul@b
  7090  146B  084C               	movf	_fround$1205+3,w
  7091  146C  00AB               	movwf	___flmul@a+3
  7092  146D  084B               	movf	_fround$1205+2,w
  7093  146E  00AA               	movwf	___flmul@a+2
  7094  146F  084A               	movf	_fround$1205+1,w
  7095  1470  00A9               	movwf	___flmul@a+1
  7096  1471  0849               	movf	_fround$1205,w
  7097  1472  00A8               	movwf	___flmul@a
  7098  1473  120A  158A  249F  160A  118A  	fcall	___flmul
  7099  1478  1283               	bcf	3,5	;RP0=0, select bank0
  7100  1479  1303               	bcf	3,6	;RP1=0, select bank0
  7101  147A  0827               	movf	?___flmul+3,w
  7102  147B  00C1               	movwf	?_fround+3
  7103  147C  0826               	movf	?___flmul+2,w
  7104  147D  00C0               	movwf	?_fround+2
  7105  147E  0825               	movf	?___flmul+1,w
  7106  147F  00BF               	movwf	?_fround+1
  7107  1480  0824               	movf	?___flmul,w
  7108  1481  00BE               	movwf	?_fround
  7109  1482  2D77               	goto	i1l288
  7110  1483                     i1l3050:
  7111  1483  300B               	movlw	11
  7112  1484  0251               	subwf	fround@prec,w
  7113  1485  1C03               	skipc
  7114  1486  2C88               	goto	u427_21
  7115  1487  2C89               	goto	u427_20
  7116  1488                     u427_21:
  7117  1488  2D34               	goto	i1l3056
  7118  1489                     u427_20:
  7119  1489                     i1l3052:
  7120                           
  7121                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  7122  1489  303F               	movlw	63
  7123  148A  00A7               	movwf	___flmul@b+3
  7124  148B  3000               	movlw	0
  7125  148C  00A6               	movwf	___flmul@b+2
  7126  148D  3000               	movlw	0
  7127  148E  00A5               	movwf	___flmul@b+1
  7128  148F  3000               	movlw	0
  7129  1490  00A4               	movwf	___flmul@b
  7130  1491  300A               	movlw	10
  7131  1492  00F6               	movwf	___lwdiv@divisor
  7132  1493  3000               	movlw	0
  7133  1494  00F7               	movwf	___lwdiv@divisor+1
  7134  1495  0851               	movf	fround@prec,w
  7135  1496  00C2               	movwf	??_fround
  7136  1497  01C3               	clrf	??_fround+1
  7137  1498  0842               	movf	??_fround,w
  7138  1499  00F8               	movwf	___lwdiv@dividend
  7139  149A  0843               	movf	??_fround+1,w
  7140  149B  00F9               	movwf	___lwdiv@dividend+1
  7141  149C  160A  158A  22CC  160A  118A  	fcall	___lwdiv
  7142  14A1  0876               	movf	?___lwdiv,w
  7143  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  7144  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  7145  14A4  00C4               	movwf	??_fround+2
  7146  14A5  3001               	movlw	1
  7147  14A6                     u428_25:
  7148  14A6  1003               	clrc
  7149  14A7  0DC4               	rlf	??_fround+2,f
  7150  14A8  3EFF               	addlw	-1
  7151  14A9  1D03               	skipz
  7152  14AA  2CA6               	goto	u428_25
  7153  14AB  1003               	clrc
  7154  14AC  0D44               	rlf	??_fround+2,w
  7155  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  7156  14AE  0084               	movwf	4
  7157  14AF  160A  158A  200A  160A  118A  	fcall	stringdir
  7158  14B4  00C5               	movwf	??_fround+3
  7159  14B5  160A  158A  200A  160A  118A  	fcall	stringdir
  7160  14BA  00C6               	movwf	??_fround+4
  7161  14BB  160A  158A  200A  160A  118A  	fcall	stringdir
  7162  14C0  00C7               	movwf	??_fround+5
  7163  14C1  160A  158A  200A  160A  118A  	fcall	stringdir
  7164  14C6  00C8               	movwf	??_fround+6
  7165  14C7  0848               	movf	??_fround+6,w
  7166  14C8  00AB               	movwf	___flmul@a+3
  7167  14C9  0847               	movf	??_fround+5,w
  7168  14CA  00AA               	movwf	___flmul@a+2
  7169  14CB  0846               	movf	??_fround+4,w
  7170  14CC  00A9               	movwf	___flmul@a+1
  7171  14CD  0845               	movf	??_fround+3,w
  7172  14CE  00A8               	movwf	___flmul@a
  7173  14CF  120A  158A  249F  160A  118A  	fcall	___flmul
  7174  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  7175  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  7176  14D6  0827               	movf	?___flmul+3,w
  7177  14D7  00D0               	movwf	_fround$1204+3
  7178  14D8  0826               	movf	?___flmul+2,w
  7179  14D9  00CF               	movwf	_fround$1204+2
  7180  14DA  0825               	movf	?___flmul+1,w
  7181  14DB  00CE               	movwf	_fround$1204+1
  7182  14DC  0824               	movf	?___flmul,w
  7183  14DD  00CD               	movwf	_fround$1204
  7184                           
  7185                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  7186  14DE  300A               	movlw	10
  7187  14DF  00F0               	movwf	___lwmod@divisor
  7188  14E0  3000               	movlw	0
  7189  14E1  00F1               	movwf	___lwmod@divisor+1
  7190  14E2  0851               	movf	fround@prec,w
  7191  14E3  00C2               	movwf	??_fround
  7192  14E4  01C3               	clrf	??_fround+1
  7193  14E5  0842               	movf	??_fround,w
  7194  14E6  00F2               	movwf	___lwmod@dividend
  7195  14E7  0843               	movf	??_fround+1,w
  7196  14E8  00F3               	movwf	___lwmod@dividend+1
  7197  14E9  160A  158A  2250  160A  118A  	fcall	___lwmod
  7198  14EE  0870               	movf	?___lwmod,w
  7199  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  7200  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  7201  14F1  00C4               	movwf	??_fround+2
  7202  14F2  3001               	movlw	1
  7203  14F3                     u429_25:
  7204  14F3  1003               	clrc
  7205  14F4  0DC4               	rlf	??_fround+2,f
  7206  14F5  3EFF               	addlw	-1
  7207  14F6  1D03               	skipz
  7208  14F7  2CF3               	goto	u429_25
  7209  14F8  1003               	clrc
  7210  14F9  0D44               	rlf	??_fround+2,w
  7211  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  7212  14FB  0084               	movwf	4
  7213  14FC  160A  158A  200A  160A  118A  	fcall	stringdir
  7214  1501  00C5               	movwf	??_fround+3
  7215  1502  160A  158A  200A  160A  118A  	fcall	stringdir
  7216  1507  00C6               	movwf	??_fround+4
  7217  1508  160A  158A  200A  160A  118A  	fcall	stringdir
  7218  150D  00C7               	movwf	??_fround+5
  7219  150E  160A  158A  200A  160A  118A  	fcall	stringdir
  7220  1513  00C8               	movwf	??_fround+6
  7221  1514  0848               	movf	??_fround+6,w
  7222  1515  00A7               	movwf	___flmul@b+3
  7223  1516  0847               	movf	??_fround+5,w
  7224  1517  00A6               	movwf	___flmul@b+2
  7225  1518  0846               	movf	??_fround+4,w
  7226  1519  00A5               	movwf	___flmul@b+1
  7227  151A  0845               	movf	??_fround+3,w
  7228  151B  00A4               	movwf	___flmul@b
  7229  151C  0850               	movf	_fround$1204+3,w
  7230  151D  00AB               	movwf	___flmul@a+3
  7231  151E  084F               	movf	_fround$1204+2,w
  7232  151F  00AA               	movwf	___flmul@a+2
  7233  1520  084E               	movf	_fround$1204+1,w
  7234  1521  00A9               	movwf	___flmul@a+1
  7235  1522  084D               	movf	_fround$1204,w
  7236  1523  00A8               	movwf	___flmul@a
  7237  1524  120A  158A  249F  160A  118A  	fcall	___flmul
  7238  1529  1283               	bcf	3,5	;RP0=0, select bank0
  7239  152A  1303               	bcf	3,6	;RP1=0, select bank0
  7240  152B  0827               	movf	?___flmul+3,w
  7241  152C  00C1               	movwf	?_fround+3
  7242  152D  0826               	movf	?___flmul+2,w
  7243  152E  00C0               	movwf	?_fround+2
  7244  152F  0825               	movf	?___flmul+1,w
  7245  1530  00BF               	movwf	?_fround+1
  7246  1531  0824               	movf	?___flmul,w
  7247  1532  00BE               	movwf	?_fround
  7248  1533  2D77               	goto	i1l288
  7249  1534                     i1l3056:
  7250                           
  7251                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  7252  1534  303F               	movlw	63
  7253  1535  00A7               	movwf	___flmul@b+3
  7254  1536  3000               	movlw	0
  7255  1537  00A6               	movwf	___flmul@b+2
  7256  1538  3000               	movlw	0
  7257  1539  00A5               	movwf	___flmul@b+1
  7258  153A  3000               	movlw	0
  7259  153B  00A4               	movwf	___flmul@b
  7260  153C  0851               	movf	fround@prec,w
  7261  153D  00C2               	movwf	??_fround
  7262  153E  3001               	movlw	1
  7263  153F                     u430_25:
  7264  153F  1003               	clrc
  7265  1540  0DC2               	rlf	??_fround,f
  7266  1541  3EFF               	addlw	-1
  7267  1542  1D03               	skipz
  7268  1543  2D3F               	goto	u430_25
  7269  1544  1003               	clrc
  7270  1545  0D42               	rlf	??_fround,w
  7271  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  7272  1547  0084               	movwf	4
  7273  1548  160A  158A  200A  160A  118A  	fcall	stringdir
  7274  154D  00C3               	movwf	??_fround+1
  7275  154E  160A  158A  200A  160A  118A  	fcall	stringdir
  7276  1553  00C4               	movwf	??_fround+2
  7277  1554  160A  158A  200A  160A  118A  	fcall	stringdir
  7278  1559  00C5               	movwf	??_fround+3
  7279  155A  160A  158A  200A  160A  118A  	fcall	stringdir
  7280  155F  00C6               	movwf	??_fround+4
  7281  1560  0846               	movf	??_fround+4,w
  7282  1561  00AB               	movwf	___flmul@a+3
  7283  1562  0845               	movf	??_fround+3,w
  7284  1563  00AA               	movwf	___flmul@a+2
  7285  1564  0844               	movf	??_fround+2,w
  7286  1565  00A9               	movwf	___flmul@a+1
  7287  1566  0843               	movf	??_fround+1,w
  7288  1567  00A8               	movwf	___flmul@a
  7289  1568  120A  158A  249F  160A  118A  	fcall	___flmul
  7290  156D  1283               	bcf	3,5	;RP0=0, select bank0
  7291  156E  1303               	bcf	3,6	;RP1=0, select bank0
  7292  156F  0827               	movf	?___flmul+3,w
  7293  1570  00C1               	movwf	?_fround+3
  7294  1571  0826               	movf	?___flmul+2,w
  7295  1572  00C0               	movwf	?_fround+2
  7296  1573  0825               	movf	?___flmul+1,w
  7297  1574  00BF               	movwf	?_fround+1
  7298  1575  0824               	movf	?___flmul,w
  7299  1576  00BE               	movwf	?_fround
  7300  1577                     i1l288:
  7301  1577  0008               	return
  7302  1578                     __end_of_fround:
  7303                           
  7304                           	psect	text23
  7305  1A50                     __ptext23:	
  7306 ;; *************** function ___lwmod *****************
  7307 ;; Defined at:
  7308 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  7309 ;; Parameters:    Size  Location     Type
  7310 ;;  divisor         2    0[COMMON] unsigned int 
  7311 ;;  dividend        2    2[COMMON] unsigned int 
  7312 ;; Auto vars:     Size  Location     Type
  7313 ;;  counter         1    5[COMMON] unsigned char 
  7314 ;; Return value:  Size  Location     Type
  7315 ;;                  2    0[COMMON] unsigned int 
  7316 ;; Registers used:
  7317 ;;		wreg, status,2, status,0
  7318 ;; Tracked objects:
  7319 ;;		On entry : 0/0
  7320 ;;		On exit  : 0/0
  7321 ;;		Unchanged: 0/0
  7322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7323 ;;      Params:         4       0       0       0       0
  7324 ;;      Locals:         1       0       0       0       0
  7325 ;;      Temps:          1       0       0       0       0
  7326 ;;      Totals:         6       0       0       0       0
  7327 ;;Total ram usage:        6 bytes
  7328 ;; Hardware stack levels used:    1
  7329 ;; This function calls:
  7330 ;;		Nothing
  7331 ;; This function is called by:
  7332 ;;		_fround
  7333 ;; This function uses a non-reentrant model
  7334 ;;
  7335                           
  7336                           
  7337                           ;psect for function ___lwmod
  7338  1A50                     ___lwmod:
  7339  1A50                     i1l2664:	
  7340                           ;incstack = 0
  7341                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  7342                           
  7343  1A50  0870               	movf	___lwmod@divisor,w
  7344  1A51  0471               	iorwf	___lwmod@divisor+1,w
  7345  1A52  1903               	btfsc	3,2
  7346  1A53  2A55               	goto	u334_21
  7347  1A54  2A56               	goto	u334_20
  7348  1A55                     u334_21:
  7349  1A55  2A85               	goto	i1l2682
  7350  1A56                     u334_20:
  7351  1A56                     i1l2666:
  7352  1A56  01F5               	clrf	___lwmod@counter
  7353  1A57  0AF5               	incf	___lwmod@counter,f
  7354  1A58  2A64               	goto	i1l2672
  7355  1A59                     i1l2668:
  7356  1A59  3001               	movlw	1
  7357  1A5A                     u335_25:
  7358  1A5A  1003               	clrc
  7359  1A5B  0DF0               	rlf	___lwmod@divisor,f
  7360  1A5C  0DF1               	rlf	___lwmod@divisor+1,f
  7361  1A5D  3EFF               	addlw	-1
  7362  1A5E  1D03               	skipz
  7363  1A5F  2A5A               	goto	u335_25
  7364  1A60                     i1l2670:
  7365  1A60  3001               	movlw	1
  7366  1A61  00F4               	movwf	??___lwmod
  7367  1A62  0874               	movf	??___lwmod,w
  7368  1A63  07F5               	addwf	___lwmod@counter,f
  7369  1A64                     i1l2672:
  7370  1A64  1FF1               	btfss	___lwmod@divisor+1,7
  7371  1A65  2A67               	goto	u336_21
  7372  1A66  2A68               	goto	u336_20
  7373  1A67                     u336_21:
  7374  1A67  2A59               	goto	i1l2668
  7375  1A68                     u336_20:
  7376  1A68                     i1l2674:
  7377  1A68  0871               	movf	___lwmod@divisor+1,w
  7378  1A69  0273               	subwf	___lwmod@dividend+1,w
  7379  1A6A  1D03               	skipz
  7380  1A6B  2A6E               	goto	u337_25
  7381  1A6C  0870               	movf	___lwmod@divisor,w
  7382  1A6D  0272               	subwf	___lwmod@dividend,w
  7383  1A6E                     u337_25:
  7384  1A6E  1C03               	skipc
  7385  1A6F  2A71               	goto	u337_21
  7386  1A70  2A72               	goto	u337_20
  7387  1A71                     u337_21:
  7388  1A71  2A78               	goto	i1l2678
  7389  1A72                     u337_20:
  7390  1A72                     i1l2676:
  7391  1A72  0870               	movf	___lwmod@divisor,w
  7392  1A73  02F2               	subwf	___lwmod@dividend,f
  7393  1A74  0871               	movf	___lwmod@divisor+1,w
  7394  1A75  1C03               	skipc
  7395  1A76  03F3               	decf	___lwmod@dividend+1,f
  7396  1A77  02F3               	subwf	___lwmod@dividend+1,f
  7397  1A78                     i1l2678:
  7398  1A78  3001               	movlw	1
  7399  1A79                     u338_25:
  7400  1A79  1003               	clrc
  7401  1A7A  0CF1               	rrf	___lwmod@divisor+1,f
  7402  1A7B  0CF0               	rrf	___lwmod@divisor,f
  7403  1A7C  3EFF               	addlw	-1
  7404  1A7D  1D03               	skipz
  7405  1A7E  2A79               	goto	u338_25
  7406  1A7F                     i1l2680:
  7407  1A7F  3001               	movlw	1
  7408  1A80  02F5               	subwf	___lwmod@counter,f
  7409  1A81  1D03               	btfss	3,2
  7410  1A82  2A84               	goto	u339_21
  7411  1A83  2A85               	goto	u339_20
  7412  1A84                     u339_21:
  7413  1A84  2A68               	goto	i1l2674
  7414  1A85                     u339_20:
  7415  1A85                     i1l2682:
  7416  1A85  0873               	movf	___lwmod@dividend+1,w
  7417  1A86  00F1               	movwf	?___lwmod+1
  7418  1A87  0872               	movf	___lwmod@dividend,w
  7419  1A88  00F0               	movwf	?___lwmod
  7420  1A89                     i1l681:
  7421  1A89  0008               	return
  7422  1A8A                     __end_of___lwmod:
  7423                           
  7424                           	psect	text24
  7425  1ACC                     __ptext24:	
  7426 ;; *************** function ___lwdiv *****************
  7427 ;; Defined at:
  7428 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  7429 ;; Parameters:    Size  Location     Type
  7430 ;;  divisor         2    6[COMMON] unsigned int 
  7431 ;;  dividend        2    8[COMMON] unsigned int 
  7432 ;; Auto vars:     Size  Location     Type
  7433 ;;  quotient        2   11[COMMON] unsigned int 
  7434 ;;  counter         1   13[COMMON] unsigned char 
  7435 ;; Return value:  Size  Location     Type
  7436 ;;                  2    6[COMMON] unsigned int 
  7437 ;; Registers used:
  7438 ;;		wreg, status,2, status,0
  7439 ;; Tracked objects:
  7440 ;;		On entry : 0/0
  7441 ;;		On exit  : 0/0
  7442 ;;		Unchanged: 0/0
  7443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7444 ;;      Params:         4       0       0       0       0
  7445 ;;      Locals:         3       0       0       0       0
  7446 ;;      Temps:          1       0       0       0       0
  7447 ;;      Totals:         8       0       0       0       0
  7448 ;;Total ram usage:        8 bytes
  7449 ;; Hardware stack levels used:    1
  7450 ;; This function calls:
  7451 ;;		Nothing
  7452 ;; This function is called by:
  7453 ;;		_fround
  7454 ;; This function uses a non-reentrant model
  7455 ;;
  7456                           
  7457                           
  7458                           ;psect for function ___lwdiv
  7459  1ACC                     ___lwdiv:
  7460  1ACC                     i1l2638:	
  7461                           ;incstack = 0
  7462                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7463                           
  7464  1ACC  01FB               	clrf	___lwdiv@quotient
  7465  1ACD  01FC               	clrf	___lwdiv@quotient+1
  7466  1ACE                     i1l2640:
  7467  1ACE  0876               	movf	___lwdiv@divisor,w
  7468  1ACF  0477               	iorwf	___lwdiv@divisor+1,w
  7469  1AD0  1903               	btfsc	3,2
  7470  1AD1  2AD3               	goto	u327_21
  7471  1AD2  2AD4               	goto	u327_20
  7472  1AD3                     u327_21:
  7473  1AD3  2B0B               	goto	i1l2660
  7474  1AD4                     u327_20:
  7475  1AD4                     i1l2642:
  7476  1AD4  01FD               	clrf	___lwdiv@counter
  7477  1AD5  0AFD               	incf	___lwdiv@counter,f
  7478  1AD6  2AE2               	goto	i1l2648
  7479  1AD7                     i1l2644:
  7480  1AD7  3001               	movlw	1
  7481  1AD8                     u328_25:
  7482  1AD8  1003               	clrc
  7483  1AD9  0DF6               	rlf	___lwdiv@divisor,f
  7484  1ADA  0DF7               	rlf	___lwdiv@divisor+1,f
  7485  1ADB  3EFF               	addlw	-1
  7486  1ADC  1D03               	skipz
  7487  1ADD  2AD8               	goto	u328_25
  7488  1ADE                     i1l2646:
  7489  1ADE  3001               	movlw	1
  7490  1ADF  00FA               	movwf	??___lwdiv
  7491  1AE0  087A               	movf	??___lwdiv,w
  7492  1AE1  07FD               	addwf	___lwdiv@counter,f
  7493  1AE2                     i1l2648:
  7494  1AE2  1FF7               	btfss	___lwdiv@divisor+1,7
  7495  1AE3  2AE5               	goto	u329_21
  7496  1AE4  2AE6               	goto	u329_20
  7497  1AE5                     u329_21:
  7498  1AE5  2AD7               	goto	i1l2644
  7499  1AE6                     u329_20:
  7500  1AE6                     i1l2650:
  7501  1AE6  3001               	movlw	1
  7502  1AE7                     u330_25:
  7503  1AE7  1003               	clrc
  7504  1AE8  0DFB               	rlf	___lwdiv@quotient,f
  7505  1AE9  0DFC               	rlf	___lwdiv@quotient+1,f
  7506  1AEA  3EFF               	addlw	-1
  7507  1AEB  1D03               	skipz
  7508  1AEC  2AE7               	goto	u330_25
  7509  1AED  0877               	movf	___lwdiv@divisor+1,w
  7510  1AEE  0279               	subwf	___lwdiv@dividend+1,w
  7511  1AEF  1D03               	skipz
  7512  1AF0  2AF3               	goto	u331_25
  7513  1AF1  0876               	movf	___lwdiv@divisor,w
  7514  1AF2  0278               	subwf	___lwdiv@dividend,w
  7515  1AF3                     u331_25:
  7516  1AF3  1C03               	skipc
  7517  1AF4  2AF6               	goto	u331_21
  7518  1AF5  2AF7               	goto	u331_20
  7519  1AF6                     u331_21:
  7520  1AF6  2AFE               	goto	i1l2656
  7521  1AF7                     u331_20:
  7522  1AF7                     i1l2652:
  7523  1AF7  0876               	movf	___lwdiv@divisor,w
  7524  1AF8  02F8               	subwf	___lwdiv@dividend,f
  7525  1AF9  0877               	movf	___lwdiv@divisor+1,w
  7526  1AFA  1C03               	skipc
  7527  1AFB  03F9               	decf	___lwdiv@dividend+1,f
  7528  1AFC  02F9               	subwf	___lwdiv@dividend+1,f
  7529  1AFD                     i1l2654:
  7530  1AFD  147B               	bsf	___lwdiv@quotient,0
  7531  1AFE                     i1l2656:
  7532  1AFE  3001               	movlw	1
  7533  1AFF                     u332_25:
  7534  1AFF  1003               	clrc
  7535  1B00  0CF7               	rrf	___lwdiv@divisor+1,f
  7536  1B01  0CF6               	rrf	___lwdiv@divisor,f
  7537  1B02  3EFF               	addlw	-1
  7538  1B03  1D03               	skipz
  7539  1B04  2AFF               	goto	u332_25
  7540  1B05                     i1l2658:
  7541  1B05  3001               	movlw	1
  7542  1B06  02FD               	subwf	___lwdiv@counter,f
  7543  1B07  1D03               	btfss	3,2
  7544  1B08  2B0A               	goto	u333_21
  7545  1B09  2B0B               	goto	u333_20
  7546  1B0A                     u333_21:
  7547  1B0A  2AE6               	goto	i1l2650
  7548  1B0B                     u333_20:
  7549  1B0B                     i1l2660:
  7550  1B0B  087C               	movf	___lwdiv@quotient+1,w
  7551  1B0C  00F7               	movwf	?___lwdiv+1
  7552  1B0D  087B               	movf	___lwdiv@quotient,w
  7553  1B0E  00F6               	movwf	?___lwdiv
  7554  1B0F                     i1l671:
  7555  1B0F  0008               	return
  7556  1B10                     __end_of___lwdiv:
  7557                           
  7558                           	psect	text25
  7559  0C9F                     __ptext25:	
  7560 ;; *************** function ___flmul *****************
  7561 ;; Defined at:
  7562 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  7563 ;; Parameters:    Size  Location     Type
  7564 ;;  b               4    4[BANK0 ] unsigned int 
  7565 ;;  a               4    8[BANK0 ] unsigned int 
  7566 ;; Auto vars:     Size  Location     Type
  7567 ;;  prod            4   24[BANK0 ] struct .
  7568 ;;  grs             4   18[BANK0 ] unsigned long 
  7569 ;;  temp            2   28[BANK0 ] struct .
  7570 ;;  bexp            1   23[BANK0 ] unsigned char 
  7571 ;;  aexp            1   22[BANK0 ] unsigned char 
  7572 ;;  sign            1   17[BANK0 ] unsigned char 
  7573 ;; Return value:  Size  Location     Type
  7574 ;;                  4    4[BANK0 ] unsigned char 
  7575 ;; Registers used:
  7576 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7577 ;; Tracked objects:
  7578 ;;		On entry : 0/0
  7579 ;;		On exit  : 0/0
  7580 ;;		Unchanged: 0/0
  7581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7582 ;;      Params:         0       8       0       0       0
  7583 ;;      Locals:         0      13       0       0       0
  7584 ;;      Temps:          0       5       0       0       0
  7585 ;;      Totals:         0      26       0       0       0
  7586 ;;Total ram usage:       26 bytes
  7587 ;; Hardware stack levels used:    1
  7588 ;; Hardware stack levels required when called:    1
  7589 ;; This function calls:
  7590 ;;		__Umul8_16
  7591 ;; This function is called by:
  7592 ;;		_oli
  7593 ;;		_fround
  7594 ;;		_scale
  7595 ;;		_sprintf
  7596 ;; This function uses a non-reentrant model
  7597 ;;
  7598                           
  7599                           
  7600                           ;psect for function ___flmul
  7601  0C9F                     ___flmul:
  7602  0C9F                     i1l2880:	
  7603                           ;incstack = 0
  7604                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7605                           
  7606  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  7607  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  7608  0CA1  0827               	movf	___flmul@b+3,w
  7609  0CA2  3980               	andlw	128
  7610  0CA3  00AC               	movwf	??___flmul
  7611  0CA4  082C               	movf	??___flmul,w
  7612  0CA5  00B1               	movwf	___flmul@sign
  7613  0CA6                     i1l2882:
  7614  0CA6  0827               	movf	___flmul@b+3,w
  7615  0CA7  00AC               	movwf	??___flmul
  7616  0CA8  072C               	addwf	??___flmul,w
  7617  0CA9  00AD               	movwf	??___flmul+1
  7618  0CAA  082D               	movf	??___flmul+1,w
  7619  0CAB  00B7               	movwf	___flmul@bexp
  7620  0CAC                     i1l2884:
  7621  0CAC  1FA6               	btfss	___flmul@b+2,7
  7622  0CAD  2CAF               	goto	u386_21
  7623  0CAE  2CB0               	goto	u386_20
  7624  0CAF                     u386_21:
  7625  0CAF  2CB1               	goto	i1l2888
  7626  0CB0                     u386_20:
  7627  0CB0                     i1l2886:
  7628  0CB0  1437               	bsf	___flmul@bexp,0
  7629  0CB1                     i1l2888:
  7630  0CB1  0837               	movf	___flmul@bexp,w
  7631  0CB2  1903               	btfsc	3,2
  7632  0CB3  2CB5               	goto	u387_21
  7633  0CB4  2CB6               	goto	u387_20
  7634  0CB5                     u387_21:
  7635  0CB5  2CC5               	goto	i1l2896
  7636  0CB6                     u387_20:
  7637  0CB6                     i1l2890:
  7638  0CB6  0A37               	incf	___flmul@bexp,w
  7639  0CB7  1D03               	btfss	3,2
  7640  0CB8  2CBA               	goto	u388_21
  7641  0CB9  2CBB               	goto	u388_20
  7642  0CBA                     u388_21:
  7643  0CBA  2CC3               	goto	i1l2894
  7644  0CBB                     u388_20:
  7645  0CBB                     i1l2892:
  7646  0CBB  3000               	movlw	0
  7647  0CBC  00A7               	movwf	___flmul@b+3
  7648  0CBD  3000               	movlw	0
  7649  0CBE  00A6               	movwf	___flmul@b+2
  7650  0CBF  3000               	movlw	0
  7651  0CC0  00A5               	movwf	___flmul@b+1
  7652  0CC1  3000               	movlw	0
  7653  0CC2  00A4               	movwf	___flmul@b
  7654  0CC3                     i1l2894:
  7655  0CC3  17A6               	bsf	___flmul@b+2,7
  7656  0CC4  2CCD               	goto	i1l2898
  7657  0CC5                     i1l2896:
  7658  0CC5  3000               	movlw	0
  7659  0CC6  00A7               	movwf	___flmul@b+3
  7660  0CC7  3000               	movlw	0
  7661  0CC8  00A6               	movwf	___flmul@b+2
  7662  0CC9  3000               	movlw	0
  7663  0CCA  00A5               	movwf	___flmul@b+1
  7664  0CCB  3000               	movlw	0
  7665  0CCC  00A4               	movwf	___flmul@b
  7666  0CCD                     i1l2898:
  7667  0CCD  082B               	movf	___flmul@a+3,w
  7668  0CCE  3980               	andlw	128
  7669  0CCF  00AC               	movwf	??___flmul
  7670  0CD0  082C               	movf	??___flmul,w
  7671  0CD1  06B1               	xorwf	___flmul@sign,f
  7672  0CD2                     i1l2900:
  7673  0CD2  082B               	movf	___flmul@a+3,w
  7674  0CD3  00AC               	movwf	??___flmul
  7675  0CD4  072C               	addwf	??___flmul,w
  7676  0CD5  00AD               	movwf	??___flmul+1
  7677  0CD6  082D               	movf	??___flmul+1,w
  7678  0CD7  00B6               	movwf	___flmul@aexp
  7679  0CD8                     i1l2902:
  7680  0CD8  1FAA               	btfss	___flmul@a+2,7
  7681  0CD9  2CDB               	goto	u389_21
  7682  0CDA  2CDC               	goto	u389_20
  7683  0CDB                     u389_21:
  7684  0CDB  2CDD               	goto	i1l2906
  7685  0CDC                     u389_20:
  7686  0CDC                     i1l2904:
  7687  0CDC  1436               	bsf	___flmul@aexp,0
  7688  0CDD                     i1l2906:
  7689  0CDD  0836               	movf	___flmul@aexp,w
  7690  0CDE  1903               	btfsc	3,2
  7691  0CDF  2CE1               	goto	u390_21
  7692  0CE0  2CE2               	goto	u390_20
  7693  0CE1                     u390_21:
  7694  0CE1  2CF1               	goto	i1l2914
  7695  0CE2                     u390_20:
  7696  0CE2                     i1l2908:
  7697  0CE2  0A36               	incf	___flmul@aexp,w
  7698  0CE3  1D03               	btfss	3,2
  7699  0CE4  2CE6               	goto	u391_21
  7700  0CE5  2CE7               	goto	u391_20
  7701  0CE6                     u391_21:
  7702  0CE6  2CEF               	goto	i1l2912
  7703  0CE7                     u391_20:
  7704  0CE7                     i1l2910:
  7705  0CE7  3000               	movlw	0
  7706  0CE8  00AB               	movwf	___flmul@a+3
  7707  0CE9  3000               	movlw	0
  7708  0CEA  00AA               	movwf	___flmul@a+2
  7709  0CEB  3000               	movlw	0
  7710  0CEC  00A9               	movwf	___flmul@a+1
  7711  0CED  3000               	movlw	0
  7712  0CEE  00A8               	movwf	___flmul@a
  7713  0CEF                     i1l2912:
  7714  0CEF  17AA               	bsf	___flmul@a+2,7
  7715  0CF0  2CF9               	goto	i1l2916
  7716  0CF1                     i1l2914:
  7717  0CF1  3000               	movlw	0
  7718  0CF2  00AB               	movwf	___flmul@a+3
  7719  0CF3  3000               	movlw	0
  7720  0CF4  00AA               	movwf	___flmul@a+2
  7721  0CF5  3000               	movlw	0
  7722  0CF6  00A9               	movwf	___flmul@a+1
  7723  0CF7  3000               	movlw	0
  7724  0CF8  00A8               	movwf	___flmul@a
  7725  0CF9                     i1l2916:
  7726  0CF9  0836               	movf	___flmul@aexp,w
  7727  0CFA  1903               	btfsc	3,2
  7728  0CFB  2CFD               	goto	u392_21
  7729  0CFC  2CFE               	goto	u392_20
  7730  0CFD                     u392_21:
  7731  0CFD  2D03               	goto	i1l2920
  7732  0CFE                     u392_20:
  7733  0CFE                     i1l2918:
  7734  0CFE  0837               	movf	___flmul@bexp,w
  7735  0CFF  1D03               	btfss	3,2
  7736  0D00  2D02               	goto	u393_21
  7737  0D01  2D03               	goto	u393_20
  7738  0D02                     u393_21:
  7739  0D02  2D0C               	goto	i1l2924
  7740  0D03                     u393_20:
  7741  0D03                     i1l2920:
  7742  0D03  3000               	movlw	0
  7743  0D04  00A7               	movwf	?___flmul+3
  7744  0D05  3000               	movlw	0
  7745  0D06  00A6               	movwf	?___flmul+2
  7746  0D07  3000               	movlw	0
  7747  0D08  00A5               	movwf	?___flmul+1
  7748  0D09  3000               	movlw	0
  7749  0D0A  00A4               	movwf	?___flmul
  7750  0D0B  2FFF               	goto	i1l788
  7751  0D0C                     i1l2924:
  7752  0D0C  0824               	movf	___flmul@b,w
  7753  0D0D  00AC               	movwf	??___flmul
  7754  0D0E  082C               	movf	??___flmul,w
  7755  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  7756  0D10  082A               	movf	___flmul@a+2,w
  7757  0D11  160A  158A  2229  120A  158A  	fcall	__Umul8_16
  7758  0D16  0871               	movf	?__Umul8_16+1,w
  7759  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  7760  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  7761  0D19  00BD               	movwf	___flmul@temp+1
  7762  0D1A  0870               	movf	?__Umul8_16,w
  7763  0D1B  00BC               	movwf	___flmul@temp
  7764  0D1C                     i1l2926:
  7765  0D1C  083C               	movf	___flmul@temp,w
  7766  0D1D  00AC               	movwf	??___flmul
  7767  0D1E  01AD               	clrf	??___flmul+1
  7768  0D1F  01AE               	clrf	??___flmul+2
  7769  0D20  01AF               	clrf	??___flmul+3
  7770  0D21  082F               	movf	??___flmul+3,w
  7771  0D22  00B5               	movwf	___flmul@grs+3
  7772  0D23  082E               	movf	??___flmul+2,w
  7773  0D24  00B4               	movwf	___flmul@grs+2
  7774  0D25  082D               	movf	??___flmul+1,w
  7775  0D26  00B3               	movwf	___flmul@grs+1
  7776  0D27  082C               	movf	??___flmul,w
  7777  0D28  00B2               	movwf	___flmul@grs
  7778  0D29                     i1l2928:
  7779  0D29  083D               	movf	___flmul@temp+1,w
  7780  0D2A  00AC               	movwf	??___flmul
  7781  0D2B  01AD               	clrf	??___flmul+1
  7782  0D2C  01AE               	clrf	??___flmul+2
  7783  0D2D  01AF               	clrf	??___flmul+3
  7784  0D2E  082F               	movf	??___flmul+3,w
  7785  0D2F  00BB               	movwf	___flmul@prod+3
  7786  0D30  082E               	movf	??___flmul+2,w
  7787  0D31  00BA               	movwf	___flmul@prod+2
  7788  0D32  082D               	movf	??___flmul+1,w
  7789  0D33  00B9               	movwf	___flmul@prod+1
  7790  0D34  082C               	movf	??___flmul,w
  7791  0D35  00B8               	movwf	___flmul@prod
  7792  0D36  0825               	movf	___flmul@b+1,w
  7793  0D37  00AC               	movwf	??___flmul
  7794  0D38  082C               	movf	??___flmul,w
  7795  0D39  00F0               	movwf	__Umul8_16@multiplicand
  7796  0D3A  0829               	movf	___flmul@a+1,w
  7797  0D3B  160A  158A  2229  120A  158A  	fcall	__Umul8_16
  7798  0D40  0871               	movf	?__Umul8_16+1,w
  7799  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  7800  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  7801  0D43  00BD               	movwf	___flmul@temp+1
  7802  0D44  0870               	movf	?__Umul8_16,w
  7803  0D45  00BC               	movwf	___flmul@temp
  7804  0D46                     i1l2930:
  7805  0D46  083C               	movf	___flmul@temp,w
  7806  0D47  00AC               	movwf	??___flmul
  7807  0D48  01AD               	clrf	??___flmul+1
  7808  0D49  01AE               	clrf	??___flmul+2
  7809  0D4A  01AF               	clrf	??___flmul+3
  7810  0D4B  082C               	movf	??___flmul,w
  7811  0D4C  07B2               	addwf	___flmul@grs,f
  7812  0D4D  082D               	movf	??___flmul+1,w
  7813  0D4E  1103               	clrz
  7814  0D4F  1803               	skipnc
  7815  0D50  3E01               	addlw	1
  7816  0D51  1903               	skipnz
  7817  0D52  2D54               	goto	u394_21
  7818  0D53  07B3               	addwf	___flmul@grs+1,f
  7819  0D54                     u394_21:
  7820  0D54  082E               	movf	??___flmul+2,w
  7821  0D55  1103               	clrz
  7822  0D56  1803               	skipnc
  7823  0D57  3E01               	addlw	1
  7824  0D58  1903               	skipnz
  7825  0D59  2D5B               	goto	u394_22
  7826  0D5A  07B4               	addwf	___flmul@grs+2,f
  7827  0D5B                     u394_22:
  7828  0D5B  082F               	movf	??___flmul+3,w
  7829  0D5C  1103               	clrz
  7830  0D5D  1803               	skipnc
  7831  0D5E  3E01               	addlw	1
  7832  0D5F  1903               	skipnz
  7833  0D60  2D62               	goto	u394_23
  7834  0D61  07B5               	addwf	___flmul@grs+3,f
  7835  0D62                     u394_23:
  7836  0D62                     i1l2932:
  7837  0D62  083D               	movf	___flmul@temp+1,w
  7838  0D63  00AC               	movwf	??___flmul
  7839  0D64  01AD               	clrf	??___flmul+1
  7840  0D65  01AE               	clrf	??___flmul+2
  7841  0D66  01AF               	clrf	??___flmul+3
  7842  0D67  082C               	movf	??___flmul,w
  7843  0D68  07B8               	addwf	___flmul@prod,f
  7844  0D69  082D               	movf	??___flmul+1,w
  7845  0D6A  1103               	clrz
  7846  0D6B  1803               	skipnc
  7847  0D6C  3E01               	addlw	1
  7848  0D6D  1903               	skipnz
  7849  0D6E  2D70               	goto	u395_21
  7850  0D6F  07B9               	addwf	___flmul@prod+1,f
  7851  0D70                     u395_21:
  7852  0D70  082E               	movf	??___flmul+2,w
  7853  0D71  1103               	clrz
  7854  0D72  1803               	skipnc
  7855  0D73  3E01               	addlw	1
  7856  0D74  1903               	skipnz
  7857  0D75  2D77               	goto	u395_22
  7858  0D76  07BA               	addwf	___flmul@prod+2,f
  7859  0D77                     u395_22:
  7860  0D77  082F               	movf	??___flmul+3,w
  7861  0D78  1103               	clrz
  7862  0D79  1803               	skipnc
  7863  0D7A  3E01               	addlw	1
  7864  0D7B  1903               	skipnz
  7865  0D7C  2D7E               	goto	u395_23
  7866  0D7D  07BB               	addwf	___flmul@prod+3,f
  7867  0D7E                     u395_23:
  7868  0D7E  0826               	movf	___flmul@b+2,w
  7869  0D7F  00AC               	movwf	??___flmul
  7870  0D80  082C               	movf	??___flmul,w
  7871  0D81  00F0               	movwf	__Umul8_16@multiplicand
  7872  0D82  0828               	movf	___flmul@a,w
  7873  0D83  160A  158A  2229  120A  158A  	fcall	__Umul8_16
  7874  0D88  0871               	movf	?__Umul8_16+1,w
  7875  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  7876  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  7877  0D8B  00BD               	movwf	___flmul@temp+1
  7878  0D8C  0870               	movf	?__Umul8_16,w
  7879  0D8D  00BC               	movwf	___flmul@temp
  7880  0D8E                     i1l2934:
  7881  0D8E  083C               	movf	___flmul@temp,w
  7882  0D8F  00AC               	movwf	??___flmul
  7883  0D90  01AD               	clrf	??___flmul+1
  7884  0D91  01AE               	clrf	??___flmul+2
  7885  0D92  01AF               	clrf	??___flmul+3
  7886  0D93  082C               	movf	??___flmul,w
  7887  0D94  07B2               	addwf	___flmul@grs,f
  7888  0D95  082D               	movf	??___flmul+1,w
  7889  0D96  1103               	clrz
  7890  0D97  1803               	skipnc
  7891  0D98  3E01               	addlw	1
  7892  0D99  1903               	skipnz
  7893  0D9A  2D9C               	goto	u396_21
  7894  0D9B  07B3               	addwf	___flmul@grs+1,f
  7895  0D9C                     u396_21:
  7896  0D9C  082E               	movf	??___flmul+2,w
  7897  0D9D  1103               	clrz
  7898  0D9E  1803               	skipnc
  7899  0D9F  3E01               	addlw	1
  7900  0DA0  1903               	skipnz
  7901  0DA1  2DA3               	goto	u396_22
  7902  0DA2  07B4               	addwf	___flmul@grs+2,f
  7903  0DA3                     u396_22:
  7904  0DA3  082F               	movf	??___flmul+3,w
  7905  0DA4  1103               	clrz
  7906  0DA5  1803               	skipnc
  7907  0DA6  3E01               	addlw	1
  7908  0DA7  1903               	skipnz
  7909  0DA8  2DAA               	goto	u396_23
  7910  0DA9  07B5               	addwf	___flmul@grs+3,f
  7911  0DAA                     u396_23:
  7912  0DAA                     i1l2936:
  7913  0DAA  083D               	movf	___flmul@temp+1,w
  7914  0DAB  00AC               	movwf	??___flmul
  7915  0DAC  01AD               	clrf	??___flmul+1
  7916  0DAD  01AE               	clrf	??___flmul+2
  7917  0DAE  01AF               	clrf	??___flmul+3
  7918  0DAF  082C               	movf	??___flmul,w
  7919  0DB0  07B8               	addwf	___flmul@prod,f
  7920  0DB1  082D               	movf	??___flmul+1,w
  7921  0DB2  1103               	clrz
  7922  0DB3  1803               	skipnc
  7923  0DB4  3E01               	addlw	1
  7924  0DB5  1903               	skipnz
  7925  0DB6  2DB8               	goto	u397_21
  7926  0DB7  07B9               	addwf	___flmul@prod+1,f
  7927  0DB8                     u397_21:
  7928  0DB8  082E               	movf	??___flmul+2,w
  7929  0DB9  1103               	clrz
  7930  0DBA  1803               	skipnc
  7931  0DBB  3E01               	addlw	1
  7932  0DBC  1903               	skipnz
  7933  0DBD  2DBF               	goto	u397_22
  7934  0DBE  07BA               	addwf	___flmul@prod+2,f
  7935  0DBF                     u397_22:
  7936  0DBF  082F               	movf	??___flmul+3,w
  7937  0DC0  1103               	clrz
  7938  0DC1  1803               	skipnc
  7939  0DC2  3E01               	addlw	1
  7940  0DC3  1903               	skipnz
  7941  0DC4  2DC6               	goto	u397_23
  7942  0DC5  07BB               	addwf	___flmul@prod+3,f
  7943  0DC6                     u397_23:
  7944  0DC6                     i1l2938:
  7945  0DC6  3008               	movlw	8
  7946  0DC7  00AC               	movwf	??___flmul
  7947  0DC8                     u398_25:
  7948  0DC8  1003               	clrc
  7949  0DC9  0DB2               	rlf	___flmul@grs,f
  7950  0DCA  0DB3               	rlf	___flmul@grs+1,f
  7951  0DCB  0DB4               	rlf	___flmul@grs+2,f
  7952  0DCC  0DB5               	rlf	___flmul@grs+3,f
  7953  0DCD  0BAC               	decfsz	??___flmul,f
  7954  0DCE  2DC8               	goto	u398_25
  7955  0DCF                     i1l2940:
  7956  0DCF  0825               	movf	___flmul@b+1,w
  7957  0DD0  00AC               	movwf	??___flmul
  7958  0DD1  082C               	movf	??___flmul,w
  7959  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  7960  0DD3  0828               	movf	___flmul@a,w
  7961  0DD4  160A  158A  2229  120A  158A  	fcall	__Umul8_16
  7962  0DD9  0871               	movf	?__Umul8_16+1,w
  7963  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  7964  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  7965  0DDC  00BD               	movwf	___flmul@temp+1
  7966  0DDD  0870               	movf	?__Umul8_16,w
  7967  0DDE  00BC               	movwf	___flmul@temp
  7968  0DDF                     i1l2942:
  7969  0DDF  083C               	movf	___flmul@temp,w
  7970  0DE0  00AC               	movwf	??___flmul
  7971  0DE1  083D               	movf	___flmul@temp+1,w
  7972  0DE2  00AD               	movwf	??___flmul+1
  7973  0DE3  01AE               	clrf	??___flmul+2
  7974  0DE4  01AF               	clrf	??___flmul+3
  7975  0DE5  082C               	movf	??___flmul,w
  7976  0DE6  07B2               	addwf	___flmul@grs,f
  7977  0DE7  082D               	movf	??___flmul+1,w
  7978  0DE8  1103               	clrz
  7979  0DE9  1803               	skipnc
  7980  0DEA  3E01               	addlw	1
  7981  0DEB  1903               	skipnz
  7982  0DEC  2DEE               	goto	u399_21
  7983  0DED  07B3               	addwf	___flmul@grs+1,f
  7984  0DEE                     u399_21:
  7985  0DEE  082E               	movf	??___flmul+2,w
  7986  0DEF  1103               	clrz
  7987  0DF0  1803               	skipnc
  7988  0DF1  3E01               	addlw	1
  7989  0DF2  1903               	skipnz
  7990  0DF3  2DF5               	goto	u399_22
  7991  0DF4  07B4               	addwf	___flmul@grs+2,f
  7992  0DF5                     u399_22:
  7993  0DF5  082F               	movf	??___flmul+3,w
  7994  0DF6  1103               	clrz
  7995  0DF7  1803               	skipnc
  7996  0DF8  3E01               	addlw	1
  7997  0DF9  1903               	skipnz
  7998  0DFA  2DFC               	goto	u399_23
  7999  0DFB  07B5               	addwf	___flmul@grs+3,f
  8000  0DFC                     u399_23:
  8001  0DFC                     i1l2944:
  8002  0DFC  0824               	movf	___flmul@b,w
  8003  0DFD  00AC               	movwf	??___flmul
  8004  0DFE  082C               	movf	??___flmul,w
  8005  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  8006  0E00  0829               	movf	___flmul@a+1,w
  8007  0E01  160A  158A  2229  120A  158A  	fcall	__Umul8_16
  8008  0E06  0871               	movf	?__Umul8_16+1,w
  8009  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  8010  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  8011  0E09  00BD               	movwf	___flmul@temp+1
  8012  0E0A  0870               	movf	?__Umul8_16,w
  8013  0E0B  00BC               	movwf	___flmul@temp
  8014  0E0C                     i1l2946:
  8015  0E0C  083C               	movf	___flmul@temp,w
  8016  0E0D  00AC               	movwf	??___flmul
  8017  0E0E  083D               	movf	___flmul@temp+1,w
  8018  0E0F  00AD               	movwf	??___flmul+1
  8019  0E10  01AE               	clrf	??___flmul+2
  8020  0E11  01AF               	clrf	??___flmul+3
  8021  0E12  082C               	movf	??___flmul,w
  8022  0E13  07B2               	addwf	___flmul@grs,f
  8023  0E14  082D               	movf	??___flmul+1,w
  8024  0E15  1103               	clrz
  8025  0E16  1803               	skipnc
  8026  0E17  3E01               	addlw	1
  8027  0E18  1903               	skipnz
  8028  0E19  2E1B               	goto	u400_21
  8029  0E1A  07B3               	addwf	___flmul@grs+1,f
  8030  0E1B                     u400_21:
  8031  0E1B  082E               	movf	??___flmul+2,w
  8032  0E1C  1103               	clrz
  8033  0E1D  1803               	skipnc
  8034  0E1E  3E01               	addlw	1
  8035  0E1F  1903               	skipnz
  8036  0E20  2E22               	goto	u400_22
  8037  0E21  07B4               	addwf	___flmul@grs+2,f
  8038  0E22                     u400_22:
  8039  0E22  082F               	movf	??___flmul+3,w
  8040  0E23  1103               	clrz
  8041  0E24  1803               	skipnc
  8042  0E25  3E01               	addlw	1
  8043  0E26  1903               	skipnz
  8044  0E27  2E29               	goto	u400_23
  8045  0E28  07B5               	addwf	___flmul@grs+3,f
  8046  0E29                     u400_23:
  8047  0E29                     i1l2948:
  8048  0E29  3008               	movlw	8
  8049  0E2A  00AC               	movwf	??___flmul
  8050  0E2B                     u401_25:
  8051  0E2B  1003               	clrc
  8052  0E2C  0DB2               	rlf	___flmul@grs,f
  8053  0E2D  0DB3               	rlf	___flmul@grs+1,f
  8054  0E2E  0DB4               	rlf	___flmul@grs+2,f
  8055  0E2F  0DB5               	rlf	___flmul@grs+3,f
  8056  0E30  0BAC               	decfsz	??___flmul,f
  8057  0E31  2E2B               	goto	u401_25
  8058  0E32  0824               	movf	___flmul@b,w
  8059  0E33  00AC               	movwf	??___flmul
  8060  0E34  082C               	movf	??___flmul,w
  8061  0E35  00F0               	movwf	__Umul8_16@multiplicand
  8062  0E36  0828               	movf	___flmul@a,w
  8063  0E37  160A  158A  2229  120A  158A  	fcall	__Umul8_16
  8064  0E3C  0871               	movf	?__Umul8_16+1,w
  8065  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  8066  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  8067  0E3F  00BD               	movwf	___flmul@temp+1
  8068  0E40  0870               	movf	?__Umul8_16,w
  8069  0E41  00BC               	movwf	___flmul@temp
  8070  0E42                     i1l2950:
  8071  0E42  083C               	movf	___flmul@temp,w
  8072  0E43  00AC               	movwf	??___flmul
  8073  0E44  083D               	movf	___flmul@temp+1,w
  8074  0E45  00AD               	movwf	??___flmul+1
  8075  0E46  01AE               	clrf	??___flmul+2
  8076  0E47  01AF               	clrf	??___flmul+3
  8077  0E48  082C               	movf	??___flmul,w
  8078  0E49  07B2               	addwf	___flmul@grs,f
  8079  0E4A  082D               	movf	??___flmul+1,w
  8080  0E4B  1103               	clrz
  8081  0E4C  1803               	skipnc
  8082  0E4D  3E01               	addlw	1
  8083  0E4E  1903               	skipnz
  8084  0E4F  2E51               	goto	u402_21
  8085  0E50  07B3               	addwf	___flmul@grs+1,f
  8086  0E51                     u402_21:
  8087  0E51  082E               	movf	??___flmul+2,w
  8088  0E52  1103               	clrz
  8089  0E53  1803               	skipnc
  8090  0E54  3E01               	addlw	1
  8091  0E55  1903               	skipnz
  8092  0E56  2E58               	goto	u402_22
  8093  0E57  07B4               	addwf	___flmul@grs+2,f
  8094  0E58                     u402_22:
  8095  0E58  082F               	movf	??___flmul+3,w
  8096  0E59  1103               	clrz
  8097  0E5A  1803               	skipnc
  8098  0E5B  3E01               	addlw	1
  8099  0E5C  1903               	skipnz
  8100  0E5D  2E5F               	goto	u402_23
  8101  0E5E  07B5               	addwf	___flmul@grs+3,f
  8102  0E5F                     u402_23:
  8103  0E5F                     i1l2952:
  8104  0E5F  0825               	movf	___flmul@b+1,w
  8105  0E60  00AC               	movwf	??___flmul
  8106  0E61  082C               	movf	??___flmul,w
  8107  0E62  00F0               	movwf	__Umul8_16@multiplicand
  8108  0E63  082A               	movf	___flmul@a+2,w
  8109  0E64  160A  158A  2229  120A  158A  	fcall	__Umul8_16
  8110  0E69  0871               	movf	?__Umul8_16+1,w
  8111  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  8112  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  8113  0E6C  00BD               	movwf	___flmul@temp+1
  8114  0E6D  0870               	movf	?__Umul8_16,w
  8115  0E6E  00BC               	movwf	___flmul@temp
  8116  0E6F  083C               	movf	___flmul@temp,w
  8117  0E70  00AC               	movwf	??___flmul
  8118  0E71  083D               	movf	___flmul@temp+1,w
  8119  0E72  00AD               	movwf	??___flmul+1
  8120  0E73  01AE               	clrf	??___flmul+2
  8121  0E74  01AF               	clrf	??___flmul+3
  8122  0E75  082C               	movf	??___flmul,w
  8123  0E76  07B8               	addwf	___flmul@prod,f
  8124  0E77  082D               	movf	??___flmul+1,w
  8125  0E78  1103               	clrz
  8126  0E79  1803               	skipnc
  8127  0E7A  3E01               	addlw	1
  8128  0E7B  1903               	skipnz
  8129  0E7C  2E7E               	goto	u403_21
  8130  0E7D  07B9               	addwf	___flmul@prod+1,f
  8131  0E7E                     u403_21:
  8132  0E7E  082E               	movf	??___flmul+2,w
  8133  0E7F  1103               	clrz
  8134  0E80  1803               	skipnc
  8135  0E81  3E01               	addlw	1
  8136  0E82  1903               	skipnz
  8137  0E83  2E85               	goto	u403_22
  8138  0E84  07BA               	addwf	___flmul@prod+2,f
  8139  0E85                     u403_22:
  8140  0E85  082F               	movf	??___flmul+3,w
  8141  0E86  1103               	clrz
  8142  0E87  1803               	skipnc
  8143  0E88  3E01               	addlw	1
  8144  0E89  1903               	skipnz
  8145  0E8A  2E8C               	goto	u403_23
  8146  0E8B  07BB               	addwf	___flmul@prod+3,f
  8147  0E8C                     u403_23:
  8148  0E8C                     i1l2954:
  8149  0E8C  0826               	movf	___flmul@b+2,w
  8150  0E8D  00AC               	movwf	??___flmul
  8151  0E8E  082C               	movf	??___flmul,w
  8152  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  8153  0E90  0829               	movf	___flmul@a+1,w
  8154  0E91  160A  158A  2229  120A  158A  	fcall	__Umul8_16
  8155  0E96  0871               	movf	?__Umul8_16+1,w
  8156  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  8157  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  8158  0E99  00BD               	movwf	___flmul@temp+1
  8159  0E9A  0870               	movf	?__Umul8_16,w
  8160  0E9B  00BC               	movwf	___flmul@temp
  8161  0E9C                     i1l2956:
  8162  0E9C  083C               	movf	___flmul@temp,w
  8163  0E9D  00AC               	movwf	??___flmul
  8164  0E9E  083D               	movf	___flmul@temp+1,w
  8165  0E9F  00AD               	movwf	??___flmul+1
  8166  0EA0  01AE               	clrf	??___flmul+2
  8167  0EA1  01AF               	clrf	??___flmul+3
  8168  0EA2  082C               	movf	??___flmul,w
  8169  0EA3  07B8               	addwf	___flmul@prod,f
  8170  0EA4  082D               	movf	??___flmul+1,w
  8171  0EA5  1103               	clrz
  8172  0EA6  1803               	skipnc
  8173  0EA7  3E01               	addlw	1
  8174  0EA8  1903               	skipnz
  8175  0EA9  2EAB               	goto	u404_21
  8176  0EAA  07B9               	addwf	___flmul@prod+1,f
  8177  0EAB                     u404_21:
  8178  0EAB  082E               	movf	??___flmul+2,w
  8179  0EAC  1103               	clrz
  8180  0EAD  1803               	skipnc
  8181  0EAE  3E01               	addlw	1
  8182  0EAF  1903               	skipnz
  8183  0EB0  2EB2               	goto	u404_22
  8184  0EB1  07BA               	addwf	___flmul@prod+2,f
  8185  0EB2                     u404_22:
  8186  0EB2  082F               	movf	??___flmul+3,w
  8187  0EB3  1103               	clrz
  8188  0EB4  1803               	skipnc
  8189  0EB5  3E01               	addlw	1
  8190  0EB6  1903               	skipnz
  8191  0EB7  2EB9               	goto	u404_23
  8192  0EB8  07BB               	addwf	___flmul@prod+3,f
  8193  0EB9                     u404_23:
  8194  0EB9  0826               	movf	___flmul@b+2,w
  8195  0EBA  00AC               	movwf	??___flmul
  8196  0EBB  082C               	movf	??___flmul,w
  8197  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  8198  0EBD  082A               	movf	___flmul@a+2,w
  8199  0EBE  160A  158A  2229  120A  158A  	fcall	__Umul8_16
  8200  0EC3  0871               	movf	?__Umul8_16+1,w
  8201  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  8202  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  8203  0EC6  00BD               	movwf	___flmul@temp+1
  8204  0EC7  0870               	movf	?__Umul8_16,w
  8205  0EC8  00BC               	movwf	___flmul@temp
  8206  0EC9                     i1l2958:
  8207  0EC9  083C               	movf	___flmul@temp,w
  8208  0ECA  00AC               	movwf	??___flmul
  8209  0ECB  083D               	movf	___flmul@temp+1,w
  8210  0ECC  00AD               	movwf	??___flmul+1
  8211  0ECD  01AE               	clrf	??___flmul+2
  8212  0ECE  01AF               	clrf	??___flmul+3
  8213  0ECF  3008               	movlw	8
  8214  0ED0                     u405_25:
  8215  0ED0  1003               	clrc
  8216  0ED1  0DAC               	rlf	??___flmul,f
  8217  0ED2  0DAD               	rlf	??___flmul+1,f
  8218  0ED3  0DAE               	rlf	??___flmul+2,f
  8219  0ED4  0DAF               	rlf	??___flmul+3,f
  8220  0ED5                     u405_20:
  8221  0ED5  3EFF               	addlw	-1
  8222  0ED6  1D03               	skipz
  8223  0ED7  2ED0               	goto	u405_25
  8224  0ED8  082C               	movf	??___flmul,w
  8225  0ED9  07B8               	addwf	___flmul@prod,f
  8226  0EDA  082D               	movf	??___flmul+1,w
  8227  0EDB  1103               	clrz
  8228  0EDC  1803               	skipnc
  8229  0EDD  3E01               	addlw	1
  8230  0EDE  1903               	skipnz
  8231  0EDF  2EE1               	goto	u406_21
  8232  0EE0  07B9               	addwf	___flmul@prod+1,f
  8233  0EE1                     u406_21:
  8234  0EE1  082E               	movf	??___flmul+2,w
  8235  0EE2  1103               	clrz
  8236  0EE3  1803               	skipnc
  8237  0EE4  3E01               	addlw	1
  8238  0EE5  1903               	skipnz
  8239  0EE6  2EE8               	goto	u406_22
  8240  0EE7  07BA               	addwf	___flmul@prod+2,f
  8241  0EE8                     u406_22:
  8242  0EE8  082F               	movf	??___flmul+3,w
  8243  0EE9  1103               	clrz
  8244  0EEA  1803               	skipnc
  8245  0EEB  3E01               	addlw	1
  8246  0EEC  1903               	skipnz
  8247  0EED  2EEF               	goto	u406_23
  8248  0EEE  07BB               	addwf	___flmul@prod+3,f
  8249  0EEF                     u406_23:
  8250  0EEF                     i1l2960:
  8251  0EEF  0832               	movf	___flmul@grs,w
  8252  0EF0  00AC               	movwf	??___flmul
  8253  0EF1  0833               	movf	___flmul@grs+1,w
  8254  0EF2  00AD               	movwf	??___flmul+1
  8255  0EF3  0834               	movf	___flmul@grs+2,w
  8256  0EF4  00AE               	movwf	??___flmul+2
  8257  0EF5  0835               	movf	___flmul@grs+3,w
  8258  0EF6  00AF               	movwf	??___flmul+3
  8259  0EF7  3018               	movlw	24
  8260  0EF8                     u407_25:
  8261  0EF8  1003               	clrc
  8262  0EF9  0CAF               	rrf	??___flmul+3,f
  8263  0EFA  0CAE               	rrf	??___flmul+2,f
  8264  0EFB  0CAD               	rrf	??___flmul+1,f
  8265  0EFC  0CAC               	rrf	??___flmul,f
  8266  0EFD                     u407_20:
  8267  0EFD  3EFF               	addlw	-1
  8268  0EFE  1D03               	skipz
  8269  0EFF  2EF8               	goto	u407_25
  8270  0F00  082C               	movf	??___flmul,w
  8271  0F01  07B8               	addwf	___flmul@prod,f
  8272  0F02  082D               	movf	??___flmul+1,w
  8273  0F03  1103               	clrz
  8274  0F04  1803               	skipnc
  8275  0F05  3E01               	addlw	1
  8276  0F06  1903               	skipnz
  8277  0F07  2F09               	goto	u408_21
  8278  0F08  07B9               	addwf	___flmul@prod+1,f
  8279  0F09                     u408_21:
  8280  0F09  082E               	movf	??___flmul+2,w
  8281  0F0A  1103               	clrz
  8282  0F0B  1803               	skipnc
  8283  0F0C  3E01               	addlw	1
  8284  0F0D  1903               	skipnz
  8285  0F0E  2F10               	goto	u408_22
  8286  0F0F  07BA               	addwf	___flmul@prod+2,f
  8287  0F10                     u408_22:
  8288  0F10  082F               	movf	??___flmul+3,w
  8289  0F11  1103               	clrz
  8290  0F12  1803               	skipnc
  8291  0F13  3E01               	addlw	1
  8292  0F14  1903               	skipnz
  8293  0F15  2F17               	goto	u408_23
  8294  0F16  07BB               	addwf	___flmul@prod+3,f
  8295  0F17                     u408_23:
  8296  0F17                     i1l2962:
  8297  0F17  3008               	movlw	8
  8298  0F18  00AC               	movwf	??___flmul
  8299  0F19                     u409_25:
  8300  0F19  1003               	clrc
  8301  0F1A  0DB2               	rlf	___flmul@grs,f
  8302  0F1B  0DB3               	rlf	___flmul@grs+1,f
  8303  0F1C  0DB4               	rlf	___flmul@grs+2,f
  8304  0F1D  0DB5               	rlf	___flmul@grs+3,f
  8305  0F1E  0BAC               	decfsz	??___flmul,f
  8306  0F1F  2F19               	goto	u409_25
  8307  0F20                     i1l2964:
  8308  0F20  0837               	movf	___flmul@bexp,w
  8309  0F21  0736               	addwf	___flmul@aexp,w
  8310  0F22  00AC               	movwf	??___flmul
  8311  0F23  01AD               	clrf	??___flmul+1
  8312  0F24  0DAD               	rlf	??___flmul+1,f
  8313  0F25  082C               	movf	??___flmul,w
  8314  0F26  3E82               	addlw	130
  8315  0F27  00BC               	movwf	___flmul@temp
  8316  0F28  082D               	movf	??___flmul+1,w
  8317  0F29  1803               	skipnc
  8318  0F2A  3E01               	addlw	1
  8319  0F2B  3EFF               	addlw	255
  8320  0F2C  00BD               	movwf	___flmul@temp+1
  8321  0F2D  2F4B               	goto	i1l2976
  8322  0F2E                     i1l2966:
  8323  0F2E  3001               	movlw	1
  8324  0F2F  00AC               	movwf	??___flmul
  8325  0F30                     u410_25:
  8326  0F30  1003               	clrc
  8327  0F31  0DB8               	rlf	___flmul@prod,f
  8328  0F32  0DB9               	rlf	___flmul@prod+1,f
  8329  0F33  0DBA               	rlf	___flmul@prod+2,f
  8330  0F34  0DBB               	rlf	___flmul@prod+3,f
  8331  0F35  0BAC               	decfsz	??___flmul,f
  8332  0F36  2F30               	goto	u410_25
  8333  0F37                     i1l2968:
  8334  0F37  1FB5               	btfss	___flmul@grs+3,7
  8335  0F38  2F3A               	goto	u411_21
  8336  0F39  2F3B               	goto	u411_20
  8337  0F3A                     u411_21:
  8338  0F3A  2F3C               	goto	i1l2972
  8339  0F3B                     u411_20:
  8340  0F3B                     i1l2970:
  8341  0F3B  1438               	bsf	___flmul@prod,0
  8342  0F3C                     i1l2972:
  8343  0F3C  3001               	movlw	1
  8344  0F3D  00AC               	movwf	??___flmul
  8345  0F3E                     u412_25:
  8346  0F3E  1003               	clrc
  8347  0F3F  0DB2               	rlf	___flmul@grs,f
  8348  0F40  0DB3               	rlf	___flmul@grs+1,f
  8349  0F41  0DB4               	rlf	___flmul@grs+2,f
  8350  0F42  0DB5               	rlf	___flmul@grs+3,f
  8351  0F43  0BAC               	decfsz	??___flmul,f
  8352  0F44  2F3E               	goto	u412_25
  8353  0F45                     i1l2974:
  8354  0F45  30FF               	movlw	255
  8355  0F46  07BC               	addwf	___flmul@temp,f
  8356  0F47  1803               	skipnc
  8357  0F48  0ABD               	incf	___flmul@temp+1,f
  8358  0F49  30FF               	movlw	255
  8359  0F4A  07BD               	addwf	___flmul@temp+1,f
  8360  0F4B                     i1l2976:
  8361  0F4B  1FBA               	btfss	___flmul@prod+2,7
  8362  0F4C  2F4E               	goto	u413_21
  8363  0F4D  2F4F               	goto	u413_20
  8364  0F4E                     u413_21:
  8365  0F4E  2F2E               	goto	i1l2966
  8366  0F4F                     u413_20:
  8367  0F4F                     i1l2978:
  8368  0F4F  01B6               	clrf	___flmul@aexp
  8369  0F50                     i1l2980:
  8370  0F50  1FB5               	btfss	___flmul@grs+3,7
  8371  0F51  2F53               	goto	u414_21
  8372  0F52  2F54               	goto	u414_20
  8373  0F53                     u414_21:
  8374  0F53  2F70               	goto	i1l2988
  8375  0F54                     u414_20:
  8376  0F54                     i1l2982:
  8377  0F54  30FF               	movlw	255
  8378  0F55  0532               	andwf	___flmul@grs,w
  8379  0F56  00AC               	movwf	??___flmul
  8380  0F57  30FF               	movlw	255
  8381  0F58  0533               	andwf	___flmul@grs+1,w
  8382  0F59  00AD               	movwf	??___flmul+1
  8383  0F5A  30FF               	movlw	255
  8384  0F5B  0534               	andwf	___flmul@grs+2,w
  8385  0F5C  00AE               	movwf	??___flmul+2
  8386  0F5D  307F               	movlw	127
  8387  0F5E  0535               	andwf	___flmul@grs+3,w
  8388  0F5F  00AF               	movwf	??___flmul+3
  8389  0F60  082F               	movf	??___flmul+3,w
  8390  0F61  042E               	iorwf	??___flmul+2,w
  8391  0F62  042D               	iorwf	??___flmul+1,w
  8392  0F63  042C               	iorwf	??___flmul,w
  8393  0F64  1903               	skipnz
  8394  0F65  2F67               	goto	u415_21
  8395  0F66  2F68               	goto	u415_20
  8396  0F67                     u415_21:
  8397  0F67  2F6B               	goto	i1l794
  8398  0F68                     u415_20:
  8399  0F68                     i1l2984:
  8400  0F68  01B6               	clrf	___flmul@aexp
  8401  0F69  0AB6               	incf	___flmul@aexp,f
  8402  0F6A  2F70               	goto	i1l2988
  8403  0F6B                     i1l794:
  8404  0F6B  1C38               	btfss	___flmul@prod,0
  8405  0F6C  2F6E               	goto	u416_21
  8406  0F6D  2F6F               	goto	u416_20
  8407  0F6E                     u416_21:
  8408  0F6E  2F70               	goto	i1l2988
  8409  0F6F                     u416_20:
  8410  0F6F  2F68               	goto	i1l2984
  8411  0F70                     i1l2988:
  8412  0F70  0836               	movf	___flmul@aexp,w
  8413  0F71  1903               	btfsc	3,2
  8414  0F72  2F74               	goto	u417_21
  8415  0F73  2F75               	goto	u417_20
  8416  0F74                     u417_21:
  8417  0F74  2FA6               	goto	i1l2998
  8418  0F75                     u417_20:
  8419  0F75                     i1l2990:
  8420  0F75  3001               	movlw	1
  8421  0F76  07B8               	addwf	___flmul@prod,f
  8422  0F77  3000               	movlw	0
  8423  0F78  1803               	skipnc
  8424  0F79  3001               	movlw	1
  8425  0F7A  07B9               	addwf	___flmul@prod+1,f
  8426  0F7B  3000               	movlw	0
  8427  0F7C  1803               	skipnc
  8428  0F7D  3001               	movlw	1
  8429  0F7E  07BA               	addwf	___flmul@prod+2,f
  8430  0F7F  3000               	movlw	0
  8431  0F80  1803               	skipnc
  8432  0F81  3001               	movlw	1
  8433  0F82  07BB               	addwf	___flmul@prod+3,f
  8434  0F83                     i1l2992:
  8435  0F83  1C3B               	btfss	___flmul@prod+3,0
  8436  0F84  2F86               	goto	u418_21
  8437  0F85  2F87               	goto	u418_20
  8438  0F86                     u418_21:
  8439  0F86  2FA6               	goto	i1l2998
  8440  0F87                     u418_20:
  8441  0F87                     i1l2994:
  8442  0F87  0838               	movf	___flmul@prod,w
  8443  0F88  00AC               	movwf	??___flmul
  8444  0F89  0839               	movf	___flmul@prod+1,w
  8445  0F8A  00AD               	movwf	??___flmul+1
  8446  0F8B  083A               	movf	___flmul@prod+2,w
  8447  0F8C  00AE               	movwf	??___flmul+2
  8448  0F8D  083B               	movf	___flmul@prod+3,w
  8449  0F8E  00AF               	movwf	??___flmul+3
  8450  0F8F  3001               	movlw	1
  8451  0F90  00B0               	movwf	??___flmul+4
  8452  0F91                     u419_25:
  8453  0F91  0D2F               	rlf	??___flmul+3,w
  8454  0F92  0CAF               	rrf	??___flmul+3,f
  8455  0F93  0CAE               	rrf	??___flmul+2,f
  8456  0F94  0CAD               	rrf	??___flmul+1,f
  8457  0F95  0CAC               	rrf	??___flmul,f
  8458  0F96                     u419_20:
  8459  0F96  0BB0               	decfsz	??___flmul+4,f
  8460  0F97  2F91               	goto	u419_25
  8461  0F98  082F               	movf	??___flmul+3,w
  8462  0F99  00BB               	movwf	___flmul@prod+3
  8463  0F9A  082E               	movf	??___flmul+2,w
  8464  0F9B  00BA               	movwf	___flmul@prod+2
  8465  0F9C  082D               	movf	??___flmul+1,w
  8466  0F9D  00B9               	movwf	___flmul@prod+1
  8467  0F9E  082C               	movf	??___flmul,w
  8468  0F9F  00B8               	movwf	___flmul@prod
  8469  0FA0                     i1l2996:
  8470  0FA0  3001               	movlw	1
  8471  0FA1  07BC               	addwf	___flmul@temp,f
  8472  0FA2  1803               	skipnc
  8473  0FA3  0ABD               	incf	___flmul@temp+1,f
  8474  0FA4  3000               	movlw	0
  8475  0FA5  07BD               	addwf	___flmul@temp+1,f
  8476  0FA6                     i1l2998:
  8477  0FA6  083D               	movf	___flmul@temp+1,w
  8478  0FA7  3A80               	xorlw	128
  8479  0FA8  00FF               	movwf	btemp+1
  8480  0FA9  3080               	movlw	128
  8481  0FAA  027F               	subwf	btemp+1,w
  8482  0FAB  1D03               	skipz
  8483  0FAC  2FAF               	goto	u420_25
  8484  0FAD  30FF               	movlw	255
  8485  0FAE  023C               	subwf	___flmul@temp,w
  8486  0FAF                     u420_25:
  8487  0FAF  1C03               	skipc
  8488  0FB0  2FB2               	goto	u420_21
  8489  0FB1  2FB3               	goto	u420_20
  8490  0FB2                     u420_21:
  8491  0FB2  2FBE               	goto	i1l3002
  8492  0FB3                     u420_20:
  8493  0FB3                     i1l3000:
  8494  0FB3  307F               	movlw	127
  8495  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  8496  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  8497  0FB6  00BB               	movwf	___flmul@prod+3
  8498  0FB7  3080               	movlw	128
  8499  0FB8  00BA               	movwf	___flmul@prod+2
  8500  0FB9  3000               	movlw	0
  8501  0FBA  00B9               	movwf	___flmul@prod+1
  8502  0FBB  3000               	movlw	0
  8503  0FBC  00B8               	movwf	___flmul@prod
  8504  0FBD  2FF3               	goto	i1l800
  8505  0FBE                     i1l3002:
  8506  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  8507  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  8508  0FC0  083D               	movf	___flmul@temp+1,w
  8509  0FC1  3A80               	xorlw	128
  8510  0FC2  00FF               	movwf	btemp+1
  8511  0FC3  3080               	movlw	128
  8512  0FC4  027F               	subwf	btemp+1,w
  8513  0FC5  1D03               	skipz
  8514  0FC6  2FC9               	goto	u421_25
  8515  0FC7  3001               	movlw	1
  8516  0FC8  023C               	subwf	___flmul@temp,w
  8517  0FC9                     u421_25:
  8518  0FC9  1803               	skipnc
  8519  0FCA  2FCC               	goto	u421_21
  8520  0FCB  2FCD               	goto	u421_20
  8521  0FCC                     u421_21:
  8522  0FCC  2FD9               	goto	i1l3008
  8523  0FCD                     u421_20:
  8524  0FCD                     i1l3004:
  8525  0FCD  3000               	movlw	0
  8526  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  8527  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  8528  0FD0  00BB               	movwf	___flmul@prod+3
  8529  0FD1  3000               	movlw	0
  8530  0FD2  00BA               	movwf	___flmul@prod+2
  8531  0FD3  3000               	movlw	0
  8532  0FD4  00B9               	movwf	___flmul@prod+1
  8533  0FD5  3000               	movlw	0
  8534  0FD6  00B8               	movwf	___flmul@prod
  8535  0FD7                     i1l3006:
  8536  0FD7  01B1               	clrf	___flmul@sign
  8537  0FD8  2FF3               	goto	i1l800
  8538  0FD9                     i1l3008:
  8539  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  8540  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  8541  0FDB  083C               	movf	___flmul@temp,w
  8542  0FDC  00AC               	movwf	??___flmul
  8543  0FDD  082C               	movf	??___flmul,w
  8544  0FDE  00B7               	movwf	___flmul@bexp
  8545  0FDF  30FF               	movlw	255
  8546  0FE0  05B8               	andwf	___flmul@prod,f
  8547  0FE1  30FF               	movlw	255
  8548  0FE2  05B9               	andwf	___flmul@prod+1,f
  8549  0FE3  307F               	movlw	127
  8550  0FE4  05BA               	andwf	___flmul@prod+2,f
  8551  0FE5  3000               	movlw	0
  8552  0FE6  05BB               	andwf	___flmul@prod+3,f
  8553  0FE7                     i1l3010:
  8554  0FE7  1C37               	btfss	___flmul@bexp,0
  8555  0FE8  2FEA               	goto	u422_21
  8556  0FE9  2FEB               	goto	u422_20
  8557  0FEA                     u422_21:
  8558  0FEA  2FEC               	goto	i1l3014
  8559  0FEB                     u422_20:
  8560  0FEB                     i1l3012:
  8561  0FEB  17BA               	bsf	___flmul@prod+2,7
  8562  0FEC                     i1l3014:
  8563  0FEC  0837               	movf	___flmul@bexp,w
  8564  0FED  00AC               	movwf	??___flmul
  8565  0FEE  1003               	clrc
  8566  0FEF  0C2C               	rrf	??___flmul,w
  8567  0FF0  00AD               	movwf	??___flmul+1
  8568  0FF1  082D               	movf	??___flmul+1,w
  8569  0FF2  00BB               	movwf	___flmul@prod+3
  8570  0FF3                     i1l800:
  8571  0FF3  0831               	movf	___flmul@sign,w
  8572  0FF4  00AC               	movwf	??___flmul
  8573  0FF5  082C               	movf	??___flmul,w
  8574  0FF6  04BB               	iorwf	___flmul@prod+3,f
  8575  0FF7                     i1l3016:
  8576  0FF7  083B               	movf	___flmul@prod+3,w
  8577  0FF8  00A7               	movwf	?___flmul+3
  8578  0FF9  083A               	movf	___flmul@prod+2,w
  8579  0FFA  00A6               	movwf	?___flmul+2
  8580  0FFB  0839               	movf	___flmul@prod+1,w
  8581  0FFC  00A5               	movwf	?___flmul+1
  8582  0FFD  0838               	movf	___flmul@prod,w
  8583  0FFE  00A4               	movwf	?___flmul
  8584  0FFF                     i1l788:
  8585  0FFF  0008               	return
  8586  1000                     __end_of___flmul:
  8587                           
  8588                           	psect	text26
  8589  1A29                     __ptext26:	
  8590 ;; *************** function __Umul8_16 *****************
  8591 ;; Defined at:
  8592 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  8593 ;; Parameters:    Size  Location     Type
  8594 ;;  multiplier      1    wreg     unsigned char 
  8595 ;;  multiplicand    1    0[COMMON] unsigned char 
  8596 ;; Auto vars:     Size  Location     Type
  8597 ;;  multiplier      1    8[COMMON] unsigned char 
  8598 ;;  word_mpld       2    6[COMMON] unsigned int 
  8599 ;;  product         2    4[COMMON] unsigned int 
  8600 ;; Return value:  Size  Location     Type
  8601 ;;                  2    0[COMMON] unsigned int 
  8602 ;; Registers used:
  8603 ;;		wreg, status,2, status,0
  8604 ;; Tracked objects:
  8605 ;;		On entry : 0/0
  8606 ;;		On exit  : 0/0
  8607 ;;		Unchanged: 0/0
  8608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8609 ;;      Params:         2       0       0       0       0
  8610 ;;      Locals:         5       0       0       0       0
  8611 ;;      Temps:          2       0       0       0       0
  8612 ;;      Totals:         9       0       0       0       0
  8613 ;;Total ram usage:        9 bytes
  8614 ;; Hardware stack levels used:    1
  8615 ;; This function calls:
  8616 ;;		Nothing
  8617 ;; This function is called by:
  8618 ;;		___flmul
  8619 ;; This function uses a non-reentrant model
  8620 ;;
  8621                           
  8622                           
  8623                           ;psect for function __Umul8_16
  8624  1A29                     __Umul8_16:
  8625                           
  8626                           ;incstack = 0
  8627                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8628                           ;__Umul8_16@multiplier stored from wreg
  8629  1A29  00F8               	movwf	__Umul8_16@multiplier
  8630  1A2A                     i1l2540:
  8631  1A2A  01F4               	clrf	__Umul8_16@product
  8632  1A2B  01F5               	clrf	__Umul8_16@product+1
  8633  1A2C                     i1l2542:
  8634  1A2C  0870               	movf	__Umul8_16@multiplicand,w
  8635  1A2D  00F2               	movwf	??__Umul8_16
  8636  1A2E  01F3               	clrf	??__Umul8_16+1
  8637  1A2F  0872               	movf	??__Umul8_16,w
  8638  1A30  00F6               	movwf	__Umul8_16@word_mpld
  8639  1A31  0873               	movf	??__Umul8_16+1,w
  8640  1A32  00F7               	movwf	__Umul8_16@word_mpld+1
  8641  1A33                     i1l2544:
  8642  1A33  1C78               	btfss	__Umul8_16@multiplier,0
  8643  1A34  2A36               	goto	u305_21
  8644  1A35  2A37               	goto	u305_20
  8645  1A36                     u305_21:
  8646  1A36  2A3D               	goto	i1l807
  8647  1A37                     u305_20:
  8648  1A37                     i1l2546:
  8649  1A37  0876               	movf	__Umul8_16@word_mpld,w
  8650  1A38  07F4               	addwf	__Umul8_16@product,f
  8651  1A39  1803               	skipnc
  8652  1A3A  0AF5               	incf	__Umul8_16@product+1,f
  8653  1A3B  0877               	movf	__Umul8_16@word_mpld+1,w
  8654  1A3C  07F5               	addwf	__Umul8_16@product+1,f
  8655  1A3D                     i1l807:
  8656  1A3D  3001               	movlw	1
  8657  1A3E                     u306_25:
  8658  1A3E  1003               	clrc
  8659  1A3F  0DF6               	rlf	__Umul8_16@word_mpld,f
  8660  1A40  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  8661  1A41  3EFF               	addlw	-1
  8662  1A42  1D03               	skipz
  8663  1A43  2A3E               	goto	u306_25
  8664  1A44  1003               	clrc
  8665  1A45  0CF8               	rrf	__Umul8_16@multiplier,f
  8666  1A46                     i1l2548:
  8667  1A46  0878               	movf	__Umul8_16@multiplier,w
  8668  1A47  1D03               	btfss	3,2
  8669  1A48  2A4A               	goto	u307_21
  8670  1A49  2A4B               	goto	u307_20
  8671  1A4A                     u307_21:
  8672  1A4A  2A33               	goto	i1l2544
  8673  1A4B                     u307_20:
  8674  1A4B                     i1l2550:
  8675  1A4B  0875               	movf	__Umul8_16@product+1,w
  8676  1A4C  00F1               	movwf	?__Umul8_16+1
  8677  1A4D  0874               	movf	__Umul8_16@product,w
  8678  1A4E  00F0               	movwf	?__Umul8_16
  8679  1A4F                     i1l809:
  8680  1A4F  0008               	return
  8681  1A50                     __end_of__Umul8_16:
  8682                           
  8683                           	psect	text27
  8684  1015                     __ptext27:	
  8685 ;; *************** function __tdiv_to_l_ *****************
  8686 ;; Defined at:
  8687 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  8688 ;; Parameters:    Size  Location     Type
  8689 ;;  f1              4    0[COMMON] float 
  8690 ;;  f2              4    4[COMMON] float 
  8691 ;; Auto vars:     Size  Location     Type
  8692 ;;  quot            4    0[BANK0 ] unsigned long 
  8693 ;;  exp1            1    5[BANK0 ] unsigned char 
  8694 ;;  cntr            1    4[BANK0 ] unsigned char 
  8695 ;; Return value:  Size  Location     Type
  8696 ;;                  4    0[COMMON] unsigned long 
  8697 ;; Registers used:
  8698 ;;		wreg, status,2, status,0
  8699 ;; Tracked objects:
  8700 ;;		On entry : 0/0
  8701 ;;		On exit  : 0/0
  8702 ;;		Unchanged: 0/0
  8703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8704 ;;      Params:         8       0       0       0       0
  8705 ;;      Locals:         0       6       0       0       0
  8706 ;;      Temps:          4       0       0       0       0
  8707 ;;      Totals:        12       6       0       0       0
  8708 ;;Total ram usage:       18 bytes
  8709 ;; Hardware stack levels used:    1
  8710 ;; This function calls:
  8711 ;;		Nothing
  8712 ;; This function is called by:
  8713 ;;		_sprintf
  8714 ;; This function uses a non-reentrant model
  8715 ;;
  8716                           
  8717                           
  8718                           ;psect for function __tdiv_to_l_
  8719  1015                     __tdiv_to_l_:
  8720  1015                     i1l3112:	
  8721                           ;incstack = 0
  8722                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  8723                           
  8724  1015  0870               	movf	__tdiv_to_l_@f1,w
  8725  1016  00F8               	movwf	??__tdiv_to_l_
  8726  1017  0871               	movf	__tdiv_to_l_@f1+1,w
  8727  1018  00F9               	movwf	??__tdiv_to_l_+1
  8728  1019  0872               	movf	__tdiv_to_l_@f1+2,w
  8729  101A  00FA               	movwf	??__tdiv_to_l_+2
  8730  101B  1003               	clrc
  8731  101C  0D79               	rlf	??__tdiv_to_l_+1,w
  8732  101D  0D7A               	rlf	??__tdiv_to_l_+2,w
  8733  101E  00FB               	movwf	??__tdiv_to_l_+3
  8734  101F  087B               	movf	??__tdiv_to_l_+3,w
  8735  1020  1283               	bcf	3,5	;RP0=0, select bank0
  8736  1021  1303               	bcf	3,6	;RP1=0, select bank0
  8737  1022  00A5               	movwf	__tdiv_to_l_@exp1
  8738  1023  0825               	movf	__tdiv_to_l_@exp1,w
  8739  1024  1D03               	btfss	3,2
  8740  1025  2827               	goto	u450_21
  8741  1026  2828               	goto	u450_20
  8742  1027                     u450_21:
  8743  1027  2831               	goto	i1l3118
  8744  1028                     u450_20:
  8745  1028                     i1l3114:
  8746  1028  3000               	movlw	0
  8747  1029  00F3               	movwf	?__tdiv_to_l_+3
  8748  102A  3000               	movlw	0
  8749  102B  00F2               	movwf	?__tdiv_to_l_+2
  8750  102C  3000               	movlw	0
  8751  102D  00F1               	movwf	?__tdiv_to_l_+1
  8752  102E  3000               	movlw	0
  8753  102F  00F0               	movwf	?__tdiv_to_l_
  8754  1030  28D1               	goto	i1l582
  8755  1031                     i1l3118:
  8756  1031  0874               	movf	__tdiv_to_l_@f2,w
  8757  1032  00F8               	movwf	??__tdiv_to_l_
  8758  1033  0875               	movf	__tdiv_to_l_@f2+1,w
  8759  1034  00F9               	movwf	??__tdiv_to_l_+1
  8760  1035  0876               	movf	__tdiv_to_l_@f2+2,w
  8761  1036  00FA               	movwf	??__tdiv_to_l_+2
  8762  1037  1003               	clrc
  8763  1038  0D79               	rlf	??__tdiv_to_l_+1,w
  8764  1039  0D7A               	rlf	??__tdiv_to_l_+2,w
  8765  103A  00FB               	movwf	??__tdiv_to_l_+3
  8766  103B  087B               	movf	??__tdiv_to_l_+3,w
  8767  103C  00A4               	movwf	__tdiv_to_l_@cntr
  8768  103D  0824               	movf	__tdiv_to_l_@cntr,w
  8769  103E  1D03               	btfss	3,2
  8770  103F  2841               	goto	u451_21
  8771  1040  2842               	goto	u451_20
  8772  1041                     u451_21:
  8773  1041  2843               	goto	i1l583
  8774  1042                     u451_20:
  8775  1042  2828               	goto	i1l3114
  8776  1043                     i1l583:
  8777  1043  17F1               	bsf	__tdiv_to_l_@f1+1,7
  8778  1044                     i1l3124:
  8779  1044  30FF               	movlw	255
  8780  1045  05F0               	andwf	__tdiv_to_l_@f1,f
  8781  1046  30FF               	movlw	255
  8782  1047  05F1               	andwf	__tdiv_to_l_@f1+1,f
  8783  1048  3000               	movlw	0
  8784  1049  05F2               	andwf	__tdiv_to_l_@f1+2,f
  8785  104A                     i1l3126:
  8786  104A  17F5               	bsf	__tdiv_to_l_@f2+1,7
  8787  104B  30FF               	movlw	255
  8788  104C  05F4               	andwf	__tdiv_to_l_@f2,f
  8789  104D  30FF               	movlw	255
  8790  104E  05F5               	andwf	__tdiv_to_l_@f2+1,f
  8791  104F  3000               	movlw	0
  8792  1050  05F6               	andwf	__tdiv_to_l_@f2+2,f
  8793  1051  3000               	movlw	0
  8794  1052  00A3               	movwf	__tdiv_to_l_@quot+3
  8795  1053  3000               	movlw	0
  8796  1054  00A2               	movwf	__tdiv_to_l_@quot+2
  8797  1055  3000               	movlw	0
  8798  1056  00A1               	movwf	__tdiv_to_l_@quot+1
  8799  1057  3000               	movlw	0
  8800  1058  00A0               	movwf	__tdiv_to_l_@quot
  8801  1059                     i1l3128:
  8802  1059  307F               	movlw	127
  8803  105A  02A5               	subwf	__tdiv_to_l_@exp1,f
  8804  105B                     i1l3130:
  8805  105B  3098               	movlw	152
  8806  105C  0724               	addwf	__tdiv_to_l_@cntr,w
  8807  105D  00F8               	movwf	??__tdiv_to_l_
  8808  105E  0878               	movf	??__tdiv_to_l_,w
  8809  105F  02A5               	subwf	__tdiv_to_l_@exp1,f
  8810  1060  3018               	movlw	24
  8811  1061  00F8               	movwf	??__tdiv_to_l_
  8812  1062  0878               	movf	??__tdiv_to_l_,w
  8813  1063  00A4               	movwf	__tdiv_to_l_@cntr
  8814  1064                     i1l3132:
  8815  1064  3001               	movlw	1
  8816  1065  00F8               	movwf	??__tdiv_to_l_
  8817  1066                     u452_25:
  8818  1066  1003               	clrc
  8819  1067  0DA0               	rlf	__tdiv_to_l_@quot,f
  8820  1068  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  8821  1069  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  8822  106A  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  8823  106B  0BF8               	decfsz	??__tdiv_to_l_,f
  8824  106C  2866               	goto	u452_25
  8825  106D                     i1l3134:
  8826  106D  0876               	movf	__tdiv_to_l_@f2+2,w
  8827  106E  0272               	subwf	__tdiv_to_l_@f1+2,w
  8828  106F  1D03               	skipz
  8829  1070  2877               	goto	u453_25
  8830  1071  0875               	movf	__tdiv_to_l_@f2+1,w
  8831  1072  0271               	subwf	__tdiv_to_l_@f1+1,w
  8832  1073  1D03               	skipz
  8833  1074  2877               	goto	u453_25
  8834  1075  0874               	movf	__tdiv_to_l_@f2,w
  8835  1076  0270               	subwf	__tdiv_to_l_@f1,w
  8836  1077                     u453_25:
  8837  1077  1C03               	skipc
  8838  1078  287A               	goto	u453_21
  8839  1079  287B               	goto	u453_20
  8840  107A                     u453_21:
  8841  107A  2886               	goto	i1l3140
  8842  107B                     u453_20:
  8843  107B                     i1l3136:
  8844  107B  0874               	movf	__tdiv_to_l_@f2,w
  8845  107C  02F0               	subwf	__tdiv_to_l_@f1,f
  8846  107D  0875               	movf	__tdiv_to_l_@f2+1,w
  8847  107E  1C03               	skipc
  8848  107F  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  8849  1080  02F1               	subwf	__tdiv_to_l_@f1+1,f
  8850  1081  0876               	movf	__tdiv_to_l_@f2+2,w
  8851  1082  1C03               	skipc
  8852  1083  0A76               	incf	__tdiv_to_l_@f2+2,w
  8853  1084  02F2               	subwf	__tdiv_to_l_@f1+2,f
  8854  1085                     i1l3138:
  8855  1085  1420               	bsf	__tdiv_to_l_@quot,0
  8856  1086                     i1l3140:
  8857  1086  3001               	movlw	1
  8858  1087                     u454_25:
  8859  1087  1003               	clrc
  8860  1088  0DF0               	rlf	__tdiv_to_l_@f1,f
  8861  1089  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  8862  108A  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  8863  108B  3EFF               	addlw	-1
  8864  108C  1D03               	skipz
  8865  108D  2887               	goto	u454_25
  8866  108E                     i1l3142:
  8867  108E  3001               	movlw	1
  8868  108F  02A4               	subwf	__tdiv_to_l_@cntr,f
  8869  1090  1D03               	btfss	3,2
  8870  1091  2893               	goto	u455_21
  8871  1092  2894               	goto	u455_20
  8872  1093                     u455_21:
  8873  1093  2864               	goto	i1l3132
  8874  1094                     u455_20:
  8875  1094                     i1l586:
  8876  1094  1FA5               	btfss	__tdiv_to_l_@exp1,7
  8877  1095  2897               	goto	u456_21
  8878  1096  2898               	goto	u456_20
  8879  1097                     u456_21:
  8880  1097  28B2               	goto	i1l3152
  8881  1098                     u456_20:
  8882  1098                     i1l3144:
  8883  1098  0825               	movf	__tdiv_to_l_@exp1,w
  8884  1099  3A80               	xorlw	128
  8885  109A  3E97               	addlw	151
  8886  109B  1803               	skipnc
  8887  109C  289E               	goto	u457_21
  8888  109D  289F               	goto	u457_20
  8889  109E                     u457_21:
  8890  109E  28A0               	goto	i1l3150
  8891  109F                     u457_20:
  8892  109F  2828               	goto	i1l3114
  8893  10A0                     i1l3150:
  8894  10A0  3001               	movlw	1
  8895  10A1                     u458_25:
  8896  10A1  1003               	clrc
  8897  10A2  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  8898  10A3  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  8899  10A4  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  8900  10A5  0CA0               	rrf	__tdiv_to_l_@quot,f
  8901  10A6  3EFF               	addlw	-1
  8902  10A7  1D03               	skipz
  8903  10A8  28A1               	goto	u458_25
  8904  10A9  3001               	movlw	1
  8905  10AA  00F8               	movwf	??__tdiv_to_l_
  8906  10AB  0878               	movf	??__tdiv_to_l_,w
  8907  10AC  07A5               	addwf	__tdiv_to_l_@exp1,f
  8908  10AD  1D03               	btfss	3,2
  8909  10AE  28B0               	goto	u459_21
  8910  10AF  28B1               	goto	u459_20
  8911  10B0                     u459_21:
  8912  10B0  28A0               	goto	i1l3150
  8913  10B1                     u459_20:
  8914  10B1  28C9               	goto	i1l3160
  8915  10B2                     i1l3152:
  8916  10B2  3018               	movlw	24
  8917  10B3  0225               	subwf	__tdiv_to_l_@exp1,w
  8918  10B4  1C03               	skipc
  8919  10B5  28B7               	goto	u460_21
  8920  10B6  28B8               	goto	u460_20
  8921  10B7                     u460_21:
  8922  10B7  28C4               	goto	i1l593
  8923  10B8                     u460_20:
  8924  10B8  2828               	goto	i1l3114
  8925  10B9                     i1l3158:
  8926  10B9  3001               	movlw	1
  8927  10BA  00F8               	movwf	??__tdiv_to_l_
  8928  10BB                     u461_25:
  8929  10BB  1003               	clrc
  8930  10BC  0DA0               	rlf	__tdiv_to_l_@quot,f
  8931  10BD  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  8932  10BE  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  8933  10BF  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  8934  10C0  0BF8               	decfsz	??__tdiv_to_l_,f
  8935  10C1  28BB               	goto	u461_25
  8936  10C2  3001               	movlw	1
  8937  10C3  02A5               	subwf	__tdiv_to_l_@exp1,f
  8938  10C4                     i1l593:
  8939  10C4  0825               	movf	__tdiv_to_l_@exp1,w
  8940  10C5  1D03               	btfss	3,2
  8941  10C6  28C8               	goto	u462_21
  8942  10C7  28C9               	goto	u462_20
  8943  10C8                     u462_21:
  8944  10C8  28B9               	goto	i1l3158
  8945  10C9                     u462_20:
  8946  10C9                     i1l3160:
  8947  10C9  0823               	movf	__tdiv_to_l_@quot+3,w
  8948  10CA  00F3               	movwf	?__tdiv_to_l_+3
  8949  10CB  0822               	movf	__tdiv_to_l_@quot+2,w
  8950  10CC  00F2               	movwf	?__tdiv_to_l_+2
  8951  10CD  0821               	movf	__tdiv_to_l_@quot+1,w
  8952  10CE  00F1               	movwf	?__tdiv_to_l_+1
  8953  10CF  0820               	movf	__tdiv_to_l_@quot,w
  8954  10D0  00F0               	movwf	?__tdiv_to_l_
  8955  10D1                     i1l582:
  8956  10D1  0008               	return
  8957  10D2                     __end_of__tdiv_to_l_:
  8958                           
  8959                           	psect	text28
  8960  10D2                     __ptext28:	
  8961 ;; *************** function __div_to_l_ *****************
  8962 ;; Defined at:
  8963 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  8964 ;; Parameters:    Size  Location     Type
  8965 ;;  f1              4    0[COMMON] unsigned long 
  8966 ;;  f2              4    4[COMMON] unsigned long 
  8967 ;; Auto vars:     Size  Location     Type
  8968 ;;  quot            4    0[BANK0 ] unsigned long 
  8969 ;;  exp1            1    5[BANK0 ] unsigned char 
  8970 ;;  cntr            1    4[BANK0 ] unsigned char 
  8971 ;; Return value:  Size  Location     Type
  8972 ;;                  4    0[COMMON] unsigned long 
  8973 ;; Registers used:
  8974 ;;		wreg, status,2, status,0
  8975 ;; Tracked objects:
  8976 ;;		On entry : 0/0
  8977 ;;		On exit  : 0/0
  8978 ;;		Unchanged: 0/0
  8979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8980 ;;      Params:         8       0       0       0       0
  8981 ;;      Locals:         0       6       0       0       0
  8982 ;;      Temps:          1       0       0       0       0
  8983 ;;      Totals:         9       6       0       0       0
  8984 ;;Total ram usage:       15 bytes
  8985 ;; Hardware stack levels used:    1
  8986 ;; This function calls:
  8987 ;;		Nothing
  8988 ;; This function is called by:
  8989 ;;		_sprintf
  8990 ;; This function uses a non-reentrant model
  8991 ;;
  8992                           
  8993                           
  8994                           ;psect for function __div_to_l_
  8995  10D2                     __div_to_l_:
  8996  10D2                     i1l3164:	
  8997                           ;incstack = 0
  8998                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  8999                           
  9000  10D2  1003               	clrc
  9001  10D3  0D72               	rlf	__div_to_l_@f1+2,w
  9002  10D4  0D73               	rlf	__div_to_l_@f1+3,w
  9003  10D5  00F8               	movwf	??__div_to_l_
  9004  10D6  0878               	movf	??__div_to_l_,w
  9005  10D7  1283               	bcf	3,5	;RP0=0, select bank0
  9006  10D8  1303               	bcf	3,6	;RP1=0, select bank0
  9007  10D9  00A5               	movwf	__div_to_l_@exp1
  9008  10DA  0825               	movf	__div_to_l_@exp1,w
  9009  10DB  1D03               	btfss	3,2
  9010  10DC  28DE               	goto	u463_21
  9011  10DD  28DF               	goto	u463_20
  9012  10DE                     u463_21:
  9013  10DE  28E8               	goto	i1l3170
  9014  10DF                     u463_20:
  9015  10DF                     i1l3166:
  9016  10DF  3000               	movlw	0
  9017  10E0  00F3               	movwf	?__div_to_l_+3
  9018  10E1  3000               	movlw	0
  9019  10E2  00F2               	movwf	?__div_to_l_+2
  9020  10E3  3000               	movlw	0
  9021  10E4  00F1               	movwf	?__div_to_l_+1
  9022  10E5  3000               	movlw	0
  9023  10E6  00F0               	movwf	?__div_to_l_
  9024  10E7  298F               	goto	i1l535
  9025  10E8                     i1l3170:
  9026  10E8  1003               	clrc
  9027  10E9  0D76               	rlf	__div_to_l_@f2+2,w
  9028  10EA  0D77               	rlf	__div_to_l_@f2+3,w
  9029  10EB  00F8               	movwf	??__div_to_l_
  9030  10EC  0878               	movf	??__div_to_l_,w
  9031  10ED  00A4               	movwf	__div_to_l_@cntr
  9032  10EE  0824               	movf	__div_to_l_@cntr,w
  9033  10EF  1D03               	btfss	3,2
  9034  10F0  28F2               	goto	u464_21
  9035  10F1  28F3               	goto	u464_20
  9036  10F2                     u464_21:
  9037  10F2  28F4               	goto	i1l536
  9038  10F3                     u464_20:
  9039  10F3  28DF               	goto	i1l3166
  9040  10F4                     i1l536:
  9041  10F4  17F2               	bsf	__div_to_l_@f1+2,7
  9042  10F5                     i1l3176:
  9043  10F5  30FF               	movlw	255
  9044  10F6  05F0               	andwf	__div_to_l_@f1,f
  9045  10F7  30FF               	movlw	255
  9046  10F8  05F1               	andwf	__div_to_l_@f1+1,f
  9047  10F9  30FF               	movlw	255
  9048  10FA  05F2               	andwf	__div_to_l_@f1+2,f
  9049  10FB  3000               	movlw	0
  9050  10FC  05F3               	andwf	__div_to_l_@f1+3,f
  9051  10FD                     i1l3178:
  9052  10FD  17F6               	bsf	__div_to_l_@f2+2,7
  9053  10FE  30FF               	movlw	255
  9054  10FF  05F4               	andwf	__div_to_l_@f2,f
  9055  1100  30FF               	movlw	255
  9056  1101  05F5               	andwf	__div_to_l_@f2+1,f
  9057  1102  30FF               	movlw	255
  9058  1103  05F6               	andwf	__div_to_l_@f2+2,f
  9059  1104  3000               	movlw	0
  9060  1105  05F7               	andwf	__div_to_l_@f2+3,f
  9061  1106  3000               	movlw	0
  9062  1107  00A3               	movwf	__div_to_l_@quot+3
  9063  1108  3000               	movlw	0
  9064  1109  00A2               	movwf	__div_to_l_@quot+2
  9065  110A  3000               	movlw	0
  9066  110B  00A1               	movwf	__div_to_l_@quot+1
  9067  110C  3000               	movlw	0
  9068  110D  00A0               	movwf	__div_to_l_@quot
  9069  110E                     i1l3180:
  9070  110E  307F               	movlw	127
  9071  110F  02A5               	subwf	__div_to_l_@exp1,f
  9072  1110                     i1l3182:
  9073  1110  30A0               	movlw	160
  9074  1111  0724               	addwf	__div_to_l_@cntr,w
  9075  1112  00F8               	movwf	??__div_to_l_
  9076  1113  0878               	movf	??__div_to_l_,w
  9077  1114  02A5               	subwf	__div_to_l_@exp1,f
  9078  1115  3020               	movlw	32
  9079  1116  00F8               	movwf	??__div_to_l_
  9080  1117  0878               	movf	??__div_to_l_,w
  9081  1118  00A4               	movwf	__div_to_l_@cntr
  9082  1119                     i1l3184:
  9083  1119  3001               	movlw	1
  9084  111A  00F8               	movwf	??__div_to_l_
  9085  111B                     u465_25:
  9086  111B  1003               	clrc
  9087  111C  0DA0               	rlf	__div_to_l_@quot,f
  9088  111D  0DA1               	rlf	__div_to_l_@quot+1,f
  9089  111E  0DA2               	rlf	__div_to_l_@quot+2,f
  9090  111F  0DA3               	rlf	__div_to_l_@quot+3,f
  9091  1120  0BF8               	decfsz	??__div_to_l_,f
  9092  1121  291B               	goto	u465_25
  9093  1122                     i1l3186:
  9094  1122  0877               	movf	__div_to_l_@f2+3,w
  9095  1123  0273               	subwf	__div_to_l_@f1+3,w
  9096  1124  1D03               	skipz
  9097  1125  2930               	goto	u466_25
  9098  1126  0876               	movf	__div_to_l_@f2+2,w
  9099  1127  0272               	subwf	__div_to_l_@f1+2,w
  9100  1128  1D03               	skipz
  9101  1129  2930               	goto	u466_25
  9102  112A  0875               	movf	__div_to_l_@f2+1,w
  9103  112B  0271               	subwf	__div_to_l_@f1+1,w
  9104  112C  1D03               	skipz
  9105  112D  2930               	goto	u466_25
  9106  112E  0874               	movf	__div_to_l_@f2,w
  9107  112F  0270               	subwf	__div_to_l_@f1,w
  9108  1130                     u466_25:
  9109  1130  1C03               	skipc
  9110  1131  2933               	goto	u466_21
  9111  1132  2934               	goto	u466_20
  9112  1133                     u466_21:
  9113  1133  2943               	goto	i1l3192
  9114  1134                     u466_20:
  9115  1134                     i1l3188:
  9116  1134  0874               	movf	__div_to_l_@f2,w
  9117  1135  02F0               	subwf	__div_to_l_@f1,f
  9118  1136  0875               	movf	__div_to_l_@f2+1,w
  9119  1137  1C03               	skipc
  9120  1138  0F75               	incfsz	__div_to_l_@f2+1,w
  9121  1139  02F1               	subwf	__div_to_l_@f1+1,f
  9122  113A  0876               	movf	__div_to_l_@f2+2,w
  9123  113B  1C03               	skipc
  9124  113C  0F76               	incfsz	__div_to_l_@f2+2,w
  9125  113D  02F2               	subwf	__div_to_l_@f1+2,f
  9126  113E  0877               	movf	__div_to_l_@f2+3,w
  9127  113F  1C03               	skipc
  9128  1140  0F77               	incfsz	__div_to_l_@f2+3,w
  9129  1141  02F3               	subwf	__div_to_l_@f1+3,f
  9130  1142                     i1l3190:
  9131  1142  1420               	bsf	__div_to_l_@quot,0
  9132  1143                     i1l3192:
  9133  1143  3001               	movlw	1
  9134  1144  00F8               	movwf	??__div_to_l_
  9135  1145                     u467_25:
  9136  1145  1003               	clrc
  9137  1146  0DF0               	rlf	__div_to_l_@f1,f
  9138  1147  0DF1               	rlf	__div_to_l_@f1+1,f
  9139  1148  0DF2               	rlf	__div_to_l_@f1+2,f
  9140  1149  0DF3               	rlf	__div_to_l_@f1+3,f
  9141  114A  0BF8               	decfsz	??__div_to_l_,f
  9142  114B  2945               	goto	u467_25
  9143  114C                     i1l3194:
  9144  114C  3001               	movlw	1
  9145  114D  02A4               	subwf	__div_to_l_@cntr,f
  9146  114E  1D03               	btfss	3,2
  9147  114F  2951               	goto	u468_21
  9148  1150  2952               	goto	u468_20
  9149  1151                     u468_21:
  9150  1151  2919               	goto	i1l3184
  9151  1152                     u468_20:
  9152  1152                     i1l539:
  9153  1152  1FA5               	btfss	__div_to_l_@exp1,7
  9154  1153  2955               	goto	u469_21
  9155  1154  2956               	goto	u469_20
  9156  1155                     u469_21:
  9157  1155  2970               	goto	i1l3204
  9158  1156                     u469_20:
  9159  1156                     i1l3196:
  9160  1156  0825               	movf	__div_to_l_@exp1,w
  9161  1157  3A80               	xorlw	128
  9162  1158  3E9F               	addlw	159
  9163  1159  1803               	skipnc
  9164  115A  295C               	goto	u470_21
  9165  115B  295D               	goto	u470_20
  9166  115C                     u470_21:
  9167  115C  295E               	goto	i1l3202
  9168  115D                     u470_20:
  9169  115D  28DF               	goto	i1l3166
  9170  115E                     i1l3202:
  9171  115E  3001               	movlw	1
  9172  115F                     u471_25:
  9173  115F  1003               	clrc
  9174  1160  0CA3               	rrf	__div_to_l_@quot+3,f
  9175  1161  0CA2               	rrf	__div_to_l_@quot+2,f
  9176  1162  0CA1               	rrf	__div_to_l_@quot+1,f
  9177  1163  0CA0               	rrf	__div_to_l_@quot,f
  9178  1164  3EFF               	addlw	-1
  9179  1165  1D03               	skipz
  9180  1166  295F               	goto	u471_25
  9181  1167  3001               	movlw	1
  9182  1168  00F8               	movwf	??__div_to_l_
  9183  1169  0878               	movf	??__div_to_l_,w
  9184  116A  07A5               	addwf	__div_to_l_@exp1,f
  9185  116B  1D03               	btfss	3,2
  9186  116C  296E               	goto	u472_21
  9187  116D  296F               	goto	u472_20
  9188  116E                     u472_21:
  9189  116E  295E               	goto	i1l3202
  9190  116F                     u472_20:
  9191  116F  2987               	goto	i1l3212
  9192  1170                     i1l3204:
  9193  1170  3020               	movlw	32
  9194  1171  0225               	subwf	__div_to_l_@exp1,w
  9195  1172  1C03               	skipc
  9196  1173  2975               	goto	u473_21
  9197  1174  2976               	goto	u473_20
  9198  1175                     u473_21:
  9199  1175  2982               	goto	i1l546
  9200  1176                     u473_20:
  9201  1176  28DF               	goto	i1l3166
  9202  1177                     i1l3210:
  9203  1177  3001               	movlw	1
  9204  1178  00F8               	movwf	??__div_to_l_
  9205  1179                     u474_25:
  9206  1179  1003               	clrc
  9207  117A  0DA0               	rlf	__div_to_l_@quot,f
  9208  117B  0DA1               	rlf	__div_to_l_@quot+1,f
  9209  117C  0DA2               	rlf	__div_to_l_@quot+2,f
  9210  117D  0DA3               	rlf	__div_to_l_@quot+3,f
  9211  117E  0BF8               	decfsz	??__div_to_l_,f
  9212  117F  2979               	goto	u474_25
  9213  1180  3001               	movlw	1
  9214  1181  02A5               	subwf	__div_to_l_@exp1,f
  9215  1182                     i1l546:
  9216  1182  0825               	movf	__div_to_l_@exp1,w
  9217  1183  1D03               	btfss	3,2
  9218  1184  2986               	goto	u475_21
  9219  1185  2987               	goto	u475_20
  9220  1186                     u475_21:
  9221  1186  2977               	goto	i1l3210
  9222  1187                     u475_20:
  9223  1187                     i1l3212:
  9224  1187  0823               	movf	__div_to_l_@quot+3,w
  9225  1188  00F3               	movwf	?__div_to_l_+3
  9226  1189  0822               	movf	__div_to_l_@quot+2,w
  9227  118A  00F2               	movwf	?__div_to_l_+2
  9228  118B  0821               	movf	__div_to_l_@quot+1,w
  9229  118C  00F1               	movwf	?__div_to_l_+1
  9230  118D  0820               	movf	__div_to_l_@quot,w
  9231  118E  00F0               	movwf	?__div_to_l_
  9232  118F                     i1l535:
  9233  118F  0008               	return
  9234  1190                     __end_of__div_to_l_:
  9235                           
  9236                           	psect	text29
  9237  1F46                     __ptext29:	
  9238 ;; *************** function ___xxtofl *****************
  9239 ;; Defined at:
  9240 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  9241 ;; Parameters:    Size  Location     Type
  9242 ;;  sign            1    wreg     unsigned char 
  9243 ;;  val             4    0[COMMON] long 
  9244 ;; Auto vars:     Size  Location     Type
  9245 ;;  sign            1    8[COMMON] unsigned char 
  9246 ;;  arg             4   10[COMMON] unsigned long 
  9247 ;;  exp             1    9[COMMON] unsigned char 
  9248 ;; Return value:  Size  Location     Type
  9249 ;;                  4    0[COMMON] unsigned char 
  9250 ;; Registers used:
  9251 ;;		wreg, status,2, status,0
  9252 ;; Tracked objects:
  9253 ;;		On entry : 0/0
  9254 ;;		On exit  : 0/0
  9255 ;;		Unchanged: 0/0
  9256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9257 ;;      Params:         4       0       0       0       0
  9258 ;;      Locals:         6       0       0       0       0
  9259 ;;      Temps:          4       0       0       0       0
  9260 ;;      Totals:        14       0       0       0       0
  9261 ;;Total ram usage:       14 bytes
  9262 ;; Hardware stack levels used:    1
  9263 ;; This function calls:
  9264 ;;		Nothing
  9265 ;; This function is called by:
  9266 ;;		_oli
  9267 ;;		_sprintf
  9268 ;; This function uses a non-reentrant model
  9269 ;;
  9270                           
  9271                           
  9272                           ;psect for function ___xxtofl
  9273  1F46                     ___xxtofl:
  9274                           
  9275                           ;incstack = 0
  9276                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  9277                           ;___xxtofl@sign stored from wreg
  9278  1F46  00F8               	movwf	___xxtofl@sign
  9279  1F47                     i1l3356:
  9280  1F47  0878               	movf	___xxtofl@sign,w
  9281  1F48  1903               	btfsc	3,2
  9282  1F49  2F4B               	goto	u514_21
  9283  1F4A  2F4C               	goto	u514_20
  9284  1F4B                     u514_21:
  9285  1F4B  2F60               	goto	i1l3362
  9286  1F4C                     u514_20:
  9287  1F4C                     i1l3358:
  9288  1F4C  1FF3               	btfss	___xxtofl@val+3,7
  9289  1F4D  2F4F               	goto	u515_21
  9290  1F4E  2F50               	goto	u515_20
  9291  1F4F                     u515_21:
  9292  1F4F  2F60               	goto	i1l3362
  9293  1F50                     u515_20:
  9294  1F50                     i1l3360:
  9295  1F50  0970               	comf	___xxtofl@val,w
  9296  1F51  00FA               	movwf	___xxtofl@arg
  9297  1F52  0971               	comf	___xxtofl@val+1,w
  9298  1F53  00FB               	movwf	___xxtofl@arg+1
  9299  1F54  0972               	comf	___xxtofl@val+2,w
  9300  1F55  00FC               	movwf	___xxtofl@arg+2
  9301  1F56  0973               	comf	___xxtofl@val+3,w
  9302  1F57  00FD               	movwf	___xxtofl@arg+3
  9303  1F58  0AFA               	incf	___xxtofl@arg,f
  9304  1F59  1903               	skipnz
  9305  1F5A  0AFB               	incf	___xxtofl@arg+1,f
  9306  1F5B  1903               	skipnz
  9307  1F5C  0AFC               	incf	___xxtofl@arg+2,f
  9308  1F5D  1903               	skipnz
  9309  1F5E  0AFD               	incf	___xxtofl@arg+3,f
  9310  1F5F  2F68               	goto	i1l832
  9311  1F60                     i1l3362:
  9312  1F60  0873               	movf	___xxtofl@val+3,w
  9313  1F61  00FD               	movwf	___xxtofl@arg+3
  9314  1F62  0872               	movf	___xxtofl@val+2,w
  9315  1F63  00FC               	movwf	___xxtofl@arg+2
  9316  1F64  0871               	movf	___xxtofl@val+1,w
  9317  1F65  00FB               	movwf	___xxtofl@arg+1
  9318  1F66  0870               	movf	___xxtofl@val,w
  9319  1F67  00FA               	movwf	___xxtofl@arg
  9320  1F68                     i1l832:
  9321  1F68  0873               	movf	___xxtofl@val+3,w
  9322  1F69  0472               	iorwf	___xxtofl@val+2,w
  9323  1F6A  0471               	iorwf	___xxtofl@val+1,w
  9324  1F6B  0470               	iorwf	___xxtofl@val,w
  9325  1F6C  1D03               	skipz
  9326  1F6D  2F6F               	goto	u516_21
  9327  1F6E  2F70               	goto	u516_20
  9328  1F6F                     u516_21:
  9329  1F6F  2F79               	goto	i1l3368
  9330  1F70                     u516_20:
  9331  1F70                     i1l3364:
  9332  1F70  3000               	movlw	0
  9333  1F71  00F3               	movwf	?___xxtofl+3
  9334  1F72  3000               	movlw	0
  9335  1F73  00F2               	movwf	?___xxtofl+2
  9336  1F74  3000               	movlw	0
  9337  1F75  00F1               	movwf	?___xxtofl+1
  9338  1F76  3000               	movlw	0
  9339  1F77  00F0               	movwf	?___xxtofl
  9340  1F78  2FFF               	goto	i1l834
  9341  1F79                     i1l3368:
  9342  1F79  3096               	movlw	150
  9343  1F7A  00F4               	movwf	??___xxtofl
  9344  1F7B  0874               	movf	??___xxtofl,w
  9345  1F7C  00F9               	movwf	___xxtofl@exp
  9346  1F7D  2F8B               	goto	i1l3372
  9347  1F7E                     i1l3370:
  9348  1F7E  3001               	movlw	1
  9349  1F7F  00F4               	movwf	??___xxtofl
  9350  1F80  0874               	movf	??___xxtofl,w
  9351  1F81  07F9               	addwf	___xxtofl@exp,f
  9352  1F82  3001               	movlw	1
  9353  1F83                     u517_25:
  9354  1F83  1003               	clrc
  9355  1F84  0CFD               	rrf	___xxtofl@arg+3,f
  9356  1F85  0CFC               	rrf	___xxtofl@arg+2,f
  9357  1F86  0CFB               	rrf	___xxtofl@arg+1,f
  9358  1F87  0CFA               	rrf	___xxtofl@arg,f
  9359  1F88  3EFF               	addlw	-1
  9360  1F89  1D03               	skipz
  9361  1F8A  2F83               	goto	u517_25
  9362  1F8B                     i1l3372:
  9363  1F8B  30FE               	movlw	254
  9364  1F8C  057D               	andwf	___xxtofl@arg+3,w
  9365  1F8D  1D03               	btfss	3,2
  9366  1F8E  2F90               	goto	u518_21
  9367  1F8F  2F91               	goto	u518_20
  9368  1F90                     u518_21:
  9369  1F90  2F7E               	goto	i1l3370
  9370  1F91                     u518_20:
  9371  1F91  2FAD               	goto	i1l838
  9372  1F92                     i1l3374:
  9373  1F92  3001               	movlw	1
  9374  1F93  00F4               	movwf	??___xxtofl
  9375  1F94  0874               	movf	??___xxtofl,w
  9376  1F95  07F9               	addwf	___xxtofl@exp,f
  9377  1F96                     i1l3376:
  9378  1F96  3001               	movlw	1
  9379  1F97  07FA               	addwf	___xxtofl@arg,f
  9380  1F98  3000               	movlw	0
  9381  1F99  1803               	skipnc
  9382  1F9A  3001               	movlw	1
  9383  1F9B  07FB               	addwf	___xxtofl@arg+1,f
  9384  1F9C  3000               	movlw	0
  9385  1F9D  1803               	skipnc
  9386  1F9E  3001               	movlw	1
  9387  1F9F  07FC               	addwf	___xxtofl@arg+2,f
  9388  1FA0  3000               	movlw	0
  9389  1FA1  1803               	skipnc
  9390  1FA2  3001               	movlw	1
  9391  1FA3  07FD               	addwf	___xxtofl@arg+3,f
  9392  1FA4                     i1l3378:
  9393  1FA4  3001               	movlw	1
  9394  1FA5                     u519_25:
  9395  1FA5  1003               	clrc
  9396  1FA6  0CFD               	rrf	___xxtofl@arg+3,f
  9397  1FA7  0CFC               	rrf	___xxtofl@arg+2,f
  9398  1FA8  0CFB               	rrf	___xxtofl@arg+1,f
  9399  1FA9  0CFA               	rrf	___xxtofl@arg,f
  9400  1FAA  3EFF               	addlw	-1
  9401  1FAB  1D03               	skipz
  9402  1FAC  2FA5               	goto	u519_25
  9403  1FAD                     i1l838:
  9404  1FAD  30FF               	movlw	255
  9405  1FAE  057D               	andwf	___xxtofl@arg+3,w
  9406  1FAF  1D03               	btfss	3,2
  9407  1FB0  2FB2               	goto	u520_21
  9408  1FB1  2FB3               	goto	u520_20
  9409  1FB2                     u520_21:
  9410  1FB2  2F92               	goto	i1l3374
  9411  1FB3                     u520_20:
  9412  1FB3  2FBF               	goto	i1l3382
  9413  1FB4                     i1l3380:
  9414  1FB4  3001               	movlw	1
  9415  1FB5  02F9               	subwf	___xxtofl@exp,f
  9416  1FB6  3001               	movlw	1
  9417  1FB7  00F4               	movwf	??___xxtofl
  9418  1FB8                     u521_25:
  9419  1FB8  1003               	clrc
  9420  1FB9  0DFA               	rlf	___xxtofl@arg,f
  9421  1FBA  0DFB               	rlf	___xxtofl@arg+1,f
  9422  1FBB  0DFC               	rlf	___xxtofl@arg+2,f
  9423  1FBC  0DFD               	rlf	___xxtofl@arg+3,f
  9424  1FBD  0BF4               	decfsz	??___xxtofl,f
  9425  1FBE  2FB8               	goto	u521_25
  9426  1FBF                     i1l3382:
  9427  1FBF  1BFC               	btfsc	___xxtofl@arg+2,7
  9428  1FC0  2FC2               	goto	u522_21
  9429  1FC1  2FC3               	goto	u522_20
  9430  1FC2                     u522_21:
  9431  1FC2  2FC9               	goto	i1l845
  9432  1FC3                     u522_20:
  9433  1FC3                     i1l3384:
  9434  1FC3  3002               	movlw	2
  9435  1FC4  0279               	subwf	___xxtofl@exp,w
  9436  1FC5  1803               	skipnc
  9437  1FC6  2FC8               	goto	u523_21
  9438  1FC7  2FC9               	goto	u523_20
  9439  1FC8                     u523_21:
  9440  1FC8  2FB4               	goto	i1l3380
  9441  1FC9                     u523_20:
  9442  1FC9                     i1l845:
  9443  1FC9  1879               	btfsc	___xxtofl@exp,0
  9444  1FCA  2FCC               	goto	u524_21
  9445  1FCB  2FCD               	goto	u524_20
  9446  1FCC                     u524_21:
  9447  1FCC  2FD5               	goto	i1l846
  9448  1FCD                     u524_20:
  9449  1FCD                     i1l3386:
  9450  1FCD  30FF               	movlw	255
  9451  1FCE  05FA               	andwf	___xxtofl@arg,f
  9452  1FCF  30FF               	movlw	255
  9453  1FD0  05FB               	andwf	___xxtofl@arg+1,f
  9454  1FD1  307F               	movlw	127
  9455  1FD2  05FC               	andwf	___xxtofl@arg+2,f
  9456  1FD3  30FF               	movlw	255
  9457  1FD4  05FD               	andwf	___xxtofl@arg+3,f
  9458  1FD5                     i1l846:
  9459  1FD5  1003               	clrc
  9460  1FD6  0CF9               	rrf	___xxtofl@exp,f
  9461  1FD7                     i1l3388:
  9462  1FD7  0879               	movf	___xxtofl@exp,w
  9463  1FD8  00F4               	movwf	??___xxtofl
  9464  1FD9  01F5               	clrf	??___xxtofl+1
  9465  1FDA  01F6               	clrf	??___xxtofl+2
  9466  1FDB  01F7               	clrf	??___xxtofl+3
  9467  1FDC  3018               	movlw	24
  9468  1FDD                     u525_25:
  9469  1FDD  1003               	clrc
  9470  1FDE  0DF4               	rlf	??___xxtofl,f
  9471  1FDF  0DF5               	rlf	??___xxtofl+1,f
  9472  1FE0  0DF6               	rlf	??___xxtofl+2,f
  9473  1FE1  0DF7               	rlf	??___xxtofl+3,f
  9474  1FE2                     u525_20:
  9475  1FE2  3EFF               	addlw	-1
  9476  1FE3  1D03               	skipz
  9477  1FE4  2FDD               	goto	u525_25
  9478  1FE5  0874               	movf	??___xxtofl,w
  9479  1FE6  04FA               	iorwf	___xxtofl@arg,f
  9480  1FE7  0875               	movf	??___xxtofl+1,w
  9481  1FE8  04FB               	iorwf	___xxtofl@arg+1,f
  9482  1FE9  0876               	movf	??___xxtofl+2,w
  9483  1FEA  04FC               	iorwf	___xxtofl@arg+2,f
  9484  1FEB  0877               	movf	??___xxtofl+3,w
  9485  1FEC  04FD               	iorwf	___xxtofl@arg+3,f
  9486  1FED                     i1l3390:
  9487  1FED  0878               	movf	___xxtofl@sign,w
  9488  1FEE  1903               	btfsc	3,2
  9489  1FEF  2FF1               	goto	u526_21
  9490  1FF0  2FF2               	goto	u526_20
  9491  1FF1                     u526_21:
  9492  1FF1  2FF7               	goto	i1l3396
  9493  1FF2                     u526_20:
  9494  1FF2                     i1l3392:
  9495  1FF2  1FF3               	btfss	___xxtofl@val+3,7
  9496  1FF3  2FF5               	goto	u527_21
  9497  1FF4  2FF6               	goto	u527_20
  9498  1FF5                     u527_21:
  9499  1FF5  2FF7               	goto	i1l3396
  9500  1FF6                     u527_20:
  9501  1FF6                     i1l3394:
  9502  1FF6  17FD               	bsf	___xxtofl@arg+3,7
  9503  1FF7                     i1l3396:
  9504  1FF7  087D               	movf	___xxtofl@arg+3,w
  9505  1FF8  00F3               	movwf	?___xxtofl+3
  9506  1FF9  087C               	movf	___xxtofl@arg+2,w
  9507  1FFA  00F2               	movwf	?___xxtofl+2
  9508  1FFB  087B               	movf	___xxtofl@arg+1,w
  9509  1FFC  00F1               	movwf	?___xxtofl+1
  9510  1FFD  087A               	movf	___xxtofl@arg,w
  9511  1FFE  00F0               	movwf	?___xxtofl
  9512  1FFF                     i1l834:
  9513  1FFF  0008               	return
  9514  2000                     __end_of___xxtofl:
  9515                           
  9516                           	psect	text30
  9517  1A04                     __ptext30:	
  9518 ;; *************** function ___wmul *****************
  9519 ;; Defined at:
  9520 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  9521 ;; Parameters:    Size  Location     Type
  9522 ;;  multiplier      2    0[COMMON] unsigned int 
  9523 ;;  multiplicand    2    2[COMMON] unsigned int 
  9524 ;; Auto vars:     Size  Location     Type
  9525 ;;  product         2    4[COMMON] unsigned int 
  9526 ;; Return value:  Size  Location     Type
  9527 ;;                  2    0[COMMON] unsigned int 
  9528 ;; Registers used:
  9529 ;;		wreg, status,2, status,0
  9530 ;; Tracked objects:
  9531 ;;		On entry : 0/0
  9532 ;;		On exit  : 0/0
  9533 ;;		Unchanged: 0/0
  9534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9535 ;;      Params:         4       0       0       0       0
  9536 ;;      Locals:         2       0       0       0       0
  9537 ;;      Temps:          0       0       0       0       0
  9538 ;;      Totals:         6       0       0       0       0
  9539 ;;Total ram usage:        6 bytes
  9540 ;; Hardware stack levels used:    1
  9541 ;; This function calls:
  9542 ;;		Nothing
  9543 ;; This function is called by:
  9544 ;;		_sprintf
  9545 ;; This function uses a non-reentrant model
  9546 ;;
  9547                           
  9548                           
  9549                           ;psect for function ___wmul
  9550  1A04                     ___wmul:
  9551  1A04                     i1l3216:	
  9552                           ;incstack = 0
  9553                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9554                           
  9555  1A04  01F4               	clrf	___wmul@product
  9556  1A05  01F5               	clrf	___wmul@product+1
  9557  1A06                     i1l3218:
  9558  1A06  1C70               	btfss	___wmul@multiplier,0
  9559  1A07  2A09               	goto	u476_21
  9560  1A08  2A0A               	goto	u476_20
  9561  1A09                     u476_21:
  9562  1A09  2A10               	goto	i1l365
  9563  1A0A                     u476_20:
  9564  1A0A                     i1l3220:
  9565  1A0A  0872               	movf	___wmul@multiplicand,w
  9566  1A0B  07F4               	addwf	___wmul@product,f
  9567  1A0C  1803               	skipnc
  9568  1A0D  0AF5               	incf	___wmul@product+1,f
  9569  1A0E  0873               	movf	___wmul@multiplicand+1,w
  9570  1A0F  07F5               	addwf	___wmul@product+1,f
  9571  1A10                     i1l365:
  9572  1A10  3001               	movlw	1
  9573  1A11                     u477_25:
  9574  1A11  1003               	clrc
  9575  1A12  0DF2               	rlf	___wmul@multiplicand,f
  9576  1A13  0DF3               	rlf	___wmul@multiplicand+1,f
  9577  1A14  3EFF               	addlw	-1
  9578  1A15  1D03               	skipz
  9579  1A16  2A11               	goto	u477_25
  9580  1A17                     i1l3222:
  9581  1A17  3001               	movlw	1
  9582  1A18                     u478_25:
  9583  1A18  1003               	clrc
  9584  1A19  0CF1               	rrf	___wmul@multiplier+1,f
  9585  1A1A  0CF0               	rrf	___wmul@multiplier,f
  9586  1A1B  3EFF               	addlw	-1
  9587  1A1C  1D03               	skipz
  9588  1A1D  2A18               	goto	u478_25
  9589  1A1E                     i1l3224:
  9590  1A1E  0870               	movf	___wmul@multiplier,w
  9591  1A1F  0471               	iorwf	___wmul@multiplier+1,w
  9592  1A20  1D03               	btfss	3,2
  9593  1A21  2A23               	goto	u479_21
  9594  1A22  2A24               	goto	u479_20
  9595  1A23                     u479_21:
  9596  1A23  2A06               	goto	i1l3218
  9597  1A24                     u479_20:
  9598  1A24                     i1l3226:
  9599  1A24  0875               	movf	___wmul@product+1,w
  9600  1A25  00F1               	movwf	?___wmul+1
  9601  1A26  0874               	movf	___wmul@product,w
  9602  1A27  00F0               	movwf	?___wmul
  9603  1A28                     i1l367:
  9604  1A28  0008               	return
  9605  1A29                     __end_of___wmul:
  9606                           
  9607                           	psect	text31
  9608  1B5E                     __ptext31:	
  9609 ;; *************** function ___llmod *****************
  9610 ;; Defined at:
  9611 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  9612 ;; Parameters:    Size  Location     Type
  9613 ;;  divisor         4    0[COMMON] unsigned long 
  9614 ;;  dividend        4    4[COMMON] unsigned long 
  9615 ;; Auto vars:     Size  Location     Type
  9616 ;;  counter         1    9[COMMON] unsigned char 
  9617 ;; Return value:  Size  Location     Type
  9618 ;;                  4    0[COMMON] unsigned long 
  9619 ;; Registers used:
  9620 ;;		wreg, status,2, status,0
  9621 ;; Tracked objects:
  9622 ;;		On entry : 0/0
  9623 ;;		On exit  : 0/0
  9624 ;;		Unchanged: 0/0
  9625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9626 ;;      Params:         8       0       0       0       0
  9627 ;;      Locals:         1       0       0       0       0
  9628 ;;      Temps:          1       0       0       0       0
  9629 ;;      Totals:        10       0       0       0       0
  9630 ;;Total ram usage:       10 bytes
  9631 ;; Hardware stack levels used:    1
  9632 ;; This function calls:
  9633 ;;		Nothing
  9634 ;; This function is called by:
  9635 ;;		_sprintf
  9636 ;; This function uses a non-reentrant model
  9637 ;;
  9638                           
  9639                           
  9640                           ;psect for function ___llmod
  9641  1B5E                     ___llmod:
  9642  1B5E                     i1l3330:	
  9643                           ;incstack = 0
  9644                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  9645                           
  9646  1B5E  0873               	movf	___llmod@divisor+3,w
  9647  1B5F  0472               	iorwf	___llmod@divisor+2,w
  9648  1B60  0471               	iorwf	___llmod@divisor+1,w
  9649  1B61  0470               	iorwf	___llmod@divisor,w
  9650  1B62  1903               	skipnz
  9651  1B63  2B65               	goto	u508_21
  9652  1B64  2B66               	goto	u508_20
  9653  1B65                     u508_21:
  9654  1B65  2BA9               	goto	i1l3346
  9655  1B66                     u508_20:
  9656  1B66                     i1l3332:
  9657  1B66  01F9               	clrf	___llmod@counter
  9658  1B67  0AF9               	incf	___llmod@counter,f
  9659  1B68  2B76               	goto	i1l3336
  9660  1B69                     i1l3334:
  9661  1B69  3001               	movlw	1
  9662  1B6A  00F8               	movwf	??___llmod
  9663  1B6B                     u509_25:
  9664  1B6B  1003               	clrc
  9665  1B6C  0DF0               	rlf	___llmod@divisor,f
  9666  1B6D  0DF1               	rlf	___llmod@divisor+1,f
  9667  1B6E  0DF2               	rlf	___llmod@divisor+2,f
  9668  1B6F  0DF3               	rlf	___llmod@divisor+3,f
  9669  1B70  0BF8               	decfsz	??___llmod,f
  9670  1B71  2B6B               	goto	u509_25
  9671  1B72  3001               	movlw	1
  9672  1B73  00F8               	movwf	??___llmod
  9673  1B74  0878               	movf	??___llmod,w
  9674  1B75  07F9               	addwf	___llmod@counter,f
  9675  1B76                     i1l3336:
  9676  1B76  1FF3               	btfss	___llmod@divisor+3,7
  9677  1B77  2B79               	goto	u510_21
  9678  1B78  2B7A               	goto	u510_20
  9679  1B79                     u510_21:
  9680  1B79  2B69               	goto	i1l3334
  9681  1B7A                     u510_20:
  9682  1B7A                     i1l3338:
  9683  1B7A  0873               	movf	___llmod@divisor+3,w
  9684  1B7B  0277               	subwf	___llmod@dividend+3,w
  9685  1B7C  1D03               	skipz
  9686  1B7D  2B88               	goto	u511_25
  9687  1B7E  0872               	movf	___llmod@divisor+2,w
  9688  1B7F  0276               	subwf	___llmod@dividend+2,w
  9689  1B80  1D03               	skipz
  9690  1B81  2B88               	goto	u511_25
  9691  1B82  0871               	movf	___llmod@divisor+1,w
  9692  1B83  0275               	subwf	___llmod@dividend+1,w
  9693  1B84  1D03               	skipz
  9694  1B85  2B88               	goto	u511_25
  9695  1B86  0870               	movf	___llmod@divisor,w
  9696  1B87  0274               	subwf	___llmod@dividend,w
  9697  1B88                     u511_25:
  9698  1B88  1C03               	skipc
  9699  1B89  2B8B               	goto	u511_21
  9700  1B8A  2B8C               	goto	u511_20
  9701  1B8B                     u511_21:
  9702  1B8B  2B9A               	goto	i1l3342
  9703  1B8C                     u511_20:
  9704  1B8C                     i1l3340:
  9705  1B8C  0870               	movf	___llmod@divisor,w
  9706  1B8D  02F4               	subwf	___llmod@dividend,f
  9707  1B8E  0871               	movf	___llmod@divisor+1,w
  9708  1B8F  1C03               	skipc
  9709  1B90  0F71               	incfsz	___llmod@divisor+1,w
  9710  1B91  02F5               	subwf	___llmod@dividend+1,f
  9711  1B92  0872               	movf	___llmod@divisor+2,w
  9712  1B93  1C03               	skipc
  9713  1B94  0F72               	incfsz	___llmod@divisor+2,w
  9714  1B95  02F6               	subwf	___llmod@dividend+2,f
  9715  1B96  0873               	movf	___llmod@divisor+3,w
  9716  1B97  1C03               	skipc
  9717  1B98  0F73               	incfsz	___llmod@divisor+3,w
  9718  1B99  02F7               	subwf	___llmod@dividend+3,f
  9719  1B9A                     i1l3342:
  9720  1B9A  3001               	movlw	1
  9721  1B9B                     u512_25:
  9722  1B9B  1003               	clrc
  9723  1B9C  0CF3               	rrf	___llmod@divisor+3,f
  9724  1B9D  0CF2               	rrf	___llmod@divisor+2,f
  9725  1B9E  0CF1               	rrf	___llmod@divisor+1,f
  9726  1B9F  0CF0               	rrf	___llmod@divisor,f
  9727  1BA0  3EFF               	addlw	-1
  9728  1BA1  1D03               	skipz
  9729  1BA2  2B9B               	goto	u512_25
  9730  1BA3                     i1l3344:
  9731  1BA3  3001               	movlw	1
  9732  1BA4  02F9               	subwf	___llmod@counter,f
  9733  1BA5  1D03               	btfss	3,2
  9734  1BA6  2BA8               	goto	u513_21
  9735  1BA7  2BA9               	goto	u513_20
  9736  1BA8                     u513_21:
  9737  1BA8  2B7A               	goto	i1l3338
  9738  1BA9                     u513_20:
  9739  1BA9                     i1l3346:
  9740  1BA9  0877               	movf	___llmod@dividend+3,w
  9741  1BAA  00F3               	movwf	?___llmod+3
  9742  1BAB  0876               	movf	___llmod@dividend+2,w
  9743  1BAC  00F2               	movwf	?___llmod+2
  9744  1BAD  0875               	movf	___llmod@dividend+1,w
  9745  1BAE  00F1               	movwf	?___llmod+1
  9746  1BAF  0874               	movf	___llmod@dividend,w
  9747  1BB0  00F0               	movwf	?___llmod
  9748  1BB1                     i1l621:
  9749  1BB1  0008               	return
  9750  1BB2                     __end_of___llmod:
  9751                           
  9752                           	psect	text32
  9753  1CBC                     __ptext32:	
  9754 ;; *************** function ___lldiv *****************
  9755 ;; Defined at:
  9756 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  9757 ;; Parameters:    Size  Location     Type
  9758 ;;  divisor         4    0[COMMON] unsigned long 
  9759 ;;  dividend        4    4[COMMON] unsigned long 
  9760 ;; Auto vars:     Size  Location     Type
  9761 ;;  quotient        4    9[COMMON] unsigned long 
  9762 ;;  counter         1   13[COMMON] unsigned char 
  9763 ;; Return value:  Size  Location     Type
  9764 ;;                  4    0[COMMON] unsigned long 
  9765 ;; Registers used:
  9766 ;;		wreg, status,2, status,0
  9767 ;; Tracked objects:
  9768 ;;		On entry : 0/0
  9769 ;;		On exit  : 0/0
  9770 ;;		Unchanged: 0/0
  9771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9772 ;;      Params:         8       0       0       0       0
  9773 ;;      Locals:         5       0       0       0       0
  9774 ;;      Temps:          1       0       0       0       0
  9775 ;;      Totals:        14       0       0       0       0
  9776 ;;Total ram usage:       14 bytes
  9777 ;; Hardware stack levels used:    1
  9778 ;; This function calls:
  9779 ;;		Nothing
  9780 ;; This function is called by:
  9781 ;;		_sprintf
  9782 ;; This function uses a non-reentrant model
  9783 ;;
  9784                           
  9785                           
  9786                           ;psect for function ___lldiv
  9787  1CBC                     ___lldiv:
  9788  1CBC                     i1l3230:	
  9789                           ;incstack = 0
  9790                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  9791                           
  9792  1CBC  3000               	movlw	0
  9793  1CBD  00FC               	movwf	___lldiv@quotient+3
  9794  1CBE  3000               	movlw	0
  9795  1CBF  00FB               	movwf	___lldiv@quotient+2
  9796  1CC0  3000               	movlw	0
  9797  1CC1  00FA               	movwf	___lldiv@quotient+1
  9798  1CC2  3000               	movlw	0
  9799  1CC3  00F9               	movwf	___lldiv@quotient
  9800  1CC4  0873               	movf	___lldiv@divisor+3,w
  9801  1CC5  0472               	iorwf	___lldiv@divisor+2,w
  9802  1CC6  0471               	iorwf	___lldiv@divisor+1,w
  9803  1CC7  0470               	iorwf	___lldiv@divisor,w
  9804  1CC8  1903               	skipnz
  9805  1CC9  2CCB               	goto	u480_21
  9806  1CCA  2CCC               	goto	u480_20
  9807  1CCB                     u480_21:
  9808  1CCB  2D19               	goto	i1l3250
  9809  1CCC                     u480_20:
  9810  1CCC                     i1l3232:
  9811  1CCC  01FD               	clrf	___lldiv@counter
  9812  1CCD  0AFD               	incf	___lldiv@counter,f
  9813  1CCE  2CDC               	goto	i1l3236
  9814  1CCF                     i1l3234:
  9815  1CCF  3001               	movlw	1
  9816  1CD0  00F8               	movwf	??___lldiv
  9817  1CD1                     u481_25:
  9818  1CD1  1003               	clrc
  9819  1CD2  0DF0               	rlf	___lldiv@divisor,f
  9820  1CD3  0DF1               	rlf	___lldiv@divisor+1,f
  9821  1CD4  0DF2               	rlf	___lldiv@divisor+2,f
  9822  1CD5  0DF3               	rlf	___lldiv@divisor+3,f
  9823  1CD6  0BF8               	decfsz	??___lldiv,f
  9824  1CD7  2CD1               	goto	u481_25
  9825  1CD8  3001               	movlw	1
  9826  1CD9  00F8               	movwf	??___lldiv
  9827  1CDA  0878               	movf	??___lldiv,w
  9828  1CDB  07FD               	addwf	___lldiv@counter,f
  9829  1CDC                     i1l3236:
  9830  1CDC  1FF3               	btfss	___lldiv@divisor+3,7
  9831  1CDD  2CDF               	goto	u482_21
  9832  1CDE  2CE0               	goto	u482_20
  9833  1CDF                     u482_21:
  9834  1CDF  2CCF               	goto	i1l3234
  9835  1CE0                     u482_20:
  9836  1CE0                     i1l3238:
  9837  1CE0  3001               	movlw	1
  9838  1CE1  00F8               	movwf	??___lldiv
  9839  1CE2                     u483_25:
  9840  1CE2  1003               	clrc
  9841  1CE3  0DF9               	rlf	___lldiv@quotient,f
  9842  1CE4  0DFA               	rlf	___lldiv@quotient+1,f
  9843  1CE5  0DFB               	rlf	___lldiv@quotient+2,f
  9844  1CE6  0DFC               	rlf	___lldiv@quotient+3,f
  9845  1CE7  0BF8               	decfsz	??___lldiv,f
  9846  1CE8  2CE2               	goto	u483_25
  9847  1CE9                     i1l3240:
  9848  1CE9  0873               	movf	___lldiv@divisor+3,w
  9849  1CEA  0277               	subwf	___lldiv@dividend+3,w
  9850  1CEB  1D03               	skipz
  9851  1CEC  2CF7               	goto	u484_25
  9852  1CED  0872               	movf	___lldiv@divisor+2,w
  9853  1CEE  0276               	subwf	___lldiv@dividend+2,w
  9854  1CEF  1D03               	skipz
  9855  1CF0  2CF7               	goto	u484_25
  9856  1CF1  0871               	movf	___lldiv@divisor+1,w
  9857  1CF2  0275               	subwf	___lldiv@dividend+1,w
  9858  1CF3  1D03               	skipz
  9859  1CF4  2CF7               	goto	u484_25
  9860  1CF5  0870               	movf	___lldiv@divisor,w
  9861  1CF6  0274               	subwf	___lldiv@dividend,w
  9862  1CF7                     u484_25:
  9863  1CF7  1C03               	skipc
  9864  1CF8  2CFA               	goto	u484_21
  9865  1CF9  2CFB               	goto	u484_20
  9866  1CFA                     u484_21:
  9867  1CFA  2D0A               	goto	i1l3246
  9868  1CFB                     u484_20:
  9869  1CFB                     i1l3242:
  9870  1CFB  0870               	movf	___lldiv@divisor,w
  9871  1CFC  02F4               	subwf	___lldiv@dividend,f
  9872  1CFD  0871               	movf	___lldiv@divisor+1,w
  9873  1CFE  1C03               	skipc
  9874  1CFF  0F71               	incfsz	___lldiv@divisor+1,w
  9875  1D00  02F5               	subwf	___lldiv@dividend+1,f
  9876  1D01  0872               	movf	___lldiv@divisor+2,w
  9877  1D02  1C03               	skipc
  9878  1D03  0F72               	incfsz	___lldiv@divisor+2,w
  9879  1D04  02F6               	subwf	___lldiv@dividend+2,f
  9880  1D05  0873               	movf	___lldiv@divisor+3,w
  9881  1D06  1C03               	skipc
  9882  1D07  0F73               	incfsz	___lldiv@divisor+3,w
  9883  1D08  02F7               	subwf	___lldiv@dividend+3,f
  9884  1D09                     i1l3244:
  9885  1D09  1479               	bsf	___lldiv@quotient,0
  9886  1D0A                     i1l3246:
  9887  1D0A  3001               	movlw	1
  9888  1D0B                     u485_25:
  9889  1D0B  1003               	clrc
  9890  1D0C  0CF3               	rrf	___lldiv@divisor+3,f
  9891  1D0D  0CF2               	rrf	___lldiv@divisor+2,f
  9892  1D0E  0CF1               	rrf	___lldiv@divisor+1,f
  9893  1D0F  0CF0               	rrf	___lldiv@divisor,f
  9894  1D10  3EFF               	addlw	-1
  9895  1D11  1D03               	skipz
  9896  1D12  2D0B               	goto	u485_25
  9897  1D13                     i1l3248:
  9898  1D13  3001               	movlw	1
  9899  1D14  02FD               	subwf	___lldiv@counter,f
  9900  1D15  1D03               	btfss	3,2
  9901  1D16  2D18               	goto	u486_21
  9902  1D17  2D19               	goto	u486_20
  9903  1D18                     u486_21:
  9904  1D18  2CE0               	goto	i1l3238
  9905  1D19                     u486_20:
  9906  1D19                     i1l3250:
  9907  1D19  087C               	movf	___lldiv@quotient+3,w
  9908  1D1A  00F3               	movwf	?___lldiv+3
  9909  1D1B  087B               	movf	___lldiv@quotient+2,w
  9910  1D1C  00F2               	movwf	?___lldiv+2
  9911  1D1D  087A               	movf	___lldiv@quotient+1,w
  9912  1D1E  00F1               	movwf	?___lldiv+1
  9913  1D1F  0879               	movf	___lldiv@quotient,w
  9914  1D20  00F0               	movwf	?___lldiv
  9915  1D21                     i1l401:
  9916  1D21  0008               	return
  9917  1D22                     __end_of___lldiv:
  9918                           
  9919                           	psect	text33
  9920  1D8B                     __ptext33:	
  9921 ;; *************** function ___fltol *****************
  9922 ;; Defined at:
  9923 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  9924 ;; Parameters:    Size  Location     Type
  9925 ;;  f1              4   49[BANK0 ] unsigned long 
  9926 ;; Auto vars:     Size  Location     Type
  9927 ;;  exp1            1   59[BANK0 ] unsigned char 
  9928 ;;  sign1           1   58[BANK0 ] unsigned char 
  9929 ;; Return value:  Size  Location     Type
  9930 ;;                  4   49[BANK0 ] long 
  9931 ;; Registers used:
  9932 ;;		wreg, status,2, status,0
  9933 ;; Tracked objects:
  9934 ;;		On entry : 0/0
  9935 ;;		On exit  : 0/0
  9936 ;;		Unchanged: 0/0
  9937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9938 ;;      Params:         0       4       0       0       0
  9939 ;;      Locals:         0       2       0       0       0
  9940 ;;      Temps:          0       5       0       0       0
  9941 ;;      Totals:         0      11       0       0       0
  9942 ;;Total ram usage:       11 bytes
  9943 ;; Hardware stack levels used:    1
  9944 ;; This function calls:
  9945 ;;		Nothing
  9946 ;; This function is called by:
  9947 ;;		_sprintf
  9948 ;; This function uses a non-reentrant model
  9949 ;;
  9950                           
  9951                           
  9952                           ;psect for function ___fltol
  9953  1D8B                     ___fltol:
  9954  1D8B                     i1l3294:	
  9955                           ;incstack = 0
  9956                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  9957                           
  9958  1D8B  1003               	clrc
  9959  1D8C  1283               	bcf	3,5	;RP0=0, select bank0
  9960  1D8D  1303               	bcf	3,6	;RP1=0, select bank0
  9961  1D8E  0D53               	rlf	___fltol@f1+2,w
  9962  1D8F  0D54               	rlf	___fltol@f1+3,w
  9963  1D90  00D5               	movwf	??___fltol
  9964  1D91  0855               	movf	??___fltol,w
  9965  1D92  00DB               	movwf	___fltol@exp1
  9966  1D93  085B               	movf	___fltol@exp1,w
  9967  1D94  1D03               	btfss	3,2
  9968  1D95  2D97               	goto	u498_21
  9969  1D96  2D98               	goto	u498_20
  9970  1D97                     u498_21:
  9971  1D97  2DA1               	goto	i1l3300
  9972  1D98                     u498_20:
  9973  1D98                     i1l3296:
  9974  1D98  3000               	movlw	0
  9975  1D99  00D4               	movwf	?___fltol+3
  9976  1D9A  3000               	movlw	0
  9977  1D9B  00D3               	movwf	?___fltol+2
  9978  1D9C  3000               	movlw	0
  9979  1D9D  00D2               	movwf	?___fltol+1
  9980  1D9E  3000               	movlw	0
  9981  1D9F  00D1               	movwf	?___fltol
  9982  1DA0  2E06               	goto	i1l568
  9983  1DA1                     i1l3300:
  9984  1DA1  0851               	movf	___fltol@f1,w
  9985  1DA2  00D5               	movwf	??___fltol
  9986  1DA3  0852               	movf	___fltol@f1+1,w
  9987  1DA4  00D6               	movwf	??___fltol+1
  9988  1DA5  0853               	movf	___fltol@f1+2,w
  9989  1DA6  00D7               	movwf	??___fltol+2
  9990  1DA7  0854               	movf	___fltol@f1+3,w
  9991  1DA8  00D8               	movwf	??___fltol+3
  9992  1DA9  301F               	movlw	31
  9993  1DAA                     u499_25:
  9994  1DAA  1003               	clrc
  9995  1DAB  0CD8               	rrf	??___fltol+3,f
  9996  1DAC  0CD7               	rrf	??___fltol+2,f
  9997  1DAD  0CD6               	rrf	??___fltol+1,f
  9998  1DAE  0CD5               	rrf	??___fltol,f
  9999  1DAF                     u499_20:
 10000  1DAF  3EFF               	addlw	-1
 10001  1DB0  1D03               	skipz
 10002  1DB1  2DAA               	goto	u499_25
 10003  1DB2  0855               	movf	??___fltol,w
 10004  1DB3  00D9               	movwf	??___fltol+4
 10005  1DB4  0859               	movf	??___fltol+4,w
 10006  1DB5  00DA               	movwf	___fltol@sign1
 10007  1DB6                     i1l3302:
 10008  1DB6  17D3               	bsf	___fltol@f1+2,7
 10009  1DB7                     i1l3304:
 10010  1DB7  30FF               	movlw	255
 10011  1DB8  05D1               	andwf	___fltol@f1,f
 10012  1DB9  30FF               	movlw	255
 10013  1DBA  05D2               	andwf	___fltol@f1+1,f
 10014  1DBB  30FF               	movlw	255
 10015  1DBC  05D3               	andwf	___fltol@f1+2,f
 10016  1DBD  3000               	movlw	0
 10017  1DBE  05D4               	andwf	___fltol@f1+3,f
 10018  1DBF                     i1l3306:
 10019  1DBF  3096               	movlw	150
 10020  1DC0  02DB               	subwf	___fltol@exp1,f
 10021  1DC1                     i1l3308:
 10022  1DC1  1FDB               	btfss	___fltol@exp1,7
 10023  1DC2  2DC4               	goto	u500_21
 10024  1DC3  2DC5               	goto	u500_20
 10025  1DC4                     u500_21:
 10026  1DC4  2DDF               	goto	i1l3318
 10027  1DC5                     u500_20:
 10028  1DC5                     i1l3310:
 10029  1DC5  085B               	movf	___fltol@exp1,w
 10030  1DC6  3A80               	xorlw	128
 10031  1DC7  3E97               	addlw	151
 10032  1DC8  1803               	skipnc
 10033  1DC9  2DCB               	goto	u501_21
 10034  1DCA  2DCC               	goto	u501_20
 10035  1DCB                     u501_21:
 10036  1DCB  2DCD               	goto	i1l3316
 10037  1DCC                     u501_20:
 10038  1DCC  2D98               	goto	i1l3296
 10039  1DCD                     i1l3316:
 10040  1DCD  3001               	movlw	1
 10041  1DCE                     u502_25:
 10042  1DCE  1003               	clrc
 10043  1DCF  0CD4               	rrf	___fltol@f1+3,f
 10044  1DD0  0CD3               	rrf	___fltol@f1+2,f
 10045  1DD1  0CD2               	rrf	___fltol@f1+1,f
 10046  1DD2  0CD1               	rrf	___fltol@f1,f
 10047  1DD3  3EFF               	addlw	-1
 10048  1DD4  1D03               	skipz
 10049  1DD5  2DCE               	goto	u502_25
 10050  1DD6  3001               	movlw	1
 10051  1DD7  00D5               	movwf	??___fltol
 10052  1DD8  0855               	movf	??___fltol,w
 10053  1DD9  07DB               	addwf	___fltol@exp1,f
 10054  1DDA  1D03               	btfss	3,2
 10055  1DDB  2DDD               	goto	u503_21
 10056  1DDC  2DDE               	goto	u503_20
 10057  1DDD                     u503_21:
 10058  1DDD  2DCD               	goto	i1l3316
 10059  1DDE                     u503_20:
 10060  1DDE  2DF6               	goto	i1l3326
 10061  1DDF                     i1l3318:
 10062  1DDF  3020               	movlw	32
 10063  1DE0  025B               	subwf	___fltol@exp1,w
 10064  1DE1  1C03               	skipc
 10065  1DE2  2DE4               	goto	u504_21
 10066  1DE3  2DE5               	goto	u504_20
 10067  1DE4                     u504_21:
 10068  1DE4  2DF1               	goto	i1l575
 10069  1DE5                     u504_20:
 10070  1DE5  2D98               	goto	i1l3296
 10071  1DE6                     i1l3324:
 10072  1DE6  3001               	movlw	1
 10073  1DE7  00D5               	movwf	??___fltol
 10074  1DE8                     u505_25:
 10075  1DE8  1003               	clrc
 10076  1DE9  0DD1               	rlf	___fltol@f1,f
 10077  1DEA  0DD2               	rlf	___fltol@f1+1,f
 10078  1DEB  0DD3               	rlf	___fltol@f1+2,f
 10079  1DEC  0DD4               	rlf	___fltol@f1+3,f
 10080  1DED  0BD5               	decfsz	??___fltol,f
 10081  1DEE  2DE8               	goto	u505_25
 10082  1DEF  3001               	movlw	1
 10083  1DF0  02DB               	subwf	___fltol@exp1,f
 10084  1DF1                     i1l575:
 10085  1DF1  085B               	movf	___fltol@exp1,w
 10086  1DF2  1D03               	btfss	3,2
 10087  1DF3  2DF5               	goto	u506_21
 10088  1DF4  2DF6               	goto	u506_20
 10089  1DF5                     u506_21:
 10090  1DF5  2DE6               	goto	i1l3324
 10091  1DF6                     u506_20:
 10092  1DF6                     i1l3326:
 10093  1DF6  085A               	movf	___fltol@sign1,w
 10094  1DF7  1903               	btfsc	3,2
 10095  1DF8  2DFA               	goto	u507_21
 10096  1DF9  2DFB               	goto	u507_20
 10097  1DFA                     u507_21:
 10098  1DFA  2E06               	goto	i1l578
 10099  1DFB                     u507_20:
 10100  1DFB                     i1l3328:
 10101  1DFB  09D1               	comf	___fltol@f1,f
 10102  1DFC  09D2               	comf	___fltol@f1+1,f
 10103  1DFD  09D3               	comf	___fltol@f1+2,f
 10104  1DFE  09D4               	comf	___fltol@f1+3,f
 10105  1DFF  0AD1               	incf	___fltol@f1,f
 10106  1E00  1903               	skipnz
 10107  1E01  0AD2               	incf	___fltol@f1+1,f
 10108  1E02  1903               	skipnz
 10109  1E03  0AD3               	incf	___fltol@f1+2,f
 10110  1E04  1903               	skipnz
 10111  1E05  0AD4               	incf	___fltol@f1+3,f
 10112  1E06                     i1l578:
 10113  1E06                     i1l568:
 10114  1E06  0008               	return
 10115  1E07                     __end_of___fltol:
 10116                           
 10117                           	psect	text34
 10118  19E0                     __ptext34:	
 10119 ;; *************** function ___flsub *****************
 10120 ;; Defined at:
 10121 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
 10122 ;; Parameters:    Size  Location     Type
 10123 ;;  a               4   70[BANK0 ] long 
 10124 ;;  b               4   74[BANK0 ] long 
 10125 ;; Auto vars:     Size  Location     Type
 10126 ;;		None
 10127 ;; Return value:  Size  Location     Type
 10128 ;;                  4   70[BANK0 ] long 
 10129 ;; Registers used:
 10130 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10131 ;; Tracked objects:
 10132 ;;		On entry : 0/0
 10133 ;;		On exit  : 0/0
 10134 ;;		Unchanged: 0/0
 10135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10136 ;;      Params:         0       8       0       0       0
 10137 ;;      Locals:         0       0       0       0       0
 10138 ;;      Temps:          0       0       0       0       0
 10139 ;;      Totals:         0       8       0       0       0
 10140 ;;Total ram usage:        8 bytes
 10141 ;; Hardware stack levels used:    1
 10142 ;; Hardware stack levels required when called:    1
 10143 ;; This function calls:
 10144 ;;		___fladd
 10145 ;; This function is called by:
 10146 ;;		_sprintf
 10147 ;; This function uses a non-reentrant model
 10148 ;;
 10149                           
 10150                           
 10151                           ;psect for function ___flsub
 10152  19E0                     ___flsub:
 10153  19E0                     i1l3350:	
 10154                           ;incstack = 0
 10155                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 10156                           
 10157  19E0  3080               	movlw	128
 10158  19E1  1283               	bcf	3,5	;RP0=0, select bank0
 10159  19E2  1303               	bcf	3,6	;RP1=0, select bank0
 10160  19E3  06E9               	xorwf	___flsub@a+3,f
 10161  19E4                     i1l3352:
 10162  19E4  086D               	movf	___flsub@b+3,w
 10163  19E5  00D5               	movwf	___fladd@b+3
 10164  19E6  086C               	movf	___flsub@b+2,w
 10165  19E7  00D4               	movwf	___fladd@b+2
 10166  19E8  086B               	movf	___flsub@b+1,w
 10167  19E9  00D3               	movwf	___fladd@b+1
 10168  19EA  086A               	movf	___flsub@b,w
 10169  19EB  00D2               	movwf	___fladd@b
 10170  19EC  0869               	movf	___flsub@a+3,w
 10171  19ED  00D9               	movwf	___fladd@a+3
 10172  19EE  0868               	movf	___flsub@a+2,w
 10173  19EF  00D8               	movwf	___fladd@a+2
 10174  19F0  0867               	movf	___flsub@a+1,w
 10175  19F1  00D7               	movwf	___fladd@a+1
 10176  19F2  0866               	movf	___flsub@a,w
 10177  19F3  00D6               	movwf	___fladd@a
 10178  19F4  160A  118A  2578  160A  158A  	fcall	___fladd
 10179  19F9  1283               	bcf	3,5	;RP0=0, select bank0
 10180  19FA  1303               	bcf	3,6	;RP1=0, select bank0
 10181  19FB  0855               	movf	?___fladd+3,w
 10182  19FC  00E9               	movwf	?___flsub+3
 10183  19FD  0854               	movf	?___fladd+2,w
 10184  19FE  00E8               	movwf	?___flsub+2
 10185  19FF  0853               	movf	?___fladd+1,w
 10186  1A00  00E7               	movwf	?___flsub+1
 10187  1A01  0852               	movf	?___fladd,w
 10188  1A02  00E6               	movwf	?___flsub
 10189  1A03                     i1l738:
 10190  1A03  0008               	return
 10191  1A04                     __end_of___flsub:
 10192                           
 10193                           	psect	text35
 10194  1578                     __ptext35:	
 10195 ;; *************** function ___fladd *****************
 10196 ;; Defined at:
 10197 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
 10198 ;; Parameters:    Size  Location     Type
 10199 ;;  b               4   50[BANK0 ] long 
 10200 ;;  a               4   54[BANK0 ] long 
 10201 ;; Auto vars:     Size  Location     Type
 10202 ;;  grs             1   69[BANK0 ] unsigned char 
 10203 ;;  bexp            1   68[BANK0 ] unsigned char 
 10204 ;;  aexp            1   67[BANK0 ] unsigned char 
 10205 ;;  signs           1   66[BANK0 ] unsigned char 
 10206 ;; Return value:  Size  Location     Type
 10207 ;;                  4   50[BANK0 ] unsigned char 
 10208 ;; Registers used:
 10209 ;;		wreg, status,2, status,0, btemp+1
 10210 ;; Tracked objects:
 10211 ;;		On entry : 0/0
 10212 ;;		On exit  : 0/0
 10213 ;;		Unchanged: 0/0
 10214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10215 ;;      Params:         0       8       0       0       0
 10216 ;;      Locals:         0       4       0       0       0
 10217 ;;      Temps:          0       8       0       0       0
 10218 ;;      Totals:         0      20       0       0       0
 10219 ;;Total ram usage:       20 bytes
 10220 ;; Hardware stack levels used:    1
 10221 ;; This function calls:
 10222 ;;		Nothing
 10223 ;; This function is called by:
 10224 ;;		_sprintf
 10225 ;;		___flsub
 10226 ;; This function uses a non-reentrant model
 10227 ;;
 10228                           
 10229                           
 10230                           ;psect for function ___fladd
 10231  1578                     ___fladd:
 10232  1578                     i1l2686:	
 10233                           ;incstack = 0
 10234                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
 10235                           
 10236  1578  1283               	bcf	3,5	;RP0=0, select bank0
 10237  1579  1303               	bcf	3,6	;RP1=0, select bank0
 10238  157A  0855               	movf	___fladd@b+3,w
 10239  157B  3980               	andlw	128
 10240  157C  00DA               	movwf	??___fladd
 10241  157D  085A               	movf	??___fladd,w
 10242  157E  00E2               	movwf	___fladd@signs
 10243  157F                     i1l2688:
 10244  157F  0855               	movf	___fladd@b+3,w
 10245  1580  00DA               	movwf	??___fladd
 10246  1581  075A               	addwf	??___fladd,w
 10247  1582  00DB               	movwf	??___fladd+1
 10248  1583  085B               	movf	??___fladd+1,w
 10249  1584  00E4               	movwf	___fladd@bexp
 10250  1585                     i1l2690:
 10251  1585  1FD4               	btfss	___fladd@b+2,7
 10252  1586  2D88               	goto	u340_21
 10253  1587  2D89               	goto	u340_20
 10254  1588                     u340_21:
 10255  1588  2D8A               	goto	i1l2694
 10256  1589                     u340_20:
 10257  1589                     i1l2692:
 10258  1589  1464               	bsf	___fladd@bexp,0
 10259  158A                     i1l2694:
 10260  158A  0864               	movf	___fladd@bexp,w
 10261  158B  1903               	btfsc	3,2
 10262  158C  2D8E               	goto	u341_21
 10263  158D  2D8F               	goto	u341_20
 10264  158E                     u341_21:
 10265  158E  2D9F               	goto	i1l2704
 10266  158F                     u341_20:
 10267  158F                     i1l2696:
 10268  158F  0A64               	incf	___fladd@bexp,w
 10269  1590  1D03               	btfss	3,2
 10270  1591  2D93               	goto	u342_21
 10271  1592  2D94               	goto	u342_20
 10272  1593                     u342_21:
 10273  1593  2D9C               	goto	i1l2700
 10274  1594                     u342_20:
 10275  1594                     i1l2698:
 10276  1594  3000               	movlw	0
 10277  1595  00D5               	movwf	___fladd@b+3
 10278  1596  3000               	movlw	0
 10279  1597  00D4               	movwf	___fladd@b+2
 10280  1598  3000               	movlw	0
 10281  1599  00D3               	movwf	___fladd@b+1
 10282  159A  3000               	movlw	0
 10283  159B  00D2               	movwf	___fladd@b
 10284  159C                     i1l2700:
 10285  159C  17D4               	bsf	___fladd@b+2,7
 10286  159D                     i1l2702:
 10287  159D  01D5               	clrf	___fladd@b+3
 10288  159E  2DA7               	goto	i1l2706
 10289  159F                     i1l2704:
 10290  159F  3000               	movlw	0
 10291  15A0  00D5               	movwf	___fladd@b+3
 10292  15A1  3000               	movlw	0
 10293  15A2  00D4               	movwf	___fladd@b+2
 10294  15A3  3000               	movlw	0
 10295  15A4  00D3               	movwf	___fladd@b+1
 10296  15A5  3000               	movlw	0
 10297  15A6  00D2               	movwf	___fladd@b
 10298  15A7                     i1l2706:
 10299  15A7  0859               	movf	___fladd@a+3,w
 10300  15A8  3980               	andlw	128
 10301  15A9  00DA               	movwf	??___fladd
 10302  15AA  085A               	movf	??___fladd,w
 10303  15AB  00E3               	movwf	___fladd@aexp
 10304  15AC                     i1l2708:
 10305  15AC  0863               	movf	___fladd@aexp,w
 10306  15AD  0662               	xorwf	___fladd@signs,w
 10307  15AE  1903               	skipnz
 10308  15AF  2DB1               	goto	u343_21
 10309  15B0  2DB2               	goto	u343_20
 10310  15B1                     u343_21:
 10311  15B1  2DB3               	goto	i1l2712
 10312  15B2                     u343_20:
 10313  15B2                     i1l2710:
 10314  15B2  1762               	bsf	___fladd@signs,6
 10315  15B3                     i1l2712:
 10316  15B3  0859               	movf	___fladd@a+3,w
 10317  15B4  00DA               	movwf	??___fladd
 10318  15B5  075A               	addwf	??___fladd,w
 10319  15B6  00DB               	movwf	??___fladd+1
 10320  15B7  085B               	movf	??___fladd+1,w
 10321  15B8  00E3               	movwf	___fladd@aexp
 10322  15B9                     i1l2714:
 10323  15B9  1FD8               	btfss	___fladd@a+2,7
 10324  15BA  2DBC               	goto	u344_21
 10325  15BB  2DBD               	goto	u344_20
 10326  15BC                     u344_21:
 10327  15BC  2DBE               	goto	i1l2718
 10328  15BD                     u344_20:
 10329  15BD                     i1l2716:
 10330  15BD  1463               	bsf	___fladd@aexp,0
 10331  15BE                     i1l2718:
 10332  15BE  0863               	movf	___fladd@aexp,w
 10333  15BF  1903               	btfsc	3,2
 10334  15C0  2DC2               	goto	u345_21
 10335  15C1  2DC3               	goto	u345_20
 10336  15C2                     u345_21:
 10337  15C2  2DD3               	goto	i1l2728
 10338  15C3                     u345_20:
 10339  15C3                     i1l2720:
 10340  15C3  0A63               	incf	___fladd@aexp,w
 10341  15C4  1D03               	btfss	3,2
 10342  15C5  2DC7               	goto	u346_21
 10343  15C6  2DC8               	goto	u346_20
 10344  15C7                     u346_21:
 10345  15C7  2DD0               	goto	i1l2724
 10346  15C8                     u346_20:
 10347  15C8                     i1l2722:
 10348  15C8  3000               	movlw	0
 10349  15C9  00D9               	movwf	___fladd@a+3
 10350  15CA  3000               	movlw	0
 10351  15CB  00D8               	movwf	___fladd@a+2
 10352  15CC  3000               	movlw	0
 10353  15CD  00D7               	movwf	___fladd@a+1
 10354  15CE  3000               	movlw	0
 10355  15CF  00D6               	movwf	___fladd@a
 10356  15D0                     i1l2724:
 10357  15D0  17D8               	bsf	___fladd@a+2,7
 10358  15D1                     i1l2726:
 10359  15D1  01D9               	clrf	___fladd@a+3
 10360  15D2  2DDB               	goto	i1l692
 10361  15D3                     i1l2728:
 10362  15D3  3000               	movlw	0
 10363  15D4  00D9               	movwf	___fladd@a+3
 10364  15D5  3000               	movlw	0
 10365  15D6  00D8               	movwf	___fladd@a+2
 10366  15D7  3000               	movlw	0
 10367  15D8  00D7               	movwf	___fladd@a+1
 10368  15D9  3000               	movlw	0
 10369  15DA  00D6               	movwf	___fladd@a
 10370  15DB                     i1l692:
 10371  15DB  0864               	movf	___fladd@bexp,w
 10372  15DC  0263               	subwf	___fladd@aexp,w
 10373  15DD  1803               	skipnc
 10374  15DE  2DE0               	goto	u347_21
 10375  15DF  2DE1               	goto	u347_20
 10376  15E0                     u347_21:
 10377  15E0  2E25               	goto	i1l2764
 10378  15E1                     u347_20:
 10379  15E1                     i1l2730:
 10380  15E1  1F62               	btfss	___fladd@signs,6
 10381  15E2  2DE4               	goto	u348_21
 10382  15E3  2DE5               	goto	u348_20
 10383  15E4                     u348_21:
 10384  15E4  2DE9               	goto	i1l2734
 10385  15E5                     u348_20:
 10386  15E5                     i1l2732:
 10387  15E5  3080               	movlw	128
 10388  15E6  00DA               	movwf	??___fladd
 10389  15E7  085A               	movf	??___fladd,w
 10390  15E8  06E2               	xorwf	___fladd@signs,f
 10391  15E9                     i1l2734:
 10392  15E9  0864               	movf	___fladd@bexp,w
 10393  15EA  00DA               	movwf	??___fladd
 10394  15EB  085A               	movf	??___fladd,w
 10395  15EC  00E5               	movwf	___fladd@grs
 10396  15ED                     i1l2736:
 10397  15ED  0863               	movf	___fladd@aexp,w
 10398  15EE  00DA               	movwf	??___fladd
 10399  15EF  085A               	movf	??___fladd,w
 10400  15F0  00E4               	movwf	___fladd@bexp
 10401  15F1                     i1l2738:
 10402  15F1  0865               	movf	___fladd@grs,w
 10403  15F2  00DA               	movwf	??___fladd
 10404  15F3  085A               	movf	??___fladd,w
 10405  15F4  00E3               	movwf	___fladd@aexp
 10406  15F5                     i1l2740:
 10407  15F5  0852               	movf	___fladd@b,w
 10408  15F6  00DA               	movwf	??___fladd
 10409  15F7  085A               	movf	??___fladd,w
 10410  15F8  00E5               	movwf	___fladd@grs
 10411  15F9                     i1l2742:
 10412  15F9  0856               	movf	___fladd@a,w
 10413  15FA  00DA               	movwf	??___fladd
 10414  15FB  085A               	movf	??___fladd,w
 10415  15FC  00D2               	movwf	___fladd@b
 10416  15FD                     i1l2744:
 10417  15FD  0865               	movf	___fladd@grs,w
 10418  15FE  00DA               	movwf	??___fladd
 10419  15FF  085A               	movf	??___fladd,w
 10420  1600  00D6               	movwf	___fladd@a
 10421  1601                     i1l2746:
 10422  1601  0853               	movf	___fladd@b+1,w
 10423  1602  00DA               	movwf	??___fladd
 10424  1603  085A               	movf	??___fladd,w
 10425  1604  00E5               	movwf	___fladd@grs
 10426  1605                     i1l2748:
 10427  1605  0857               	movf	___fladd@a+1,w
 10428  1606  00DA               	movwf	??___fladd
 10429  1607  085A               	movf	??___fladd,w
 10430  1608  00D3               	movwf	___fladd@b+1
 10431  1609                     i1l2750:
 10432  1609  0865               	movf	___fladd@grs,w
 10433  160A  00DA               	movwf	??___fladd
 10434  160B  085A               	movf	??___fladd,w
 10435  160C  00D7               	movwf	___fladd@a+1
 10436  160D                     i1l2752:
 10437  160D  0854               	movf	___fladd@b+2,w
 10438  160E  00DA               	movwf	??___fladd
 10439  160F  085A               	movf	??___fladd,w
 10440  1610  00E5               	movwf	___fladd@grs
 10441  1611                     i1l2754:
 10442  1611  0858               	movf	___fladd@a+2,w
 10443  1612  00DA               	movwf	??___fladd
 10444  1613  085A               	movf	??___fladd,w
 10445  1614  00D4               	movwf	___fladd@b+2
 10446  1615                     i1l2756:
 10447  1615  0865               	movf	___fladd@grs,w
 10448  1616  00DA               	movwf	??___fladd
 10449  1617  085A               	movf	??___fladd,w
 10450  1618  00D8               	movwf	___fladd@a+2
 10451  1619                     i1l2758:
 10452  1619  0855               	movf	___fladd@b+3,w
 10453  161A  00DA               	movwf	??___fladd
 10454  161B  085A               	movf	??___fladd,w
 10455  161C  00E5               	movwf	___fladd@grs
 10456  161D                     i1l2760:
 10457  161D  0859               	movf	___fladd@a+3,w
 10458  161E  00DA               	movwf	??___fladd
 10459  161F  085A               	movf	??___fladd,w
 10460  1620  00D5               	movwf	___fladd@b+3
 10461  1621                     i1l2762:
 10462  1621  0865               	movf	___fladd@grs,w
 10463  1622  00DA               	movwf	??___fladd
 10464  1623  085A               	movf	??___fladd,w
 10465  1624  00D9               	movwf	___fladd@a+3
 10466  1625                     i1l2764:
 10467  1625  01E5               	clrf	___fladd@grs
 10468  1626                     i1l2766:
 10469  1626  0863               	movf	___fladd@aexp,w
 10470  1627  00DA               	movwf	??___fladd
 10471  1628  01DB               	clrf	??___fladd+1
 10472  1629  085B               	movf	??___fladd+1,w
 10473  162A  00DD               	movwf	??___fladd+3
 10474  162B  0864               	movf	___fladd@bexp,w
 10475  162C  025A               	subwf	??___fladd,w
 10476  162D  00DC               	movwf	??___fladd+2
 10477  162E  1C03               	skipc
 10478  162F  03DD               	decf	??___fladd+3,f
 10479  1630  085D               	movf	??___fladd+3,w
 10480  1631  3A80               	xorlw	128
 10481  1632  00FF               	movwf	btemp+1
 10482  1633  3080               	movlw	128
 10483  1634  027F               	subwf	btemp+1,w
 10484  1635  1D03               	skipz
 10485  1636  2E39               	goto	u349_25
 10486  1637  301A               	movlw	26
 10487  1638  025C               	subwf	??___fladd+2,w
 10488  1639                     u349_25:
 10489  1639  1C03               	skipc
 10490  163A  2E3C               	goto	u349_21
 10491  163B  2E3D               	goto	u349_20
 10492  163C                     u349_21:
 10493  163C  2E7A               	goto	i1l2782
 10494  163D                     u349_20:
 10495  163D                     i1l2768:
 10496  163D  1283               	bcf	3,5	;RP0=0, select bank0
 10497  163E  1303               	bcf	3,6	;RP1=0, select bank0
 10498  163F  0855               	movf	___fladd@b+3,w
 10499  1640  0454               	iorwf	___fladd@b+2,w
 10500  1641  0453               	iorwf	___fladd@b+1,w
 10501  1642  0452               	iorwf	___fladd@b,w
 10502  1643  1D03               	skipz
 10503  1644  2E46               	goto	u350_21
 10504  1645  2E48               	goto	u350_20
 10505  1646                     u350_21:
 10506  1646  3001               	movlw	1
 10507  1647  2E49               	goto	u351_20
 10508  1648                     u350_20:
 10509  1648  3000               	movlw	0
 10510  1649                     u351_20:
 10511  1649  00DA               	movwf	??___fladd
 10512  164A  085A               	movf	??___fladd,w
 10513  164B  00E5               	movwf	___fladd@grs
 10514  164C  3000               	movlw	0
 10515  164D  00D5               	movwf	___fladd@b+3
 10516  164E  3000               	movlw	0
 10517  164F  00D4               	movwf	___fladd@b+2
 10518  1650  3000               	movlw	0
 10519  1651  00D3               	movwf	___fladd@b+1
 10520  1652  3000               	movlw	0
 10521  1653  00D2               	movwf	___fladd@b
 10522  1654  0863               	movf	___fladd@aexp,w
 10523  1655  00DA               	movwf	??___fladd
 10524  1656  085A               	movf	??___fladd,w
 10525  1657  00E4               	movwf	___fladd@bexp
 10526  1658  2E82               	goto	i1l696
 10527  1659                     i1l698:
 10528  1659  1C65               	btfss	___fladd@grs,0
 10529  165A  2E5C               	goto	u352_21
 10530  165B  2E5D               	goto	u352_20
 10531  165C                     u352_21:
 10532  165C  2E66               	goto	i1l2772
 10533  165D                     u352_20:
 10534  165D                     i1l2770:
 10535  165D  0865               	movf	___fladd@grs,w
 10536  165E  00DA               	movwf	??___fladd
 10537  165F  1003               	clrc
 10538  1660  0C5A               	rrf	??___fladd,w
 10539  1661  3801               	iorlw	1
 10540  1662  00DB               	movwf	??___fladd+1
 10541  1663  085B               	movf	??___fladd+1,w
 10542  1664  00E5               	movwf	___fladd@grs
 10543  1665  2E68               	goto	i1l2774
 10544  1666                     i1l2772:
 10545  1666  1003               	clrc
 10546  1667  0CE5               	rrf	___fladd@grs,f
 10547  1668                     i1l2774:
 10548  1668  1C52               	btfss	___fladd@b,0
 10549  1669  2E6B               	goto	u353_21
 10550  166A  2E6C               	goto	u353_20
 10551  166B                     u353_21:
 10552  166B  2E6D               	goto	i1l2778
 10553  166C                     u353_20:
 10554  166C                     i1l2776:
 10555  166C  17E5               	bsf	___fladd@grs,7
 10556  166D                     i1l2778:
 10557  166D  3001               	movlw	1
 10558  166E  00DA               	movwf	??___fladd
 10559  166F                     u354_25:
 10560  166F  0D55               	rlf	___fladd@b+3,w
 10561  1670  0CD5               	rrf	___fladd@b+3,f
 10562  1671  0CD4               	rrf	___fladd@b+2,f
 10563  1672  0CD3               	rrf	___fladd@b+1,f
 10564  1673  0CD2               	rrf	___fladd@b,f
 10565  1674  0BDA               	decfsz	??___fladd& (0+127),f
 10566  1675  2E6F               	goto	u354_25
 10567  1676                     i1l2780:
 10568  1676  3001               	movlw	1
 10569  1677  00DA               	movwf	??___fladd
 10570  1678  085A               	movf	??___fladd,w
 10571  1679  07E4               	addwf	___fladd@bexp,f
 10572  167A                     i1l2782:
 10573  167A  1283               	bcf	3,5	;RP0=0, select bank0
 10574  167B  1303               	bcf	3,6	;RP1=0, select bank0
 10575  167C  0863               	movf	___fladd@aexp,w
 10576  167D  0264               	subwf	___fladd@bexp,w
 10577  167E  1C03               	skipc
 10578  167F  2E81               	goto	u355_21
 10579  1680  2E82               	goto	u355_20
 10580  1681                     u355_21:
 10581  1681  2E59               	goto	i1l698
 10582  1682                     u355_20:
 10583  1682                     i1l696:
 10584  1682  1B62               	btfsc	___fladd@signs,6
 10585  1683  2E85               	goto	u356_21
 10586  1684  2E86               	goto	u356_20
 10587  1685                     u356_21:
 10588  1685  2ED1               	goto	i1l2808
 10589  1686                     u356_20:
 10590  1686                     i1l2784:
 10591  1686  0864               	movf	___fladd@bexp,w
 10592  1687  1D03               	btfss	3,2
 10593  1688  2E8A               	goto	u357_21
 10594  1689  2E8B               	goto	u357_20
 10595  168A                     u357_21:
 10596  168A  2E94               	goto	i1l2790
 10597  168B                     u357_20:
 10598  168B                     i1l2786:
 10599  168B  3000               	movlw	0
 10600  168C  00D5               	movwf	?___fladd+3
 10601  168D  3000               	movlw	0
 10602  168E  00D4               	movwf	?___fladd+2
 10603  168F  3000               	movlw	0
 10604  1690  00D3               	movwf	?___fladd+1
 10605  1691  3000               	movlw	0
 10606  1692  00D2               	movwf	?___fladd
 10607  1693  2FFF               	goto	i1l705
 10608  1694                     i1l2790:
 10609  1694  0856               	movf	___fladd@a,w
 10610  1695  07D2               	addwf	___fladd@b,f
 10611  1696  0857               	movf	___fladd@a+1,w
 10612  1697  1103               	clrz
 10613  1698  1803               	skipnc
 10614  1699  3E01               	addlw	1
 10615  169A  1903               	skipnz
 10616  169B  2E9D               	goto	u358_21
 10617  169C  07D3               	addwf	___fladd@b+1,f
 10618  169D                     u358_21:
 10619  169D  0858               	movf	___fladd@a+2,w
 10620  169E  1103               	clrz
 10621  169F  1803               	skipnc
 10622  16A0  3E01               	addlw	1
 10623  16A1  1903               	skipnz
 10624  16A2  2EA4               	goto	u358_22
 10625  16A3  07D4               	addwf	___fladd@b+2,f
 10626  16A4                     u358_22:
 10627  16A4  0859               	movf	___fladd@a+3,w
 10628  16A5  1103               	clrz
 10629  16A6  1803               	skipnc
 10630  16A7  3E01               	addlw	1
 10631  16A8  1903               	skipnz
 10632  16A9  2EAB               	goto	u358_23
 10633  16AA  07D5               	addwf	___fladd@b+3,f
 10634  16AB                     u358_23:
 10635  16AB                     i1l2792:
 10636  16AB  1C55               	btfss	___fladd@b+3,0
 10637  16AC  2EAE               	goto	u359_21
 10638  16AD  2EAF               	goto	u359_20
 10639  16AE                     u359_21:
 10640  16AE  2F85               	goto	i1l2842
 10641  16AF                     u359_20:
 10642  16AF                     i1l2794:
 10643  16AF  1C65               	btfss	___fladd@grs,0
 10644  16B0  2EB2               	goto	u360_21
 10645  16B1  2EB3               	goto	u360_20
 10646  16B2                     u360_21:
 10647  16B2  2EBC               	goto	i1l2798
 10648  16B3                     u360_20:
 10649  16B3                     i1l2796:
 10650  16B3  0865               	movf	___fladd@grs,w
 10651  16B4  00DA               	movwf	??___fladd
 10652  16B5  1003               	clrc
 10653  16B6  0C5A               	rrf	??___fladd,w
 10654  16B7  3801               	iorlw	1
 10655  16B8  00DB               	movwf	??___fladd+1
 10656  16B9  085B               	movf	??___fladd+1,w
 10657  16BA  00E5               	movwf	___fladd@grs
 10658  16BB  2EBE               	goto	i1l2800
 10659  16BC                     i1l2798:
 10660  16BC  1003               	clrc
 10661  16BD  0CE5               	rrf	___fladd@grs,f
 10662  16BE                     i1l2800:
 10663  16BE  1C52               	btfss	___fladd@b,0
 10664  16BF  2EC1               	goto	u361_21
 10665  16C0  2EC2               	goto	u361_20
 10666  16C1                     u361_21:
 10667  16C1  2EC3               	goto	i1l2804
 10668  16C2                     u361_20:
 10669  16C2                     i1l2802:
 10670  16C2  17E5               	bsf	___fladd@grs,7
 10671  16C3                     i1l2804:
 10672  16C3  3001               	movlw	1
 10673  16C4  00DA               	movwf	??___fladd
 10674  16C5                     u362_25:
 10675  16C5  0D55               	rlf	___fladd@b+3,w
 10676  16C6  0CD5               	rrf	___fladd@b+3,f
 10677  16C7  0CD4               	rrf	___fladd@b+2,f
 10678  16C8  0CD3               	rrf	___fladd@b+1,f
 10679  16C9  0CD2               	rrf	___fladd@b,f
 10680  16CA  0BDA               	decfsz	??___fladd& (0+127),f
 10681  16CB  2EC5               	goto	u362_25
 10682  16CC                     i1l2806:
 10683  16CC  3001               	movlw	1
 10684  16CD  00DA               	movwf	??___fladd
 10685  16CE  085A               	movf	??___fladd,w
 10686  16CF  07E4               	addwf	___fladd@bexp,f
 10687  16D0  2F85               	goto	i1l2842
 10688  16D1                     i1l2808:
 10689  16D1  0855               	movf	___fladd@b+3,w
 10690  16D2  3A80               	xorlw	128
 10691  16D3  00FF               	movwf	btemp+1
 10692  16D4  0859               	movf	___fladd@a+3,w
 10693  16D5  3A80               	xorlw	128
 10694  16D6  027F               	subwf	btemp+1,w
 10695  16D7  1D03               	skipz
 10696  16D8  2EE3               	goto	u363_23
 10697  16D9  0858               	movf	___fladd@a+2,w
 10698  16DA  0254               	subwf	___fladd@b+2,w
 10699  16DB  1D03               	skipz
 10700  16DC  2EE3               	goto	u363_23
 10701  16DD  0857               	movf	___fladd@a+1,w
 10702  16DE  0253               	subwf	___fladd@b+1,w
 10703  16DF  1D03               	skipz
 10704  16E0  2EE3               	goto	u363_23
 10705  16E1  0856               	movf	___fladd@a,w
 10706  16E2  0252               	subwf	___fladd@b,w
 10707  16E3                     u363_23:
 10708  16E3  1803               	skipnc
 10709  16E4  2EE6               	goto	u363_21
 10710  16E5  2EE7               	goto	u363_20
 10711  16E6                     u363_21:
 10712  16E6  2F3F               	goto	i1l2818
 10713  16E7                     u363_20:
 10714  16E7                     i1l2810:
 10715  16E7  30FF               	movlw	255
 10716  16E8  00DA               	movwf	??___fladd
 10717  16E9  30FF               	movlw	255
 10718  16EA  00DB               	movwf	??___fladd+1
 10719  16EB  30FF               	movlw	255
 10720  16EC  00DC               	movwf	??___fladd+2
 10721  16ED  30FF               	movlw	255
 10722  16EE  00DD               	movwf	??___fladd+3
 10723  16EF  0856               	movf	___fladd@a,w
 10724  16F0  00DE               	movwf	??___fladd+4
 10725  16F1  0857               	movf	___fladd@a+1,w
 10726  16F2  00DF               	movwf	??___fladd+5
 10727  16F3  0858               	movf	___fladd@a+2,w
 10728  16F4  00E0               	movwf	??___fladd+6
 10729  16F5  0859               	movf	___fladd@a+3,w
 10730  16F6  00E1               	movwf	??___fladd+7
 10731  16F7  0852               	movf	___fladd@b,w
 10732  16F8  02DE               	subwf	??___fladd+4,f
 10733  16F9  0853               	movf	___fladd@b+1,w
 10734  16FA  1C03               	skipc
 10735  16FB  0F53               	incfsz	___fladd@b+1,w
 10736  16FC  2EFE               	goto	u364_21
 10737  16FD  2EFF               	goto	u364_22
 10738  16FE                     u364_21:
 10739  16FE  02DF               	subwf	??___fladd+5,f
 10740  16FF                     u364_22:
 10741  16FF  0854               	movf	___fladd@b+2,w
 10742  1700  1C03               	skipc
 10743  1701  0F54               	incfsz	___fladd@b+2,w
 10744  1702  2F04               	goto	u364_23
 10745  1703  2F05               	goto	u364_24
 10746  1704                     u364_23:
 10747  1704  02E0               	subwf	??___fladd+6,f
 10748  1705                     u364_24:
 10749  1705  0855               	movf	___fladd@b+3,w
 10750  1706  1C03               	skipc
 10751  1707  0F55               	incfsz	___fladd@b+3,w
 10752  1708  2F0A               	goto	u364_25
 10753  1709  2F0B               	goto	u364_26
 10754  170A                     u364_25:
 10755  170A  02E1               	subwf	??___fladd+7,f
 10756  170B                     u364_26:
 10757  170B  085E               	movf	??___fladd+4,w
 10758  170C  07DA               	addwf	??___fladd,f
 10759  170D  085F               	movf	??___fladd+5,w
 10760  170E  1803               	skipnc
 10761  170F  0F5F               	incfsz	??___fladd+5,w
 10762  1710  2F12               	goto	u365_20
 10763  1711  2F13               	goto	u365_21
 10764  1712                     u365_20:
 10765  1712  07DB               	addwf	??___fladd+1,f
 10766  1713                     u365_21:
 10767  1713  0860               	movf	??___fladd+6,w
 10768  1714  1803               	skipnc
 10769  1715  0F60               	incfsz	??___fladd+6,w
 10770  1716  2F18               	goto	u365_22
 10771  1717  2F19               	goto	u365_23
 10772  1718                     u365_22:
 10773  1718  07DC               	addwf	??___fladd+2,f
 10774  1719                     u365_23:
 10775  1719  0861               	movf	??___fladd+7,w
 10776  171A  1803               	skipnc
 10777  171B  0A61               	incf	??___fladd+7,w
 10778  171C  07DD               	addwf	??___fladd+3,f
 10779  171D  085D               	movf	??___fladd+3,w
 10780  171E  00D5               	movwf	___fladd@b+3
 10781  171F  085C               	movf	??___fladd+2,w
 10782  1720  00D4               	movwf	___fladd@b+2
 10783  1721  085B               	movf	??___fladd+1,w
 10784  1722  00D3               	movwf	___fladd@b+1
 10785  1723  085A               	movf	??___fladd,w
 10786  1724  00D2               	movwf	___fladd@b
 10787  1725                     i1l2812:
 10788  1725  3080               	movlw	128
 10789  1726  00DA               	movwf	??___fladd
 10790  1727  085A               	movf	??___fladd,w
 10791  1728  06E2               	xorwf	___fladd@signs,f
 10792  1729  09E5               	comf	___fladd@grs,f
 10793  172A  0AE5               	incf	___fladd@grs,f
 10794  172B                     i1l2814:
 10795  172B  0865               	movf	___fladd@grs,w
 10796  172C  1D03               	btfss	3,2
 10797  172D  2F2F               	goto	u366_21
 10798  172E  2F30               	goto	u366_20
 10799  172F                     u366_21:
 10800  172F  2F4D               	goto	i1l713
 10801  1730                     u366_20:
 10802  1730                     i1l2816:
 10803  1730  3001               	movlw	1
 10804  1731  07D2               	addwf	___fladd@b,f
 10805  1732  3000               	movlw	0
 10806  1733  1803               	skipnc
 10807  1734  3001               	movlw	1
 10808  1735  07D3               	addwf	___fladd@b+1,f
 10809  1736  3000               	movlw	0
 10810  1737  1803               	skipnc
 10811  1738  3001               	movlw	1
 10812  1739  07D4               	addwf	___fladd@b+2,f
 10813  173A  3000               	movlw	0
 10814  173B  1803               	skipnc
 10815  173C  3001               	movlw	1
 10816  173D  07D5               	addwf	___fladd@b+3,f
 10817  173E  2F4D               	goto	i1l713
 10818  173F                     i1l2818:
 10819  173F  0856               	movf	___fladd@a,w
 10820  1740  02D2               	subwf	___fladd@b,f
 10821  1741  0857               	movf	___fladd@a+1,w
 10822  1742  1C03               	skipc
 10823  1743  0F57               	incfsz	___fladd@a+1,w
 10824  1744  02D3               	subwf	___fladd@b+1,f
 10825  1745  0858               	movf	___fladd@a+2,w
 10826  1746  1C03               	skipc
 10827  1747  0F58               	incfsz	___fladd@a+2,w
 10828  1748  02D4               	subwf	___fladd@b+2,f
 10829  1749  0859               	movf	___fladd@a+3,w
 10830  174A  1C03               	skipc
 10831  174B  0F59               	incfsz	___fladd@a+3,w
 10832  174C  02D5               	subwf	___fladd@b+3,f
 10833  174D                     i1l713:
 10834  174D  0855               	movf	___fladd@b+3,w
 10835  174E  0454               	iorwf	___fladd@b+2,w
 10836  174F  0453               	iorwf	___fladd@b+1,w
 10837  1750  0452               	iorwf	___fladd@b,w
 10838  1751  1D03               	skipz
 10839  1752  2F54               	goto	u367_21
 10840  1753  2F55               	goto	u367_20
 10841  1754                     u367_21:
 10842  1754  2F81               	goto	i1l2840
 10843  1755                     u367_20:
 10844  1755                     i1l2820:
 10845  1755  0865               	movf	___fladd@grs,w
 10846  1756  1D03               	btfss	3,2
 10847  1757  2F59               	goto	u368_21
 10848  1758  2F5A               	goto	u368_20
 10849  1759                     u368_21:
 10850  1759  2F81               	goto	i1l2840
 10851  175A                     u368_20:
 10852  175A                     i1l2822:
 10853  175A  3000               	movlw	0
 10854  175B  00D5               	movwf	?___fladd+3
 10855  175C  3000               	movlw	0
 10856  175D  00D4               	movwf	?___fladd+2
 10857  175E  3000               	movlw	0
 10858  175F  00D3               	movwf	?___fladd+1
 10859  1760  3000               	movlw	0
 10860  1761  00D2               	movwf	?___fladd
 10861  1762  2FFF               	goto	i1l705
 10862  1763                     i1l2826:
 10863  1763  3001               	movlw	1
 10864  1764  00DA               	movwf	??___fladd
 10865  1765                     u369_25:
 10866  1765  1003               	clrc
 10867  1766  0DD2               	rlf	___fladd@b,f
 10868  1767  0DD3               	rlf	___fladd@b+1,f
 10869  1768  0DD4               	rlf	___fladd@b+2,f
 10870  1769  0DD5               	rlf	___fladd@b+3,f
 10871  176A  0BDA               	decfsz	??___fladd,f
 10872  176B  2F65               	goto	u369_25
 10873  176C                     i1l2828:
 10874  176C  1FE5               	btfss	___fladd@grs,7
 10875  176D  2F6F               	goto	u370_21
 10876  176E  2F70               	goto	u370_20
 10877  176F                     u370_21:
 10878  176F  2F71               	goto	i1l717
 10879  1770                     u370_20:
 10880  1770                     i1l2830:
 10881  1770  1452               	bsf	___fladd@b,0
 10882  1771                     i1l717:
 10883  1771  1C65               	btfss	___fladd@grs,0
 10884  1772  2F74               	goto	u371_21
 10885  1773  2F75               	goto	u371_20
 10886  1774                     u371_21:
 10887  1774  2F78               	goto	i1l2834
 10888  1775                     u371_20:
 10889  1775                     i1l2832:
 10890  1775  1403               	setc
 10891  1776  0DE5               	rlf	___fladd@grs,f
 10892  1777  2F7A               	goto	i1l2836
 10893  1778                     i1l2834:
 10894  1778  1003               	clrc
 10895  1779  0DE5               	rlf	___fladd@grs,f
 10896  177A                     i1l2836:
 10897  177A  0864               	movf	___fladd@bexp,w
 10898  177B  1903               	btfsc	3,2
 10899  177C  2F7E               	goto	u372_21
 10900  177D  2F7F               	goto	u372_20
 10901  177E                     u372_21:
 10902  177E  2F81               	goto	i1l2840
 10903  177F                     u372_20:
 10904  177F                     i1l2838:
 10905  177F  3001               	movlw	1
 10906  1780  02E4               	subwf	___fladd@bexp,f
 10907  1781                     i1l2840:
 10908  1781  1FD4               	btfss	___fladd@b+2,7
 10909  1782  2F84               	goto	u373_21
 10910  1783  2F85               	goto	u373_20
 10911  1784                     u373_21:
 10912  1784  2F63               	goto	i1l2826
 10913  1785                     u373_20:
 10914  1785                     i1l2842:
 10915  1785  01E3               	clrf	___fladd@aexp
 10916  1786                     i1l2844:
 10917  1786  1FE5               	btfss	___fladd@grs,7
 10918  1787  2F89               	goto	u374_21
 10919  1788  2F8A               	goto	u374_20
 10920  1789                     u374_21:
 10921  1789  2F98               	goto	i1l2852
 10922  178A                     u374_20:
 10923  178A                     i1l2846:
 10924  178A  0865               	movf	___fladd@grs,w
 10925  178B  397F               	andlw	127
 10926  178C  1903               	btfsc	3,2
 10927  178D  2F8F               	goto	u375_21
 10928  178E  2F90               	goto	u375_20
 10929  178F                     u375_21:
 10930  178F  2F93               	goto	i1l723
 10931  1790                     u375_20:
 10932  1790                     i1l2848:
 10933  1790  01E3               	clrf	___fladd@aexp
 10934  1791  0AE3               	incf	___fladd@aexp,f
 10935  1792  2F98               	goto	i1l2852
 10936  1793                     i1l723:
 10937  1793  1C52               	btfss	___fladd@b,0
 10938  1794  2F96               	goto	u376_21
 10939  1795  2F97               	goto	u376_20
 10940  1796                     u376_21:
 10941  1796  2F98               	goto	i1l2852
 10942  1797                     u376_20:
 10943  1797  2F90               	goto	i1l2848
 10944  1798                     i1l2852:
 10945  1798  0863               	movf	___fladd@aexp,w
 10946  1799  1903               	btfsc	3,2
 10947  179A  2F9C               	goto	u377_21
 10948  179B  2F9D               	goto	u377_20
 10949  179C                     u377_21:
 10950  179C  2FD1               	goto	i1l726
 10951  179D                     u377_20:
 10952  179D                     i1l2854:
 10953  179D  3001               	movlw	1
 10954  179E  07D2               	addwf	___fladd@b,f
 10955  179F  3000               	movlw	0
 10956  17A0  1803               	skipnc
 10957  17A1  3001               	movlw	1
 10958  17A2  07D3               	addwf	___fladd@b+1,f
 10959  17A3  3000               	movlw	0
 10960  17A4  1803               	skipnc
 10961  17A5  3001               	movlw	1
 10962  17A6  07D4               	addwf	___fladd@b+2,f
 10963  17A7  3000               	movlw	0
 10964  17A8  1803               	skipnc
 10965  17A9  3001               	movlw	1
 10966  17AA  07D5               	addwf	___fladd@b+3,f
 10967  17AB                     i1l2856:
 10968  17AB  1C55               	btfss	___fladd@b+3,0
 10969  17AC  2FAE               	goto	u378_21
 10970  17AD  2FAF               	goto	u378_20
 10971  17AE                     u378_21:
 10972  17AE  2FD1               	goto	i1l726
 10973  17AF                     u378_20:
 10974  17AF                     i1l2858:
 10975  17AF  0852               	movf	___fladd@b,w
 10976  17B0  00DA               	movwf	??___fladd
 10977  17B1  0853               	movf	___fladd@b+1,w
 10978  17B2  00DB               	movwf	??___fladd+1
 10979  17B3  0854               	movf	___fladd@b+2,w
 10980  17B4  00DC               	movwf	??___fladd+2
 10981  17B5  0855               	movf	___fladd@b+3,w
 10982  17B6  00DD               	movwf	??___fladd+3
 10983  17B7  3001               	movlw	1
 10984  17B8  00DE               	movwf	??___fladd+4
 10985  17B9                     u379_25:
 10986  17B9  0D5D               	rlf	??___fladd+3,w
 10987  17BA  0CDD               	rrf	??___fladd+3,f
 10988  17BB  0CDC               	rrf	??___fladd+2,f
 10989  17BC  0CDB               	rrf	??___fladd+1,f
 10990  17BD  0CDA               	rrf	??___fladd,f
 10991  17BE                     u379_20:
 10992  17BE  0BDE               	decfsz	??___fladd+4,f
 10993  17BF  2FB9               	goto	u379_25
 10994  17C0  085D               	movf	??___fladd+3,w
 10995  17C1  00D5               	movwf	___fladd@b+3
 10996  17C2  085C               	movf	??___fladd+2,w
 10997  17C3  00D4               	movwf	___fladd@b+2
 10998  17C4  085B               	movf	??___fladd+1,w
 10999  17C5  00D3               	movwf	___fladd@b+1
 11000  17C6  085A               	movf	??___fladd,w
 11001  17C7  00D2               	movwf	___fladd@b
 11002  17C8  0A64               	incf	___fladd@bexp,w
 11003  17C9  1903               	btfsc	3,2
 11004  17CA  2FCC               	goto	u380_21
 11005  17CB  2FCD               	goto	u380_20
 11006  17CC                     u380_21:
 11007  17CC  2FD1               	goto	i1l726
 11008  17CD                     u380_20:
 11009  17CD                     i1l2860:
 11010  17CD  3001               	movlw	1
 11011  17CE  00DA               	movwf	??___fladd
 11012  17CF  085A               	movf	??___fladd,w
 11013  17D0  07E4               	addwf	___fladd@bexp,f
 11014  17D1                     i1l726:
 11015  17D1  0A64               	incf	___fladd@bexp,w
 11016  17D2  1903               	btfsc	3,2
 11017  17D3  2FD5               	goto	u381_21
 11018  17D4  2FD6               	goto	u381_20
 11019  17D5                     u381_21:
 11020  17D5  2FDB               	goto	i1l2864
 11021  17D6                     u381_20:
 11022  17D6                     i1l2862:
 11023  17D6  0864               	movf	___fladd@bexp,w
 11024  17D7  1D03               	btfss	3,2
 11025  17D8  2FDA               	goto	u382_21
 11026  17D9  2FDB               	goto	u382_20
 11027  17DA                     u382_21:
 11028  17DA  2FE9               	goto	i1l2870
 11029  17DB                     u382_20:
 11030  17DB                     i1l2864:
 11031  17DB  3000               	movlw	0
 11032  17DC  00D5               	movwf	___fladd@b+3
 11033  17DD  3000               	movlw	0
 11034  17DE  00D4               	movwf	___fladd@b+2
 11035  17DF  3000               	movlw	0
 11036  17E0  00D3               	movwf	___fladd@b+1
 11037  17E1  3000               	movlw	0
 11038  17E2  00D2               	movwf	___fladd@b
 11039  17E3                     i1l2866:
 11040  17E3  0864               	movf	___fladd@bexp,w
 11041  17E4  1D03               	btfss	3,2
 11042  17E5  2FE7               	goto	u383_21
 11043  17E6  2FE8               	goto	u383_20
 11044  17E7                     u383_21:
 11045  17E7  2FE9               	goto	i1l2870
 11046  17E8                     u383_20:
 11047  17E8                     i1l2868:
 11048  17E8  01E2               	clrf	___fladd@signs
 11049  17E9                     i1l2870:
 11050  17E9  1C64               	btfss	___fladd@bexp,0
 11051  17EA  2FEC               	goto	u384_21
 11052  17EB  2FED               	goto	u384_20
 11053  17EC                     u384_21:
 11054  17EC  2FEF               	goto	i1l2874
 11055  17ED                     u384_20:
 11056  17ED                     i1l2872:
 11057  17ED  17D4               	bsf	___fladd@b+2,7
 11058  17EE  2FF3               	goto	i1l734
 11059  17EF                     i1l2874:
 11060  17EF  307F               	movlw	127
 11061  17F0  00DA               	movwf	??___fladd
 11062  17F1  085A               	movf	??___fladd,w
 11063  17F2  05D4               	andwf	___fladd@b+2,f
 11064  17F3                     i1l734:
 11065  17F3  0864               	movf	___fladd@bexp,w
 11066  17F4  00DA               	movwf	??___fladd
 11067  17F5  1003               	clrc
 11068  17F6  0C5A               	rrf	??___fladd,w
 11069  17F7  00DB               	movwf	??___fladd+1
 11070  17F8  085B               	movf	??___fladd+1,w
 11071  17F9  00D5               	movwf	___fladd@b+3
 11072  17FA                     i1l2876:
 11073  17FA  1FE2               	btfss	___fladd@signs,7
 11074  17FB  2FFD               	goto	u385_21
 11075  17FC  2FFE               	goto	u385_20
 11076  17FD                     u385_21:
 11077  17FD  2FFF               	goto	i1l735
 11078  17FE                     u385_20:
 11079  17FE                     i1l2878:
 11080  17FE  17D5               	bsf	___fladd@b+3,7
 11081  17FF                     i1l735:
 11082  17FF                     i1l705:
 11083  17FF  0008               	return
 11084  1800                     __end_of___fladd:
 11085                           
 11086                           	psect	text36
 11087  1915                     __ptext36:	
 11088 ;; *************** function ___flneg *****************
 11089 ;; Defined at:
 11090 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
 11091 ;; Parameters:    Size  Location     Type
 11092 ;;  f1              4    0[COMMON] unsigned char 
 11093 ;; Auto vars:     Size  Location     Type
 11094 ;;		None
 11095 ;; Return value:  Size  Location     Type
 11096 ;;                  4    0[COMMON] unsigned char 
 11097 ;; Registers used:
 11098 ;;		wreg
 11099 ;; Tracked objects:
 11100 ;;		On entry : 0/0
 11101 ;;		On exit  : 0/0
 11102 ;;		Unchanged: 0/0
 11103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11104 ;;      Params:         4       0       0       0       0
 11105 ;;      Locals:         0       0       0       0       0
 11106 ;;      Temps:          0       0       0       0       0
 11107 ;;      Totals:         4       0       0       0       0
 11108 ;;Total ram usage:        4 bytes
 11109 ;; Hardware stack levels used:    1
 11110 ;; This function calls:
 11111 ;;		Nothing
 11112 ;; This function is called by:
 11113 ;;		_sprintf
 11114 ;; This function uses a non-reentrant model
 11115 ;;
 11116                           
 11117                           
 11118                           ;psect for function ___flneg
 11119  1915                     ___flneg:
 11120  1915                     i1l3286:	
 11121                           ;incstack = 0
 11122                           ; Regs used in ___flneg: [wreg]
 11123                           
 11124  1915  0873               	movf	___flneg@f1+3,w
 11125  1916  0472               	iorwf	___flneg@f1+2,w
 11126  1917  0471               	iorwf	___flneg@f1+1,w
 11127  1918  0470               	iorwf	___flneg@f1,w
 11128  1919  1903               	skipnz
 11129  191A  291C               	goto	u497_21
 11130  191B  291D               	goto	u497_20
 11131  191C                     u497_21:
 11132  191C  291F               	goto	i1l3290
 11133  191D                     u497_20:
 11134  191D                     i1l3288:
 11135  191D  3080               	movlw	128
 11136  191E  06F3               	xorwf	___flneg@f1+3,f
 11137  191F                     i1l3290:
 11138  191F                     i1l564:
 11139  191F  0008               	return
 11140  1920                     __end_of___flneg:
 11141                           
 11142                           	psect	text37
 11143  1EA4                     __ptext37:	
 11144 ;; *************** function ___flge *****************
 11145 ;; Defined at:
 11146 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
 11147 ;; Parameters:    Size  Location     Type
 11148 ;;  ff1             4    0[COMMON] unsigned char 
 11149 ;;  ff2             4    4[COMMON] unsigned char 
 11150 ;; Auto vars:     Size  Location     Type
 11151 ;;		None
 11152 ;; Return value:  Size  Location     Type
 11153 ;;		None               void
 11154 ;; Registers used:
 11155 ;;		wreg, status,2, status,0
 11156 ;; Tracked objects:
 11157 ;;		On entry : 0/0
 11158 ;;		On exit  : 0/0
 11159 ;;		Unchanged: 0/0
 11160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11161 ;;      Params:         8       0       0       0       0
 11162 ;;      Locals:         0       0       0       0       0
 11163 ;;      Temps:          4       0       0       0       0
 11164 ;;      Totals:        12       0       0       0       0
 11165 ;;Total ram usage:       12 bytes
 11166 ;; Hardware stack levels used:    1
 11167 ;; This function calls:
 11168 ;;		Nothing
 11169 ;; This function is called by:
 11170 ;;		_sprintf
 11171 ;; This function uses a non-reentrant model
 11172 ;;
 11173                           
 11174                           
 11175                           ;psect for function ___flge
 11176  1EA4                     ___flge:
 11177  1EA4                     i1l3266:	
 11178                           ;incstack = 0
 11179                           ; Regs used in ___flge: [wreg+status,2+status,0]
 11180                           
 11181  1EA4  3000               	movlw	0
 11182  1EA5  0570               	andwf	___flge@ff1,w
 11183  1EA6  00F8               	movwf	??___flge
 11184  1EA7  3000               	movlw	0
 11185  1EA8  0571               	andwf	___flge@ff1+1,w
 11186  1EA9  00F9               	movwf	??___flge+1
 11187  1EAA  3080               	movlw	128
 11188  1EAB  0572               	andwf	___flge@ff1+2,w
 11189  1EAC  00FA               	movwf	??___flge+2
 11190  1EAD  307F               	movlw	127
 11191  1EAE  0573               	andwf	___flge@ff1+3,w
 11192  1EAF  00FB               	movwf	??___flge+3
 11193  1EB0  087B               	movf	??___flge+3,w
 11194  1EB1  047A               	iorwf	??___flge+2,w
 11195  1EB2  0479               	iorwf	??___flge+1,w
 11196  1EB3  0478               	iorwf	??___flge,w
 11197  1EB4  1D03               	skipz
 11198  1EB5  2EB7               	goto	u490_21
 11199  1EB6  2EB8               	goto	u490_20
 11200  1EB7                     u490_21:
 11201  1EB7  2EC0               	goto	i1l556
 11202  1EB8                     u490_20:
 11203  1EB8                     i1l3268:
 11204  1EB8  3000               	movlw	0
 11205  1EB9  00F3               	movwf	___flge@ff1+3
 11206  1EBA  3000               	movlw	0
 11207  1EBB  00F2               	movwf	___flge@ff1+2
 11208  1EBC  3000               	movlw	0
 11209  1EBD  00F1               	movwf	___flge@ff1+1
 11210  1EBE  3000               	movlw	0
 11211  1EBF  00F0               	movwf	___flge@ff1
 11212  1EC0                     i1l556:
 11213  1EC0  3000               	movlw	0
 11214  1EC1  0574               	andwf	___flge@ff2,w
 11215  1EC2  00F8               	movwf	??___flge
 11216  1EC3  3000               	movlw	0
 11217  1EC4  0575               	andwf	___flge@ff2+1,w
 11218  1EC5  00F9               	movwf	??___flge+1
 11219  1EC6  3080               	movlw	128
 11220  1EC7  0576               	andwf	___flge@ff2+2,w
 11221  1EC8  00FA               	movwf	??___flge+2
 11222  1EC9  307F               	movlw	127
 11223  1ECA  0577               	andwf	___flge@ff2+3,w
 11224  1ECB  00FB               	movwf	??___flge+3
 11225  1ECC  087B               	movf	??___flge+3,w
 11226  1ECD  047A               	iorwf	??___flge+2,w
 11227  1ECE  0479               	iorwf	??___flge+1,w
 11228  1ECF  0478               	iorwf	??___flge,w
 11229  1ED0  1D03               	skipz
 11230  1ED1  2ED3               	goto	u491_21
 11231  1ED2  2ED4               	goto	u491_20
 11232  1ED3                     u491_21:
 11233  1ED3  2EDC               	goto	i1l3272
 11234  1ED4                     u491_20:
 11235  1ED4                     i1l3270:
 11236  1ED4  3000               	movlw	0
 11237  1ED5  00F7               	movwf	___flge@ff2+3
 11238  1ED6  3000               	movlw	0
 11239  1ED7  00F6               	movwf	___flge@ff2+2
 11240  1ED8  3000               	movlw	0
 11241  1ED9  00F5               	movwf	___flge@ff2+1
 11242  1EDA  3000               	movlw	0
 11243  1EDB  00F4               	movwf	___flge@ff2
 11244  1EDC                     i1l3272:
 11245  1EDC  1FF3               	btfss	___flge@ff1+3,7
 11246  1EDD  2EDF               	goto	u492_21
 11247  1EDE  2EE0               	goto	u492_20
 11248  1EDF                     u492_21:
 11249  1EDF  2F04               	goto	i1l3276
 11250  1EE0                     u492_20:
 11251  1EE0                     i1l3274:
 11252  1EE0  3000               	movlw	0
 11253  1EE1  00F8               	movwf	??___flge
 11254  1EE2  3000               	movlw	0
 11255  1EE3  00F9               	movwf	??___flge+1
 11256  1EE4  3000               	movlw	0
 11257  1EE5  00FA               	movwf	??___flge+2
 11258  1EE6  3080               	movlw	128
 11259  1EE7  00FB               	movwf	??___flge+3
 11260  1EE8  0870               	movf	___flge@ff1,w
 11261  1EE9  02F8               	subwf	??___flge,f
 11262  1EEA  0871               	movf	___flge@ff1+1,w
 11263  1EEB  1C03               	skipc
 11264  1EEC  0F71               	incfsz	___flge@ff1+1,w
 11265  1EED  2EEF               	goto	u493_21
 11266  1EEE  2EF0               	goto	u493_22
 11267  1EEF                     u493_21:
 11268  1EEF  02F9               	subwf	??___flge+1,f
 11269  1EF0                     u493_22:
 11270  1EF0  0872               	movf	___flge@ff1+2,w
 11271  1EF1  1C03               	skipc
 11272  1EF2  0F72               	incfsz	___flge@ff1+2,w
 11273  1EF3  2EF5               	goto	u493_23
 11274  1EF4  2EF6               	goto	u493_24
 11275  1EF5                     u493_23:
 11276  1EF5  02FA               	subwf	??___flge+2,f
 11277  1EF6                     u493_24:
 11278  1EF6  0873               	movf	___flge@ff1+3,w
 11279  1EF7  1C03               	skipc
 11280  1EF8  0F73               	incfsz	___flge@ff1+3,w
 11281  1EF9  2EFB               	goto	u493_25
 11282  1EFA  2EFC               	goto	u493_26
 11283  1EFB                     u493_25:
 11284  1EFB  02FB               	subwf	??___flge+3,f
 11285  1EFC                     u493_26:
 11286  1EFC  087B               	movf	??___flge+3,w
 11287  1EFD  00F3               	movwf	___flge@ff1+3
 11288  1EFE  087A               	movf	??___flge+2,w
 11289  1EFF  00F2               	movwf	___flge@ff1+2
 11290  1F00  0879               	movf	??___flge+1,w
 11291  1F01  00F1               	movwf	___flge@ff1+1
 11292  1F02  0878               	movf	??___flge,w
 11293  1F03  00F0               	movwf	___flge@ff1
 11294  1F04                     i1l3276:
 11295  1F04  1FF7               	btfss	___flge@ff2+3,7
 11296  1F05  2F07               	goto	u494_21
 11297  1F06  2F08               	goto	u494_20
 11298  1F07                     u494_21:
 11299  1F07  2F2C               	goto	i1l559
 11300  1F08                     u494_20:
 11301  1F08                     i1l3278:
 11302  1F08  3000               	movlw	0
 11303  1F09  00F8               	movwf	??___flge
 11304  1F0A  3000               	movlw	0
 11305  1F0B  00F9               	movwf	??___flge+1
 11306  1F0C  3000               	movlw	0
 11307  1F0D  00FA               	movwf	??___flge+2
 11308  1F0E  3080               	movlw	128
 11309  1F0F  00FB               	movwf	??___flge+3
 11310  1F10  0874               	movf	___flge@ff2,w
 11311  1F11  02F8               	subwf	??___flge,f
 11312  1F12  0875               	movf	___flge@ff2+1,w
 11313  1F13  1C03               	skipc
 11314  1F14  0F75               	incfsz	___flge@ff2+1,w
 11315  1F15  2F17               	goto	u495_21
 11316  1F16  2F18               	goto	u495_22
 11317  1F17                     u495_21:
 11318  1F17  02F9               	subwf	??___flge+1,f
 11319  1F18                     u495_22:
 11320  1F18  0876               	movf	___flge@ff2+2,w
 11321  1F19  1C03               	skipc
 11322  1F1A  0F76               	incfsz	___flge@ff2+2,w
 11323  1F1B  2F1D               	goto	u495_23
 11324  1F1C  2F1E               	goto	u495_24
 11325  1F1D                     u495_23:
 11326  1F1D  02FA               	subwf	??___flge+2,f
 11327  1F1E                     u495_24:
 11328  1F1E  0877               	movf	___flge@ff2+3,w
 11329  1F1F  1C03               	skipc
 11330  1F20  0F77               	incfsz	___flge@ff2+3,w
 11331  1F21  2F23               	goto	u495_25
 11332  1F22  2F24               	goto	u495_26
 11333  1F23                     u495_25:
 11334  1F23  02FB               	subwf	??___flge+3,f
 11335  1F24                     u495_26:
 11336  1F24  087B               	movf	??___flge+3,w
 11337  1F25  00F7               	movwf	___flge@ff2+3
 11338  1F26  087A               	movf	??___flge+2,w
 11339  1F27  00F6               	movwf	___flge@ff2+2
 11340  1F28  0879               	movf	??___flge+1,w
 11341  1F29  00F5               	movwf	___flge@ff2+1
 11342  1F2A  0878               	movf	??___flge,w
 11343  1F2B  00F4               	movwf	___flge@ff2
 11344  1F2C                     i1l559:
 11345  1F2C  3080               	movlw	128
 11346  1F2D  06F3               	xorwf	___flge@ff1+3,f
 11347  1F2E  3080               	movlw	128
 11348  1F2F  06F7               	xorwf	___flge@ff2+3,f
 11349  1F30  0877               	movf	___flge@ff2+3,w
 11350  1F31  0273               	subwf	___flge@ff1+3,w
 11351  1F32  1D03               	skipz
 11352  1F33  2F3E               	goto	u496_25
 11353  1F34  0876               	movf	___flge@ff2+2,w
 11354  1F35  0272               	subwf	___flge@ff1+2,w
 11355  1F36  1D03               	skipz
 11356  1F37  2F3E               	goto	u496_25
 11357  1F38  0875               	movf	___flge@ff2+1,w
 11358  1F39  0271               	subwf	___flge@ff1+1,w
 11359  1F3A  1D03               	skipz
 11360  1F3B  2F3E               	goto	u496_25
 11361  1F3C  0874               	movf	___flge@ff2,w
 11362  1F3D  0270               	subwf	___flge@ff1,w
 11363  1F3E                     u496_25:
 11364  1F3E  1803               	skipnc
 11365  1F3F  2F41               	goto	u496_21
 11366  1F40  2F42               	goto	u496_20
 11367  1F41                     u496_21:
 11368  1F41  2F44               	goto	i1l3282
 11369  1F42                     u496_20:
 11370  1F42                     i1l3280:
 11371  1F42  1003               	clrc
 11372  1F43  2F45               	goto	i1l560
 11373  1F44                     i1l3282:
 11374  1F44  1403               	setc
 11375  1F45                     i1l560:
 11376  1F45  0008               	return
 11377  1F46                     __end_of___flge:
 11378                           
 11379                           	psect	text38
 11380  1B10                     __ptext38:	
 11381 ;; *************** function ___fleq *****************
 11382 ;; Defined at:
 11383 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
 11384 ;; Parameters:    Size  Location     Type
 11385 ;;  ff1             4    0[COMMON] unsigned char 
 11386 ;;  ff2             4    4[COMMON] unsigned char 
 11387 ;; Auto vars:     Size  Location     Type
 11388 ;;		None
 11389 ;; Return value:  Size  Location     Type
 11390 ;;		None               void
 11391 ;; Registers used:
 11392 ;;		wreg, status,2, status,0
 11393 ;; Tracked objects:
 11394 ;;		On entry : 0/0
 11395 ;;		On exit  : 0/0
 11396 ;;		Unchanged: 0/0
 11397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11398 ;;      Params:         8       0       0       0       0
 11399 ;;      Locals:         0       0       0       0       0
 11400 ;;      Temps:          4       0       0       0       0
 11401 ;;      Totals:        12       0       0       0       0
 11402 ;;Total ram usage:       12 bytes
 11403 ;; Hardware stack levels used:    1
 11404 ;; This function calls:
 11405 ;;		Nothing
 11406 ;; This function is called by:
 11407 ;;		_sprintf
 11408 ;; This function uses a non-reentrant model
 11409 ;;
 11410                           
 11411                           
 11412                           ;psect for function ___fleq
 11413  1B10                     ___fleq:
 11414  1B10                     i1l3254:	
 11415                           ;incstack = 0
 11416                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 11417                           
 11418  1B10  3000               	movlw	0
 11419  1B11  0570               	andwf	___fleq@ff1,w
 11420  1B12  00F8               	movwf	??___fleq
 11421  1B13  3000               	movlw	0
 11422  1B14  0571               	andwf	___fleq@ff1+1,w
 11423  1B15  00F9               	movwf	??___fleq+1
 11424  1B16  3080               	movlw	128
 11425  1B17  0572               	andwf	___fleq@ff1+2,w
 11426  1B18  00FA               	movwf	??___fleq+2
 11427  1B19  307F               	movlw	127
 11428  1B1A  0573               	andwf	___fleq@ff1+3,w
 11429  1B1B  00FB               	movwf	??___fleq+3
 11430  1B1C  087B               	movf	??___fleq+3,w
 11431  1B1D  047A               	iorwf	??___fleq+2,w
 11432  1B1E  0479               	iorwf	??___fleq+1,w
 11433  1B1F  0478               	iorwf	??___fleq,w
 11434  1B20  1D03               	skipz
 11435  1B21  2B23               	goto	u487_21
 11436  1B22  2B24               	goto	u487_20
 11437  1B23                     u487_21:
 11438  1B23  2B2C               	goto	i1l551
 11439  1B24                     u487_20:
 11440  1B24                     i1l3256:
 11441  1B24  3000               	movlw	0
 11442  1B25  00F3               	movwf	___fleq@ff1+3
 11443  1B26  3000               	movlw	0
 11444  1B27  00F2               	movwf	___fleq@ff1+2
 11445  1B28  3000               	movlw	0
 11446  1B29  00F1               	movwf	___fleq@ff1+1
 11447  1B2A  3000               	movlw	0
 11448  1B2B  00F0               	movwf	___fleq@ff1
 11449  1B2C                     i1l551:
 11450  1B2C  3000               	movlw	0
 11451  1B2D  0574               	andwf	___fleq@ff2,w
 11452  1B2E  00F8               	movwf	??___fleq
 11453  1B2F  3000               	movlw	0
 11454  1B30  0575               	andwf	___fleq@ff2+1,w
 11455  1B31  00F9               	movwf	??___fleq+1
 11456  1B32  3080               	movlw	128
 11457  1B33  0576               	andwf	___fleq@ff2+2,w
 11458  1B34  00FA               	movwf	??___fleq+2
 11459  1B35  307F               	movlw	127
 11460  1B36  0577               	andwf	___fleq@ff2+3,w
 11461  1B37  00FB               	movwf	??___fleq+3
 11462  1B38  087B               	movf	??___fleq+3,w
 11463  1B39  047A               	iorwf	??___fleq+2,w
 11464  1B3A  0479               	iorwf	??___fleq+1,w
 11465  1B3B  0478               	iorwf	??___fleq,w
 11466  1B3C  1D03               	skipz
 11467  1B3D  2B3F               	goto	u488_21
 11468  1B3E  2B40               	goto	u488_20
 11469  1B3F                     u488_21:
 11470  1B3F  2B48               	goto	i1l552
 11471  1B40                     u488_20:
 11472  1B40                     i1l3258:
 11473  1B40  3000               	movlw	0
 11474  1B41  00F7               	movwf	___fleq@ff2+3
 11475  1B42  3000               	movlw	0
 11476  1B43  00F6               	movwf	___fleq@ff2+2
 11477  1B44  3000               	movlw	0
 11478  1B45  00F5               	movwf	___fleq@ff2+1
 11479  1B46  3000               	movlw	0
 11480  1B47  00F4               	movwf	___fleq@ff2
 11481  1B48                     i1l552:
 11482  1B48  0877               	movf	___fleq@ff2+3,w
 11483  1B49  0673               	xorwf	___fleq@ff1+3,w
 11484  1B4A  1D03               	skipz
 11485  1B4B  2B56               	goto	u489_25
 11486  1B4C  0876               	movf	___fleq@ff2+2,w
 11487  1B4D  0672               	xorwf	___fleq@ff1+2,w
 11488  1B4E  1D03               	skipz
 11489  1B4F  2B56               	goto	u489_25
 11490  1B50  0875               	movf	___fleq@ff2+1,w
 11491  1B51  0671               	xorwf	___fleq@ff1+1,w
 11492  1B52  1D03               	skipz
 11493  1B53  2B56               	goto	u489_25
 11494  1B54  0874               	movf	___fleq@ff2,w
 11495  1B55  0670               	xorwf	___fleq@ff1,w
 11496  1B56                     u489_25:
 11497  1B56  1903               	skipnz
 11498  1B57  2B59               	goto	u489_21
 11499  1B58  2B5A               	goto	u489_20
 11500  1B59                     u489_21:
 11501  1B59  2B5C               	goto	i1l3262
 11502  1B5A                     u489_20:
 11503  1B5A                     i1l3260:
 11504  1B5A  1003               	clrc
 11505  1B5B  2B5D               	goto	i1l553
 11506  1B5C                     i1l3262:
 11507  1B5C  1403               	setc
 11508  1B5D                     i1l553:
 11509  1B5D  0008               	return
 11510  1B5E                     __end_of___fleq:
 11511                           
 11512                           	psect	text39
 11513  1190                     __ptext39:	
 11514 ;; *************** function ___fldiv *****************
 11515 ;; Defined at:
 11516 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
 11517 ;; Parameters:    Size  Location     Type
 11518 ;;  a               4   30[BANK0 ] unsigned char 
 11519 ;;  b               4   34[BANK0 ] unsigned char 
 11520 ;; Auto vars:     Size  Location     Type
 11521 ;;  grs             4   50[BANK0 ] unsigned long 
 11522 ;;  rem             4   43[BANK0 ] unsigned long 
 11523 ;;  new_exp         2   48[BANK0 ] int 
 11524 ;;  aexp            1   55[BANK0 ] unsigned char 
 11525 ;;  bexp            1   54[BANK0 ] unsigned char 
 11526 ;;  sign            1   47[BANK0 ] unsigned char 
 11527 ;; Return value:  Size  Location     Type
 11528 ;;                  4   30[BANK0 ] unsigned char 
 11529 ;; Registers used:
 11530 ;;		wreg, status,2, status,0, btemp+1
 11531 ;; Tracked objects:
 11532 ;;		On entry : 0/0
 11533 ;;		On exit  : 0/0
 11534 ;;		Unchanged: 0/0
 11535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11536 ;;      Params:         0       8       0       0       0
 11537 ;;      Locals:         0      13       0       0       0
 11538 ;;      Temps:          0       5       0       0       0
 11539 ;;      Totals:         0      26       0       0       0
 11540 ;;Total ram usage:       26 bytes
 11541 ;; Hardware stack levels used:    1
 11542 ;; This function calls:
 11543 ;;		Nothing
 11544 ;; This function is called by:
 11545 ;;		_oli
 11546 ;; This function uses a non-reentrant model
 11547 ;;
 11548                           
 11549                           
 11550                           ;psect for function ___fldiv
 11551  1190                     ___fldiv:
 11552  1190                     i1l3774:	
 11553                           ;incstack = 0
 11554                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
 11555                           
 11556  1190  1283               	bcf	3,5	;RP0=0, select bank0
 11557  1191  1303               	bcf	3,6	;RP1=0, select bank0
 11558  1192  0845               	movf	___fldiv@b+3,w
 11559  1193  3980               	andlw	128
 11560  1194  00C6               	movwf	??___fldiv
 11561  1195  0846               	movf	??___fldiv,w
 11562  1196  00CF               	movwf	___fldiv@sign
 11563  1197                     i1l3776:
 11564  1197  0845               	movf	___fldiv@b+3,w
 11565  1198  00C6               	movwf	??___fldiv
 11566  1199  0746               	addwf	??___fldiv,w
 11567  119A  00C7               	movwf	??___fldiv+1
 11568  119B  0847               	movf	??___fldiv+1,w
 11569  119C  00D6               	movwf	___fldiv@bexp
 11570  119D                     i1l3778:
 11571  119D  1FC4               	btfss	___fldiv@b+2,7
 11572  119E  29A0               	goto	u569_21
 11573  119F  29A1               	goto	u569_20
 11574  11A0                     u569_21:
 11575  11A0  29A2               	goto	i1l3782
 11576  11A1                     u569_20:
 11577  11A1                     i1l3780:
 11578  11A1  1456               	bsf	___fldiv@bexp,0
 11579  11A2                     i1l3782:
 11580  11A2  0856               	movf	___fldiv@bexp,w
 11581  11A3  1903               	btfsc	3,2
 11582  11A4  29A6               	goto	u570_21
 11583  11A5  29A7               	goto	u570_20
 11584  11A6                     u570_21:
 11585  11A6  29B7               	goto	i1l3792
 11586  11A7                     u570_20:
 11587  11A7                     i1l3784:
 11588  11A7  0A56               	incf	___fldiv@bexp,w
 11589  11A8  1D03               	btfss	3,2
 11590  11A9  29AB               	goto	u571_21
 11591  11AA  29AC               	goto	u571_20
 11592  11AB                     u571_21:
 11593  11AB  29B4               	goto	i1l3788
 11594  11AC                     u571_20:
 11595  11AC                     i1l3786:
 11596  11AC  3000               	movlw	0
 11597  11AD  00C5               	movwf	___fldiv@b+3
 11598  11AE  3000               	movlw	0
 11599  11AF  00C4               	movwf	___fldiv@b+2
 11600  11B0  3000               	movlw	0
 11601  11B1  00C3               	movwf	___fldiv@b+1
 11602  11B2  3000               	movlw	0
 11603  11B3  00C2               	movwf	___fldiv@b
 11604  11B4                     i1l3788:
 11605  11B4  17C4               	bsf	___fldiv@b+2,7
 11606  11B5                     i1l3790:
 11607  11B5  01C5               	clrf	___fldiv@b+3
 11608  11B6  29BF               	goto	i1l3794
 11609  11B7                     i1l3792:
 11610  11B7  3000               	movlw	0
 11611  11B8  00C5               	movwf	___fldiv@b+3
 11612  11B9  3000               	movlw	0
 11613  11BA  00C4               	movwf	___fldiv@b+2
 11614  11BB  3000               	movlw	0
 11615  11BC  00C3               	movwf	___fldiv@b+1
 11616  11BD  3000               	movlw	0
 11617  11BE  00C2               	movwf	___fldiv@b
 11618  11BF                     i1l3794:
 11619  11BF  0841               	movf	___fldiv@a+3,w
 11620  11C0  3980               	andlw	128
 11621  11C1  00C6               	movwf	??___fldiv
 11622  11C2  0846               	movf	??___fldiv,w
 11623  11C3  06CF               	xorwf	___fldiv@sign,f
 11624  11C4                     i1l3796:
 11625  11C4  0841               	movf	___fldiv@a+3,w
 11626  11C5  00C6               	movwf	??___fldiv
 11627  11C6  0746               	addwf	??___fldiv,w
 11628  11C7  00C7               	movwf	??___fldiv+1
 11629  11C8  0847               	movf	??___fldiv+1,w
 11630  11C9  00D7               	movwf	___fldiv@aexp
 11631  11CA                     i1l3798:
 11632  11CA  1FC0               	btfss	___fldiv@a+2,7
 11633  11CB  29CD               	goto	u572_21
 11634  11CC  29CE               	goto	u572_20
 11635  11CD                     u572_21:
 11636  11CD  29CF               	goto	i1l3802
 11637  11CE                     u572_20:
 11638  11CE                     i1l3800:
 11639  11CE  1457               	bsf	___fldiv@aexp,0
 11640  11CF                     i1l3802:
 11641  11CF  0857               	movf	___fldiv@aexp,w
 11642  11D0  1903               	btfsc	3,2
 11643  11D1  29D3               	goto	u573_21
 11644  11D2  29D4               	goto	u573_20
 11645  11D3                     u573_21:
 11646  11D3  29E4               	goto	i1l3812
 11647  11D4                     u573_20:
 11648  11D4                     i1l3804:
 11649  11D4  0A57               	incf	___fldiv@aexp,w
 11650  11D5  1D03               	btfss	3,2
 11651  11D6  29D8               	goto	u574_21
 11652  11D7  29D9               	goto	u574_20
 11653  11D8                     u574_21:
 11654  11D8  29E1               	goto	i1l3808
 11655  11D9                     u574_20:
 11656  11D9                     i1l3806:
 11657  11D9  3000               	movlw	0
 11658  11DA  00C1               	movwf	___fldiv@a+3
 11659  11DB  3000               	movlw	0
 11660  11DC  00C0               	movwf	___fldiv@a+2
 11661  11DD  3000               	movlw	0
 11662  11DE  00BF               	movwf	___fldiv@a+1
 11663  11DF  3000               	movlw	0
 11664  11E0  00BE               	movwf	___fldiv@a
 11665  11E1                     i1l3808:
 11666  11E1  17C0               	bsf	___fldiv@a+2,7
 11667  11E2                     i1l3810:
 11668  11E2  01C1               	clrf	___fldiv@a+3
 11669  11E3  29EC               	goto	i1l748
 11670  11E4                     i1l3812:
 11671  11E4  3000               	movlw	0
 11672  11E5  00C1               	movwf	___fldiv@a+3
 11673  11E6  3000               	movlw	0
 11674  11E7  00C0               	movwf	___fldiv@a+2
 11675  11E8  3000               	movlw	0
 11676  11E9  00BF               	movwf	___fldiv@a+1
 11677  11EA  3000               	movlw	0
 11678  11EB  00BE               	movwf	___fldiv@a
 11679  11EC                     i1l748:
 11680  11EC  0841               	movf	___fldiv@a+3,w
 11681  11ED  0440               	iorwf	___fldiv@a+2,w
 11682  11EE  043F               	iorwf	___fldiv@a+1,w
 11683  11EF  043E               	iorwf	___fldiv@a,w
 11684  11F0  1D03               	skipz
 11685  11F1  29F3               	goto	u575_21
 11686  11F2  29F4               	goto	u575_20
 11687  11F3                     u575_21:
 11688  11F3  2A0D               	goto	i1l3822
 11689  11F4                     u575_20:
 11690  11F4                     i1l3814:
 11691  11F4  3000               	movlw	0
 11692  11F5  00C5               	movwf	___fldiv@b+3
 11693  11F6  3000               	movlw	0
 11694  11F7  00C4               	movwf	___fldiv@b+2
 11695  11F8  3000               	movlw	0
 11696  11F9  00C3               	movwf	___fldiv@b+1
 11697  11FA  3000               	movlw	0
 11698  11FB  00C2               	movwf	___fldiv@b
 11699  11FC  3080               	movlw	128
 11700  11FD  04C4               	iorwf	___fldiv@b+2,f
 11701  11FE  307F               	movlw	127
 11702  11FF  04C5               	iorwf	___fldiv@b+3,f
 11703  1200                     i1l3816:
 11704  1200  084F               	movf	___fldiv@sign,w
 11705  1201  00C6               	movwf	??___fldiv
 11706  1202  0846               	movf	??___fldiv,w
 11707  1203  04C5               	iorwf	___fldiv@b+3,f
 11708  1204                     i1l3818:
 11709  1204  0845               	movf	___fldiv@b+3,w
 11710  1205  00C1               	movwf	?___fldiv+3
 11711  1206  0844               	movf	___fldiv@b+2,w
 11712  1207  00C0               	movwf	?___fldiv+2
 11713  1208  0843               	movf	___fldiv@b+1,w
 11714  1209  00BF               	movwf	?___fldiv+1
 11715  120A  0842               	movf	___fldiv@b,w
 11716  120B  00BE               	movwf	?___fldiv
 11717  120C  2B6C               	goto	i1l750
 11718  120D                     i1l3822:
 11719  120D  0856               	movf	___fldiv@bexp,w
 11720  120E  1D03               	btfss	3,2
 11721  120F  2A11               	goto	u576_21
 11722  1210  2A12               	goto	u576_20
 11723  1211                     u576_21:
 11724  1211  2A1B               	goto	i1l3828
 11725  1212                     u576_20:
 11726  1212                     i1l3824:
 11727  1212  3000               	movlw	0
 11728  1213  00C1               	movwf	?___fldiv+3
 11729  1214  3000               	movlw	0
 11730  1215  00C0               	movwf	?___fldiv+2
 11731  1216  3000               	movlw	0
 11732  1217  00BF               	movwf	?___fldiv+1
 11733  1218  3000               	movlw	0
 11734  1219  00BE               	movwf	?___fldiv
 11735  121A  2B6C               	goto	i1l750
 11736  121B                     i1l3828:
 11737  121B  0856               	movf	___fldiv@bexp,w
 11738  121C  00C6               	movwf	??___fldiv
 11739  121D  01C7               	clrf	??___fldiv+1
 11740  121E  0847               	movf	??___fldiv+1,w
 11741  121F  00C9               	movwf	??___fldiv+3
 11742  1220  0857               	movf	___fldiv@aexp,w
 11743  1221  0246               	subwf	??___fldiv,w
 11744  1222  00C8               	movwf	??___fldiv+2
 11745  1223  1C03               	skipc
 11746  1224  03C9               	decf	??___fldiv+3,f
 11747  1225  0848               	movf	??___fldiv+2,w
 11748  1226  3E7F               	addlw	127
 11749  1227  00D0               	movwf	___fldiv@new_exp
 11750  1228  0849               	movf	??___fldiv+3,w
 11751  1229  1803               	skipnc
 11752  122A  3E01               	addlw	1
 11753  122B  3E00               	addlw	0
 11754  122C  00D1               	movwf	___fldiv@new_exp+1
 11755  122D                     i1l3830:
 11756  122D  0845               	movf	___fldiv@b+3,w
 11757  122E  00CE               	movwf	___fldiv@rem+3
 11758  122F  0844               	movf	___fldiv@b+2,w
 11759  1230  00CD               	movwf	___fldiv@rem+2
 11760  1231  0843               	movf	___fldiv@b+1,w
 11761  1232  00CC               	movwf	___fldiv@rem+1
 11762  1233  0842               	movf	___fldiv@b,w
 11763  1234  00CB               	movwf	___fldiv@rem
 11764  1235                     i1l3832:
 11765  1235  3000               	movlw	0
 11766  1236  00C5               	movwf	___fldiv@b+3
 11767  1237  3000               	movlw	0
 11768  1238  00C4               	movwf	___fldiv@b+2
 11769  1239  3000               	movlw	0
 11770  123A  00C3               	movwf	___fldiv@b+1
 11771  123B  3000               	movlw	0
 11772  123C  00C2               	movwf	___fldiv@b
 11773  123D                     i1l3834:
 11774  123D  3000               	movlw	0
 11775  123E  00D5               	movwf	___fldiv@grs+3
 11776  123F  3000               	movlw	0
 11777  1240  00D4               	movwf	___fldiv@grs+2
 11778  1241  3000               	movlw	0
 11779  1242  00D3               	movwf	___fldiv@grs+1
 11780  1243  3000               	movlw	0
 11781  1244  00D2               	movwf	___fldiv@grs
 11782  1245                     i1l3836:
 11783  1245  01D7               	clrf	___fldiv@aexp
 11784  1246  2A91               	goto	i1l3856
 11785  1247                     i1l3838:
 11786  1247  0857               	movf	___fldiv@aexp,w
 11787  1248  1903               	btfsc	3,2
 11788  1249  2A4B               	goto	u577_21
 11789  124A  2A4C               	goto	u577_20
 11790  124B                     u577_21:
 11791  124B  2A6C               	goto	i1l3848
 11792  124C                     u577_20:
 11793  124C                     i1l3840:
 11794  124C  3001               	movlw	1
 11795  124D  00C6               	movwf	??___fldiv
 11796  124E                     u578_25:
 11797  124E  1003               	clrc
 11798  124F  0DCB               	rlf	___fldiv@rem,f
 11799  1250  0DCC               	rlf	___fldiv@rem+1,f
 11800  1251  0DCD               	rlf	___fldiv@rem+2,f
 11801  1252  0DCE               	rlf	___fldiv@rem+3,f
 11802  1253  0BC6               	decfsz	??___fldiv,f
 11803  1254  2A4E               	goto	u578_25
 11804  1255  3001               	movlw	1
 11805  1256  00C6               	movwf	??___fldiv
 11806  1257                     u579_25:
 11807  1257  1003               	clrc
 11808  1258  0DC2               	rlf	___fldiv@b,f
 11809  1259  0DC3               	rlf	___fldiv@b+1,f
 11810  125A  0DC4               	rlf	___fldiv@b+2,f
 11811  125B  0DC5               	rlf	___fldiv@b+3,f
 11812  125C  0BC6               	decfsz	??___fldiv,f
 11813  125D  2A57               	goto	u579_25
 11814  125E                     i1l3842:
 11815  125E  1FD5               	btfss	___fldiv@grs+3,7
 11816  125F  2A61               	goto	u580_21
 11817  1260  2A62               	goto	u580_20
 11818  1261                     u580_21:
 11819  1261  2A63               	goto	i1l3846
 11820  1262                     u580_20:
 11821  1262                     i1l3844:
 11822  1262  1442               	bsf	___fldiv@b,0
 11823  1263                     i1l3846:
 11824  1263  3001               	movlw	1
 11825  1264  00C6               	movwf	??___fldiv
 11826  1265                     u581_25:
 11827  1265  1003               	clrc
 11828  1266  0DD2               	rlf	___fldiv@grs,f
 11829  1267  0DD3               	rlf	___fldiv@grs+1,f
 11830  1268  0DD4               	rlf	___fldiv@grs+2,f
 11831  1269  0DD5               	rlf	___fldiv@grs+3,f
 11832  126A  0BC6               	decfsz	??___fldiv,f
 11833  126B  2A65               	goto	u581_25
 11834  126C                     i1l3848:
 11835  126C  0841               	movf	___fldiv@a+3,w
 11836  126D  024E               	subwf	___fldiv@rem+3,w
 11837  126E  1D03               	skipz
 11838  126F  2A7A               	goto	u582_25
 11839  1270  0840               	movf	___fldiv@a+2,w
 11840  1271  024D               	subwf	___fldiv@rem+2,w
 11841  1272  1D03               	skipz
 11842  1273  2A7A               	goto	u582_25
 11843  1274  083F               	movf	___fldiv@a+1,w
 11844  1275  024C               	subwf	___fldiv@rem+1,w
 11845  1276  1D03               	skipz
 11846  1277  2A7A               	goto	u582_25
 11847  1278  083E               	movf	___fldiv@a,w
 11848  1279  024B               	subwf	___fldiv@rem,w
 11849  127A                     u582_25:
 11850  127A  1C03               	skipc
 11851  127B  2A7D               	goto	u582_21
 11852  127C  2A7E               	goto	u582_20
 11853  127D                     u582_21:
 11854  127D  2A8D               	goto	i1l3854
 11855  127E                     u582_20:
 11856  127E                     i1l3850:
 11857  127E  1755               	bsf	___fldiv@grs+3,6
 11858  127F                     i1l3852:
 11859  127F  083E               	movf	___fldiv@a,w
 11860  1280  02CB               	subwf	___fldiv@rem,f
 11861  1281  083F               	movf	___fldiv@a+1,w
 11862  1282  1C03               	skipc
 11863  1283  0F3F               	incfsz	___fldiv@a+1,w
 11864  1284  02CC               	subwf	___fldiv@rem+1,f
 11865  1285  0840               	movf	___fldiv@a+2,w
 11866  1286  1C03               	skipc
 11867  1287  0F40               	incfsz	___fldiv@a+2,w
 11868  1288  02CD               	subwf	___fldiv@rem+2,f
 11869  1289  0841               	movf	___fldiv@a+3,w
 11870  128A  1C03               	skipc
 11871  128B  0F41               	incfsz	___fldiv@a+3,w
 11872  128C  02CE               	subwf	___fldiv@rem+3,f
 11873  128D                     i1l3854:
 11874  128D  3001               	movlw	1
 11875  128E  00C6               	movwf	??___fldiv
 11876  128F  0846               	movf	??___fldiv,w
 11877  1290  07D7               	addwf	___fldiv@aexp,f
 11878  1291                     i1l3856:
 11879  1291  301A               	movlw	26
 11880  1292  0257               	subwf	___fldiv@aexp,w
 11881  1293  1C03               	skipc
 11882  1294  2A96               	goto	u583_21
 11883  1295  2A97               	goto	u583_20
 11884  1296                     u583_21:
 11885  1296  2A47               	goto	i1l3838
 11886  1297                     u583_20:
 11887  1297                     i1l3858:
 11888  1297  084E               	movf	___fldiv@rem+3,w
 11889  1298  044D               	iorwf	___fldiv@rem+2,w
 11890  1299  044C               	iorwf	___fldiv@rem+1,w
 11891  129A  044B               	iorwf	___fldiv@rem,w
 11892  129B  1903               	skipnz
 11893  129C  2A9E               	goto	u584_21
 11894  129D  2A9F               	goto	u584_20
 11895  129E                     u584_21:
 11896  129E  2ABE               	goto	i1l3872
 11897  129F                     u584_20:
 11898  129F                     i1l3860:
 11899  129F  1452               	bsf	___fldiv@grs,0
 11900  12A0  2ABE               	goto	i1l3872
 11901  12A1                     i1l3862:
 11902  12A1  3001               	movlw	1
 11903  12A2  00C6               	movwf	??___fldiv
 11904  12A3                     u585_25:
 11905  12A3  1003               	clrc
 11906  12A4  0DC2               	rlf	___fldiv@b,f
 11907  12A5  0DC3               	rlf	___fldiv@b+1,f
 11908  12A6  0DC4               	rlf	___fldiv@b+2,f
 11909  12A7  0DC5               	rlf	___fldiv@b+3,f
 11910  12A8  0BC6               	decfsz	??___fldiv,f
 11911  12A9  2AA3               	goto	u585_25
 11912  12AA                     i1l3864:
 11913  12AA  1FD5               	btfss	___fldiv@grs+3,7
 11914  12AB  2AAD               	goto	u586_21
 11915  12AC  2AAE               	goto	u586_20
 11916  12AD                     u586_21:
 11917  12AD  2AAF               	goto	i1l3868
 11918  12AE                     u586_20:
 11919  12AE                     i1l3866:
 11920  12AE  1442               	bsf	___fldiv@b,0
 11921  12AF                     i1l3868:
 11922  12AF  3001               	movlw	1
 11923  12B0  00C6               	movwf	??___fldiv
 11924  12B1                     u587_25:
 11925  12B1  1003               	clrc
 11926  12B2  0DD2               	rlf	___fldiv@grs,f
 11927  12B3  0DD3               	rlf	___fldiv@grs+1,f
 11928  12B4  0DD4               	rlf	___fldiv@grs+2,f
 11929  12B5  0DD5               	rlf	___fldiv@grs+3,f
 11930  12B6  0BC6               	decfsz	??___fldiv,f
 11931  12B7  2AB1               	goto	u587_25
 11932  12B8                     i1l3870:
 11933  12B8  30FF               	movlw	255
 11934  12B9  07D0               	addwf	___fldiv@new_exp,f
 11935  12BA  1803               	skipnc
 11936  12BB  0AD1               	incf	___fldiv@new_exp+1,f
 11937  12BC  30FF               	movlw	255
 11938  12BD  07D1               	addwf	___fldiv@new_exp+1,f
 11939  12BE                     i1l3872:
 11940  12BE  1FC4               	btfss	___fldiv@b+2,7
 11941  12BF  2AC1               	goto	u588_21
 11942  12C0  2AC2               	goto	u588_20
 11943  12C1                     u588_21:
 11944  12C1  2AA1               	goto	i1l3862
 11945  12C2                     u588_20:
 11946  12C2                     i1l3874:
 11947  12C2  01D7               	clrf	___fldiv@aexp
 11948  12C3                     i1l3876:
 11949  12C3  1FD5               	btfss	___fldiv@grs+3,7
 11950  12C4  2AC6               	goto	u589_21
 11951  12C5  2AC7               	goto	u589_20
 11952  12C6                     u589_21:
 11953  12C6  2AE3               	goto	i1l3884
 11954  12C7                     u589_20:
 11955  12C7                     i1l3878:
 11956  12C7  30FF               	movlw	255
 11957  12C8  0552               	andwf	___fldiv@grs,w
 11958  12C9  00C6               	movwf	??___fldiv
 11959  12CA  30FF               	movlw	255
 11960  12CB  0553               	andwf	___fldiv@grs+1,w
 11961  12CC  00C7               	movwf	??___fldiv+1
 11962  12CD  30FF               	movlw	255
 11963  12CE  0554               	andwf	___fldiv@grs+2,w
 11964  12CF  00C8               	movwf	??___fldiv+2
 11965  12D0  307F               	movlw	127
 11966  12D1  0555               	andwf	___fldiv@grs+3,w
 11967  12D2  00C9               	movwf	??___fldiv+3
 11968  12D3  0849               	movf	??___fldiv+3,w
 11969  12D4  0448               	iorwf	??___fldiv+2,w
 11970  12D5  0447               	iorwf	??___fldiv+1,w
 11971  12D6  0446               	iorwf	??___fldiv,w
 11972  12D7  1903               	skipnz
 11973  12D8  2ADA               	goto	u590_21
 11974  12D9  2ADB               	goto	u590_20
 11975  12DA                     u590_21:
 11976  12DA  2ADE               	goto	i1l764
 11977  12DB                     u590_20:
 11978  12DB                     i1l3880:
 11979  12DB  01D7               	clrf	___fldiv@aexp
 11980  12DC  0AD7               	incf	___fldiv@aexp,f
 11981  12DD  2AE3               	goto	i1l3884
 11982  12DE                     i1l764:
 11983  12DE  1C42               	btfss	___fldiv@b,0
 11984  12DF  2AE1               	goto	u591_21
 11985  12E0  2AE2               	goto	u591_20
 11986  12E1                     u591_21:
 11987  12E1  2AE3               	goto	i1l3884
 11988  12E2                     u591_20:
 11989  12E2  2ADB               	goto	i1l3880
 11990  12E3                     i1l3884:
 11991  12E3  0857               	movf	___fldiv@aexp,w
 11992  12E4  1903               	btfsc	3,2
 11993  12E5  2AE7               	goto	u592_21
 11994  12E6  2AE8               	goto	u592_20
 11995  12E7                     u592_21:
 11996  12E7  2B19               	goto	i1l3894
 11997  12E8                     u592_20:
 11998  12E8                     i1l3886:
 11999  12E8  3001               	movlw	1
 12000  12E9  07C2               	addwf	___fldiv@b,f
 12001  12EA  3000               	movlw	0
 12002  12EB  1803               	skipnc
 12003  12EC  3001               	movlw	1
 12004  12ED  07C3               	addwf	___fldiv@b+1,f
 12005  12EE  3000               	movlw	0
 12006  12EF  1803               	skipnc
 12007  12F0  3001               	movlw	1
 12008  12F1  07C4               	addwf	___fldiv@b+2,f
 12009  12F2  3000               	movlw	0
 12010  12F3  1803               	skipnc
 12011  12F4  3001               	movlw	1
 12012  12F5  07C5               	addwf	___fldiv@b+3,f
 12013  12F6                     i1l3888:
 12014  12F6  1C45               	btfss	___fldiv@b+3,0
 12015  12F7  2AF9               	goto	u593_21
 12016  12F8  2AFA               	goto	u593_20
 12017  12F9                     u593_21:
 12018  12F9  2B19               	goto	i1l3894
 12019  12FA                     u593_20:
 12020  12FA                     i1l3890:
 12021  12FA  0842               	movf	___fldiv@b,w
 12022  12FB  00C6               	movwf	??___fldiv
 12023  12FC  0843               	movf	___fldiv@b+1,w
 12024  12FD  00C7               	movwf	??___fldiv+1
 12025  12FE  0844               	movf	___fldiv@b+2,w
 12026  12FF  00C8               	movwf	??___fldiv+2
 12027  1300  0845               	movf	___fldiv@b+3,w
 12028  1301  00C9               	movwf	??___fldiv+3
 12029  1302  3001               	movlw	1
 12030  1303  00CA               	movwf	??___fldiv+4
 12031  1304                     u594_25:
 12032  1304  0D49               	rlf	??___fldiv+3,w
 12033  1305  0CC9               	rrf	??___fldiv+3,f
 12034  1306  0CC8               	rrf	??___fldiv+2,f
 12035  1307  0CC7               	rrf	??___fldiv+1,f
 12036  1308  0CC6               	rrf	??___fldiv,f
 12037  1309                     u594_20:
 12038  1309  0BCA               	decfsz	??___fldiv+4,f
 12039  130A  2B04               	goto	u594_25
 12040  130B  0849               	movf	??___fldiv+3,w
 12041  130C  00C5               	movwf	___fldiv@b+3
 12042  130D  0848               	movf	??___fldiv+2,w
 12043  130E  00C4               	movwf	___fldiv@b+2
 12044  130F  0847               	movf	??___fldiv+1,w
 12045  1310  00C3               	movwf	___fldiv@b+1
 12046  1311  0846               	movf	??___fldiv,w
 12047  1312  00C2               	movwf	___fldiv@b
 12048  1313                     i1l3892:
 12049  1313  3001               	movlw	1
 12050  1314  07D0               	addwf	___fldiv@new_exp,f
 12051  1315  1803               	skipnc
 12052  1316  0AD1               	incf	___fldiv@new_exp+1,f
 12053  1317  3000               	movlw	0
 12054  1318  07D1               	addwf	___fldiv@new_exp+1,f
 12055  1319                     i1l3894:
 12056  1319  0851               	movf	___fldiv@new_exp+1,w
 12057  131A  3A80               	xorlw	128
 12058  131B  00FF               	movwf	btemp+1
 12059  131C  3080               	movlw	128
 12060  131D  027F               	subwf	btemp+1,w
 12061  131E  1D03               	skipz
 12062  131F  2B22               	goto	u595_25
 12063  1320  30FF               	movlw	255
 12064  1321  0250               	subwf	___fldiv@new_exp,w
 12065  1322                     u595_25:
 12066  1322  1C03               	skipc
 12067  1323  2B25               	goto	u595_21
 12068  1324  2B26               	goto	u595_20
 12069  1325                     u595_21:
 12070  1325  2B34               	goto	i1l3898
 12071  1326                     u595_20:
 12072  1326                     i1l3896:
 12073  1326  30FF               	movlw	255
 12074  1327  1283               	bcf	3,5	;RP0=0, select bank0
 12075  1328  1303               	bcf	3,6	;RP1=0, select bank0
 12076  1329  00D0               	movwf	___fldiv@new_exp
 12077  132A  3000               	movlw	0
 12078  132B  00D1               	movwf	___fldiv@new_exp+1
 12079  132C  3000               	movlw	0
 12080  132D  00C5               	movwf	___fldiv@b+3
 12081  132E  3000               	movlw	0
 12082  132F  00C4               	movwf	___fldiv@b+2
 12083  1330  3000               	movlw	0
 12084  1331  00C3               	movwf	___fldiv@b+1
 12085  1332  3000               	movlw	0
 12086  1333  00C2               	movwf	___fldiv@b
 12087  1334                     i1l3898:
 12088  1334  1283               	bcf	3,5	;RP0=0, select bank0
 12089  1335  1303               	bcf	3,6	;RP1=0, select bank0
 12090  1336  0851               	movf	___fldiv@new_exp+1,w
 12091  1337  3A80               	xorlw	128
 12092  1338  00FF               	movwf	btemp+1
 12093  1339  3080               	movlw	128
 12094  133A  027F               	subwf	btemp+1,w
 12095  133B  1D03               	skipz
 12096  133C  2B3F               	goto	u596_25
 12097  133D  3001               	movlw	1
 12098  133E  0250               	subwf	___fldiv@new_exp,w
 12099  133F                     u596_25:
 12100  133F  1803               	skipnc
 12101  1340  2B42               	goto	u596_21
 12102  1341  2B43               	goto	u596_20
 12103  1342                     u596_21:
 12104  1342  2B50               	goto	i1l770
 12105  1343                     u596_20:
 12106  1343                     i1l3900:
 12107  1343  1283               	bcf	3,5	;RP0=0, select bank0
 12108  1344  1303               	bcf	3,6	;RP1=0, select bank0
 12109  1345  01D0               	clrf	___fldiv@new_exp
 12110  1346  01D1               	clrf	___fldiv@new_exp+1
 12111  1347                     i1l3902:
 12112  1347  3000               	movlw	0
 12113  1348  00C5               	movwf	___fldiv@b+3
 12114  1349  3000               	movlw	0
 12115  134A  00C4               	movwf	___fldiv@b+2
 12116  134B  3000               	movlw	0
 12117  134C  00C3               	movwf	___fldiv@b+1
 12118  134D  3000               	movlw	0
 12119  134E  00C2               	movwf	___fldiv@b
 12120  134F                     i1l3904:
 12121  134F  01CF               	clrf	___fldiv@sign
 12122  1350                     i1l770:
 12123  1350  1283               	bcf	3,5	;RP0=0, select bank0
 12124  1351  1303               	bcf	3,6	;RP1=0, select bank0
 12125  1352  0850               	movf	___fldiv@new_exp,w
 12126  1353  00C6               	movwf	??___fldiv
 12127  1354  0846               	movf	??___fldiv,w
 12128  1355  00D6               	movwf	___fldiv@bexp
 12129  1356                     i1l3906:
 12130  1356  1C56               	btfss	___fldiv@bexp,0
 12131  1357  2B59               	goto	u597_21
 12132  1358  2B5A               	goto	u597_20
 12133  1359                     u597_21:
 12134  1359  2B5C               	goto	i1l3910
 12135  135A                     u597_20:
 12136  135A                     i1l3908:
 12137  135A  17C4               	bsf	___fldiv@b+2,7
 12138  135B  2B60               	goto	i1l772
 12139  135C                     i1l3910:
 12140  135C  307F               	movlw	127
 12141  135D  00C6               	movwf	??___fldiv
 12142  135E  0846               	movf	??___fldiv,w
 12143  135F  05C4               	andwf	___fldiv@b+2,f
 12144  1360                     i1l772:
 12145  1360  0856               	movf	___fldiv@bexp,w
 12146  1361  00C6               	movwf	??___fldiv
 12147  1362  1003               	clrc
 12148  1363  0C46               	rrf	??___fldiv,w
 12149  1364  00C7               	movwf	??___fldiv+1
 12150  1365  0847               	movf	??___fldiv+1,w
 12151  1366  00C5               	movwf	___fldiv@b+3
 12152  1367  084F               	movf	___fldiv@sign,w
 12153  1368  00C6               	movwf	??___fldiv
 12154  1369  0846               	movf	??___fldiv,w
 12155  136A  04C5               	iorwf	___fldiv@b+3,f
 12156  136B  2A04               	goto	i1l3818
 12157  136C                     i1l750:
 12158  136C  0008               	return
 12159  136D                     __end_of___fldiv:
 12160  007E                     btemp	set	126	;btemp
 12161  007E                     wtemp0	set	126
 12162                           
 12163                           	psect	config
 12164                           
 12165                           ;Config register CONFIG1 @ 0x2007
 12166                           ;	Oscillator Selection bits
 12167                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
 12168                           ;	Watchdog Timer Enable bit
 12169                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 12170                           ;	Power-up Timer Enable bit
 12171                           ;	PWRTE = OFF, PWRT disabled
 12172                           ;	RE3/MCLR pin function select bit
 12173                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
 12174                           ;	Code Protection bit
 12175                           ;	CP = OFF, Program memory code protection is disabled
 12176                           ;	Data Code Protection bit
 12177                           ;	CPD = OFF, Data memory code protection is disabled
 12178                           ;	Brown Out Reset Selection bits
 12179                           ;	BOREN = OFF, BOR disabled
 12180                           ;	Internal External Switchover bit
 12181                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 12182                           ;	Fail-Safe Clock Monitor Enabled bit
 12183                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 12184                           ;	Low Voltage Programming Enable bit
 12185                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 12186                           ;	In-Circuit Debugger Mode bit
 12187                           ;	DEBUG = 0x1, unprogrammed default
 12188  2007                     	org	8199
 12189  2007  20F1               	dw	8433
 12190                           
 12191                           ;Config register CONFIG2 @ 0x2008
 12192                           ;	Brown-out Reset Selection bit
 12193                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 12194                           ;	Flash Program Memory Self Write Enable bits
 12195                           ;	WRT = OFF, Write protection off
 12196  2008                     	org	8200
 12197  2008  3FFF               	dw	16383

Data Sizes:
    Strings     24
    Constant    144
    Data        0
    BSS         133
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      79
    BANK1            80     43      52
    BANK3            96     11      78
    BANK2            96      0      64

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_5(CODE[5]), STR_4(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 64
		 -> str_vol2(BANK2[64]), str_vol1(BANK3[64]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 64
		 -> str_vol2(BANK2[64]), str_vol1(BANK3[64]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _oli in COMMON

    _oli->___xxtofl
    i1_Lcd_Write_String->i1_Lcd_Write_Char
    i1_Lcd_Write_Char->i1_Lcd_Port
    i1_Lcd_Set_Cursor->i1_Lcd_Cmd
    i1_Lcd_Cmd->i1_Lcd_Port
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___flsub->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _oli in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _oli in BANK1

    _oli->_sprintf

Critical Paths under _main in BANK3

    _main->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _oli in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _oli in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1348
                                             10 BANK3      1     1      0
                          _ADC_setup
                        _EUSART_conf
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     462
                                              3 BANK3      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              1 BANK3      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       2     1      1     460
                                              4 BANK3      2     1      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 BANK3      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              1 BANK3      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 BANK3      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_conf                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_setup                                            6     3      3     316
                                              0 BANK3      6     3      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _oli                                                  8     8      0   38637
                                             35 BANK1      8     8      0
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
                   i1_Lcd_Set_Cursor
                 i1_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (5) i1_Lcd_Write_String                                   7     5      2     186
                                              3 COMMON     7     5      2
                   i1_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (6) i1_Lcd_Write_Char                                     2     2      0      44
                                              1 COMMON     2     2      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (5) i1_Lcd_Set_Cursor                                     2     1      1     184
                                              4 COMMON     2     1      1
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (6) i1_Lcd_Cmd                                            3     3      0      44
                                              1 COMMON     3     3      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Port                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             42    37      5   31595
                                              0 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (6) _scale                                               19    15      4    7712
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _fround                                              20    16      4    6175
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             26    18      8    4697
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (6) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (6) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             26    18      8    1425
                                             30 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_setup
   _EUSART_conf
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup

 _oli (ROOT)
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
   i1_Lcd_Set_Cursor
     i1_Lcd_Cmd
       i1_Lcd_Port
   i1_Lcd_Write_String
     i1_Lcd_Write_Char
       i1_Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0     11F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2B      34       7       65.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      B      4E       9       81.2%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0      40      11       66.7%
DATA                 0      0     11F      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 22:05:18 2021

               ___fldiv@aexp 0057                 ___fldiv@bexp 0056                            _a 006E  
                          pc 0002                 ___fldiv@sign 004F                           l77 07F7  
               ___awdiv@sign 0021                           fsr 0004          ___wmul@multiplicand 0072  
        __Umul8_16@word_mpld 0076                          l130 0915                          l131 091A  
                        l123 0902                          l132 093F                          l126 0906  
                        l127 0937                          l143 1914                          l128 090B  
                        l129 0910                          l161 19A1                          l146 19DF  
         __size_of_ADC_setup 012F                          l155 19BF                          l149 0810  
                        l158 1CBB                          l167 1C05                          l186 1969  
                        _RB0 0030                          _RB1 0031                          _oli 068C  
                        fsr0 0004                          indf 0000                 ___awmod@sign 0076  
               ___flmul@aexp 0036                 ___flmul@bexp 0037                 ___flmul@sign 0031  
               ___flmul@temp 003C                 ___flmul@prod 0038                 ___fltol@exp1 005B  
               ?_EUSART_conf 0070                         l3030 19DC                         l3022 19C3  
                       l3024 19C6                         l3040 199E                         l3032 1989  
                       l3026 19CE                         l3034 198C                         l3028 19D1  
                       l3036 1994                         l3038 1997                         l3420 07D0  
                       l4134 083C                         l3430 07E0                         l3422 07D8  
                       l4136 08C5                         l3440 0815                         l3520 1C6A  
                       l3432 07E1                         l3424 07D9                         l4138 0929  
                       l3442 081A                         l2554 1910                         l3530 1C9D  
                       l3522 1C70                         l3434 07E5                         l3426 07DE  
                       l3460 085D                         l3444 0821                         l3452 0834  
                       l3540 1950                         l3532 1CA3                         l3524 1C80  
                       l3436 07EF                         l3428 07DF                         l3470 0880  
                       l3462 0864                         l3454 084A                         l3446 0828  
                       l3438 0814                         l3542 1960                         l3550 0804  
                       l3534 1CA9                         l3526 1C8A                         l3518 1C5F  
                       l3480 08A3                         l3472 0887                         l3464 086B  
                       l3456 084F                         l3448 082D                         l3544 1964  
                       l3536 1CAF                         l3528 1C97                         l3552 19A5  
                       l3560 1BB2                         l3482 08AA                         l3474 088E  
                       l3466 0872                         l3458 0856                         l3490 08BB  
                       l3546 1965                         l3538 1CB5                         l3554 19AA  
                       l3562 1BB7                         l3484 08B1                         l3476 0895  
                       l3468 0879                         l3492 08F7                         l3548 1966  
                       l3556 19B2                         l3564 1BDB                         l3494 08FE  
                       l3486 08B6                         l3478 089C                         l3558 19B8  
                       l3566 1BE3                         l3498 091F                         l3940 1E24  
                       l3932 1E07                         l3950 1E3E                         l3942 1E27  
                       l3934 1E0C                         l3952 1E44                         l3944 1E2E  
                       l3960 1E52                         l3936 1E1A                         l3970 1E83  
                       l3962 1E57                         l3954 1E46                         l3946 1E2F  
                       l3938 1E1F                         l3972 1E8F                         l3964 1E61  
                       l3956 1E4B                         l3948 1E37                         l3974 1E9A  
                       l3966 1E6C                         l3958 1E51                         l3968 1E78  
                       ?_oli 0070                         STR_1 18A0                         STR_2 18B5  
                       STR_3 18B5                         STR_4 18B0                         STR_5 18B0  
                       u5300 19B8                         u5301 19B7                         u5310 1BC3  
                       u6030 1E2E                         u6031 1E2D                         u5320 1BED  
                       u6040 1E3E                         u6041 1E3D                         u5330 1C05  
                       u6050 1E4B                         u6107 199B                         u5331 1C04  
                       u6051 1E4A                         u6117 1C65                         u6127 1C76  
                       u5280 08FE                         u5281 08FD                         u6137 1C86  
                       u5290 19AA                         u6147 1C94                         u5291 19A9  
                       u6157 19D7                         u6097 1E33                         i1l86 07BF  
                       _Pots 0192            ?_Lcd_Write_String 01D6                         _main 1E07  
                       _vol1 00CF                         _vol2 00CB                         btemp 007E  
                       start 0016           ??_Lcd_Write_String 01D8              ___fldiv@new_exp 0050  
               _sprintf$1207 00AA              __end_of_Lcd_Cmd 19E0                        ??_oli 00C3  
              ___fltol@sign1 005A              __end_of___fladd 1800                        ?_main 0070  
            __end_of___fldiv 136D              __end_of___awdiv 1D8B              __end_of___flneg 1920  
            __end_of___awmod 1C5F              __end_of___flmul 1000              __end_of___flsub 1A04  
            __end_of___fltol 1E07                        _ANSEL 0188              __end_of___lldiv 1D22  
            ___awdiv@divisor 0077              __end_of___llmod 1BB2              __end_of___lwdiv 1B10  
                      i1l143 190C                        i1l401 1D21                        i1l161 1935  
                      i1l314 00A5                        i1l146 194F                        i1l155 1985  
                      i1l340 0499                        i1l167 1ACB              __end_of___lwmod 1A8A  
                      i1l361 068B                        i1l531 1C5E                        i1l355 0644  
                      i1l347 04DD                        i1l621 1BB1                        i1l365 1A10  
                      i1l518 1D8A                        i1l551 1B2C                        i1l367 1A28  
                      i1l535 118F                        i1l295 0C9E                        i1l552 1B48  
                      i1l560 1F45                        i1l536 10F4                        i1l800 0FF3  
                      i1l288 1577                        i1l553 1B5D                        i1l713 174D  
                      i1l705 17FF                        i1l546 1182                        i1l723 1793  
                      i1l539 1152                        i1l556 1EC0                        i1l564 191F  
                      i1l717 1771                        i1l750 136C                        i1l734 17F3  
                      i1l726 17D1                        i1l582 10D1                        i1l559 1F2C  
                      i1l735 17FF                        i1l575 1DF1                        i1l583 1043  
                      i1l807 1A3D                        i1l671 1B0F                        i1l568 1E06  
                      i1l832 1F68                        i1l593 10C4                        i1l809 1A4F  
                      i1l681 1A89                        i1l770 1350                        i1l738 1A03  
                      i1l578 1E06                        i1l834 1FFF                        i1l586 1094  
                      i1l772 1360                        i1l764 12DE                        i1l748 11EC  
                      i1l692 15DB                        i1l852 1014                        i1l845 1FC9  
                      i1l846 1FD5                        i1l838 1FAD            ?i1_Lcd_Set_Cursor 0074  
                      i1l696 1682                        i1l698 1659                        i1l794 0F6B  
                      i1l788 0FFF              ___awdiv@counter 0020                        _SPBRG 0099  
                      _PORTC 0007                        _PORTD 0008      __size_of_Lcd_Set_Cursor 001E  
                      _TRISA 0085                        _TRISB 0086                        _TRISC 0087  
                      _TRISD 0088                  ?i1_Lcd_Port 0070           ??i1_Lcd_Set_Cursor 0075  
         __size_ofi1_Lcd_Cmd 001A              __end_of_dpowers 18A0                        _scale 0940  
            __end_of_isdigit 1015                        _setup 07D0                        pclath 000A  
__size_ofi1_Lcd_Write_String 0042                        status 0003                        wtemp0 007E  
            __end_of_sprintf 068C            __end_of_ADC_setup 0940             __end_of_Lcd_Init 1CBC  
           __end_of_Lcd_Port 1915              __initialization 0019                 __end_of_main 1EA4  
                     ??_main 01DD                ADC_setup@Vref 01D5           __size_of_Lcd_Clear 000D  
       __size_of__tdiv_to_l_ 00BD             ___llmod@dividend 0074                       ?_scale 003E  
                     _ADRESH 001E             ___awdiv@dividend 0079                       ?_setup 0070  
                     _ANSELH 0189                       i1l3000 0FB3                       i1l3010 0FE7  
                     i1l3002 0FBE                       i1l3012 0FEB                       i1l3004 0FCD  
                     i1l3100 1004                       i1l3020 1908                       i1l3014 0FEC  
                     i1l3006 0FD7                       i1l3102 1005                       i1l3112 1015  
                     i1l3016 0FF7                       i1l3008 0FD9                       i1l3104 100B  
                     i1l4000 0737                       i1l3210 1177                       i1l3202 115E  
                     i1l3130 105B                       i1l3114 1028                       i1l3050 1483  
                     i1l3042 1370                       i1l3106 1011                       i1l4002 0794  
                     i1l3300 1DA1                       i1l3220 1A0A                       i1l3212 1187  
                     i1l3204 1170                       i1l3140 1086                       i1l3132 1064  
                     i1l3124 1044                       i1l3052 1489                       i1l3044 1376  
                     i1l3108 1013                       i1l3060 0943                       i1l4004 07A6  
                     i1l3310 1DC5                       i1l3302 1DB6                       i1l3230 1CBC  
                     i1l3222 1A17                       i1l3150 10A0                       i1l3142 108E  
                     i1l3134 106D                       i1l3126 104A                       i1l3118 1031  
                     i1l3062 0947                       i1l4006 07B2                       i1l3304 1DB7  
                     i1l3240 1CE9                       i1l3232 1CCC                       i1l3224 1A1E  
                     i1l3216 1A04                       i1l3160 10C9                       i1l3144 1098  
                     i1l3152 10B2                       i1l3136 107B                       i1l3128 1059  
                     i1l3056 1534                       i1l2600 1C06                       i1l3072 0A38  
                     i1l3064 0949                       i1l3400 1937                       i1l4008 07BB  
                     i1l3306 1DBF                       i1l3242 1CFB                       i1l3234 1CCF  
                     i1l3250 1D19                       i1l3330 1B5E                       i1l3226 1A24  
                     i1l3218 1A06                       i1l3170 10E8                       i1l3138 1085  
                     i1l2610 1C16                       i1l2602 1C07                       i1l3090 0BE3  
                     i1l3074 0A3F                       i1l3066 0950                       i1l3082 0AF4  
                     i1l3402 193A                       i1l3410 1921                       i1l3260 1B5A  
                     i1l2700 159C                       i1l3324 1DE6                       i1l3316 1DCD  
                     i1l3308 1DC1                       i1l3244 1D09                       i1l3236 1CDC  
                     i1l3340 1B8C                       i1l3332 1B66                       i1l3180 110E  
                     i1l3164 10D2                       i1l2540 1A2A                       i1l2620 1C2F  
                     i1l2612 1C1B                       i1l2604 1C0B                       i1l3092 0BEA  
                     i1l3084 0AFB                       i1l4140 00BB                       i1l3404 1940  
                     i1l3412 1924                       i1l3262 1B5C                       i1l3254 1B10  
                     i1l3270 1ED4                       i1l2710 15B2                       i1l2702 159D  
                     i1l3350 19E0                       i1l3326 1DF6                       i1l3318 1DDF  
                     i1l3246 1D0A                       i1l3238 1CE0                       i1l3342 1B9A  
                     i1l3334 1B69                       i1l3190 1142                       i1l3182 1110  
                     i1l3166 10DF                       i1l3158 10B9                       i1l2550 1A4B  
                     i1l2542 1A2C                       i1l2622 1C33                       i1l2614 1C21  
                     i1l2630 1C50                       i1l2606 1C10                       i1l3078 0AC7  
                     i1l3406 1943                       i1l3414 192A                       i1l3256 1B24  
                     i1l3280 1F42                       i1l3272 1EDC                       i1l2800 16BE  
                     i1l2720 15C3                       i1l2712 15B3                       i1l2704 159F  
                     i1l3352 19E4                       i1l3328 1DFB                       i1l3248 1D13  
                     i1l3344 1BA3                       i1l3336 1B76                       i1l3360 1F50  
                     i1l3192 1143                       i1l3184 1119                       i1l3176 10F5  
                     i1l2544 1A33                       i1l2640 1ACE                       i1l2560 1D29  
                     i1l2632 1C55                       i1l2624 1C3D                       i1l2616 1C24  
                     i1l2608 1C12                       i1l3096 0C72                       i1l3600 00A7  
                     i1l3408 194C                       i1l3416 192D                       i1l3258 1B40  
                     i1l3282 1F44                       i1l3274 1EE0                       i1l3266 1EA4  
                     i1l3290 191F                       i1l2810 16E7                       i1l2802 16C2  
                     i1l2730 15E1                       i1l2722 15C8                       i1l2714 15B9  
                     i1l2706 15A7                       i1l3338 1B7A                       i1l3346 1BA9  
                     i1l3370 1F7E                       i1l3362 1F60                       i1l3194 114C  
                     i1l3186 1122                       i1l3178 10FD                       i1l2546 1A37  
                     i1l2650 1AE6                       i1l2642 1AD4                       i1l2570 1D3D  
                     i1l2562 1D2E                       i1l2634 1C5A                       i1l2626 1C43  
                     i1l2618 1C2B                       i1l3610 00E5                       i1l3602 00C3  
                     i1l3418 1932                       i1l3276 1F04                       i1l3268 1EB8  
                     i1l2820 1755                       i1l2812 1725                       i1l2804 16C3  
                     i1l2740 15F5                       i1l2732 15E5                       i1l2724 15D0  
                     i1l2716 15BD                       i1l2708 15AC                       i1l3380 1FB4  
                     i1l3372 1F8B                       i1l3364 1F70                       i1l3356 1F47  
                     i1l3196 1156                       i1l3188 1134                       i1l2548 1A46  
                     i1l2900 0CD2                       i1l2652 1AF7                       i1l2644 1AD7  
                     i1l2660 1B0B                       i1l2580 1D53                       i1l2572 1D3F  
                     i1l2564 1D30                       i1l2556 1D22                       i1l2628 1C4A  
                     i1l3700 048D                       i1l3620 0123                       i1l3612 00E9  
                     i1l3604 00CF                       i1l3278 1F08                       i1l3286 1915  
                     i1l2830 1770                       i1l2822 175A                       i1l2814 172B  
                     i1l2806 16CC                       i1l2750 1609                       i1l2742 15F9  
                     i1l2734 15E9                       i1l2726 15D1                       i1l2718 15BE  
                     i1l3294 1D8B                       i1l3390 1FED                       i1l3382 1FBF  
                     i1l3374 1F92                       i1l3358 1F4C                       i1l2910 0CE7  
                     i1l2902 0CD8                       i1l2654 1AFD                       i1l2646 1ADE  
                     i1l2638 1ACC                       i1l2670 1A60                       i1l2590 1D76  
                     i1l2582 1D57                       i1l2574 1D45                       i1l2566 1D34  
                     i1l2558 1D25                       i1l3710 04C1                       i1l3702 04A1  
                     i1l3630 0173                       i1l3622 013C                       i1l3614 0102  
                     i1l3606 00D3                       i1l3800 11CE                       i1l3288 191D  
                     i1l2832 1775                       i1l2840 1781                       i1l2816 1730  
                     i1l2808 16D1                       i1l2760 161D                       i1l2752 160D  
                     i1l2744 15FD                       i1l2736 15ED                       i1l2728 15D3  
                     i1l3296 1D98                       i1l3392 1FF2                       i1l3384 1FC3  
                     i1l3376 1F96                       i1l3368 1F79                       i1l2920 0D03  
                     i1l2912 0CEF                       i1l2904 0CDC                       i1l2656 1AFE  
                     i1l2648 1AE2                       i1l2680 1A7F                       i1l2672 1A64  
                     i1l2664 1A50                       i1l2584 1D68                       i1l2576 1D48  
                     i1l2592 1D7C                       i1l2568 1D39                       i1l3720 04F2  
                     i1l3712 04D0                       i1l3704 04AA                       i1l3640 0200  
                     i1l3632 0177                       i1l3624 0147                       i1l3616 011B  
                     i1l3608 00D7                       i1l3810 11E2                       i1l3802 11CF  
                     i1l2834 1778                       i1l2826 1763                       i1l2818 173F  
                     i1l2842 1785                       i1l2770 165D                       i1l2762 1621  
                     i1l2754 1611                       i1l2746 1601                       i1l2738 15F1  
                     i1l2690 1585                       i1l3394 1FF6                       i1l3386 1FCD  
                     i1l3378 1FA4                       i1l2930 0D46                       i1l2914 0CF1  
                     i1l2906 0CDD                       i1l2658 1B05                       i1l2674 1A68  
                     i1l2666 1A56                       i1l2682 1A85                       i1l2594 1D81  
                     i1l2586 1D6E                       i1l2578 1D4F                       i1l3730 05C9  
                     i1l3722 04F6                       i1l3714 04D7                       i1l3706 04AE  
                     i1l3650 0282                       i1l3642 0209                       i1l3634 017D  
                     i1l3626 014D                       i1l3618 011F                       i1l3570 003C  
                     i1l3900 1343                       i1l3804 11D4                       i1l3812 11E4  
                     i1l2860 17CD                       i1l2852 1798                       i1l2844 1786  
                     i1l2836 177A                       i1l2828 176C                       i1l2780 1676  
                     i1l2772 1666                       i1l2756 1615                       i1l2748 1605  
                     i1l2764 1625                       i1l2692 1589                       i1l3396 1FF7  
                     i1l3388 1FD7                       i1l2940 0DCF                       i1l2932 0D62  
                     i1l2924 0D0C                       i1l2916 0CF9                       i1l2908 0CE2  
                     i1l2676 1A72                       i1l2668 1A59                       i1l2596 1D86  
                     i1l2588 1D6F                       i1l3740 0623                       i1l3732 05D5  
                     i1l3724 0514                       i1l3716 04E6                       i1l3708 04B4  
                     i1l3660 02FD                       i1l3652 0291                       i1l3644 0224  
                     i1l3636 019C                       i1l3628 0160                       i1l3580 005C  
                     i1l3572 0042                       i1l3910 135C                       i1l3902 1347  
                     i1l3830 122D                       i1l3814 11F4                       i1l3822 120D  
                     i1l3806 11D9                       i1l2870 17E9                       i1l2862 17D6  
                     i1l2854 179D                       i1l2846 178A                       i1l2838 177F  
                     i1l2790 1694                       i1l2774 1668                       i1l2782 167A  
                     i1l2766 1626                       i1l2758 1619                       i1l2694 158A  
                     i1l2686 1578                       i1l2950 0E42                       i1l2942 0DDF  
                     i1l2934 0D8E                       i1l2926 0D1C                       i1l2918 0CFE  
                     i1l2678 1A78                       i1l3750 064F                       i1l3742 0629  
                     i1l3726 056F                       i1l3734 0610                       i1l3718 04EB  
                     i1l3670 034B                       i1l3662 0306                       i1l3654 02AC  
                     i1l3638 01E7                       i1l3646 022C                       i1l3590 008C  
                     i1l3582 005D                       i1l3574 0049                       i1l3904 134F  
                     i1l3840 124C                       i1l3832 1235                       i1l3824 1212  
                     i1l3816 1200                       i1l3808 11E1                       i1l2872 17ED  
                     i1l2864 17DB                       i1l2856 17AB                       i1l2848 1790  
                     i1l2792 16AB                       i1l2784 1686                       i1l2776 166C  
                     i1l2768 163D                       i1l2696 158F                       i1l2688 157F  
                     i1l2960 0EEF                       i1l2952 0E5F                       i1l2944 0DFC  
                     i1l2936 0DAA                       i1l2928 0D29                       i1l2880 0C9F  
                     i1l3752 0650                       i1l3736 0618                       i1l3728 05AA  
                     i1l3664 030E                       i1l3656 02D3                       i1l3672 0354  
                     i1l3648 023B                       i1l3744 0630                       i1l3592 0090  
                     i1l3584 0061                       i1l3576 004E                       i1l3568 0037  
                     i1l3920 1978                       i1l3906 1356                       i1l3850 127E  
                     i1l3842 125E                       i1l3834 123D                       i1l3818 1204  
                     i1l2874 17EF                       i1l2866 17E3                       i1l2858 17AF  
                     i1l2794 16AF                       i1l2786 168B                       i1l2778 166D  
                     i1l2698 1594                       i1l2970 0F3B                       i1l2962 0F17  
                     i1l2954 0E8C                       i1l2946 0E0C                       i1l2938 0DC6  
                     i1l2890 0CB6                       i1l2882 0CA6                       i1l3754 065F  
                     i1l3746 0636                       i1l3738 061F                       i1l3690 041B  
                     i1l3674 0389                       i1l3666 032C                       i1l3658 02E2  
                     i1l3586 0064                       i1l3594 00A1                       i1l3578 0050  
                     i1l3762 0675                       i1l3922 197E                       i1l3930 1AAF  
                     i1l3908 135A                       i1l3860 129F                       i1l3852 127F  
                     i1l3844 1262                       i1l3836 1245                       i1l3828 121B  
                     i1l3780 11A1                       i1l2876 17FA                       i1l2868 17E8  
                     i1l2796 16B3                       i1l2980 0F50                       i1l2972 0F3C  
                     i1l2964 0F20                       i1l2956 0E9C                       i1l2948 0E29  
                     i1l2892 0CBB                       i1l2884 0CAC                       i1l3756 065F  
                     i1l3748 063E                       i1l3692 0427                       i1l3684 03DA  
                     i1l3676 03D6                       i1l3764 0687                       i1l3596 00A3  
                     i1l3588 0079                       i1l3916 196B                       i1l3924 1A8A  
                     i1l3870 12B8                       i1l3862 12A1                       i1l3854 128D  
                     i1l3846 1263                       i1l3838 1247                       i1l3790 11B5  
                     i1l3782 11A2                       i1l3774 1190                       i1l2878 17FE  
                     i1l2798 16BC                       i1l2990 0F75                       i1l2982 0F54  
                     i1l2974 0F45                       i1l2966 0F2E                       i1l2958 0EC9  
                     i1l2894 0CC3                       i1l2886 0CB0                       i1l3758 066D  
                     i1l3694 042E                       i1l3678 03D8                       i1l3918 1970  
                     i1l3926 1A8D                       i1l3880 12DB                       i1l3864 12AA  
                     i1l3872 12BE                       i1l3848 126C                       i1l3856 1291  
                     i1l3784 11A7                       i1l3792 11B7                       i1l3776 1197  
                     i1l2992 0F83                       i1l2984 0F68                       i1l2968 0F37  
                     i1l2976 0F4B                       i1l2896 0CC5                       i1l2888 0CB1  
                     i1l3696 0433                       i1l3688 0411                       i1l3928 1AA9  
                     i1l3890 12FA                       i1l3874 12C2                       i1l3866 12AE  
                     i1l3858 1297                       i1l3794 11BF                       i1l3786 11AC  
                     i1l3778 119D                       i1l2994 0F87                       i1l2978 0F4F  
                     i1l2898 0CCD                       i1l3698 046E                       i1l3892 1313  
                     i1l3884 12E3                       i1l3876 12C3                       i1l3868 12AF  
                     i1l3796 11C4                       i1l3788 11B4                       i1l2996 0FA0  
                     i1l2988 0F70                       i1l3980 0693                       i1l3886 12E8  
                     i1l3894 1319                       i1l3878 12C7                       i1l3798 11CA  
                     i1l2998 0FA6                       i1l3990 0716                       i1l3982 069A  
                     i1l3896 1326                       i1l3888 12F6                       u310_20 1D45  
                     i1l3992 071E                       i1l3984 069B                       i1l3976 068C  
                     u310_21 1D44                       i1l3898 1334                       i1l3986 06A5  
                     i1l3994 0728                       i1l3978 0692                       i1l3996 072D  
                     i1l3988 0704                       i1l3998 072F                       u311_25 1D49  
                     u312_20 1D57                       u320_20 1C21                       u400_21 0E1B  
                     u312_21 1D56                       u320_21 1C20                       u400_22 0E22  
                     u400_23 0E29                       u305_20 1A37                       u305_21 1A36  
                     u401_25 0E2B                       u313_25 1D58                       u321_25 1C25  
                     u314_20 1D68                       u322_20 1C33                       u402_21 0E51  
                     u314_21 1D67                       u322_21 1C32                       u402_22 0E58  
                     u402_23 0E5F                       u306_25 1A3E                       u410_25 0F30  
                     u330_25 1AE7                       u314_25 1D64                       u307_20 1A4B  
                     u411_20 0F3B                       u331_20 1AF7                       u323_20 1C3D  
                     u307_21 1A4A                       u411_21 0F3A                       u403_21 0E7E  
                     u331_21 1AF6                       u323_21 1C3C                       u403_22 0E85  
                     u403_23 0E8C                       u331_25 1AF3                       u315_25 1D70  
                     u323_25 1C39                       u340_20 1589                       u500_20 1DC5  
                     u420_20 0FB3                       u316_20 1D7C                       u308_20 1D29  
                     u340_21 1588                       u500_21 1DC4                       u420_21 0FB2  
                     u404_21 0EAB                       u316_21 1D7B                       u308_21 1D28  
                     u404_22 0EB2                       u404_23 0EB9                       u420_25 0FAF  
                     u412_25 0F3E                       u332_25 1AFF                       u324_25 1C44  
                     u341_20 158F                       u501_20 1DCC                       u421_20 0FCD  
                     u413_20 0F4F                       u405_20 0ED5                       u333_20 1B0B  
                     u317_20 1D81                       u309_20 1D34                       u325_20 1C50  
                     u341_21 158E                       u501_21 1DCB                       u421_21 0FCC  
                     u413_21 0F4E                       u333_21 1B0A                       u317_21 1D80  
                     u309_21 1D33                       u325_21 1C4F                       u421_25 0FC9  
                     u405_25 0ED0                       u350_20 1648                       u342_20 1594  
                     u510_20 1B7A                       u422_20 0FEB                       u414_20 0F54  
                     u334_20 1A56                       u326_20 1C55                       u318_20 1C0B  
                     u350_21 1646                       u342_21 1593                       u510_21 1B79  
                     u422_21 0FEA                       u414_21 0F53                       u406_21 0EE1  
                     u334_21 1A55                       u326_21 1C54                       u318_21 1C0A  
                     u406_22 0EE8                       u406_23 0EEF                       u502_25 1DCE  
                     u430_25 153F                       u351_20 1649                       u343_20 15B2  
                     u503_20 1DDE                       u511_20 1B8C                       u415_20 0F68  
                     u407_20 0EFD                       u327_20 1AD4                       u423_20 1376  
                     u319_20 1C16                       u431_20 0947                       u343_21 15B1  
                     u503_21 1DDD                       u511_21 1B8B                       u415_21 0F67  
                     u327_21 1AD3                       u423_21 1375                       u319_21 1C15  
                     u431_21 0946                       u511_25 1B88                       u407_25 0EF8  
                     u335_25 1A5A                       u360_20 16B3                       u352_20 165D  
                     u344_20 15BD                       u504_20 1DE5                       u520_20 1FB3  
                     u416_20 0F6F                       u336_20 1A68                       u440_20 0AFB  
                     u432_20 0950                       u600_20 1A97                       u360_21 16B2  
                     u352_21 165C                       u344_21 15BC                       u504_21 1DE4  
                     u520_21 1FB2                       u416_21 0F6E                       u408_21 0F09  
                     u336_21 1A67                       u440_21 0AFA                       u432_21 094F  
                     u408_22 0F10                       u408_23 0F17                       u512_25 1B9B  
                     u328_25 1AD8                       u424_25 1393                       u361_20 16C2  
                     u353_20 166C                       u345_20 15C3                       u513_20 1BA9  
                     u417_20 0F75                       u329_20 1AE6                       u337_20 1A72  
                     u601_20 1AB9                       u361_21 16C1                       u353_21 166B  
                     u345_21 15C2                       u513_21 1BA8                       u417_21 0F74  
                     u329_21 1AE5                       u337_21 1A71                       u505_25 1DE8  
                     u521_25 1FB8                       u409_25 0F19                       u337_25 1A6E  
                     u425_25 13ED                       u441_25 0B1B                       u433_25 0970  
                     u370_20 1770                       u346_20 15C8                       u506_20 1DF6  
                     u522_20 1FC3                       u514_20 1F4C                       u450_20 1028  
                     u418_20 0F87                       u602_20 1ACB                       u370_21 176F  
                     u346_21 15C7                       u506_21 1DF5                       u522_21 1FC2  
                     u514_21 1F4B                       u450_21 1027                       u418_21 0F86  
                     u602_21 1ACA                       u362_25 16C5                       u354_25 166F  
                     u338_25 1A79                       u426_25 1442                       u442_25 0B57  
                     u434_25 09AC                       u371_20 1775                       u363_20 16E7  
                     u355_20 1682                       u347_20 15E1                       u507_20 1DFB  
                     u523_20 1FC9                       u515_20 1F50                       u451_20 1042  
                     u419_20 0F96                       u339_20 1A85                       u427_20 1489  
                     u371_21 1774                       u363_21 16E6                       u355_21 1681  
                     u347_21 15E0                       u507_21 1DFA                       u523_21 1FC8  
                     u515_21 1F4F                       u451_21 1041                       u339_21 1A84  
                     u427_21 1488                       u363_23 16E3                       u419_25 0F91  
                     u443_25 0BA2                       u435_25 09F7                       u380_20 17CD  
                     u372_20 177F                       u356_20 1686                       u348_20 15E5  
                     u508_20 1B66                       u524_20 1FCD                       u516_20 1F70  
                     u460_20 10B8                       u444_20 0BEA                       u436_20 0A3F  
                     u540_20 013C                       u380_21 17CC                       u372_21 177E  
                     u364_21 16FE                       u356_21 1685                       u348_21 15E4  
                     u508_21 1B65                       u524_21 1FCC                       u516_21 1F6F  
                     u460_21 10B7                       u444_21 0BE9                       u436_21 0A3E  
                     u540_21 013B                       u364_22 16FF                       u364_23 1704  
                     u364_24 1705                       u364_25 170A                       u452_25 1066  
                     u428_25 14A6                       u364_26 170B                       u381_20 17D6  
                     u373_20 1785                       u365_20 1712                       u357_20 168B  
                     u349_20 163D                       u525_20 1FE2                       u453_20 107B  
                     u541_20 0177                       u381_21 17D5                       u373_21 1784  
                     u365_21 1713                       u357_21 168A                       u349_21 163C  
                     u453_21 107A                       u541_21 0176                       u365_22 1718  
                     u365_23 1719                       u349_25 1639                       u509_25 1B6B  
                     u525_25 1FDD                       u517_25 1F83                       u461_25 10BB  
                     u453_25 1077                       u429_25 14F3                       u445_25 0BFD  
                     u437_25 0A52                       u382_20 17DB                       u374_20 178A  
                     u366_20 1730                       u526_20 1FF2                       u518_20 1F91  
                     u470_20 115D                       u462_20 10C9                       u390_20 0CE2  
                     u542_20 0200                       u534_20 0042                       u606_20 0692  
                     u382_21 17DA                       u374_21 1789                       u366_21 172F  
                     u358_21 169D                       u526_21 1FF1                       u518_21 1F90  
                     u470_21 115C                       u462_21 10C8                       u390_21 0CE1  
                     u542_21 01FF                       u534_21 0041                       u606_21 0691  
                     u358_22 16A4                       u358_23 16AB                       u454_25 1087  
                     u446_25 0C39                       u438_25 0A8E                       u550_25 03DD  
                     u383_20 17E8                       u375_20 1790                       u367_20 1755  
                     u359_20 16AF                       u527_20 1FF6                       u463_20 10DF  
                     u455_20 1094                       u391_20 0CE7                       u551_20 0410  
                     u543_20 0224                       u535_20 005C                       u607_20 069A  
                     u383_21 17E7                       u375_21 178F                       u367_21 1754  
                     u359_21 16AE                       u527_21 1FF5                       u463_21 10DE  
                     u455_21 1093                       u391_21 0CE6                       u551_21 040F  
                     u543_21 0223                       u535_21 005B                       u607_21 0699  
                     u519_25 1FA5                       u471_25 115F                       u447_25 0C75  
                     u439_25 0ACA                       u551_25 040C                       u384_20 17ED  
                     u376_20 1797                       u368_20 175A                       u480_20 1CCC  
                     u472_20 116F                       u464_20 10F3                       u456_20 1098  
                     u392_20 0CFE                       u448_20 100B                       u552_20 041B  
                     u544_20 023B                       u536_20 00A0                       u608_20 072D  
                     u384_21 17EC                       u376_21 1796                       u368_21 1759  
                     u480_21 1CCB                       u472_21 116E                       u464_21 10F2  
                     u456_21 1097                       u392_21 0CFD                       u448_21 100A  
                     u552_21 041A                       u544_21 023A                       u536_21 009F  
                     u608_21 072C                       u560_25 05D8                       u544_25 0237  
                     u616_27 192F                       u385_20 17FE                       u377_20 179D  
                     u473_20 1176                       u457_20 109F                       u393_20 0D03  
                     u449_20 1011                       u561_20 0617                       u553_20 0427  
                     u545_20 0291                       u537_20 00CF                       u385_21 17FD  
                     u377_21 179C                       u473_21 1175                       u457_21 109E  
                     u393_21 0D02                       u449_21 1010                       u561_21 0616  
                     u553_21 0426                       u545_21 0290                       u537_21 00CE  
                     u369_25 1765                       u481_25 1CD1                       u465_25 111B  
                     u545_25 028D                       u617_27 1947                       u570_20 11A7  
                     u490_20 1EB8                       u378_20 17AF                       u482_20 1CE0  
                     u466_20 1134                       u386_20 0CB0                       u562_20 062F  
                     u546_20 02AC                       u538_20 00D3                       u570_21 11A6  
                     u490_21 1EB7                       u378_21 17AE                       u482_21 1CDF  
                     u466_21 1133                       u394_21 0D54                       u386_21 0CAF  
                     u562_21 062E                       u546_21 02AB                       u538_21 00D2  
                     u394_22 0D5B                       u394_23 0D62                       u474_25 1179  
                     u466_25 1130                       u458_25 10A1                       u554_25 0436  
                     u571_20 11AC                       u491_20 1ED4                       u379_20 17BE  
                     u475_20 1187                       u459_20 10B1                       u387_20 0CB6  
                     u563_20 0636                       u555_20 04A0                       u547_20 02D3  
                     u539_20 0102                       u571_21 11AB                       u491_21 1ED3  
                     u475_21 1186                       u459_21 10B0                       u395_21 0D70  
                     u387_21 0CB5                       u563_21 0635                       u555_21 049F  
                     u547_21 02D2                       u539_21 0101                       u395_22 0D77  
                     u395_23 0D7E                       u379_25 17B9                       u483_25 1CE2  
                     u467_25 1145            ?i1_Lcd_Write_Char 0070                       u580_20 1262  
                     u572_20 11CE                       u492_20 1EE0                       u484_20 1CFB  
                     u476_20 1A0A                       u468_20 1152                       u388_20 0CBB  
                     u564_20 063E                       u556_20 04C1                       u548_20 02E2  
                     u580_21 1261                       u572_21 11CD                       u492_21 1EDF  
                     u484_21 1CFA                       u476_21 1A09                       u468_21 1151  
                     u396_21 0D9C                       u388_21 0CBA                       u564_21 063D  
                     u556_21 04C0                       u548_21 02E1                       u396_22 0DA3  
                     u396_23 0DAA                       u484_25 1CF7                       u556_25 04BD  
                     u548_25 02DE                       u573_20 11D4                       u469_20 1156  
                     u389_20 0CDC                       u565_20 064F                       u557_20 04D0  
                     u549_20 02FD                       u573_21 11D3                       u493_21 1EEF  
                     u469_21 1155                       u397_21 0DB8                       u389_21 0CDB  
                     u565_21 064E                       u557_21 04CF                       u549_21 02FC  
                     u493_22 1EF0                       u397_22 0DBF                       u493_23 1EF5  
                     u397_23 0DC6                       u493_24 1EF6                       u581_25 1265  
                     u493_25 1EFB                       u485_25 1D0B                       u477_25 1A11  
                     u565_25 064B                       u557_25 04CC                       u493_26 1EFC  
                     u590_20 12DB                       u582_20 127E                       u574_20 11D9  
                     u494_20 1F08                       u486_20 1D19                       u566_20 065F  
                     u558_20 04EB                       u590_21 12DA                       u582_21 127D  
                     u574_21 11D8                       u494_21 1F07                       u486_21 1D18  
                     u566_21 065E                       u558_21 04EA                       u582_25 127A  
                     u478_25 1A18                       u398_25 0DC8                       u566_25 065B  
                     u591_20 12E2                       u583_20 1297                       u575_20 11F4  
                     u487_20 1B24                       u479_20 1A24                       u567_20 066D  
                     u591_21 12E1                       u583_21 1296                       u575_21 11F3  
                     u487_21 1B23                       u495_21 1F17                       u479_21 1A23  
                     u399_21 0DEE                       u567_21 066C                       u495_22 1F18  
                     u399_22 0DF5                       u495_23 1F1D                       u399_23 0DFC  
                     u495_24 1F1E                       u495_25 1F23                       u559_25 0572  
                     u495_26 1F24                       u592_20 12E8                       u584_20 129F  
                     u576_20 1212                       u488_20 1B40                       u496_20 1F42  
                     u568_20 0687                       u592_21 12E7                       u584_21 129E  
                     u576_21 1211                       u488_21 1B3F                       u496_21 1F41  
                     u568_21 0686                       u496_25 1F3E                    ??_Lcd_Cmd 01D4  
                     u593_20 12FA                       u577_20 124C                       u569_20 11A1  
                     u489_20 1B5A                       u497_20 191D                       u593_21 12F9  
                     u577_21 124B                       u569_21 11A0                       u489_21 1B59  
                     u497_21 191C                       u585_25 12A3                       u489_25 1B56  
                     u594_20 1309                       u586_20 12AE                       u498_20 1D98  
                     u586_21 12AD                       u498_21 1D97                       u594_25 1304  
                     u578_25 124E                       u595_20 1326                       u499_20 1DAF  
                     u595_21 1325                       u595_25 1322                       u587_25 12B1  
                     u579_25 1257                       u499_25 1DAA                       u596_20 1343  
                     u588_20 12C2                       u596_21 1342                       u588_21 12C1  
                     u596_25 133F                       u597_20 135A                       u589_20 12C7  
                     u597_21 1359                       u589_21 12C6                       u598_20 1970  
                     u598_21 196F                       u599_20 197E                       u599_21 197D  
                     _SPBRGH 009A      __size_of_Lcd_Write_Char 001C             __end_of___xxtofl 2000  
         ??i1_Lcd_Write_Char 0071             __end_of__powers_ 1844          __size_ofi1_Lcd_Port 0006  
          __end_ofi1_Lcd_Cmd 1950                       ___flge 1EA4                       ___fleq 1B10  
          i1Lcd_Write_Char@a 0072                    ??___fladd 005A                       ___wmul 1A04  
                  ??___fldiv 0046                    ??___awdiv 007B                    ??___flneg 0074  
                  ??___awmod 0074                    ??___flmul 002C                    ??___flsub 007E  
                  ??___fltol 0055                    ??___lldiv 0078                    ??___llmod 0078  
                  ??___lwdiv 007A                    ??___lwmod 0074             ADC_setup@Channel 01D3  
                     _fround 136D             ___awdiv@quotient 0022              ___awmod@divisor 0070  
            ___awmod@counter 0075                    ??_isdigit 0070           __size_of__Umul8_16 0027  
                     saved_w 007E                    ??_sprintf 00A5              Lcd_Set_Cursor@a 01D8  
            Lcd_Set_Cursor@b 01D7                   ___flge@ff1 0070                   ___flge@ff2 0074  
               ___xxtofl@arg 007A                 ___xxtofl@exp 0079                 ___xxtofl@val 0070  
                 ___fleq@ff1 0070                   ___fleq@ff2 0074      __end_of__initialization 0030  
       __size_of_EUSART_conf 001A                   ___flneg@f1 0070            __end_of_Lcd_Clear 0811  
                 ___fltol@f1 0051               __pcstackCOMMON 0070                __end_of_scale 0C9F  
              __end_of_setup 07F8               _Lcd_Set_Cursor 19A2                   __div_to_l_ 10D2  
                  ?_Lcd_Init 0070                    ?_Lcd_Port 0070              __div_to_l_@exp1 0025  
            __div_to_l_@cntr 0024                      ??_scale 0042              __div_to_l_@quot 0020  
                    ??_setup 01D3                   __pbssBANK0 006E                   __pbssBANK1 00D3  
                 __pbssBANK2 0110                   __pbssBANK3 0190                __div_to_l_@f1 0070  
              __div_to_l_@f2 0074            __end_of__Umul8_16 1A50                   __pmaintext 1E07  
                    ?___flge 0070                      ?___fleq 0070                      ?___wmul 0070  
                 __pintentry 0004                      ?_fround 003E    __size_of_Lcd_Write_String 0054  
     __end_of_Lcd_Set_Cursor 19C0                    ?___xxtofl 0070                 ??i1_Lcd_Port 0070  
                 ??_Lcd_Init 01D7                   ??_Lcd_Port 01D3                   __stringtab 1800  
             _Lcd_Write_Char 1986                      _Lcd_Cmd 19C0    __size_ofi1_Lcd_Set_Cursor 001C  
          __end_of__npowers_ 1878                   _scale$1206 004C                    _ADC_setup 0811  
         __end_ofi1_Lcd_Port 190D              __size_of___flge 00A2              __size_of___fleq 004E  
                    ___fladd 1578                      ___fldiv 1190                      ___awdiv 1D22  
                    ___flneg 1915                      ___awmod 1C06                      ___flmul 0C9F  
                    ___flsub 19E0                      ___fltol 1D8B                      ___lldiv 1CBC  
            __size_of___wmul 0025                      ___llmod 1B5E                      ___lwdiv 1ACC  
                    ___lwmod 1A50                    _ANSELbits 0188              __size_of_fround 020B  
            ?_Lcd_Set_Cursor 01D7                      __ptext1 07D0                      __ptext2 1BB2  
                    __ptext3 1986                      __ptext4 19A2                      __ptext5 1C5F  
                    __ptext6 0804                      __ptext7 19C0                      __ptext8 190D  
                    __ptext9 1950                  ?__div_to_l_ 0070                      _dpowers 1878  
                    _isdigit 1003                 __size_of_oli 0144                   ??___xxtofl 0074  
           ___awmod@dividend 0072            ADC_setup@ConClock 01D8   __end_ofi1_Lcd_Write_String 1ACC  
                    _sprintf 0034                      clrloop0 07F9       __end_of_Lcd_Write_Char 19A2  
       end_of_initialization 0030              ___lldiv@divisor 0070              ___lldiv@counter 007D  
                 ?_ADC_setup 01D3                    _RCSTAbits 0018                    Lcd_Port@a 01D3  
             __tdiv_to_l_@f1 0070               __tdiv_to_l_@f2 0074    __size_ofi1_Lcd_Write_Char 0016  
                  i1_Lcd_Cmd 1936                ??__tdiv_to_l_ 0078                  ___fladd@grs 0065  
              ___xxtofl@sign 0078                    _TRISAbits 0085                  ___fldiv@grs 0052  
                ___fldiv@rem 004B              ?_Lcd_Write_Char 0070            Lcd_Write_String@a 01D6  
          Lcd_Write_String@i 01DB                  ___flmul@grs 0032                    _TXSTAbits 0098  
        __size_of__div_to_l_ 00BE                    _Lcd_Clear 0804               __end_of___flge 1F46  
             __end_of___fleq 1B5E               __end_of___wmul 1A29                   ?i1_Lcd_Cmd 0070  
           _Lcd_Write_String 1BB2                  _BAUDCTLbits 0187               __end_of_fround 1578  
        start_initialization 0019          __end_of__tdiv_to_l_ 10D2                  __end_of_oli 07D0  
              ??_EUSART_conf 01D3            __size_of_Lcd_Init 005D            __size_of_Lcd_Port 0008  
           i1_Lcd_Set_Cursor 196A              ___llmod@divisor 0070              ___llmod@counter 0079  
                ??_ADC_setup 01D6                   ?_Lcd_Clear 0070                     ??___flge 0078  
                   ??___fleq 0078                     ??___wmul 0074                    __Umul8_16 1A29  
            ADC_setup@Format 01D4              Lcd_Write_Char@a 01D5                     ??_fround 0042  
              sprintf@tmpval 00B7                    ___fladd@a 0056                    ___fladd@b 0052  
                 fround@prec 0051                    ___fldiv@a 003E                    ___fldiv@b 0042  
                  ___flmul@a 0028                    ___flmul@b 0024                    ___flsub@a 0066  
                  ___flsub@b 006A                    ___latbits 0002                __pcstackBANK0 0020  
              __pcstackBANK1 00A0                __pcstackBANK3 01D3            __size_of___xxtofl 00BA  
               _isdigit$1023 0070                     ?_Lcd_Cmd 0070                  sprintf@flag 00AF  
                sprintf@eexp 00B5                  sprintf@fval 00BE                  sprintf@prec 00BC  
                  __pnvBANK1 00CB          __end_of_EUSART_conf 196A             ___lwdiv@dividend 0078  
           ??_Lcd_Set_Cursor 01D8                     ?___fladd 0052                     ?___fldiv 003E  
                   ?___awdiv 0077                     ?___flneg 0070                     ?___awmod 0070  
                   ?___flmul 0024                     ?___flsub 0066                     ?___fltol 0051  
                   ?___lldiv 0070                     ?___llmod 0070                    __npowers_ 1844  
                 ?__Umul8_16 0070                     ?___lwdiv 0076                     ?___lwmod 0070  
           i1_Lcd_Write_Char 1920                  ??i1_Lcd_Cmd 0071                    __pstrings 1800  
                __tdiv_to_l_ 1015                 ??__div_to_l_ 0078                     ?_isdigit 0070  
           ___lwdiv@quotient 007B                     ?_sprintf 00A0               __size_of_scale 035F  
             __size_of_setup 0028            interrupt_function 0004               ___wmul@product 0074  
                  clear_ram0 07F8                     _PIE1bits 008C           i1_Lcd_Write_String 1A8A  
                   Lcd_Cmd@a 01D6                     _PIR1bits 000C           __end_of__div_to_l_ 1190  
                ??_Lcd_Clear 01D7          ?i1_Lcd_Write_String 0073                   _ADCON0bits 001F  
                __stringbase 180F                   _ADCON1bits 009F            ___wmul@multiplier 0070  
           ??_Lcd_Write_Char 01D4                     _Lcd_Init 1C5F                     _Lcd_Port 190D  
                _EUSART_conf 1950         ??i1_Lcd_Write_String 0075     __end_of_Lcd_Write_String 1C06  
           __size_of_Lcd_Cmd 0020                   _ADC_finish 0190                   _ADC_value1 0191  
                 _ADC_value2 00D3                  ??__Umul8_16 0072             __size_of___fladd 0288  
           __size_of___fldiv 01DD             __size_of___awdiv 0069             __size_of___flneg 000B  
           __size_of___awmod 0059             __size_of___flmul 0361             __size_of___flsub 0024  
           __size_of___fltol 007C             __size_of___lldiv 0066             __size_of___llmod 0054  
           __size_of___lwdiv 0044             __size_of___lwmod 003A                  _fround$1204 004D  
                _fround$1205 0049           __end_of__stringtab 1810     __end_ofi1_Lcd_Set_Cursor 1986  
                 sprintf@val 00B1                     ___xxtofl 1F46             __size_of_isdigit 0012  
            ___lwdiv@divisor 0076            i1Lcd_Set_Cursor@a 0075            i1Lcd_Set_Cursor@b 0074  
            ___lwdiv@counter 007D                     __ptext10 0811                     __ptext11 068C  
                   __ptext20 1D22                     __ptext12 1A8A                     __ptext21 1003  
                   __ptext13 1920                     __ptext30 1A04                     __ptext22 136D  
                   __ptext14 196A                     __ptext31 1B5E                     __ptext23 1A50  
                   __ptext15 1936                     __ptext32 1CBC                     __ptext24 1ACC  
                   __ptext16 1907                     __ptext33 1D8B                     __ptext25 0C9F  
                   __ptext17 0034                     __ptext34 19E0                     __ptext26 1A29  
                   __ptext18 0940                     __ptext35 1578                     __ptext27 1015  
                   __ptext19 1C06                     __ptext36 1915                     __ptext28 10D2  
                   __ptext37 1EA4                     __ptext29 1F46                     __ptext38 1B10  
                   __ptext39 1190                     __powers_ 1810             __size_of_sprintf 0658  
              __size_of_main 009D                  i1Lcd_Port@a 0070          i1Lcd_Write_String@a 0073  
        i1Lcd_Write_String@i 0078                     _str_vol1 0193                     _str_vol2 0110  
                 _INTCONbits 000B                     isdigit@c 0071                     scale@scl 0050  
                   intlevel1 0000                    sprintf@ap 00AE             __tdiv_to_l_@exp1 0025  
   __end_ofi1_Lcd_Write_Char 1936             __tdiv_to_l_@cntr 0024                    sprintf@sp 00BB  
           __tdiv_to_l_@quot 0020             ___lwmod@dividend 0072             ___lldiv@dividend 0074  
                 i1Lcd_Cmd@a 0073                    stringcode 180A                 ?__tdiv_to_l_ 0070  
     __Umul8_16@multiplicand 0070                     sprintf@c 00C2                     sprintf@f 00A0  
           ___lldiv@quotient 0079              ___lwmod@divisor 0070              ___lwmod@counter 0075  
                 i1_Lcd_Port 1907                     stringdir 180A                     stringtab 1800  
              ___fladd@signs 0062                 ___fladd@aexp 0063                 ___fladd@bexp 0064  
       __Umul8_16@multiplier 0078            __Umul8_16@product 0074  
