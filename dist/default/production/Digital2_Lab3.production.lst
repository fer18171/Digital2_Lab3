

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 23:37:02 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	intentry,global,class=CODE,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    54                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    55                           	dabs	1,0x7E,2
    56  0000                     
    57                           ; Version 2.20
    58                           ; Generated 12/02/2020 GMT
    59                           ; 
    60                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC16F887 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     	;# 
    92  0001                     	;# 
    93  0002                     	;# 
    94  0003                     	;# 
    95  0004                     	;# 
    96  0005                     	;# 
    97  0006                     	;# 
    98  0007                     	;# 
    99  0008                     	;# 
   100  0009                     	;# 
   101  000A                     	;# 
   102  000B                     	;# 
   103  000C                     	;# 
   104  000D                     	;# 
   105  000E                     	;# 
   106  000E                     	;# 
   107  000F                     	;# 
   108  0010                     	;# 
   109  0011                     	;# 
   110  0012                     	;# 
   111  0013                     	;# 
   112  0014                     	;# 
   113  0015                     	;# 
   114  0015                     	;# 
   115  0016                     	;# 
   116  0017                     	;# 
   117  0018                     	;# 
   118  0019                     	;# 
   119  001A                     	;# 
   120  001B                     	;# 
   121  001B                     	;# 
   122  001C                     	;# 
   123  001D                     	;# 
   124  001E                     	;# 
   125  001F                     	;# 
   126  0081                     	;# 
   127  0085                     	;# 
   128  0086                     	;# 
   129  0087                     	;# 
   130  0088                     	;# 
   131  0089                     	;# 
   132  008C                     	;# 
   133  008D                     	;# 
   134  008E                     	;# 
   135  008F                     	;# 
   136  0090                     	;# 
   137  0091                     	;# 
   138  0092                     	;# 
   139  0093                     	;# 
   140  0093                     	;# 
   141  0093                     	;# 
   142  0094                     	;# 
   143  0095                     	;# 
   144  0096                     	;# 
   145  0097                     	;# 
   146  0098                     	;# 
   147  0099                     	;# 
   148  009A                     	;# 
   149  009B                     	;# 
   150  009C                     	;# 
   151  009D                     	;# 
   152  009E                     	;# 
   153  009F                     	;# 
   154  0105                     	;# 
   155  0107                     	;# 
   156  0108                     	;# 
   157  0109                     	;# 
   158  010C                     	;# 
   159  010C                     	;# 
   160  010D                     	;# 
   161  010E                     	;# 
   162  010F                     	;# 
   163  0185                     	;# 
   164  0187                     	;# 
   165  0188                     	;# 
   166  0189                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  0000                     	;# 
   170  0001                     	;# 
   171  0002                     	;# 
   172  0003                     	;# 
   173  0004                     	;# 
   174  0005                     	;# 
   175  0006                     	;# 
   176  0007                     	;# 
   177  0008                     	;# 
   178  0009                     	;# 
   179  000A                     	;# 
   180  000B                     	;# 
   181  000C                     	;# 
   182  000D                     	;# 
   183  000E                     	;# 
   184  000E                     	;# 
   185  000F                     	;# 
   186  0010                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0013                     	;# 
   190  0014                     	;# 
   191  0015                     	;# 
   192  0015                     	;# 
   193  0016                     	;# 
   194  0017                     	;# 
   195  0018                     	;# 
   196  0019                     	;# 
   197  001A                     	;# 
   198  001B                     	;# 
   199  001B                     	;# 
   200  001C                     	;# 
   201  001D                     	;# 
   202  001E                     	;# 
   203  001F                     	;# 
   204  0081                     	;# 
   205  0085                     	;# 
   206  0086                     	;# 
   207  0087                     	;# 
   208  0088                     	;# 
   209  0089                     	;# 
   210  008C                     	;# 
   211  008D                     	;# 
   212  008E                     	;# 
   213  008F                     	;# 
   214  0090                     	;# 
   215  0091                     	;# 
   216  0092                     	;# 
   217  0093                     	;# 
   218  0093                     	;# 
   219  0093                     	;# 
   220  0094                     	;# 
   221  0095                     	;# 
   222  0096                     	;# 
   223  0097                     	;# 
   224  0098                     	;# 
   225  0099                     	;# 
   226  009A                     	;# 
   227  009B                     	;# 
   228  009C                     	;# 
   229  009D                     	;# 
   230  009E                     	;# 
   231  009F                     	;# 
   232  0105                     	;# 
   233  0107                     	;# 
   234  0108                     	;# 
   235  0109                     	;# 
   236  010C                     	;# 
   237  010C                     	;# 
   238  010D                     	;# 
   239  010E                     	;# 
   240  010F                     	;# 
   241  0185                     	;# 
   242  0187                     	;# 
   243  0188                     	;# 
   244  0189                     	;# 
   245  018C                     	;# 
   246  018D                     	;# 
   247  0000                     	;# 
   248  0001                     	;# 
   249  0002                     	;# 
   250  0003                     	;# 
   251  0004                     	;# 
   252  0005                     	;# 
   253  0006                     	;# 
   254  0007                     	;# 
   255  0008                     	;# 
   256  0009                     	;# 
   257  000A                     	;# 
   258  000B                     	;# 
   259  000C                     	;# 
   260  000D                     	;# 
   261  000E                     	;# 
   262  000E                     	;# 
   263  000F                     	;# 
   264  0010                     	;# 
   265  0011                     	;# 
   266  0012                     	;# 
   267  0013                     	;# 
   268  0014                     	;# 
   269  0015                     	;# 
   270  0015                     	;# 
   271  0016                     	;# 
   272  0017                     	;# 
   273  0018                     	;# 
   274  0019                     	;# 
   275  001A                     	;# 
   276  001B                     	;# 
   277  001B                     	;# 
   278  001C                     	;# 
   279  001D                     	;# 
   280  001E                     	;# 
   281  001F                     	;# 
   282  0081                     	;# 
   283  0085                     	;# 
   284  0086                     	;# 
   285  0087                     	;# 
   286  0088                     	;# 
   287  0089                     	;# 
   288  008C                     	;# 
   289  008D                     	;# 
   290  008E                     	;# 
   291  008F                     	;# 
   292  0090                     	;# 
   293  0091                     	;# 
   294  0092                     	;# 
   295  0093                     	;# 
   296  0093                     	;# 
   297  0093                     	;# 
   298  0094                     	;# 
   299  0095                     	;# 
   300  0096                     	;# 
   301  0097                     	;# 
   302  0098                     	;# 
   303  0099                     	;# 
   304  009A                     	;# 
   305  009B                     	;# 
   306  009C                     	;# 
   307  009D                     	;# 
   308  009E                     	;# 
   309  009F                     	;# 
   310  0105                     	;# 
   311  0107                     	;# 
   312  0108                     	;# 
   313  0109                     	;# 
   314  010C                     	;# 
   315  010C                     	;# 
   316  010D                     	;# 
   317  010E                     	;# 
   318  010F                     	;# 
   319  0185                     	;# 
   320  0187                     	;# 
   321  0188                     	;# 
   322  0189                     	;# 
   323  018C                     	;# 
   324  018D                     	;# 
   325  0000                     	;# 
   326  0001                     	;# 
   327  0002                     	;# 
   328  0003                     	;# 
   329  0004                     	;# 
   330  0005                     	;# 
   331  0006                     	;# 
   332  0007                     	;# 
   333  0008                     	;# 
   334  0009                     	;# 
   335  000A                     	;# 
   336  000B                     	;# 
   337  000C                     	;# 
   338  000D                     	;# 
   339  000E                     	;# 
   340  000E                     	;# 
   341  000F                     	;# 
   342  0010                     	;# 
   343  0011                     	;# 
   344  0012                     	;# 
   345  0013                     	;# 
   346  0014                     	;# 
   347  0015                     	;# 
   348  0015                     	;# 
   349  0016                     	;# 
   350  0017                     	;# 
   351  0018                     	;# 
   352  0019                     	;# 
   353  001A                     	;# 
   354  001B                     	;# 
   355  001B                     	;# 
   356  001C                     	;# 
   357  001D                     	;# 
   358  001E                     	;# 
   359  001F                     	;# 
   360  0081                     	;# 
   361  0085                     	;# 
   362  0086                     	;# 
   363  0087                     	;# 
   364  0088                     	;# 
   365  0089                     	;# 
   366  008C                     	;# 
   367  008D                     	;# 
   368  008E                     	;# 
   369  008F                     	;# 
   370  0090                     	;# 
   371  0091                     	;# 
   372  0092                     	;# 
   373  0093                     	;# 
   374  0093                     	;# 
   375  0093                     	;# 
   376  0094                     	;# 
   377  0095                     	;# 
   378  0096                     	;# 
   379  0097                     	;# 
   380  0098                     	;# 
   381  0099                     	;# 
   382  009A                     	;# 
   383  009B                     	;# 
   384  009C                     	;# 
   385  009D                     	;# 
   386  009E                     	;# 
   387  009F                     	;# 
   388  0105                     	;# 
   389  0107                     	;# 
   390  0108                     	;# 
   391  0109                     	;# 
   392  010C                     	;# 
   393  010C                     	;# 
   394  010D                     	;# 
   395  010E                     	;# 
   396  010F                     	;# 
   397  0185                     	;# 
   398  0187                     	;# 
   399  0188                     	;# 
   400  0189                     	;# 
   401  018C                     	;# 
   402  018D                     	;# 
   403  0000                     	;# 
   404  0001                     	;# 
   405  0002                     	;# 
   406  0003                     	;# 
   407  0004                     	;# 
   408  0005                     	;# 
   409  0006                     	;# 
   410  0007                     	;# 
   411  0008                     	;# 
   412  0009                     	;# 
   413  000A                     	;# 
   414  000B                     	;# 
   415  000C                     	;# 
   416  000D                     	;# 
   417  000E                     	;# 
   418  000E                     	;# 
   419  000F                     	;# 
   420  0010                     	;# 
   421  0011                     	;# 
   422  0012                     	;# 
   423  0013                     	;# 
   424  0014                     	;# 
   425  0015                     	;# 
   426  0015                     	;# 
   427  0016                     	;# 
   428  0017                     	;# 
   429  0018                     	;# 
   430  0019                     	;# 
   431  001A                     	;# 
   432  001B                     	;# 
   433  001B                     	;# 
   434  001C                     	;# 
   435  001D                     	;# 
   436  001E                     	;# 
   437  001F                     	;# 
   438  0081                     	;# 
   439  0085                     	;# 
   440  0086                     	;# 
   441  0087                     	;# 
   442  0088                     	;# 
   443  0089                     	;# 
   444  008C                     	;# 
   445  008D                     	;# 
   446  008E                     	;# 
   447  008F                     	;# 
   448  0090                     	;# 
   449  0091                     	;# 
   450  0092                     	;# 
   451  0093                     	;# 
   452  0093                     	;# 
   453  0093                     	;# 
   454  0094                     	;# 
   455  0095                     	;# 
   456  0096                     	;# 
   457  0097                     	;# 
   458  0098                     	;# 
   459  0099                     	;# 
   460  009A                     	;# 
   461  009B                     	;# 
   462  009C                     	;# 
   463  009D                     	;# 
   464  009E                     	;# 
   465  009F                     	;# 
   466  0105                     	;# 
   467  0107                     	;# 
   468  0108                     	;# 
   469  0109                     	;# 
   470  010C                     	;# 
   471  010C                     	;# 
   472  010D                     	;# 
   473  010E                     	;# 
   474  010F                     	;# 
   475  0185                     	;# 
   476  0187                     	;# 
   477  0188                     	;# 
   478  0189                     	;# 
   479  018C                     	;# 
   480  018D                     	;# 
   481                           
   482                           	psect	strings
   483  0000'                    __pstrings:
   484  0000'                    stringtab:
   485  0000'                    __stringtab:
   486                           
   487                           ;	String table - string pointers are 1 byte each
   488  0000' 1BFF               	btfsc	btemp+1,7
   489  0001' 2800'              	ljmp	stringcode
   490  0002' 1383               	bcf	3,7
   491  0003' 187F               	btfsc	btemp+1,0
   492  0004' 1783               	bsf	3,7
   493  0005' 0800               	movf	0,w
   494  0006' 0A84               	incf	4,f
   495  0007' 1903               	skipnz
   496  0008' 0AFF               	incf	btemp+1,f
   497  0009' 0008               	return
   498  000A'                    stringcode:
   499  000A'                    stringdir:
   500  000A' 3000'              	movlw	high stringdir
   501  000B' 008A               	movwf	10
   502  000C' 0804               	movf	4,w
   503  000D' 0A84               	incf	4,f
   504  000E' 0782               	addwf	2,f
   505  000F'                    __stringbase:
   506  000F' 3400               	retlw	0
   507  0010'                    __end_of__stringtab:
   508  0010'                    __powers_:
   509  0010' 3400               	retlw	0
   510  0011' 3400               	retlw	0
   511  0012' 3480               	retlw	128
   512  0013' 343F               	retlw	63
   513  0014' 3400               	retlw	0
   514  0015' 3400               	retlw	0
   515  0016' 3420               	retlw	32
   516  0017' 3441               	retlw	65
   517  0018' 3400               	retlw	0
   518  0019' 3400               	retlw	0
   519  001A' 34C8               	retlw	200
   520  001B' 3442               	retlw	66
   521  001C' 3400               	retlw	0
   522  001D' 3400               	retlw	0
   523  001E' 347A               	retlw	122
   524  001F' 3444               	retlw	68
   525  0020' 3400               	retlw	0
   526  0021' 3440               	retlw	64
   527  0022' 341C               	retlw	28
   528  0023' 3446               	retlw	70
   529  0024' 3400               	retlw	0
   530  0025' 3450               	retlw	80
   531  0026' 34C3               	retlw	195
   532  0027' 3447               	retlw	71
   533  0028' 3400               	retlw	0
   534  0029' 3424               	retlw	36
   535  002A' 3474               	retlw	116
   536  002B' 3449               	retlw	73
   537  002C' 3480               	retlw	128
   538  002D' 3496               	retlw	150
   539  002E' 3418               	retlw	24
   540  002F' 344B               	retlw	75
   541  0030' 3420               	retlw	32
   542  0031' 34BC               	retlw	188
   543  0032' 34BE               	retlw	190
   544  0033' 344C               	retlw	76
   545  0034' 3428               	retlw	40
   546  0035' 346B               	retlw	107
   547  0036' 346E               	retlw	110
   548  0037' 344E               	retlw	78
   549  0038' 34F9               	retlw	249
   550  0039' 3402               	retlw	2
   551  003A' 3415               	retlw	21
   552  003B' 3450               	retlw	80
   553  003C' 34EC               	retlw	236
   554  003D' 3478               	retlw	120
   555  003E' 34AD               	retlw	173
   556  003F' 3460               	retlw	96
   557  0040' 34CA               	retlw	202
   558  0041' 34F2               	retlw	242
   559  0042' 3449               	retlw	73
   560  0043' 3471               	retlw	113
   561  0044'                    __end_of__powers_:
   562  0044'                    __npowers_:
   563  0044' 3400               	retlw	0
   564  0045' 3400               	retlw	0
   565  0046' 3480               	retlw	128
   566  0047' 343F               	retlw	63
   567  0048' 34CD               	retlw	205
   568  0049' 34CC               	retlw	204
   569  004A' 34CC               	retlw	204
   570  004B' 343D               	retlw	61
   571  004C' 340A               	retlw	10
   572  004D' 34D7               	retlw	215
   573  004E' 3423               	retlw	35
   574  004F' 343C               	retlw	60
   575  0050' 346F               	retlw	111
   576  0051' 3412               	retlw	18
   577  0052' 3483               	retlw	131
   578  0053' 343A               	retlw	58
   579  0054' 3417               	retlw	23
   580  0055' 34B7               	retlw	183
   581  0056' 34D1               	retlw	209
   582  0057' 3438               	retlw	56
   583  0058' 34AC               	retlw	172
   584  0059' 34C5               	retlw	197
   585  005A' 3427               	retlw	39
   586  005B' 3437               	retlw	55
   587  005C' 34BD               	retlw	189
   588  005D' 3437               	retlw	55
   589  005E' 3486               	retlw	134
   590  005F' 3435               	retlw	53
   591  0060' 3495               	retlw	149
   592  0061' 34BF               	retlw	191
   593  0062' 34D6               	retlw	214
   594  0063' 3433               	retlw	51
   595  0064' 3477               	retlw	119
   596  0065' 34CC               	retlw	204
   597  0066' 342B               	retlw	43
   598  0067' 3432               	retlw	50
   599  0068' 345F               	retlw	95
   600  0069' 3470               	retlw	112
   601  006A' 3489               	retlw	137
   602  006B' 3430               	retlw	48
   603  006C' 34FF               	retlw	255
   604  006D' 34E6               	retlw	230
   605  006E' 34DB               	retlw	219
   606  006F' 342E               	retlw	46
   607  0070' 3408               	retlw	8
   608  0071' 34E5               	retlw	229
   609  0072' 343C               	retlw	60
   610  0073' 341E               	retlw	30
   611  0074' 3460               	retlw	96
   612  0075' 3442               	retlw	66
   613  0076' 34A2               	retlw	162
   614  0077' 340D               	retlw	13
   615  0078'                    __end_of__npowers_:
   616  0078'                    _dpowers:
   617  0078' 3401               	retlw	1
   618  0079' 3400               	retlw	0
   619  007A' 3400               	retlw	0
   620  007B' 3400               	retlw	0
   621  007C' 340A               	retlw	10
   622  007D' 3400               	retlw	0
   623  007E' 3400               	retlw	0
   624  007F' 3400               	retlw	0
   625  0080' 3464               	retlw	100
   626  0081' 3400               	retlw	0
   627  0082' 3400               	retlw	0
   628  0083' 3400               	retlw	0
   629  0084' 34E8               	retlw	232
   630  0085' 3403               	retlw	3
   631  0086' 3400               	retlw	0
   632  0087' 3400               	retlw	0
   633  0088' 3410               	retlw	16
   634  0089' 3427               	retlw	39
   635  008A' 3400               	retlw	0
   636  008B' 3400               	retlw	0
   637  008C' 34A0               	retlw	160
   638  008D' 3486               	retlw	134
   639  008E' 3401               	retlw	1
   640  008F' 3400               	retlw	0
   641  0090' 3440               	retlw	64
   642  0091' 3442               	retlw	66
   643  0092' 340F               	retlw	15
   644  0093' 3400               	retlw	0
   645  0094' 3480               	retlw	128
   646  0095' 3496               	retlw	150
   647  0096' 3498               	retlw	152
   648  0097' 3400               	retlw	0
   649  0098' 3400               	retlw	0
   650  0099' 34E1               	retlw	225
   651  009A' 34F5               	retlw	245
   652  009B' 3405               	retlw	5
   653  009C' 3400               	retlw	0
   654  009D' 34CA               	retlw	202
   655  009E' 349A               	retlw	154
   656  009F' 343B               	retlw	59
   657  00A0'                    __end_of_dpowers:
   658  00A0'                    STR_1:
   659  00A0' 3420               	retlw	32	;' '
   660  00A1' 3453               	retlw	83	;'S'
   661  00A2' 3431               	retlw	49	;'1'
   662  00A3' 343A               	retlw	58	;':'
   663  00A4' 3420               	retlw	32	;' '
   664  00A5' 3420               	retlw	32	;' '
   665  00A6' 3420               	retlw	32	;' '
   666  00A7' 3453               	retlw	83	;'S'
   667  00A8' 3432               	retlw	50	;'2'
   668  00A9' 343A               	retlw	58	;':'
   669  00AA' 3420               	retlw	32	;' '
   670  00AB' 3420               	retlw	32	;' '
   671  00AC' 3453               	retlw	83	;'S'
   672  00AD' 3433               	retlw	51	;'3'
   673  00AE' 343A               	retlw	58	;':'
   674  00AF' 3400               	retlw	0
   675  00B0'                    STR_2:
   676  00B0' 3425               	retlw	37	;'%'
   677  00B1' 342E               	retlw	46	;'.'
   678  00B2' 3432               	retlw	50	;'2'
   679  00B3' 3466               	retlw	102	;'f'
   680  00B4' 3400               	retlw	0
   681  00B5'                    STR_3:
   682  00B5' 3456               	retlw	86	;'V'
   683  00B6' 3420               	retlw	32	;' '
   684  00B7' 3400               	retlw	0
   685  00B8'                    STR_6:
   686  00B8' 3425               	retlw	37	;'%'
   687  00B9' 3469               	retlw	105	;'i'
   688  00BA' 3400               	retlw	0
   689  00B5'                    
   690                           	psect	nvBANK1
   691  0000'                    __pnvBANK1:
   692  0000'                    _vol2:
   693  0000'                    	ds	4
   694  0004'                    _vol1:
   695  0004'                    	ds	4
   696  001A                     _RCREG	set	26
   697  0018                     _RCSTAbits	set	24
   698  0008                     _PORTD	set	8
   699  001E                     _ADRESH	set	30
   700  000C                     _PIR1bits	set	12
   701  000B                     _INTCONbits	set	11
   702  001F                     _ADCON0bits	set	31
   703  0031                     _RB1	set	49
   704  0030                     _RB0	set	48
   705  009A                     _SPBRGH	set	154
   706  0099                     _SPBRG	set	153
   707  0098                     _TXSTAbits	set	152
   708  008C                     _PIE1bits	set	140
   709  009F                     _ADCON1bits	set	159
   710  0085                     _TRISAbits	set	133
   711  0086                     _TRISB	set	134
   712  0085                     _TRISA	set	133
   713  0088                     _TRISD	set	136
   714  0087                     _TRISCbits	set	135
   715  0087                     _TRISC	set	135
   716  0187                     _BAUDCTLbits	set	391
   717  0188                     _ANSELbits	set	392
   718  0189                     _ANSELH	set	393
   719  0188                     _ANSEL	set	392
   720                           
   721                           	psect	cinit
   722  0000'                    start_initialization:	
   723                           ; #config settings
   724                           
   725  0000'                    __initialization:
   726                           
   727                           ; Clear objects allocated to COMMON
   728  0000' 0180'              	clrf	__pbssCOMMON& (0+127)
   729                           
   730                           ; Clear objects allocated to BANK0
   731  0001' 1283               	bcf	3,5	;RP0=0, select bank0
   732  0002' 1303               	bcf	3,6	;RP1=0, select bank0
   733  0003' 0180'              	clrf	__pbssBANK0& (0+127)
   734                           
   735                           ; Clear objects allocated to BANK1
   736  0004' 1383               	bcf	3,7	;select IRP bank0
   737  0005' 3000'              	movlw	low __pbssBANK1
   738  0006' 0084               	movwf	4
   739  0007' 3000'              	movlw	low (__pbssBANK1+25)
   740  0008' 120A' 118A' 2000' 120A' 118A' 	fcall	clear_ram0
   741                           
   742                           ; Clear objects allocated to BANK3
   743  000D' 1783               	bsf	3,7	;select IRP bank2
   744  000E' 3000'              	movlw	low __pbssBANK3
   745  000F' 0084               	movwf	4
   746  0010' 3000'              	movlw	low (__pbssBANK3+40)
   747  0011' 120A' 118A' 2000' 120A' 118A' 	fcall	clear_ram0
   748  0016'                    end_of_initialization:	
   749                           ;End of C runtime variable initialization code
   750                           
   751  0016'                    __end_of__initialization:
   752  0016' 0183               	clrf	3
   753  0017' 120A' 118A' 2800'  	ljmp	_main	;jump to C main() function
   754                           
   755                           	psect	bssCOMMON
   756  0000'                    __pbssCOMMON:
   757  0000'                    _a:
   758  0000'                    	ds	1
   759                           
   760                           	psect	bssBANK0
   761  0000'                    __pbssBANK0:
   762  0000'                    _Pots:
   763  0000'                    	ds	1
   764                           
   765                           	psect	bssBANK1
   766  0000'                    __pbssBANK1:
   767  0000'                    _comando:
   768  0000'                    	ds	1
   769  0001'                    _contador:
   770  0001'                    	ds	1
   771  0002'                    _ADC_finish:
   772  0002'                    	ds	1
   773  0003'                    _ADC_value2:
   774  0003'                    	ds	1
   775  0004'                    _ADC_value1:
   776  0004'                    	ds	1
   777  0005'                    _str_vol1:
   778  0005'                    	ds	20
   779                           
   780                           	psect	bssBANK3
   781  0000'                    __pbssBANK3:
   782  0000'                    _str_contador:
   783  0000'                    	ds	20
   784  0014'                    _str_vol2:
   785  0014'                    	ds	20
   786                           
   787                           	psect	clrtext
   788  0000'                    clear_ram0:	
   789                           ;	Called with FSR containing the base address, and
   790                           ;	W with the last address+1
   791                           
   792  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
   793  0001'                    clrloop0:
   794  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
   795  0002' 0A84               	incf	4,f	;increment pointer
   796  0003' 0604               	xorwf	4,w	;XOR with final address
   797  0004' 1903               	btfsc	3,2	;have we reached the end yet?
   798  0005' 3400               	retlw	0	;all done for this memory range, return
   799  0006' 0604               	xorwf	4,w	;XOR again to restore value
   800  0007' 2800'              	goto	clrloop0	;do the next byte
   801                           
   802                           	psect	cstackBANK3
   803  0000'                    __pcstackBANK3:
   804  0000'                    ??_main:
   805                           
   806                           ; 1 bytes @ 0x0
   807  0000'                    	ds	4
   808                           
   809                           	psect	cstackBANK1
   810  0000'                    __pcstackBANK1:
   811  0000'                    ?___flsub:
   812  0000'                    ___flsub@a:	
   813                           ; 4 bytes @ 0x0
   814                           
   815                           
   816                           ; 4 bytes @ 0x0
   817  0000'                    	ds	4
   818  0004'                    ___flsub@b:
   819                           
   820                           ; 4 bytes @ 0x4
   821  0004'                    	ds	4
   822  0008'                    ?_sprintf:
   823  0008'                    sprintf@sp:	
   824                           ; 2 bytes @ 0x8
   825                           
   826                           
   827                           ; 2 bytes @ 0x8
   828  0008'                    	ds	2
   829  000A'                    sprintf@f:
   830                           
   831                           ; 1 bytes @ 0xA
   832  000A'                    	ds	5
   833  000F'                    ??_sprintf:
   834                           
   835                           ; 1 bytes @ 0xF
   836  000F'                    	ds	5
   837  0014'                    _sprintf$1256:
   838                           
   839                           ; 4 bytes @ 0x14
   840  0014'                    	ds	4
   841  0018'                    sprintf@ap:
   842                           
   843                           ; 1 bytes @ 0x18
   844  0018'                    	ds	1
   845  0019'                    sprintf@flag:
   846                           
   847                           ; 2 bytes @ 0x19
   848  0019'                    	ds	2
   849  001B'                    sprintf@eexp:
   850                           
   851                           ; 2 bytes @ 0x1B
   852  001B'                    	ds	2
   853  001D'                    sprintf@tmpval:
   854                           
   855                           ; 4 bytes @ 0x1D
   856  001D'                    	ds	4
   857  0021'                    sprintf@val:
   858                           
   859                           ; 4 bytes @ 0x21
   860  0021'                    	ds	4
   861  0025'                    sprintf@fval:
   862                           
   863                           ; 4 bytes @ 0x25
   864  0025'                    	ds	4
   865  0029'                    sprintf@prec:
   866                           
   867                           ; 2 bytes @ 0x29
   868  0029'                    	ds	2
   869  002B'                    sprintf@c:
   870                           
   871                           ; 1 bytes @ 0x2B
   872  002B'                    	ds	1
   873                           
   874                           	psect	cstackCOMMON
   875  0000'                    __pcstackCOMMON:
   876  0000'                    ?_isdigit:
   877  0000'                    ?_setup:	
   878                           ; 1 bit 
   879                           
   880  0000'                    ?_Lcd_Init:	
   881                           ; 1 bytes @ 0x0
   882                           
   883  0000'                    ?_EUSART_conf:	
   884                           ; 1 bytes @ 0x0
   885                           
   886  0000'                    ?_Lcd_Clear:	
   887                           ; 1 bytes @ 0x0
   888                           
   889  0000'                    ?_Receive:	
   890                           ; 1 bytes @ 0x0
   891                           
   892  0000'                    ??_Receive:	
   893                           ; 1 bytes @ 0x0
   894                           
   895  0000'                    ?_main:	
   896                           ; 1 bytes @ 0x0
   897                           
   898  0000'                    ?_oli:	
   899                           ; 1 bytes @ 0x0
   900                           
   901  0000'                    ??_oli:	
   902                           ; 1 bytes @ 0x0
   903                           
   904  0000'                    ?_Lcd_Port:	
   905                           ; 1 bytes @ 0x0
   906                           
   907  0000'                    ?_Lcd_Cmd:	
   908                           ; 1 bytes @ 0x0
   909                           
   910  0000'                    ?_Lcd_Write_Char:	
   911                           ; 1 bytes @ 0x0
   912                           
   913                           
   914                           ; 1 bytes @ 0x0
   915  0000'                    	ds	3
   916  0003'                    ??_setup:
   917  0003'                    ?_ADC_setup:	
   918                           ; 1 bytes @ 0x3
   919                           
   920  0003'                    ??_EUSART_conf:	
   921                           ; 1 bytes @ 0x3
   922                           
   923  0003'                    ??_isdigit:	
   924                           ; 1 bytes @ 0x3
   925                           
   926  0003'                    ??__tdiv_to_l_:	
   927                           ; 1 bytes @ 0x3
   928                           
   929  0003'                    ??__div_to_l_:	
   930                           ; 1 bytes @ 0x3
   931                           
   932  0003'                    ??_Lcd_Port:	
   933                           ; 1 bytes @ 0x3
   934                           
   935  0003'                    ??___lldiv:	
   936                           ; 1 bytes @ 0x3
   937                           
   938  0003'                    ??___fleq:	
   939                           ; 1 bytes @ 0x3
   940                           
   941  0003'                    ??___flge:	
   942                           ; 1 bytes @ 0x3
   943                           
   944  0003'                    ?__Umul8_16:	
   945                           ; 1 bytes @ 0x3
   946                           
   947  0003'                    ?___wmul:	
   948                           ; 2 bytes @ 0x3
   949                           
   950  0003'                    ?___awmod:	
   951                           ; 2 bytes @ 0x3
   952                           
   953  0003'                    ?___lwmod:	
   954                           ; 2 bytes @ 0x3
   955                           
   956  0003'                    ?___flneg:	
   957                           ; 2 bytes @ 0x3
   958                           
   959  0003'                    ?___xxtofl:	
   960                           ; 4 bytes @ 0x3
   961                           
   962  0003'                    ADC_setup@Channel:	
   963                           ; 4 bytes @ 0x3
   964                           
   965  0003'                    Lcd_Port@a:	
   966                           ; 1 bytes @ 0x3
   967                           
   968  0003'                    __Umul8_16@multiplicand:	
   969                           ; 1 bytes @ 0x3
   970                           
   971  0003'                    _isdigit$1072:	
   972                           ; 1 bytes @ 0x3
   973                           
   974  0003'                    ___wmul@multiplier:	
   975                           ; 1 bytes @ 0x3
   976                           
   977  0003'                    ___awmod@divisor:	
   978                           ; 2 bytes @ 0x3
   979                           
   980  0003'                    ___lwmod@divisor:	
   981                           ; 2 bytes @ 0x3
   982                           
   983  0003'                    ___flneg@f1:	
   984                           ; 2 bytes @ 0x3
   985                           
   986  0003'                    ___xxtofl@val:	
   987                           ; 4 bytes @ 0x3
   988                           
   989                           
   990                           ; 4 bytes @ 0x3
   991  0003'                    	ds	1
   992  0004'                    ??_Lcd_Cmd:
   993  0004'                    ??_Lcd_Write_Char:	
   994                           ; 1 bytes @ 0x4
   995                           
   996  0004'                    ADC_setup@Format:	
   997                           ; 1 bytes @ 0x4
   998                           
   999  0004'                    isdigit@c:	
  1000                           ; 1 bytes @ 0x4
  1001                           
  1002  0004'                    ___lldiv@quotient:	
  1003                           ; 1 bytes @ 0x4
  1004                           
  1005  0004'                    __div_to_l_@quot:	
  1006                           ; 4 bytes @ 0x4
  1007                           
  1008                           
  1009                           ; 4 bytes @ 0x4
  1010  0004'                    	ds	1
  1011  0005'                    ??__Umul8_16:
  1012  0005'                    ADC_setup@Vref:	
  1013                           ; 1 bytes @ 0x5
  1014                           
  1015  0005'                    Lcd_Write_Char@a:	
  1016                           ; 1 bytes @ 0x5
  1017                           
  1018  0005'                    ___wmul@multiplicand:	
  1019                           ; 1 bytes @ 0x5
  1020                           
  1021  0005'                    ___awmod@dividend:	
  1022                           ; 2 bytes @ 0x5
  1023                           
  1024  0005'                    ___lwmod@dividend:	
  1025                           ; 2 bytes @ 0x5
  1026                           
  1027                           
  1028                           ; 2 bytes @ 0x5
  1029  0005'                    	ds	1
  1030  0006'                    ??_ADC_setup:
  1031  0006'                    ?_Lcd_Write_String:	
  1032                           ; 1 bytes @ 0x6
  1033                           
  1034  0006'                    Lcd_Cmd@a:	
  1035                           ; 1 bytes @ 0x6
  1036                           
  1037  0006'                    Lcd_Write_String@a:	
  1038                           ; 1 bytes @ 0x6
  1039                           
  1040                           
  1041                           ; 2 bytes @ 0x6
  1042  0006'                    	ds	1
  1043  0007'                    ??_Lcd_Init:
  1044  0007'                    ??_Lcd_Clear:	
  1045                           ; 1 bytes @ 0x7
  1046                           
  1047  0007'                    ?_Lcd_Set_Cursor:	
  1048                           ; 1 bytes @ 0x7
  1049                           
  1050  0007'                    ??___wmul:	
  1051                           ; 1 bytes @ 0x7
  1052                           
  1053  0007'                    ??___awmod:	
  1054                           ; 1 bytes @ 0x7
  1055                           
  1056  0007'                    ??___flneg:	
  1057                           ; 1 bytes @ 0x7
  1058                           
  1059  0007'                    ??___lwmod:	
  1060                           ; 1 bytes @ 0x7
  1061                           
  1062  0007'                    Lcd_Set_Cursor@b:	
  1063                           ; 1 bytes @ 0x7
  1064                           
  1065  0007'                    ___wmul@product:	
  1066                           ; 1 bytes @ 0x7
  1067                           
  1068                           
  1069                           ; 2 bytes @ 0x7
  1070  0007'                    	ds	1
  1071  0008'                    ??_Lcd_Set_Cursor:
  1072  0008'                    ADC_setup@ConClock:	
  1073                           ; 1 bytes @ 0x8
  1074                           
  1075  0008'                    Lcd_Set_Cursor@a:	
  1076                           ; 1 bytes @ 0x8
  1077                           
  1078  0008'                    ___lldiv@counter:	
  1079                           ; 1 bytes @ 0x8
  1080                           
  1081  0008'                    ___awmod@counter:	
  1082                           ; 1 bytes @ 0x8
  1083                           
  1084  0008'                    __div_to_l_@cntr:	
  1085                           ; 1 bytes @ 0x8
  1086                           
  1087  0008'                    ___lwmod@counter:	
  1088                           ; 1 bytes @ 0x8
  1089                           
  1090  0008'                    Lcd_Write_String@i:	
  1091                           ; 1 bytes @ 0x8
  1092                           
  1093                           
  1094                           ; 2 bytes @ 0x8
  1095  0008'                    	ds	1
  1096  0009'                    ??___llmod:
  1097  0009'                    ??___lwdiv:	
  1098                           ; 1 bytes @ 0x9
  1099                           
  1100  0009'                    ___awmod@sign:	
  1101                           ; 1 bytes @ 0x9
  1102                           
  1103  0009'                    __div_to_l_@exp1:	
  1104                           ; 1 bytes @ 0x9
  1105                           
  1106                           
  1107                           ; 1 bytes @ 0x9
  1108  0009'                    	ds	1
  1109  000A'                    ??___flsub:
  1110                           
  1111                           	psect	cstackBANK0
  1112  0000'                    __pcstackBANK0:	
  1113                           ; 1 bytes @ 0xA
  1114                           
  1115  0000'                    ?___fleq:
  1116  0000'                    ?___flge:	
  1117                           ; 1 bit 
  1118                           
  1119  0000'                    ??_Lcd_Write_String:	
  1120                           ; 1 bit 
  1121                           
  1122  0000'                    ??___xxtofl:	
  1123                           ; 1 bytes @ 0x0
  1124                           
  1125  0000'                    ?___awdiv:	
  1126                           ; 1 bytes @ 0x0
  1127                           
  1128  0000'                    ?___lwdiv:	
  1129                           ; 2 bytes @ 0x0
  1130                           
  1131  0000'                    ?__tdiv_to_l_:	
  1132                           ; 2 bytes @ 0x0
  1133                           
  1134  0000'                    ?__div_to_l_:	
  1135                           ; 4 bytes @ 0x0
  1136                           
  1137  0000'                    ?___lldiv:	
  1138                           ; 4 bytes @ 0x0
  1139                           
  1140  0000'                    ___awdiv@divisor:	
  1141                           ; 4 bytes @ 0x0
  1142                           
  1143  0000'                    ___lwdiv@divisor:	
  1144                           ; 2 bytes @ 0x0
  1145                           
  1146  0000'                    __Umul8_16@product:	
  1147                           ; 2 bytes @ 0x0
  1148                           
  1149  0000'                    ___lldiv@divisor:	
  1150                           ; 2 bytes @ 0x0
  1151                           
  1152  0000'                    __div_to_l_@f1:	
  1153                           ; 4 bytes @ 0x0
  1154                           
  1155  0000'                    ___fleq@ff1:	
  1156                           ; 4 bytes @ 0x0
  1157                           
  1158  0000'                    ___flge@ff1:	
  1159                           ; 4 bytes @ 0x0
  1160                           
  1161  0000'                    __tdiv_to_l_@f1:	
  1162                           ; 4 bytes @ 0x0
  1163                           
  1164                           
  1165                           ; 4 bytes @ 0x0
  1166  0000'                    	ds	2
  1167  0002'                    ___awdiv@dividend:
  1168  0002'                    ___lwdiv@dividend:	
  1169                           ; 2 bytes @ 0x2
  1170                           
  1171  0002'                    __Umul8_16@word_mpld:	
  1172                           ; 2 bytes @ 0x2
  1173                           
  1174                           
  1175                           ; 2 bytes @ 0x2
  1176  0002'                    	ds	2
  1177  0004'                    ??___awdiv:
  1178  0004'                    __Umul8_16@multiplier:	
  1179                           ; 1 bytes @ 0x4
  1180                           
  1181  0004'                    ___xxtofl@sign:	
  1182                           ; 1 bytes @ 0x4
  1183                           
  1184  0004'                    ___lwdiv@quotient:	
  1185                           ; 1 bytes @ 0x4
  1186                           
  1187  0004'                    ___lldiv@dividend:	
  1188                           ; 2 bytes @ 0x4
  1189                           
  1190  0004'                    __div_to_l_@f2:	
  1191                           ; 4 bytes @ 0x4
  1192                           
  1193  0004'                    ___fleq@ff2:	
  1194                           ; 4 bytes @ 0x4
  1195                           
  1196  0004'                    ___flge@ff2:	
  1197                           ; 4 bytes @ 0x4
  1198                           
  1199  0004'                    __tdiv_to_l_@f2:	
  1200                           ; 4 bytes @ 0x4
  1201                           
  1202                           
  1203                           ; 4 bytes @ 0x4
  1204  0004'                    	ds	1
  1205  0005'                    ___awdiv@counter:
  1206  0005'                    ___xxtofl@exp:	
  1207                           ; 1 bytes @ 0x5
  1208                           
  1209                           
  1210                           ; 1 bytes @ 0x5
  1211  0005'                    	ds	1
  1212  0006'                    ___awdiv@sign:
  1213  0006'                    ___lwdiv@counter:	
  1214                           ; 1 bytes @ 0x6
  1215                           
  1216  0006'                    ___xxtofl@arg:	
  1217                           ; 1 bytes @ 0x6
  1218                           
  1219                           
  1220                           ; 4 bytes @ 0x6
  1221  0006'                    	ds	1
  1222  0007'                    ___awdiv@quotient:
  1223                           
  1224                           ; 2 bytes @ 0x7
  1225  0007'                    	ds	1
  1226  0008'                    ?___llmod:
  1227  0008'                    __tdiv_to_l_@quot:	
  1228                           ; 4 bytes @ 0x8
  1229                           
  1230  0008'                    ___llmod@divisor:	
  1231                           ; 4 bytes @ 0x8
  1232                           
  1233                           
  1234                           ; 4 bytes @ 0x8
  1235  0008'                    	ds	2
  1236  000A'                    ?___flmul:
  1237  000A'                    ___flmul@b:	
  1238                           ; 4 bytes @ 0xA
  1239                           
  1240                           
  1241                           ; 4 bytes @ 0xA
  1242  000A'                    	ds	2
  1243  000C'                    __tdiv_to_l_@cntr:
  1244  000C'                    ___llmod@dividend:	
  1245                           ; 1 bytes @ 0xC
  1246                           
  1247                           
  1248                           ; 4 bytes @ 0xC
  1249  000C'                    	ds	1
  1250  000D'                    __tdiv_to_l_@exp1:
  1251                           
  1252                           ; 1 bytes @ 0xD
  1253  000D'                    	ds	1
  1254  000E'                    ___flmul@a:
  1255                           
  1256                           ; 4 bytes @ 0xE
  1257  000E'                    	ds	2
  1258  0010'                    ___llmod@counter:
  1259                           
  1260                           ; 1 bytes @ 0x10
  1261  0010'                    	ds	2
  1262  0012'                    ??___flmul:
  1263                           
  1264                           ; 1 bytes @ 0x12
  1265  0012'                    	ds	5
  1266  0017'                    ___flmul@sign:
  1267                           
  1268                           ; 1 bytes @ 0x17
  1269  0017'                    	ds	1
  1270  0018'                    ___flmul@grs:
  1271                           
  1272                           ; 4 bytes @ 0x18
  1273  0018'                    	ds	4
  1274  001C'                    ___flmul@aexp:
  1275                           
  1276                           ; 1 bytes @ 0x1C
  1277  001C'                    	ds	1
  1278  001D'                    ___flmul@bexp:
  1279                           
  1280                           ; 1 bytes @ 0x1D
  1281  001D'                    	ds	1
  1282  001E'                    ___flmul@prod:
  1283                           
  1284                           ; 4 bytes @ 0x1E
  1285  001E'                    	ds	4
  1286  0022'                    ___flmul@temp:
  1287                           
  1288                           ; 2 bytes @ 0x22
  1289  0022'                    	ds	2
  1290  0024'                    ?_fround:
  1291  0024'                    ?_scale:	
  1292                           ; 4 bytes @ 0x24
  1293                           
  1294  0024'                    ?___fldiv:	
  1295                           ; 4 bytes @ 0x24
  1296                           
  1297  0024'                    ___fldiv@a:	
  1298                           ; 4 bytes @ 0x24
  1299                           
  1300                           
  1301                           ; 4 bytes @ 0x24
  1302  0024'                    	ds	4
  1303  0028'                    ??_fround:
  1304  0028'                    ??_scale:	
  1305                           ; 1 bytes @ 0x28
  1306                           
  1307  0028'                    ___fldiv@b:	
  1308                           ; 1 bytes @ 0x28
  1309                           
  1310                           
  1311                           ; 4 bytes @ 0x28
  1312  0028'                    	ds	4
  1313  002C'                    ??___fldiv:
  1314                           
  1315                           ; 1 bytes @ 0x2C
  1316  002C'                    	ds	3
  1317  002F'                    _fround$1254:
  1318                           
  1319                           ; 4 bytes @ 0x2F
  1320  002F'                    	ds	2
  1321  0031'                    ___fldiv@rem:
  1322                           
  1323                           ; 4 bytes @ 0x31
  1324  0031'                    	ds	1
  1325  0032'                    _scale$1255:
  1326                           
  1327                           ; 4 bytes @ 0x32
  1328  0032'                    	ds	1
  1329  0033'                    _fround$1253:
  1330                           
  1331                           ; 4 bytes @ 0x33
  1332  0033'                    	ds	2
  1333  0035'                    ___fldiv@sign:
  1334                           
  1335                           ; 1 bytes @ 0x35
  1336  0035'                    	ds	1
  1337  0036'                    scale@scl:
  1338  0036'                    ___fldiv@new_exp:	
  1339                           ; 1 bytes @ 0x36
  1340                           
  1341                           
  1342                           ; 2 bytes @ 0x36
  1343  0036'                    	ds	1
  1344  0037'                    ?___fltol:
  1345  0037'                    fround@prec:	
  1346                           ; 4 bytes @ 0x37
  1347                           
  1348  0037'                    ___fltol@f1:	
  1349                           ; 1 bytes @ 0x37
  1350                           
  1351                           
  1352                           ; 4 bytes @ 0x37
  1353  0037'                    	ds	1
  1354  0038'                    ?___fladd:
  1355  0038'                    ___fladd@b:	
  1356                           ; 4 bytes @ 0x38
  1357                           
  1358  0038'                    ___fldiv@grs:	
  1359                           ; 4 bytes @ 0x38
  1360                           
  1361                           
  1362                           ; 4 bytes @ 0x38
  1363  0038'                    	ds	3
  1364  003B'                    ??___fltol:
  1365                           
  1366                           ; 1 bytes @ 0x3B
  1367  003B'                    	ds	1
  1368  003C'                    ___fldiv@bexp:
  1369  003C'                    ___fladd@a:	
  1370                           ; 1 bytes @ 0x3C
  1371                           
  1372                           
  1373                           ; 4 bytes @ 0x3C
  1374  003C'                    	ds	1
  1375  003D'                    ___fldiv@aexp:
  1376                           
  1377                           ; 1 bytes @ 0x3D
  1378  003D'                    	ds	3
  1379  0040'                    ??___fladd:
  1380  0040'                    ___fltol@sign1:	
  1381                           ; 1 bytes @ 0x40
  1382                           
  1383                           
  1384                           ; 1 bytes @ 0x40
  1385  0040'                    	ds	1
  1386  0041'                    ___fltol@exp1:
  1387                           
  1388                           ; 1 bytes @ 0x41
  1389  0041'                    	ds	7
  1390  0048'                    ___fladd@signs:
  1391                           
  1392                           ; 1 bytes @ 0x48
  1393  0048'                    	ds	1
  1394  0049'                    ___fladd@aexp:
  1395                           
  1396                           ; 1 bytes @ 0x49
  1397  0049'                    	ds	1
  1398  004A'                    ___fladd@bexp:
  1399                           
  1400                           ; 1 bytes @ 0x4A
  1401  004A'                    	ds	1
  1402  004B'                    ___fladd@grs:
  1403                           
  1404                           ; 1 bytes @ 0x4B
  1405  004B'                    	ds	1
  1406                           
  1407                           	psect	maintext
  1408  0000'                    __pmaintext:	
  1409 ;;
  1410 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1411 ;;
  1412 ;; *************** function _main *****************
  1413 ;; Defined at:
  1414 ;;		line 65 in file "SerialLCD.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;		None
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;		None
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  1    wreg      void 
  1421 ;; Registers used:
  1422 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1423 ;; Tracked objects:
  1424 ;;		On entry : B00/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1428 ;;      Params:         0       0       0       0       0
  1429 ;;      Locals:         0       0       0       0       0
  1430 ;;      Temps:          0       0       0       4       0
  1431 ;;      Totals:         0       0       0       4       0
  1432 ;;Total ram usage:        4 bytes
  1433 ;; Hardware stack levels required when called:    6
  1434 ;; This function calls:
  1435 ;;		_ADC_setup
  1436 ;;		_EUSART_conf
  1437 ;;		_Lcd_Clear
  1438 ;;		_Lcd_Init
  1439 ;;		_Lcd_Set_Cursor
  1440 ;;		_Lcd_Write_String
  1441 ;;		___fldiv
  1442 ;;		___flmul
  1443 ;;		___xxtofl
  1444 ;;		_setup
  1445 ;;		_sprintf
  1446 ;; This function is called by:
  1447 ;;		Startup code after reset
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           
  1452                           ;psect for function _main
  1453  0000'                    _main:
  1454  0000'                    l4745:	
  1455                           ;incstack = 0
  1456                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1457                           
  1458                           
  1459                           ;SerialLCD.c: 66:         sprintf(str_vol2, "%.2f", vol2);
  1460  0000' 120A' 118A' 2000' 120A' 118A' 	fcall	_setup
  1461  0005'                    l4747:
  1462                           
  1463                           ;SerialLCD.c: 67:         Lcd_Set_Cursor(2, 7);
  1464  0005' 3002               	movlw	2
  1465  0006' 1683               	bsf	3,5	;RP0=1, select bank3
  1466  0007' 1703               	bsf	3,6	;RP1=1, select bank3
  1467  0008' 0080'              	movwf	??_main^(0+384)
  1468  0009' 0800'              	movf	??_main^(0+384),w
  1469  000A' 0083'              	movwf	ADC_setup@Channel
  1470  000B' 0184'              	clrf	ADC_setup@Format
  1471  000C' 0185'              	clrf	ADC_setup@Vref
  1472  000D' 3003               	movlw	3
  1473  000E' 120A' 118A' 2000' 120A' 118A' 	fcall	_ADC_setup
  1474  0013'                    l4749:
  1475                           
  1476                           ;SerialLCD.c: 68:         Lcd_Write_String(str_vol2);
  1477  0013' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Init
  1478  0018'                    l4751:
  1479                           
  1480                           ;SerialLCD.c: 69:         Lcd_Set_Cursor(2, 11);
  1481  0018' 120A' 118A' 2000' 120A' 118A' 	fcall	_EUSART_conf
  1482  001D'                    l4753:
  1483                           
  1484                           ;SerialLCD.c: 70:         Lcd_Write_String("V ");
  1485  001D' 1283               	bcf	3,5	;RP0=0, select bank0
  1486  001E' 1303               	bcf	3,6	;RP1=0, select bank0
  1487  001F' 149F               	bsf	31,1	;volatile
  1488  0020'                    l4755:
  1489                           
  1490                           ;SerialLCD.c: 72: 
  1491  0020' 1683               	bsf	3,5	;RP0=1, select bank1
  1492  0021' 1303               	bcf	3,6	;RP1=0, select bank1
  1493  0022' 0300'              	decf	_ADC_finish^(0+128),w
  1494  0023' 1D03               	btfss	3,2
  1495  0024' 2800'              	goto	u7571
  1496  0025' 2800'              	goto	u7570
  1497  0026'                    u7571:
  1498  0026' 2800'              	goto	l76
  1499  0027'                    u7570:
  1500  0027'                    l4757:
  1501                           
  1502                           ;SerialLCD.c: 73:         sprintf(str_contador, "%i", contador);
  1503  0027' 0180'              	clrf	_ADC_finish^(0+128)
  1504  0028'                    l4759:
  1505                           
  1506                           ;SerialLCD.c: 74:         Lcd_Set_Cursor(2, 13);
  1507  0028' 309F               	movlw	159
  1508  0029' 1683               	bsf	3,5	;RP0=1, select bank3
  1509  002A' 1703               	bsf	3,6	;RP1=1, select bank3
  1510  002B' 0080'              	movwf	??_main^(0+384)
  1511  002C'                    u7627:
  1512  002C' 2800'              	nop2
  1513  002D' 0B80'              	decfsz	??_main^(0+384),f
  1514  002E' 2800'              	goto	u7627
  1515  002F' 2800'              	nop2
  1516  0030'                    l4761:
  1517                           
  1518                           ;SerialLCD.c: 75:         Lcd_Write_String(str_contador);
  1519  0030' 1283               	bcf	3,5	;RP0=0, select bank0
  1520  0031' 1303               	bcf	3,6	;RP1=0, select bank0
  1521  0032' 0800'              	movf	_Pots,w
  1522  0033' 1D03               	btfss	3,2
  1523  0034' 2800'              	goto	u7581
  1524  0035' 2800'              	goto	u7580
  1525  0036'                    u7581:
  1526  0036' 2800'              	goto	l4767
  1527  0037'                    u7580:
  1528  0037'                    l4763:
  1529                           
  1530                           ;SerialLCD.c: 76: 
  1531  0037' 081F               	movf	31,w	;volatile
  1532  0038' 39C3               	andlw	-61
  1533  0039' 3808               	iorlw	8
  1534  003A' 009F               	movwf	31	;volatile
  1535  003B'                    l4765:
  1536                           
  1537                           ;SerialLCD.c: 77:     }
  1538  003B' 149F               	bsf	31,1	;volatile
  1539                           
  1540                           ;SerialLCD.c: 78: }
  1541  003C' 2800'              	goto	l76
  1542  003D'                    l4767:
  1543  003D' 0300'              	decf	_Pots,w
  1544  003E' 1D03               	btfss	3,2
  1545  003F' 2800'              	goto	u7591
  1546  0040' 2800'              	goto	u7590
  1547  0041'                    u7591:
  1548  0041' 2800'              	goto	l76
  1549  0042'                    u7590:
  1550  0042'                    l4769:
  1551                           
  1552                           ;SerialLCD.c: 79: 
  1553  0042' 081F               	movf	31,w	;volatile
  1554  0043' 39C3               	andlw	-61
  1555  0044' 380C               	iorlw	12
  1556  0045' 009F               	movwf	31	;volatile
  1557  0046'                    l4771:
  1558                           
  1559                           ;SerialLCD.c: 80: 
  1560  0046' 149F               	bsf	31,1	;volatile
  1561  0047'                    l76:	
  1562                           ;SerialLCD.c: 82: 
  1563                           
  1564                           
  1565                           ;SerialLCD.c: 83: 
  1566  0047' 302B               	movlw	43
  1567  0048' 1683               	bsf	3,5	;RP0=1, select bank1
  1568  0049' 1303               	bcf	3,6	;RP1=0, select bank1
  1569  004A' 0600'              	xorwf	_comando^(0+128),w
  1570  004B' 1D03               	btfss	3,2
  1571  004C' 2800'              	goto	u7601
  1572  004D' 2800'              	goto	u7600
  1573  004E'                    u7601:
  1574  004E' 2800'              	goto	l4775
  1575  004F'                    u7600:
  1576  004F'                    l4773:
  1577                           
  1578                           ;SerialLCD.c: 84: 
  1579  004F' 3001               	movlw	1
  1580  0050' 1683               	bsf	3,5	;RP0=1, select bank3
  1581  0051' 1703               	bsf	3,6	;RP1=1, select bank3
  1582  0052' 0080'              	movwf	??_main^(0+384)
  1583  0053' 0800'              	movf	??_main^(0+384),w
  1584  0054' 1683               	bsf	3,5	;RP0=1, select bank1
  1585  0055' 1303               	bcf	3,6	;RP1=0, select bank1
  1586  0056' 0780'              	addwf	_contador^(0+128),f
  1587                           
  1588                           ;SerialLCD.c: 85: void setup(void) {
  1589  0057' 2800'              	goto	l4779
  1590  0058'                    l4775:
  1591  0058' 302D               	movlw	45
  1592  0059' 0600'              	xorwf	_comando^(0+128),w
  1593  005A' 1D03               	btfss	3,2
  1594  005B' 2800'              	goto	u7611
  1595  005C' 2800'              	goto	u7610
  1596  005D'                    u7611:
  1597  005D' 2800'              	goto	l4779
  1598  005E'                    u7610:
  1599  005E'                    l4777:
  1600                           
  1601                           ;SerialLCD.c: 87: 
  1602  005E' 3001               	movlw	1
  1603  005F' 0280'              	subwf	_contador^(0+128),f
  1604  0060'                    l4779:
  1605                           
  1606                           ;SerialLCD.c: 92:     ANSELH = 0;
  1607  0060' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Clear
  1608  0065'                    l4781:
  1609                           
  1610                           ;SerialLCD.c: 93:     ANSELbits.ANS2 = 1;
  1611  0065' 0187'              	clrf	Lcd_Set_Cursor@b
  1612  0066' 0A87'              	incf	Lcd_Set_Cursor@b,f
  1613  0067' 3001               	movlw	1
  1614  0068' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1615  006D'                    l4783:
  1616                           
  1617                           ;SerialLCD.c: 94:     ANSELbits.ANS3 = 1;
  1618  006D' 3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1619  006E' 0086'              	movwf	Lcd_Write_String@a
  1620  006F' 3080               	movlw	128
  1621  0070' 0087'              	movwf	Lcd_Write_String@a+1
  1622  0071' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1623  0076'                    l4785:
  1624                           
  1625                           ;SerialLCD.c: 95:     TRISA = 0;
  1626  0076' 3043               	movlw	67
  1627  0077' 1283               	bcf	3,5	;RP0=0, select bank0
  1628  0078' 1303               	bcf	3,6	;RP1=0, select bank0
  1629  0079' 00A7'              	movwf	___fldiv@a+3
  1630  007A' 307F               	movlw	127
  1631  007B' 00A6'              	movwf	___fldiv@a+2
  1632  007C' 3000               	movlw	0
  1633  007D' 00A5'              	movwf	___fldiv@a+1
  1634  007E' 3000               	movlw	0
  1635  007F' 00A4'              	movwf	___fldiv@a
  1636  0080' 3040               	movlw	64
  1637  0081' 008D'              	movwf	___flmul@b+3
  1638  0082' 30A0               	movlw	160
  1639  0083' 008C'              	movwf	___flmul@b+2
  1640  0084' 3000               	movlw	0
  1641  0085' 008B'              	movwf	___flmul@b+1
  1642  0086' 3000               	movlw	0
  1643  0087' 008A'              	movwf	___flmul@b
  1644  0088' 1683               	bsf	3,5	;RP0=1, select bank1
  1645  0089' 1303               	bcf	3,6	;RP1=0, select bank1
  1646  008A' 0800'              	movf	_ADC_value1^(0+128),w
  1647  008B' 1683               	bsf	3,5	;RP0=1, select bank3
  1648  008C' 1703               	bsf	3,6	;RP1=1, select bank3
  1649  008D' 0080'              	movwf	??_main^(0+384)
  1650  008E' 0181'              	clrf	(??_main^(0+384)+1)
  1651  008F' 0182'              	clrf	(??_main^(0+384)+2)
  1652  0090' 0183'              	clrf	(??_main^(0+384)+3)
  1653  0091' 0800'              	movf	(??_main+3)^(0+384),w
  1654  0092' 0086'              	movwf	___xxtofl@val+3
  1655  0093' 0800'              	movf	(??_main+2)^(0+384),w
  1656  0094' 0085'              	movwf	___xxtofl@val+2
  1657  0095' 0800'              	movf	(??_main+1)^(0+384),w
  1658  0096' 0084'              	movwf	___xxtofl@val+1
  1659  0097' 0800'              	movf	??_main^(0+384),w
  1660  0098' 0083'              	movwf	___xxtofl@val
  1661  0099' 3001               	movlw	1
  1662  009A' 120A' 118A' 2000' 120A' 118A' 	fcall	___xxtofl
  1663  009F' 0806'              	movf	?___xxtofl+3,w
  1664  00A0' 1283               	bcf	3,5	;RP0=0, select bank0
  1665  00A1' 1303               	bcf	3,6	;RP1=0, select bank0
  1666  00A2' 0091'              	movwf	___flmul@a+3
  1667  00A3' 0805'              	movf	?___xxtofl+2,w
  1668  00A4' 0090'              	movwf	___flmul@a+2
  1669  00A5' 0804'              	movf	?___xxtofl+1,w
  1670  00A6' 008F'              	movwf	___flmul@a+1
  1671  00A7' 0803'              	movf	?___xxtofl,w
  1672  00A8' 008E'              	movwf	___flmul@a
  1673  00A9' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  1674  00AE' 1283               	bcf	3,5	;RP0=0, select bank0
  1675  00AF' 1303               	bcf	3,6	;RP1=0, select bank0
  1676  00B0' 080D'              	movf	?___flmul+3,w
  1677  00B1' 00AB'              	movwf	___fldiv@b+3
  1678  00B2' 080C'              	movf	?___flmul+2,w
  1679  00B3' 00AA'              	movwf	___fldiv@b+2
  1680  00B4' 080B'              	movf	?___flmul+1,w
  1681  00B5' 00A9'              	movwf	___fldiv@b+1
  1682  00B6' 080A'              	movf	?___flmul,w
  1683  00B7' 00A8'              	movwf	___fldiv@b
  1684  00B8' 120A' 118A' 2000' 120A' 118A' 	fcall	___fldiv
  1685  00BD' 1283               	bcf	3,5	;RP0=0, select bank0
  1686  00BE' 1303               	bcf	3,6	;RP1=0, select bank0
  1687  00BF' 0827'              	movf	?___fldiv+3,w
  1688  00C0' 1683               	bsf	3,5	;RP0=1, select bank1
  1689  00C1' 1303               	bcf	3,6	;RP1=0, select bank1
  1690  00C2' 0080'              	movwf	(_vol1+3)^(0+128)
  1691  00C3' 1283               	bcf	3,5	;RP0=0, select bank0
  1692  00C4' 1303               	bcf	3,6	;RP1=0, select bank0
  1693  00C5' 0826'              	movf	?___fldiv+2,w
  1694  00C6' 1683               	bsf	3,5	;RP0=1, select bank1
  1695  00C7' 1303               	bcf	3,6	;RP1=0, select bank1
  1696  00C8' 0080'              	movwf	(_vol1+2)^(0+128)
  1697  00C9' 1283               	bcf	3,5	;RP0=0, select bank0
  1698  00CA' 1303               	bcf	3,6	;RP1=0, select bank0
  1699  00CB' 0825'              	movf	?___fldiv+1,w
  1700  00CC' 1683               	bsf	3,5	;RP0=1, select bank1
  1701  00CD' 1303               	bcf	3,6	;RP1=0, select bank1
  1702  00CE' 0080'              	movwf	(_vol1+1)^(0+128)
  1703  00CF' 1283               	bcf	3,5	;RP0=0, select bank0
  1704  00D0' 1303               	bcf	3,6	;RP1=0, select bank0
  1705  00D1' 0824'              	movf	?___fldiv,w
  1706  00D2' 1683               	bsf	3,5	;RP0=1, select bank1
  1707  00D3' 1303               	bcf	3,6	;RP1=0, select bank1
  1708  00D4' 0080'              	movwf	_vol1^(0+128)
  1709  00D5'                    l4787:
  1710                           
  1711                           ;SerialLCD.c: 96:     TRISB = 0;
  1712  00D5' 3000'              	movlw	(low (_str_vol1| 0))& (0+255)
  1713  00D6' 0080'              	movwf	sprintf@sp^(0+128)
  1714  00D7' 3000               	movlw	0
  1715  00D8' 0080'              	movwf	(sprintf@sp+1)^(0+128)
  1716  00D9' 30A1               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1717  00DA' 1683               	bsf	3,5	;RP0=1, select bank3
  1718  00DB' 1703               	bsf	3,6	;RP1=1, select bank3
  1719  00DC' 0080'              	movwf	??_main^(0+384)
  1720  00DD' 0800'              	movf	??_main^(0+384),w
  1721  00DE' 1683               	bsf	3,5	;RP0=1, select bank1
  1722  00DF' 1303               	bcf	3,6	;RP1=0, select bank1
  1723  00E0' 0080'              	movwf	sprintf@f^(0+128)
  1724  00E1' 0800'              	movf	(_vol1+3)^(0+128),w
  1725  00E2' 0083'              	movwf	((?_sprintf+3)^(0+128)+3)
  1726  00E3' 0800'              	movf	(_vol1+2)^(0+128),w
  1727  00E4' 0083'              	movwf	((?_sprintf+2)^(0+128)+3)
  1728  00E5' 0800'              	movf	(_vol1+1)^(0+128),w
  1729  00E6' 0083'              	movwf	((?_sprintf+1)^(0+128)+3)
  1730  00E7' 0800'              	movf	_vol1^(0+128),w
  1731  00E8' 0083'              	movwf	(?_sprintf^(0+128)+3)
  1732  00E9' 120A' 118A' 2000' 120A' 118A' 	fcall	_sprintf
  1733  00EE'                    l4789:
  1734                           
  1735                           ;SerialLCD.c: 97:     TRISAbits.TRISA2 = 1;
  1736  00EE' 0187'              	clrf	Lcd_Set_Cursor@b
  1737  00EF' 0A87'              	incf	Lcd_Set_Cursor@b,f
  1738  00F0' 3002               	movlw	2
  1739  00F1' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1740  00F6'                    l4791:
  1741                           
  1742                           ;SerialLCD.c: 98:     TRISAbits.TRISA3 = 1;
  1743  00F6' 3000'              	movlw	(low (_str_vol1| 0))& (0+255)
  1744  00F7' 0086'              	movwf	Lcd_Write_String@a
  1745  00F8' 3000               	movlw	0
  1746  00F9' 0087'              	movwf	Lcd_Write_String@a+1
  1747  00FA' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1748  00FF'                    l4793:
  1749                           
  1750                           ;SerialLCD.c: 99:     INTCONbits.GIE = 1;
  1751  00FF' 3005               	movlw	5
  1752  0100' 1683               	bsf	3,5	;RP0=1, select bank3
  1753  0101' 1703               	bsf	3,6	;RP1=1, select bank3
  1754  0102' 0080'              	movwf	??_main^(0+384)
  1755  0103' 0800'              	movf	??_main^(0+384),w
  1756  0104' 0087'              	movwf	Lcd_Set_Cursor@b
  1757  0105' 3002               	movlw	2
  1758  0106' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1759  010B'                    l4795:
  1760                           
  1761                           ;SerialLCD.c: 100:     INTCONbits.PEIE = 1;
  1762  010B' 30A6               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1763  010C' 0086'              	movwf	Lcd_Write_String@a
  1764  010D' 3080               	movlw	128
  1765  010E' 0087'              	movwf	Lcd_Write_String@a+1
  1766  010F' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1767  0114'                    l4797:
  1768                           
  1769                           ;SerialLCD.c: 101:     Pots = 0;
  1770  0114' 3043               	movlw	67
  1771  0115' 1283               	bcf	3,5	;RP0=0, select bank0
  1772  0116' 1303               	bcf	3,6	;RP1=0, select bank0
  1773  0117' 00A7'              	movwf	___fldiv@a+3
  1774  0118' 307F               	movlw	127
  1775  0119' 00A6'              	movwf	___fldiv@a+2
  1776  011A' 3000               	movlw	0
  1777  011B' 00A5'              	movwf	___fldiv@a+1
  1778  011C' 3000               	movlw	0
  1779  011D' 00A4'              	movwf	___fldiv@a
  1780  011E' 3040               	movlw	64
  1781  011F' 008D'              	movwf	___flmul@b+3
  1782  0120' 30A0               	movlw	160
  1783  0121' 008C'              	movwf	___flmul@b+2
  1784  0122' 3000               	movlw	0
  1785  0123' 008B'              	movwf	___flmul@b+1
  1786  0124' 3000               	movlw	0
  1787  0125' 008A'              	movwf	___flmul@b
  1788  0126' 1683               	bsf	3,5	;RP0=1, select bank1
  1789  0127' 1303               	bcf	3,6	;RP1=0, select bank1
  1790  0128' 0800'              	movf	_ADC_value2^(0+128),w
  1791  0129' 1683               	bsf	3,5	;RP0=1, select bank3
  1792  012A' 1703               	bsf	3,6	;RP1=1, select bank3
  1793  012B' 0080'              	movwf	??_main^(0+384)
  1794  012C' 0181'              	clrf	(??_main^(0+384)+1)
  1795  012D' 0182'              	clrf	(??_main^(0+384)+2)
  1796  012E' 0183'              	clrf	(??_main^(0+384)+3)
  1797  012F' 0800'              	movf	(??_main+3)^(0+384),w
  1798  0130' 0086'              	movwf	___xxtofl@val+3
  1799  0131' 0800'              	movf	(??_main+2)^(0+384),w
  1800  0132' 0085'              	movwf	___xxtofl@val+2
  1801  0133' 0800'              	movf	(??_main+1)^(0+384),w
  1802  0134' 0084'              	movwf	___xxtofl@val+1
  1803  0135' 0800'              	movf	??_main^(0+384),w
  1804  0136' 0083'              	movwf	___xxtofl@val
  1805  0137' 3001               	movlw	1
  1806  0138' 120A' 118A' 2000' 120A' 118A' 	fcall	___xxtofl
  1807  013D' 0806'              	movf	?___xxtofl+3,w
  1808  013E' 1283               	bcf	3,5	;RP0=0, select bank0
  1809  013F' 1303               	bcf	3,6	;RP1=0, select bank0
  1810  0140' 0091'              	movwf	___flmul@a+3
  1811  0141' 0805'              	movf	?___xxtofl+2,w
  1812  0142' 0090'              	movwf	___flmul@a+2
  1813  0143' 0804'              	movf	?___xxtofl+1,w
  1814  0144' 008F'              	movwf	___flmul@a+1
  1815  0145' 0803'              	movf	?___xxtofl,w
  1816  0146' 008E'              	movwf	___flmul@a
  1817  0147' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  1818  014C' 1283               	bcf	3,5	;RP0=0, select bank0
  1819  014D' 1303               	bcf	3,6	;RP1=0, select bank0
  1820  014E' 080D'              	movf	?___flmul+3,w
  1821  014F' 00AB'              	movwf	___fldiv@b+3
  1822  0150' 080C'              	movf	?___flmul+2,w
  1823  0151' 00AA'              	movwf	___fldiv@b+2
  1824  0152' 080B'              	movf	?___flmul+1,w
  1825  0153' 00A9'              	movwf	___fldiv@b+1
  1826  0154' 080A'              	movf	?___flmul,w
  1827  0155' 00A8'              	movwf	___fldiv@b
  1828  0156' 120A' 118A' 2000' 120A' 118A' 	fcall	___fldiv
  1829  015B' 1283               	bcf	3,5	;RP0=0, select bank0
  1830  015C' 1303               	bcf	3,6	;RP1=0, select bank0
  1831  015D' 0827'              	movf	?___fldiv+3,w
  1832  015E' 1683               	bsf	3,5	;RP0=1, select bank1
  1833  015F' 1303               	bcf	3,6	;RP1=0, select bank1
  1834  0160' 0080'              	movwf	(_vol2+3)^(0+128)
  1835  0161' 1283               	bcf	3,5	;RP0=0, select bank0
  1836  0162' 1303               	bcf	3,6	;RP1=0, select bank0
  1837  0163' 0826'              	movf	?___fldiv+2,w
  1838  0164' 1683               	bsf	3,5	;RP0=1, select bank1
  1839  0165' 1303               	bcf	3,6	;RP1=0, select bank1
  1840  0166' 0080'              	movwf	(_vol2+2)^(0+128)
  1841  0167' 1283               	bcf	3,5	;RP0=0, select bank0
  1842  0168' 1303               	bcf	3,6	;RP1=0, select bank0
  1843  0169' 0825'              	movf	?___fldiv+1,w
  1844  016A' 1683               	bsf	3,5	;RP0=1, select bank1
  1845  016B' 1303               	bcf	3,6	;RP1=0, select bank1
  1846  016C' 0080'              	movwf	(_vol2+1)^(0+128)
  1847  016D' 1283               	bcf	3,5	;RP0=0, select bank0
  1848  016E' 1303               	bcf	3,6	;RP1=0, select bank0
  1849  016F' 0824'              	movf	?___fldiv,w
  1850  0170' 1683               	bsf	3,5	;RP0=1, select bank1
  1851  0171' 1303               	bcf	3,6	;RP1=0, select bank1
  1852  0172' 0080'              	movwf	_vol2^(0+128)
  1853  0173'                    l4799:
  1854                           
  1855                           ;SerialLCD.c: 102:     vol1 = 0;
  1856  0173' 3000'              	movlw	(low (_str_vol2| (0+256)))& (0+255)
  1857  0174' 0080'              	movwf	sprintf@sp^(0+128)
  1858  0175' 3001               	movlw	1
  1859  0176' 0080'              	movwf	(sprintf@sp+1)^(0+128)
  1860  0177' 30A1               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1861  0178' 1683               	bsf	3,5	;RP0=1, select bank3
  1862  0179' 1703               	bsf	3,6	;RP1=1, select bank3
  1863  017A' 0080'              	movwf	??_main^(0+384)
  1864  017B' 0800'              	movf	??_main^(0+384),w
  1865  017C' 1683               	bsf	3,5	;RP0=1, select bank1
  1866  017D' 1303               	bcf	3,6	;RP1=0, select bank1
  1867  017E' 0080'              	movwf	sprintf@f^(0+128)
  1868  017F' 0800'              	movf	(_vol2+3)^(0+128),w
  1869  0180' 0083'              	movwf	((?_sprintf+3)^(0+128)+3)
  1870  0181' 0800'              	movf	(_vol2+2)^(0+128),w
  1871  0182' 0083'              	movwf	((?_sprintf+2)^(0+128)+3)
  1872  0183' 0800'              	movf	(_vol2+1)^(0+128),w
  1873  0184' 0083'              	movwf	((?_sprintf+1)^(0+128)+3)
  1874  0185' 0800'              	movf	_vol2^(0+128),w
  1875  0186' 0083'              	movwf	(?_sprintf^(0+128)+3)
  1876  0187' 120A' 118A' 2000' 120A' 118A' 	fcall	_sprintf
  1877  018C'                    l4801:
  1878                           
  1879                           ;SerialLCD.c: 103:     vol2 = 0;
  1880  018C' 3007               	movlw	7
  1881  018D' 1683               	bsf	3,5	;RP0=1, select bank3
  1882  018E' 1703               	bsf	3,6	;RP1=1, select bank3
  1883  018F' 0080'              	movwf	??_main^(0+384)
  1884  0190' 0800'              	movf	??_main^(0+384),w
  1885  0191' 0087'              	movwf	Lcd_Set_Cursor@b
  1886  0192' 3002               	movlw	2
  1887  0193' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1888  0198'                    l4803:
  1889                           
  1890                           ;SerialLCD.c: 104: 
  1891  0198' 3000'              	movlw	(low (_str_vol2| (0+256)))& (0+255)
  1892  0199' 0086'              	movwf	Lcd_Write_String@a
  1893  019A' 3001               	movlw	1
  1894  019B' 0087'              	movwf	Lcd_Write_String@a+1
  1895  019C' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1896  01A1'                    l4805:
  1897                           
  1898                           ;SerialLCD.c: 105: }
  1899  01A1' 300B               	movlw	11
  1900  01A2' 1683               	bsf	3,5	;RP0=1, select bank3
  1901  01A3' 1703               	bsf	3,6	;RP1=1, select bank3
  1902  01A4' 0080'              	movwf	??_main^(0+384)
  1903  01A5' 0800'              	movf	??_main^(0+384),w
  1904  01A6' 0087'              	movwf	Lcd_Set_Cursor@b
  1905  01A7' 3002               	movlw	2
  1906  01A8' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1907  01AD'                    l4807:
  1908                           
  1909                           ;SerialLCD.c: 106: 
  1910  01AD' 30A6               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1911  01AE' 0086'              	movwf	Lcd_Write_String@a
  1912  01AF' 3080               	movlw	128
  1913  01B0' 0087'              	movwf	Lcd_Write_String@a+1
  1914  01B1' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1915  01B6'                    l4809:
  1916                           
  1917                           ;SerialLCD.c: 109: 
  1918  01B6' 3000'              	movlw	(low (_str_contador| (0+256)))& (0+255)
  1919  01B7' 1683               	bsf	3,5	;RP0=1, select bank1
  1920  01B8' 1303               	bcf	3,6	;RP1=0, select bank1
  1921  01B9' 0080'              	movwf	sprintf@sp^(0+128)
  1922  01BA' 3001               	movlw	1
  1923  01BB' 0080'              	movwf	(sprintf@sp+1)^(0+128)
  1924  01BC' 30A9               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1925  01BD' 1683               	bsf	3,5	;RP0=1, select bank3
  1926  01BE' 1703               	bsf	3,6	;RP1=1, select bank3
  1927  01BF' 0080'              	movwf	??_main^(0+384)
  1928  01C0' 0800'              	movf	??_main^(0+384),w
  1929  01C1' 1683               	bsf	3,5	;RP0=1, select bank1
  1930  01C2' 1303               	bcf	3,6	;RP1=0, select bank1
  1931  01C3' 0080'              	movwf	sprintf@f^(0+128)
  1932  01C4' 0800'              	movf	_contador^(0+128),w
  1933  01C5' 1683               	bsf	3,5	;RP0=1, select bank3
  1934  01C6' 1703               	bsf	3,6	;RP1=1, select bank3
  1935  01C7' 0080'              	movwf	(??_main+1)^(0+384)
  1936  01C8' 0181'              	clrf	((??_main+1)^(0+384)+1)
  1937  01C9' 0800'              	movf	(??_main+1)^(0+384),w
  1938  01CA' 1683               	bsf	3,5	;RP0=1, select bank1
  1939  01CB' 1303               	bcf	3,6	;RP1=0, select bank1
  1940  01CC' 0083'              	movwf	(?_sprintf^(0+128)+3)
  1941  01CD' 1683               	bsf	3,5	;RP0=1, select bank3
  1942  01CE' 1703               	bsf	3,6	;RP1=1, select bank3
  1943  01CF' 0800'              	movf	(??_main+2)^(0+384),w
  1944  01D0' 1683               	bsf	3,5	;RP0=1, select bank1
  1945  01D1' 1303               	bcf	3,6	;RP1=0, select bank1
  1946  01D2' 0083'              	movwf	((?_sprintf+1)^(0+128)+3)
  1947  01D3' 120A' 118A' 2000' 120A' 118A' 	fcall	_sprintf
  1948  01D8'                    l4811:
  1949                           
  1950                           ;SerialLCD.c: 110: 
  1951  01D8' 300D               	movlw	13
  1952  01D9' 1683               	bsf	3,5	;RP0=1, select bank3
  1953  01DA' 1703               	bsf	3,6	;RP1=1, select bank3
  1954  01DB' 0080'              	movwf	??_main^(0+384)
  1955  01DC' 0800'              	movf	??_main^(0+384),w
  1956  01DD' 0087'              	movwf	Lcd_Set_Cursor@b
  1957  01DE' 3002               	movlw	2
  1958  01DF' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1959  01E4'                    l4813:
  1960                           
  1961                           ;SerialLCD.c: 111: void __attribute__((picinterrupt(("")))) oli(void) {
  1962  01E4' 3000'              	movlw	(low (_str_contador| (0+256)))& (0+255)
  1963  01E5' 0086'              	movwf	Lcd_Write_String@a
  1964  01E6' 3001               	movlw	1
  1965  01E7' 0087'              	movwf	Lcd_Write_String@a+1
  1966  01E8' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1967  01ED' 2800'              	goto	l4755
  1968  01EE' 120A' 118A' 2800'  	ljmp	start
  1969  01F1'                    __end_of_main:
  1970                           
  1971                           	psect	text1
  1972  0000'                    __ptext1:	
  1973 ;; *************** function _sprintf *****************
  1974 ;; Defined at:
  1975 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;  sp              2    8[BANK1 ] PTR unsigned char 
  1978 ;;		 -> str_contador(20), str_vol2(20), str_vol1(20), 
  1979 ;;  f               1   10[BANK1 ] PTR const unsigned char 
  1980 ;;		 -> STR_6(3), STR_4(5), STR_2(5), 
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;  fval            4   37[BANK1 ] PTR const unsigned char 
  1983 ;;  val             4   33[BANK1 ] unsigned long 
  1984 ;;  tmpval          4   29[BANK1 ] struct .
  1985 ;;  prec            2   41[BANK1 ] int 
  1986 ;;  eexp            2   27[BANK1 ] int 
  1987 ;;  flag            2   25[BANK1 ] unsigned short 
  1988 ;;  cp              2    0        PTR const unsigned char 
  1989 ;;  len             2    0        unsigned int 
  1990 ;;  width           2    0        int 
  1991 ;;  c               1   43[BANK1 ] unsigned char 
  1992 ;;  ap              1   24[BANK1 ] PTR void [1]
  1993 ;;		 -> ?_sprintf(2), 
  1994 ;;  d               1    0        unsigned char 
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  2    8[BANK1 ] int 
  1997 ;; Registers used:
  1998 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2004 ;;      Params:         0       0       7       0       0
  2005 ;;      Locals:         0       0      24       0       0
  2006 ;;      Temps:          0       0       5       0       0
  2007 ;;      Totals:         0       0      36       0       0
  2008 ;;Total ram usage:       36 bytes
  2009 ;; Hardware stack levels used:    1
  2010 ;; Hardware stack levels required when called:    5
  2011 ;; This function calls:
  2012 ;;		___awdiv
  2013 ;;		___fladd
  2014 ;;		___fleq
  2015 ;;		___flge
  2016 ;;		___flmul
  2017 ;;		___flneg
  2018 ;;		___flsub
  2019 ;;		___fltol
  2020 ;;		___lldiv
  2021 ;;		___llmod
  2022 ;;		___wmul
  2023 ;;		___xxtofl
  2024 ;;		__div_to_l_
  2025 ;;		__tdiv_to_l_
  2026 ;;		_fround
  2027 ;;		_isdigit
  2028 ;;		_scale
  2029 ;; This function is called by:
  2030 ;;		_main
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           
  2035                           ;psect for function _sprintf
  2036  0000'                    _sprintf:
  2037  0000'                    l4505:	
  2038                           ;incstack = 0
  2039                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2040                           
  2041                           
  2042                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2043  0000' 3000'              	movlw	(low ((?_sprintf| 0+3)))& (0+255)
  2044  0001' 1683               	bsf	3,5	;RP0=1, select bank1
  2045  0002' 1303               	bcf	3,6	;RP1=0, select bank1
  2046  0003' 0080'              	movwf	??_sprintf^(0+128)
  2047  0004' 0800'              	movf	??_sprintf^(0+128),w
  2048  0005' 0080'              	movwf	sprintf@ap^(0+128)
  2049  0006'                    L1:
  2050                           
  2051                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2052  0006' 120A' 118A' 2800'  	goto	l4735
  2053  0009'                    l4507:
  2054                           
  2055                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2056  0009' 3025               	movlw	37
  2057  000A' 0600'              	xorwf	sprintf@c^(0+128),w
  2058  000B' 1903               	btfsc	3,2
  2059  000C' 2800'              	goto	u7161
  2060  000D' 2800'              	goto	u7160
  2061  000E'                    u7161:
  2062  000E' 2800'              	goto	l4513
  2063  000F'                    u7160:
  2064  000F'                    l4509:
  2065                           
  2066                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2067  000F' 0800'              	movf	sprintf@c^(0+128),w
  2068  0010' 0080'              	movwf	??_sprintf^(0+128)
  2069  0011' 0800'              	movf	sprintf@sp^(0+128),w
  2070  0012' 0084               	movwf	4
  2071  0013' 1783               	bsf	3,7
  2072  0014' 1C00'              	btfss	(sprintf@sp+1)^(0+128),0
  2073  0015' 1383               	bcf	3,7
  2074  0016' 0800'              	movf	??_sprintf^(0+128),w
  2075  0017' 0080               	movwf	0
  2076  0018'                    l4511:
  2077  0018' 3001               	movlw	1
  2078  0019' 0780'              	addwf	sprintf@sp^(0+128),f
  2079  001A' 1803               	skipnc
  2080  001B' 0A80'              	incf	(sprintf@sp+1)^(0+128),f
  2081  001C' 3000               	movlw	0
  2082  001D' 0780'              	addwf	(sprintf@sp+1)^(0+128),f
  2083                           
  2084                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2085  001E' 2800'              	goto	L1
  2086  001F'                    l4513:
  2087                           
  2088                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2089  001F' 0180'              	clrf	sprintf@flag^(0+128)
  2090  0020' 0180'              	clrf	(sprintf@flag+1)^(0+128)
  2091  0021'                    l4515:
  2092                           
  2093                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2094  0021' 0800'              	movf	sprintf@f^(0+128),w
  2095  0022' 0084               	movwf	4
  2096  0023' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2097  0028' 3A2E               	xorlw	46
  2098  0029' 1D03               	skipz
  2099  002A' 2800'              	goto	u7171
  2100  002B' 2800'              	goto	u7170
  2101  002C'                    u7171:
  2102  002C' 2800'              	goto	l4531
  2103  002D'                    u7170:
  2104  002D'                    l4517:
  2105                           
  2106                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2107  002D' 1701'              	bsf	(sprintf@flag^(0+128)+1),6
  2108  002E'                    l4519:
  2109                           
  2110                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2111  002E' 3001               	movlw	1
  2112  002F' 0080'              	movwf	??_sprintf^(0+128)
  2113  0030' 0800'              	movf	??_sprintf^(0+128),w
  2114  0031' 0780'              	addwf	sprintf@f^(0+128),f
  2115  0032'                    l4521:
  2116                           
  2117                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2118  0032' 0180'              	clrf	sprintf@prec^(0+128)
  2119  0033' 0180'              	clrf	(sprintf@prec+1)^(0+128)
  2120                           
  2121                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2122  0034' 2800'              	goto	l4529
  2123  0035'                    l4523:
  2124                           
  2125                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2126  0035' 300A               	movlw	10
  2127  0036' 0083'              	movwf	___wmul@multiplier
  2128  0037' 3000               	movlw	0
  2129  0038' 0084'              	movwf	___wmul@multiplier+1
  2130  0039' 1683               	bsf	3,5	;RP0=1, select bank1
  2131  003A' 1303               	bcf	3,6	;RP1=0, select bank1
  2132  003B' 0800'              	movf	(sprintf@prec+1)^(0+128),w
  2133  003C' 0086'              	movwf	___wmul@multiplicand+1
  2134  003D' 0800'              	movf	sprintf@prec^(0+128),w
  2135  003E' 0085'              	movwf	___wmul@multiplicand
  2136  003F' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  2137  0044' 0804'              	movf	?___wmul+1,w
  2138  0045' 1683               	bsf	3,5	;RP0=1, select bank1
  2139  0046' 1303               	bcf	3,6	;RP1=0, select bank1
  2140  0047' 0080'              	movwf	(sprintf@prec+1)^(0+128)
  2141  0048' 0803'              	movf	?___wmul,w
  2142  0049' 0080'              	movwf	sprintf@prec^(0+128)
  2143  004A'                    l4525:
  2144                           
  2145                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2146  004A' 0800'              	movf	sprintf@f^(0+128),w
  2147  004B' 0084               	movwf	4
  2148  004C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2149  0051' 3ED0               	addlw	208
  2150  0052' 0080'              	movwf	??_sprintf^(0+128)
  2151  0053' 30FF               	movlw	255
  2152  0054' 1803               	skipnc
  2153  0055' 3000               	movlw	0
  2154  0056' 0081'              	movwf	(??_sprintf^(0+128)+1)
  2155  0057' 0800'              	movf	??_sprintf^(0+128),w
  2156  0058' 0780'              	addwf	sprintf@prec^(0+128),f
  2157  0059' 1803               	skipnc
  2158  005A' 0A80'              	incf	(sprintf@prec+1)^(0+128),f
  2159  005B' 0800'              	movf	(??_sprintf+1)^(0+128),w
  2160  005C' 0780'              	addwf	(sprintf@prec+1)^(0+128),f
  2161  005D'                    l4527:
  2162  005D' 3001               	movlw	1
  2163  005E' 0080'              	movwf	??_sprintf^(0+128)
  2164  005F' 0800'              	movf	??_sprintf^(0+128),w
  2165  0060' 0780'              	addwf	sprintf@f^(0+128),f
  2166  0061'                    l4529:
  2167                           
  2168                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2169  0061' 0800'              	movf	sprintf@f^(0+128),w
  2170  0062' 0084               	movwf	4
  2171  0063' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2172  0068' 120A' 118A' 2000' 120A' 118A' 	fcall	_isdigit
  2173  006D' 1803               	btfsc	3,0
  2174  006E' 2800'              	goto	u7181
  2175  006F' 2800'              	goto	u7180
  2176  0070'                    u7181:
  2177  0070' 2800'              	goto	l4523
  2178  0071'                    u7180:
  2179  0071' 2800'              	goto	l4537
  2180  0072'                    l4531:
  2181                           
  2182                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2183  0072' 0180'              	clrf	sprintf@prec^(0+128)
  2184  0073' 0180'              	clrf	(sprintf@prec+1)^(0+128)
  2185  0074'                    l4533:
  2186                           
  2187                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2188  0074' 1601'              	bsf	(sprintf@flag^(0+128)+1),4
  2189  0075' 2800'              	goto	l4537
  2190  0076'                    l338:	
  2191                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2192                           
  2193                           
  2194                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2195  0076' 1501'              	bsf	(sprintf@flag^(0+128)+1),2
  2196                           
  2197                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2198  0077' 2800'              	goto	l4539
  2199  0078'                    l4537:
  2200  0078' 3001               	movlw	1
  2201  0079' 1683               	bsf	3,5	;RP0=1, select bank1
  2202  007A' 1303               	bcf	3,6	;RP1=0, select bank1
  2203  007B' 0780'              	addwf	sprintf@f^(0+128),f
  2204  007C' 30FF               	movlw	-1
  2205  007D' 0700'              	addwf	sprintf@f^(0+128),w
  2206  007E' 0084               	movwf	4
  2207  007F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2208  0084' 0080'              	movwf	sprintf@c^(0+128)
  2209  0085' 0080'              	movwf	??_sprintf^(0+128)
  2210  0086' 0181'              	clrf	(??_sprintf^(0+128)+1)
  2211                           
  2212                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2213                           ; Switch size 1, requested type "simple"
  2214                           ; Number of cases is 1, Range of values is 0 to 0
  2215                           ; switch strategies available:
  2216                           ; Name         Instructions Cycles
  2217                           ; simple_byte            4     3 (average)
  2218                           ; direct_byte           11     8 (fixed)
  2219                           ; jumptable            260     6 (fixed)
  2220                           ;	Chosen strategy is simple_byte
  2221  0087' 0800'              	movf	(??_sprintf+1)^(0+128),w
  2222  0088' 3A00               	xorlw	0	; case 0
  2223  0089' 1903               	skipnz
  2224  008A' 2800'              	goto	l4899
  2225  008B' 2800'              	goto	L1
  2226  008C'                    l4899:
  2227                           
  2228                           ; Switch size 1, requested type "simple"
  2229                           ; Number of cases is 4, Range of values is 0 to 105
  2230                           ; switch strategies available:
  2231                           ; Name         Instructions Cycles
  2232                           ; simple_byte           13     7 (average)
  2233                           ; jumptable            260     6 (fixed)
  2234                           ;	Chosen strategy is simple_byte
  2235  008C' 0800'              	movf	??_sprintf^(0+128),w
  2236  008D' 3A00               	xorlw	0	; case 0
  2237  008E' 1903               	skipnz
  2238  008F' 2800'              	goto	L3
  2239  0090' 3A64               	xorlw	100	; case 100
  2240  0091' 1903               	skipnz
  2241  0092' 2800'              	goto	l4539
  2242  0093' 3A02               	xorlw	2	; case 102
  2243  0094' 1903               	skipnz
  2244  0095' 2800'              	goto	l338
  2245  0096' 3A0F               	xorlw	15	; case 105
  2246  0097' 1903               	skipnz
  2247  0098' 2800'              	goto	l4539
  2248  0099' 2800'              	goto	L1
  2249  009A'                    l4539:
  2250                           
  2251                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2252  009A' 3000               	movlw	0
  2253  009B' 0500'              	andwf	sprintf@flag^(0+128),w
  2254  009C' 0080'              	movwf	??_sprintf^(0+128)
  2255  009D' 3007               	movlw	7
  2256  009E' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
  2257  009F' 0080'              	movwf	(??_sprintf+1)^(0+128)
  2258  00A0' 0800'              	movf	??_sprintf^(0+128),w
  2259  00A1' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
  2260  00A2' 1903               	btfsc	3,2
  2261  00A3' 2800'              	goto	u7191
  2262  00A4' 2800'              	goto	u7190
  2263  00A5'                    u7191:
  2264  00A5' 120A' 118A' 2800'  	goto	l4685
  2265  00A8'                    u7190:
  2266  00A8'                    l4541:
  2267                           
  2268                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2269  00A8' 1E00'              	btfss	(sprintf@flag+1)^(0+128),4
  2270  00A9' 2800'              	goto	u7201
  2271  00AA' 2800'              	goto	u7200
  2272  00AB'                    u7201:
  2273  00AB' 2800'              	goto	l4545
  2274  00AC'                    u7200:
  2275  00AC'                    l4543:
  2276                           
  2277                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2278  00AC' 3006               	movlw	6
  2279  00AD' 0080'              	movwf	sprintf@prec^(0+128)
  2280  00AE' 3000               	movlw	0
  2281  00AF' 0081'              	movwf	(sprintf@prec^(0+128)+1)
  2282  00B0'                    l4545:
  2283                           
  2284                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2285  00B0' 0800'              	movf	sprintf@ap^(0+128),w
  2286  00B1' 0084               	movwf	4
  2287  00B2' 1383               	bcf	3,7	;select IRP bank0
  2288  00B3' 0800               	movf	0,w
  2289  00B4' 0080'              	movwf	sprintf@fval^(0+128)
  2290  00B5' 0A84               	incf	4,f
  2291  00B6' 0800               	movf	0,w
  2292  00B7' 0080'              	movwf	(sprintf@fval+1)^(0+128)
  2293  00B8' 0A84               	incf	4,f
  2294  00B9' 0800               	movf	0,w
  2295  00BA' 0080'              	movwf	(sprintf@fval+2)^(0+128)
  2296  00BB' 0A84               	incf	4,f
  2297  00BC' 0800               	movf	0,w
  2298  00BD' 0080'              	movwf	(sprintf@fval+3)^(0+128)
  2299  00BE'                    l4547:
  2300  00BE' 3004               	movlw	4
  2301  00BF' 0080'              	movwf	??_sprintf^(0+128)
  2302  00C0' 0800'              	movf	??_sprintf^(0+128),w
  2303  00C1' 0780'              	addwf	sprintf@ap^(0+128),f
  2304  00C2'                    l4549:
  2305                           
  2306                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2307  00C2' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  2308  00C3' 1283               	bcf	3,5	;RP0=0, select bank0
  2309  00C4' 1303               	bcf	3,6	;RP1=0, select bank0
  2310  00C5' 0083'              	movwf	___flge@ff1+3
  2311  00C6' 1683               	bsf	3,5	;RP0=1, select bank1
  2312  00C7' 1303               	bcf	3,6	;RP1=0, select bank1
  2313  00C8' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  2314  00C9' 1283               	bcf	3,5	;RP0=0, select bank0
  2315  00CA' 1303               	bcf	3,6	;RP1=0, select bank0
  2316  00CB' 0082'              	movwf	___flge@ff1+2
  2317  00CC' 1683               	bsf	3,5	;RP0=1, select bank1
  2318  00CD' 1303               	bcf	3,6	;RP1=0, select bank1
  2319  00CE' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  2320  00CF' 1283               	bcf	3,5	;RP0=0, select bank0
  2321  00D0' 1303               	bcf	3,6	;RP1=0, select bank0
  2322  00D1' 0081'              	movwf	___flge@ff1+1
  2323  00D2' 1683               	bsf	3,5	;RP0=1, select bank1
  2324  00D3' 1303               	bcf	3,6	;RP1=0, select bank1
  2325  00D4' 0800'              	movf	sprintf@fval^(0+128),w
  2326  00D5' 1283               	bcf	3,5	;RP0=0, select bank0
  2327  00D6' 1303               	bcf	3,6	;RP1=0, select bank0
  2328  00D7' 0080'              	movwf	___flge@ff1
  2329  00D8' 3000               	movlw	0
  2330  00D9' 0087'              	movwf	___flge@ff2+3
  2331  00DA' 3000               	movlw	0
  2332  00DB' 0086'              	movwf	___flge@ff2+2
  2333  00DC' 3000               	movlw	0
  2334  00DD' 0085'              	movwf	___flge@ff2+1
  2335  00DE' 3000               	movlw	0
  2336  00DF' 0084'              	movwf	___flge@ff2
  2337  00E0' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
  2338  00E5' 1803               	btfsc	3,0
  2339  00E6' 2800'              	goto	u7211
  2340  00E7' 2800'              	goto	u7210
  2341  00E8'                    u7211:
  2342  00E8' 2800'              	goto	l4555
  2343  00E9'                    u7210:
  2344  00E9'                    l4551:
  2345                           
  2346                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2347  00E9' 1683               	bsf	3,5	;RP0=1, select bank1
  2348  00EA' 1303               	bcf	3,6	;RP1=0, select bank1
  2349  00EB' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  2350  00EC' 0086'              	movwf	___flneg@f1+3
  2351  00ED' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  2352  00EE' 0085'              	movwf	___flneg@f1+2
  2353  00EF' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  2354  00F0' 0084'              	movwf	___flneg@f1+1
  2355  00F1' 0800'              	movf	sprintf@fval^(0+128),w
  2356  00F2' 0083'              	movwf	___flneg@f1
  2357  00F3' 120A' 118A' 2000' 120A' 118A' 	fcall	___flneg
  2358  00F8' 0806'              	movf	?___flneg+3,w
  2359  00F9' 1683               	bsf	3,5	;RP0=1, select bank1
  2360  00FA' 1303               	bcf	3,6	;RP1=0, select bank1
  2361  00FB' 0080'              	movwf	(sprintf@fval+3)^(0+128)
  2362  00FC' 0805'              	movf	?___flneg+2,w
  2363  00FD' 0080'              	movwf	(sprintf@fval+2)^(0+128)
  2364  00FE' 0804'              	movf	?___flneg+1,w
  2365  00FF' 0080'              	movwf	(sprintf@fval+1)^(0+128)
  2366  0100' 0803'              	movf	?___flneg,w
  2367  0101' 0080'              	movwf	sprintf@fval^(0+128)
  2368  0102'                    l4553:
  2369                           
  2370                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2371  0102' 3003               	movlw	3
  2372  0103' 0480'              	iorwf	sprintf@flag^(0+128),f
  2373  0104' 3000               	movlw	0
  2374  0105' 0480'              	iorwf	(sprintf@flag+1)^(0+128),f
  2375  0106'                    l4555:
  2376                           
  2377                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2378  0106' 1683               	bsf	3,5	;RP0=1, select bank1
  2379  0107' 1303               	bcf	3,6	;RP1=0, select bank1
  2380  0108' 0180'              	clrf	sprintf@eexp^(0+128)
  2381  0109' 0180'              	clrf	(sprintf@eexp+1)^(0+128)
  2382  010A'                    l4557:
  2383                           
  2384                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2385  010A' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  2386  010B' 1283               	bcf	3,5	;RP0=0, select bank0
  2387  010C' 1303               	bcf	3,6	;RP1=0, select bank0
  2388  010D' 0083'              	movwf	___fleq@ff1+3
  2389  010E' 1683               	bsf	3,5	;RP0=1, select bank1
  2390  010F' 1303               	bcf	3,6	;RP1=0, select bank1
  2391  0110' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  2392  0111' 1283               	bcf	3,5	;RP0=0, select bank0
  2393  0112' 1303               	bcf	3,6	;RP1=0, select bank0
  2394  0113' 0082'              	movwf	___fleq@ff1+2
  2395  0114' 1683               	bsf	3,5	;RP0=1, select bank1
  2396  0115' 1303               	bcf	3,6	;RP1=0, select bank1
  2397  0116' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  2398  0117' 1283               	bcf	3,5	;RP0=0, select bank0
  2399  0118' 1303               	bcf	3,6	;RP1=0, select bank0
  2400  0119' 0081'              	movwf	___fleq@ff1+1
  2401  011A' 1683               	bsf	3,5	;RP0=1, select bank1
  2402  011B' 1303               	bcf	3,6	;RP1=0, select bank1
  2403  011C' 0800'              	movf	sprintf@fval^(0+128),w
  2404  011D' 1283               	bcf	3,5	;RP0=0, select bank0
  2405  011E' 1303               	bcf	3,6	;RP1=0, select bank0
  2406  011F' 0080'              	movwf	___fleq@ff1
  2407  0120' 3000               	movlw	0
  2408  0121' 0087'              	movwf	___fleq@ff2+3
  2409  0122' 3000               	movlw	0
  2410  0123' 0086'              	movwf	___fleq@ff2+2
  2411  0124' 3000               	movlw	0
  2412  0125' 0085'              	movwf	___fleq@ff2+1
  2413  0126' 3000               	movlw	0
  2414  0127' 0084'              	movwf	___fleq@ff2
  2415  0128' 120A' 118A' 2000' 120A' 118A' 	fcall	___fleq
  2416  012D' 1803               	btfsc	3,0
  2417  012E' 2800'              	goto	u7221
  2418  012F' 2800'              	goto	u7220
  2419  0130'                    u7221:
  2420  0130' 2800'              	goto	l4583
  2421  0131'                    u7220:
  2422  0131'                    l4559:
  2423                           
  2424                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2425  0131' 1003               	clrc
  2426  0132' 1683               	bsf	3,5	;RP0=1, select bank1
  2427  0133' 1303               	bcf	3,6	;RP1=0, select bank1
  2428  0134' 0D00'              	rlf	(sprintf@fval+2)^(0+128),w
  2429  0135' 0D00'              	rlf	(sprintf@fval+3)^(0+128),w
  2430  0136' 3E82               	addlw	130
  2431  0137' 0080'              	movwf	sprintf@eexp^(0+128)
  2432  0138' 30FF               	movlw	255
  2433  0139' 1803               	skipnc
  2434  013A' 3000               	movlw	0
  2435  013B' 0081'              	movwf	(sprintf@eexp^(0+128)+1)
  2436  013C'                    l4561:
  2437                           
  2438                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2439  013C' 30FF               	movlw	255
  2440  013D' 0780'              	addwf	sprintf@eexp^(0+128),f
  2441  013E' 1803               	skipnc
  2442  013F' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
  2443  0140' 30FF               	movlw	255
  2444  0141' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
  2445  0142'                    l4563:
  2446                           
  2447                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2448  0142' 3003               	movlw	3
  2449  0143' 0083'              	movwf	___wmul@multiplier
  2450  0144' 3000               	movlw	0
  2451  0145' 0084'              	movwf	___wmul@multiplier+1
  2452  0146' 0800'              	movf	(sprintf@eexp+1)^(0+128),w
  2453  0147' 0086'              	movwf	___wmul@multiplicand+1
  2454  0148' 0800'              	movf	sprintf@eexp^(0+128),w
  2455  0149' 0085'              	movwf	___wmul@multiplicand
  2456  014A' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  2457  014F' 0804'              	movf	?___wmul+1,w
  2458  0150' 1683               	bsf	3,5	;RP0=1, select bank1
  2459  0151' 1303               	bcf	3,6	;RP1=0, select bank1
  2460  0152' 0080'              	movwf	(sprintf@eexp+1)^(0+128)
  2461  0153' 0803'              	movf	?___wmul,w
  2462  0154' 0080'              	movwf	sprintf@eexp^(0+128)
  2463  0155'                    l4565:
  2464                           
  2465                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2466  0155' 300A               	movlw	10
  2467  0156' 1283               	bcf	3,5	;RP0=0, select bank0
  2468  0157' 1303               	bcf	3,6	;RP1=0, select bank0
  2469  0158' 0080'              	movwf	___awdiv@divisor
  2470  0159' 3000               	movlw	0
  2471  015A' 0081'              	movwf	___awdiv@divisor+1
  2472  015B' 1683               	bsf	3,5	;RP0=1, select bank1
  2473  015C' 1303               	bcf	3,6	;RP1=0, select bank1
  2474  015D' 0800'              	movf	(sprintf@eexp+1)^(0+128),w
  2475  015E' 1283               	bcf	3,5	;RP0=0, select bank0
  2476  015F' 1303               	bcf	3,6	;RP1=0, select bank0
  2477  0160' 0083'              	movwf	___awdiv@dividend+1
  2478  0161' 1683               	bsf	3,5	;RP0=1, select bank1
  2479  0162' 1303               	bcf	3,6	;RP1=0, select bank1
  2480  0163' 0800'              	movf	sprintf@eexp^(0+128),w
  2481  0164' 1283               	bcf	3,5	;RP0=0, select bank0
  2482  0165' 1303               	bcf	3,6	;RP1=0, select bank0
  2483  0166' 0082'              	movwf	___awdiv@dividend
  2484  0167' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  2485  016C' 1283               	bcf	3,5	;RP0=0, select bank0
  2486  016D' 1303               	bcf	3,6	;RP1=0, select bank0
  2487  016E' 0801'              	movf	?___awdiv+1,w
  2488  016F' 1683               	bsf	3,5	;RP0=1, select bank1
  2489  0170' 1303               	bcf	3,6	;RP1=0, select bank1
  2490  0171' 0080'              	movwf	(sprintf@eexp+1)^(0+128)
  2491  0172' 1283               	bcf	3,5	;RP0=0, select bank0
  2492  0173' 1303               	bcf	3,6	;RP1=0, select bank0
  2493  0174' 0800'              	movf	?___awdiv,w
  2494  0175' 1683               	bsf	3,5	;RP0=1, select bank1
  2495  0176' 1303               	bcf	3,6	;RP1=0, select bank1
  2496  0177' 0080'              	movwf	sprintf@eexp^(0+128)
  2497  0178'                    l4567:
  2498                           
  2499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2500  0178' 1F80'              	btfss	(sprintf@eexp+1)^(0+128),7
  2501  0179' 2800'              	goto	u7231
  2502  017A' 2800'              	goto	u7230
  2503  017B'                    u7231:
  2504  017B' 2800'              	goto	l4571
  2505  017C'                    u7230:
  2506  017C'                    l4569:
  2507                           
  2508                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2509  017C' 30FF               	movlw	255
  2510  017D' 0780'              	addwf	sprintf@eexp^(0+128),f
  2511  017E' 1803               	skipnc
  2512  017F' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
  2513  0180' 30FF               	movlw	255
  2514  0181' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
  2515  0182'                    l4571:
  2516                           
  2517                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2518  0182' 0300'              	decf	sprintf@eexp^(0+128),w
  2519  0183' 3AFF               	xorlw	255
  2520  0184' 120A' 118A' 2000' 120A' 118A' 	fcall	_scale
  2521  0189' 1283               	bcf	3,5	;RP0=0, select bank0
  2522  018A' 1303               	bcf	3,6	;RP1=0, select bank0
  2523  018B' 0827'              	movf	?_scale+3,w
  2524  018C' 1683               	bsf	3,5	;RP0=1, select bank1
  2525  018D' 1303               	bcf	3,6	;RP1=0, select bank1
  2526  018E' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
  2527  018F' 1283               	bcf	3,5	;RP0=0, select bank0
  2528  0190' 1303               	bcf	3,6	;RP1=0, select bank0
  2529  0191' 0826'              	movf	?_scale+2,w
  2530  0192' 1683               	bsf	3,5	;RP0=1, select bank1
  2531  0193' 1303               	bcf	3,6	;RP1=0, select bank1
  2532  0194' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
  2533  0195' 1283               	bcf	3,5	;RP0=0, select bank0
  2534  0196' 1303               	bcf	3,6	;RP1=0, select bank0
  2535  0197' 0825'              	movf	?_scale+1,w
  2536  0198' 1683               	bsf	3,5	;RP0=1, select bank1
  2537  0199' 1303               	bcf	3,6	;RP1=0, select bank1
  2538  019A' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
  2539  019B' 1283               	bcf	3,5	;RP0=0, select bank0
  2540  019C' 1303               	bcf	3,6	;RP1=0, select bank0
  2541  019D' 0824'              	movf	?_scale,w
  2542  019E' 1683               	bsf	3,5	;RP0=1, select bank1
  2543  019F' 1303               	bcf	3,6	;RP1=0, select bank1
  2544  01A0' 0080'              	movwf	sprintf@tmpval^(0+128)
  2545  01A1'                    l4573:
  2546                           
  2547                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2548  01A1' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  2549  01A2' 1283               	bcf	3,5	;RP0=0, select bank0
  2550  01A3' 1303               	bcf	3,6	;RP1=0, select bank0
  2551  01A4' 008D'              	movwf	___flmul@b+3
  2552  01A5' 1683               	bsf	3,5	;RP0=1, select bank1
  2553  01A6' 1303               	bcf	3,6	;RP1=0, select bank1
  2554  01A7' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  2555  01A8' 1283               	bcf	3,5	;RP0=0, select bank0
  2556  01A9' 1303               	bcf	3,6	;RP1=0, select bank0
  2557  01AA' 008C'              	movwf	___flmul@b+2
  2558  01AB' 1683               	bsf	3,5	;RP0=1, select bank1
  2559  01AC' 1303               	bcf	3,6	;RP1=0, select bank1
  2560  01AD' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  2561  01AE' 1283               	bcf	3,5	;RP0=0, select bank0
  2562  01AF' 1303               	bcf	3,6	;RP1=0, select bank0
  2563  01B0' 008B'              	movwf	___flmul@b+1
  2564  01B1' 1683               	bsf	3,5	;RP0=1, select bank1
  2565  01B2' 1303               	bcf	3,6	;RP1=0, select bank1
  2566  01B3' 0800'              	movf	sprintf@fval^(0+128),w
  2567  01B4' 1283               	bcf	3,5	;RP0=0, select bank0
  2568  01B5' 1303               	bcf	3,6	;RP1=0, select bank0
  2569  01B6' 008A'              	movwf	___flmul@b
  2570  01B7' 1683               	bsf	3,5	;RP0=1, select bank1
  2571  01B8' 1303               	bcf	3,6	;RP1=0, select bank1
  2572  01B9' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
  2573  01BA' 1283               	bcf	3,5	;RP0=0, select bank0
  2574  01BB' 1303               	bcf	3,6	;RP1=0, select bank0
  2575  01BC' 0091'              	movwf	___flmul@a+3
  2576  01BD' 1683               	bsf	3,5	;RP0=1, select bank1
  2577  01BE' 1303               	bcf	3,6	;RP1=0, select bank1
  2578  01BF' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
  2579  01C0' 1283               	bcf	3,5	;RP0=0, select bank0
  2580  01C1' 1303               	bcf	3,6	;RP1=0, select bank0
  2581  01C2' 0090'              	movwf	___flmul@a+2
  2582  01C3' 1683               	bsf	3,5	;RP0=1, select bank1
  2583  01C4' 1303               	bcf	3,6	;RP1=0, select bank1
  2584  01C5' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
  2585  01C6' 1283               	bcf	3,5	;RP0=0, select bank0
  2586  01C7' 1303               	bcf	3,6	;RP1=0, select bank0
  2587  01C8' 008F'              	movwf	___flmul@a+1
  2588  01C9' 1683               	bsf	3,5	;RP0=1, select bank1
  2589  01CA' 1303               	bcf	3,6	;RP1=0, select bank1
  2590  01CB' 0800'              	movf	sprintf@tmpval^(0+128),w
  2591  01CC' 1283               	bcf	3,5	;RP0=0, select bank0
  2592  01CD' 1303               	bcf	3,6	;RP1=0, select bank0
  2593  01CE' 008E'              	movwf	___flmul@a
  2594  01CF' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  2595  01D4' 1283               	bcf	3,5	;RP0=0, select bank0
  2596  01D5' 1303               	bcf	3,6	;RP1=0, select bank0
  2597  01D6' 080D'              	movf	?___flmul+3,w
  2598  01D7' 1683               	bsf	3,5	;RP0=1, select bank1
  2599  01D8' 1303               	bcf	3,6	;RP1=0, select bank1
  2600  01D9' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
  2601  01DA' 1283               	bcf	3,5	;RP0=0, select bank0
  2602  01DB' 1303               	bcf	3,6	;RP1=0, select bank0
  2603  01DC' 080C'              	movf	?___flmul+2,w
  2604  01DD' 1683               	bsf	3,5	;RP0=1, select bank1
  2605  01DE' 1303               	bcf	3,6	;RP1=0, select bank1
  2606  01DF' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
  2607  01E0' 1283               	bcf	3,5	;RP0=0, select bank0
  2608  01E1' 1303               	bcf	3,6	;RP1=0, select bank0
  2609  01E2' 080B'              	movf	?___flmul+1,w
  2610  01E3' 1683               	bsf	3,5	;RP0=1, select bank1
  2611  01E4' 1303               	bcf	3,6	;RP1=0, select bank1
  2612  01E5' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
  2613  01E6' 1283               	bcf	3,5	;RP0=0, select bank0
  2614  01E7' 1303               	bcf	3,6	;RP1=0, select bank0
  2615  01E8' 080A'              	movf	?___flmul,w
  2616  01E9' 1683               	bsf	3,5	;RP0=1, select bank1
  2617  01EA' 1303               	bcf	3,6	;RP1=0, select bank1
  2618  01EB' 0080'              	movwf	sprintf@tmpval^(0+128)
  2619  01EC'                    l4575:
  2620                           
  2621                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2622  01EC' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
  2623  01ED' 1283               	bcf	3,5	;RP0=0, select bank0
  2624  01EE' 1303               	bcf	3,6	;RP1=0, select bank0
  2625  01EF' 0083'              	movwf	___flge@ff1+3
  2626  01F0' 1683               	bsf	3,5	;RP0=1, select bank1
  2627  01F1' 1303               	bcf	3,6	;RP1=0, select bank1
  2628  01F2' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
  2629  01F3' 1283               	bcf	3,5	;RP0=0, select bank0
  2630  01F4' 1303               	bcf	3,6	;RP1=0, select bank0
  2631  01F5' 0082'              	movwf	___flge@ff1+2
  2632  01F6' 1683               	bsf	3,5	;RP0=1, select bank1
  2633  01F7' 1303               	bcf	3,6	;RP1=0, select bank1
  2634  01F8' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
  2635  01F9' 1283               	bcf	3,5	;RP0=0, select bank0
  2636  01FA' 1303               	bcf	3,6	;RP1=0, select bank0
  2637  01FB' 0081'              	movwf	___flge@ff1+1
  2638  01FC' 1683               	bsf	3,5	;RP0=1, select bank1
  2639  01FD' 1303               	bcf	3,6	;RP1=0, select bank1
  2640  01FE' 0800'              	movf	sprintf@tmpval^(0+128),w
  2641  01FF' 1283               	bcf	3,5	;RP0=0, select bank0
  2642  0200' 1303               	bcf	3,6	;RP1=0, select bank0
  2643  0201' 0080'              	movwf	___flge@ff1
  2644  0202' 303F               	movlw	63
  2645  0203' 0087'              	movwf	___flge@ff2+3
  2646  0204' 3080               	movlw	128
  2647  0205' 0086'              	movwf	___flge@ff2+2
  2648  0206' 3000               	movlw	0
  2649  0207' 0085'              	movwf	___flge@ff2+1
  2650  0208' 3000               	movlw	0
  2651  0209' 0084'              	movwf	___flge@ff2
  2652  020A' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
  2653  020F' 1803               	btfsc	3,0
  2654  0210' 2800'              	goto	u7241
  2655  0211' 2800'              	goto	u7240
  2656  0212'                    u7241:
  2657  0212' 2800'              	goto	l4579
  2658  0213'                    u7240:
  2659  0213'                    l4577:
  2660                           
  2661                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2662  0213' 30FF               	movlw	255
  2663  0214' 1683               	bsf	3,5	;RP0=1, select bank1
  2664  0215' 1303               	bcf	3,6	;RP1=0, select bank1
  2665  0216' 0780'              	addwf	sprintf@eexp^(0+128),f
  2666  0217' 1803               	skipnc
  2667  0218' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
  2668  0219' 30FF               	movlw	255
  2669  021A' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
  2670  021B' 2800'              	goto	l4583
  2671  021C'                    l4579:
  2672  021C' 1683               	bsf	3,5	;RP0=1, select bank1
  2673  021D' 1303               	bcf	3,6	;RP1=0, select bank1
  2674  021E' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
  2675  021F' 1283               	bcf	3,5	;RP0=0, select bank0
  2676  0220' 1303               	bcf	3,6	;RP1=0, select bank0
  2677  0221' 0083'              	movwf	___flge@ff1+3
  2678  0222' 1683               	bsf	3,5	;RP0=1, select bank1
  2679  0223' 1303               	bcf	3,6	;RP1=0, select bank1
  2680  0224' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
  2681  0225' 1283               	bcf	3,5	;RP0=0, select bank0
  2682  0226' 1303               	bcf	3,6	;RP1=0, select bank0
  2683  0227' 0082'              	movwf	___flge@ff1+2
  2684  0228' 1683               	bsf	3,5	;RP0=1, select bank1
  2685  0229' 1303               	bcf	3,6	;RP1=0, select bank1
  2686  022A' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
  2687  022B' 1283               	bcf	3,5	;RP0=0, select bank0
  2688  022C' 1303               	bcf	3,6	;RP1=0, select bank0
  2689  022D' 0081'              	movwf	___flge@ff1+1
  2690  022E' 1683               	bsf	3,5	;RP0=1, select bank1
  2691  022F' 1303               	bcf	3,6	;RP1=0, select bank1
  2692  0230' 0800'              	movf	sprintf@tmpval^(0+128),w
  2693  0231' 1283               	bcf	3,5	;RP0=0, select bank0
  2694  0232' 1303               	bcf	3,6	;RP1=0, select bank0
  2695  0233' 0080'              	movwf	___flge@ff1
  2696  0234' 3041               	movlw	65
  2697  0235' 0087'              	movwf	___flge@ff2+3
  2698  0236' 3020               	movlw	32
  2699  0237' 0086'              	movwf	___flge@ff2+2
  2700  0238' 3000               	movlw	0
  2701  0239' 0085'              	movwf	___flge@ff2+1
  2702  023A' 3000               	movlw	0
  2703  023B' 0084'              	movwf	___flge@ff2
  2704  023C' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
  2705  0241' 1C03               	btfss	3,0
  2706  0242' 2800'              	goto	u7251
  2707  0243' 2800'              	goto	u7250
  2708  0244'                    u7251:
  2709  0244' 2800'              	goto	l4583
  2710  0245'                    u7250:
  2711  0245'                    l4581:
  2712                           
  2713                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2714  0245' 3001               	movlw	1
  2715  0246' 1683               	bsf	3,5	;RP0=1, select bank1
  2716  0247' 1303               	bcf	3,6	;RP1=0, select bank1
  2717  0248' 0780'              	addwf	sprintf@eexp^(0+128),f
  2718  0249' 1803               	skipnc
  2719  024A' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
  2720  024B' 3000               	movlw	0
  2721  024C' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
  2722  024D'                    l4583:
  2723                           
  2724                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2725  024D' 1683               	bsf	3,5	;RP0=1, select bank1
  2726  024E' 1303               	bcf	3,6	;RP1=0, select bank1
  2727  024F' 0800'              	movf	(sprintf@prec+1)^(0+128),w
  2728  0250' 3A80               	xorlw	128
  2729  0251' 00FF               	movwf	btemp+1
  2730  0252' 3080               	movlw	128
  2731  0253' 027F               	subwf	btemp+1,w
  2732  0254' 1D03               	skipz
  2733  0255' 2800'              	goto	u7265
  2734  0256' 300D               	movlw	13
  2735  0257' 0200'              	subwf	sprintf@prec^(0+128),w
  2736  0258'                    u7265:
  2737  0258' 1803               	skipnc
  2738  0259' 2800'              	goto	u7261
  2739  025A' 2800'              	goto	u7260
  2740  025B'                    u7261:
  2741  025B' 2800'              	goto	l4587
  2742  025C'                    u7260:
  2743  025C'                    l4585:
  2744                           
  2745                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2746  025C' 1683               	bsf	3,5	;RP0=1, select bank1
  2747  025D' 1303               	bcf	3,6	;RP1=0, select bank1
  2748  025E' 0800'              	movf	sprintf@prec^(0+128),w
  2749  025F' 120A' 118A' 2000' 120A' 118A' 	fcall	_fround
  2750  0264' 1283               	bcf	3,5	;RP0=0, select bank0
  2751  0265' 1303               	bcf	3,6	;RP1=0, select bank0
  2752  0266' 0827'              	movf	?_fround+3,w
  2753  0267' 00BB'              	movwf	___fladd@b+3
  2754  0268' 0826'              	movf	?_fround+2,w
  2755  0269' 00BA'              	movwf	___fladd@b+2
  2756  026A' 0825'              	movf	?_fround+1,w
  2757  026B' 00B9'              	movwf	___fladd@b+1
  2758  026C' 0824'              	movf	?_fround,w
  2759  026D' 00B8'              	movwf	___fladd@b
  2760  026E' 1683               	bsf	3,5	;RP0=1, select bank1
  2761  026F' 1303               	bcf	3,6	;RP1=0, select bank1
  2762  0270' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  2763  0271' 1283               	bcf	3,5	;RP0=0, select bank0
  2764  0272' 1303               	bcf	3,6	;RP1=0, select bank0
  2765  0273' 00BF'              	movwf	___fladd@a+3
  2766  0274' 1683               	bsf	3,5	;RP0=1, select bank1
  2767  0275' 1303               	bcf	3,6	;RP1=0, select bank1
  2768  0276' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  2769  0277' 1283               	bcf	3,5	;RP0=0, select bank0
  2770  0278' 1303               	bcf	3,6	;RP1=0, select bank0
  2771  0279' 00BE'              	movwf	___fladd@a+2
  2772  027A' 1683               	bsf	3,5	;RP0=1, select bank1
  2773  027B' 1303               	bcf	3,6	;RP1=0, select bank1
  2774  027C' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  2775  027D' 1283               	bcf	3,5	;RP0=0, select bank0
  2776  027E' 1303               	bcf	3,6	;RP1=0, select bank0
  2777  027F' 00BD'              	movwf	___fladd@a+1
  2778  0280' 1683               	bsf	3,5	;RP0=1, select bank1
  2779  0281' 1303               	bcf	3,6	;RP1=0, select bank1
  2780  0282' 0800'              	movf	sprintf@fval^(0+128),w
  2781  0283' 1283               	bcf	3,5	;RP0=0, select bank0
  2782  0284' 1303               	bcf	3,6	;RP1=0, select bank0
  2783  0285' 00BC'              	movwf	___fladd@a
  2784  0286' 120A' 118A' 2000' 120A' 118A' 	fcall	___fladd
  2785  028B' 1283               	bcf	3,5	;RP0=0, select bank0
  2786  028C' 1303               	bcf	3,6	;RP1=0, select bank0
  2787  028D' 083B'              	movf	?___fladd+3,w
  2788  028E' 1683               	bsf	3,5	;RP0=1, select bank1
  2789  028F' 1303               	bcf	3,6	;RP1=0, select bank1
  2790  0290' 0080'              	movwf	(sprintf@fval+3)^(0+128)
  2791  0291' 1283               	bcf	3,5	;RP0=0, select bank0
  2792  0292' 1303               	bcf	3,6	;RP1=0, select bank0
  2793  0293' 083A'              	movf	?___fladd+2,w
  2794  0294' 1683               	bsf	3,5	;RP0=1, select bank1
  2795  0295' 1303               	bcf	3,6	;RP1=0, select bank1
  2796  0296' 0080'              	movwf	(sprintf@fval+2)^(0+128)
  2797  0297' 1283               	bcf	3,5	;RP0=0, select bank0
  2798  0298' 1303               	bcf	3,6	;RP1=0, select bank0
  2799  0299' 0839'              	movf	?___fladd+1,w
  2800  029A' 1683               	bsf	3,5	;RP0=1, select bank1
  2801  029B' 1303               	bcf	3,6	;RP1=0, select bank1
  2802  029C' 0080'              	movwf	(sprintf@fval+1)^(0+128)
  2803  029D' 1283               	bcf	3,5	;RP0=0, select bank0
  2804  029E' 1303               	bcf	3,6	;RP1=0, select bank0
  2805  029F' 0838'              	movf	?___fladd,w
  2806  02A0' 1683               	bsf	3,5	;RP0=1, select bank1
  2807  02A1' 1303               	bcf	3,6	;RP1=0, select bank1
  2808  02A2' 0080'              	movwf	sprintf@fval^(0+128)
  2809  02A3'                    l4587:
  2810                           
  2811                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2812  02A3' 1683               	bsf	3,5	;RP0=1, select bank1
  2813  02A4' 1303               	bcf	3,6	;RP1=0, select bank1
  2814  02A5' 0800'              	movf	(sprintf@eexp+1)^(0+128),w
  2815  02A6' 3A80               	xorlw	128
  2816  02A7' 00FF               	movwf	btemp+1
  2817  02A8' 3080               	movlw	128
  2818  02A9' 027F               	subwf	btemp+1,w
  2819  02AA' 1D03               	skipz
  2820  02AB' 2800'              	goto	u7275
  2821  02AC' 300A               	movlw	10
  2822  02AD' 0200'              	subwf	sprintf@eexp^(0+128),w
  2823  02AE'                    u7275:
  2824  02AE' 1803               	skipnc
  2825  02AF' 2800'              	goto	u7271
  2826  02B0' 120A' 118A' 2800'  	goto	u7270
  2827  02B3'                    u7271:
  2828  02B3' 120A' 118A' 2800'  	goto	l4595
  2829  02B6'                    L3:
  2830  02B6'                    L2:
  2831  02B6' 120A' 118A' 2800'  	ljmp	l4737
  2832                           
  2833                           	psect	text2
  2834  0000'                    __ptext2:	
  2835 ;; *************** function _scale *****************
  2836 ;; Defined at:
  2837 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;  scl             1    wreg     char 
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;  scl             1   54[BANK0 ] char 
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  4   36[BANK0 ] char 
  2844 ;; Registers used:
  2845 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2851 ;;      Params:         0       4       0       0       0
  2852 ;;      Locals:         0       5       0       0       0
  2853 ;;      Temps:          0      10       0       0       0
  2854 ;;      Totals:         0      19       0       0       0
  2855 ;;Total ram usage:       19 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; Hardware stack levels required when called:    4
  2858 ;; This function calls:
  2859 ;;		___awdiv
  2860 ;;		___awmod
  2861 ;;		___flmul
  2862 ;; This function is called by:
  2863 ;;		_sprintf
  2864 ;; This function uses a non-reentrant model
  2865 ;;
  2866                           
  2867                           
  2868                           ;psect for function _scale
  2869  0000'                    _scale:
  2870                           
  2871                           ;incstack = 0
  2872                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2873                           ;scale@scl stored from wreg
  2874  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  2875  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  2876  0002' 00B6'              	movwf	scale@scl
  2877  0003'                    l4201:
  2878                           
  2879                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2880  0003' 1FB6'              	btfss	scale@scl,7
  2881  0004' 2800'              	goto	u6311
  2882  0005' 2800'              	goto	u6310
  2883  0006'                    u6311:
  2884  0006' 2800'              	goto	l4223
  2885  0007'                    u6310:
  2886  0007'                    l4203:
  2887                           
  2888                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2889  0007' 09B6'              	comf	scale@scl,f
  2890  0008' 0AB6'              	incf	scale@scl,f
  2891  0009'                    l4205:
  2892                           
  2893                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2894  0009' 0836'              	movf	scale@scl,w
  2895  000A' 3A80               	xorlw	128
  2896  000B' 3E12               	addlw	-238
  2897  000C' 1C03               	skipc
  2898  000D' 2800'              	goto	u6321
  2899  000E' 2800'              	goto	u6320
  2900  000F'                    u6321:
  2901  000F' 2800'              	goto	l4213
  2902  0010'                    u6320:
  2903  0010'                    l4207:
  2904                           
  2905                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2906  0010' 300A               	movlw	10
  2907  0011' 0080'              	movwf	___awdiv@divisor
  2908  0012' 3000               	movlw	0
  2909  0013' 0081'              	movwf	___awdiv@divisor+1
  2910  0014' 0836'              	movf	scale@scl,w
  2911  0015' 0085'              	movwf	___awmod@dividend
  2912  0016' 0186'              	clrf	___awmod@dividend+1
  2913  0017' 1B85'              	btfsc	___awmod@dividend,7
  2914  0018' 0386'              	decf	___awmod@dividend+1,f
  2915  0019' 3064               	movlw	100
  2916  001A' 0083'              	movwf	___awmod@divisor
  2917  001B' 3000               	movlw	0
  2918  001C' 0084'              	movwf	___awmod@divisor+1
  2919  001D' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  2920  0022' 0804'              	movf	?___awmod+1,w
  2921  0023' 1283               	bcf	3,5	;RP0=0, select bank0
  2922  0024' 1303               	bcf	3,6	;RP1=0, select bank0
  2923  0025' 0083'              	movwf	___awdiv@dividend+1
  2924  0026' 0803'              	movf	?___awmod,w
  2925  0027' 0082'              	movwf	___awdiv@dividend
  2926  0028' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  2927  002D' 1283               	bcf	3,5	;RP0=0, select bank0
  2928  002E' 1303               	bcf	3,6	;RP1=0, select bank0
  2929  002F' 0800'              	movf	?___awdiv,w
  2930  0030' 00A8'              	movwf	??_scale
  2931  0031' 3001               	movlw	1
  2932  0032'                    u6335:
  2933  0032' 1003               	clrc
  2934  0033' 0DA8'              	rlf	??_scale,f
  2935  0034' 3EFF               	addlw	-1
  2936  0035' 1D03               	skipz
  2937  0036' 2800'              	goto	u6335
  2938  0037' 1003               	clrc
  2939  0038' 0D28'              	rlf	??_scale,w
  2940  0039' 3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2941  003A' 0084               	movwf	4
  2942  003B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2943  0040' 00A9'              	movwf	??_scale+1
  2944  0041' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2945  0046' 00AA'              	movwf	??_scale+2
  2946  0047' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2947  004C' 00AB'              	movwf	??_scale+3
  2948  004D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2949  0052' 00AC'              	movwf	??_scale+4
  2950  0053' 082C'              	movf	??_scale+4,w
  2951  0054' 008D'              	movwf	___flmul@b+3
  2952  0055' 082B'              	movf	??_scale+3,w
  2953  0056' 008C'              	movwf	___flmul@b+2
  2954  0057' 082A'              	movf	??_scale+2,w
  2955  0058' 008B'              	movwf	___flmul@b+1
  2956  0059' 0829'              	movf	??_scale+1,w
  2957  005A' 008A'              	movwf	___flmul@b
  2958  005B' 3064               	movlw	100
  2959  005C' 0080'              	movwf	___awdiv@divisor
  2960  005D' 3000               	movlw	0
  2961  005E' 0081'              	movwf	___awdiv@divisor+1
  2962  005F' 0836'              	movf	scale@scl,w
  2963  0060' 0082'              	movwf	___awdiv@dividend
  2964  0061' 0183'              	clrf	___awdiv@dividend+1
  2965  0062' 1B82'              	btfsc	___awdiv@dividend,7
  2966  0063' 0383'              	decf	___awdiv@dividend+1,f
  2967  0064' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  2968  0069' 1283               	bcf	3,5	;RP0=0, select bank0
  2969  006A' 1303               	bcf	3,6	;RP1=0, select bank0
  2970  006B' 0800'              	movf	?___awdiv,w
  2971  006C' 00AD'              	movwf	??_scale+5
  2972  006D' 3001               	movlw	1
  2973  006E'                    u6345:
  2974  006E' 1003               	clrc
  2975  006F' 0DAD'              	rlf	??_scale+5,f
  2976  0070' 3EFF               	addlw	-1
  2977  0071' 1D03               	skipz
  2978  0072' 2800'              	goto	u6345
  2979  0073' 1003               	clrc
  2980  0074' 0D2D'              	rlf	??_scale+5,w
  2981  0075' 3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2982  0076' 0084               	movwf	4
  2983  0077' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2984  007C' 00AE'              	movwf	??_scale+6
  2985  007D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2986  0082' 00AF'              	movwf	??_scale+7
  2987  0083' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2988  0088' 00B0'              	movwf	??_scale+8
  2989  0089' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2990  008E' 00B1'              	movwf	??_scale+9
  2991  008F' 0831'              	movf	??_scale+9,w
  2992  0090' 0091'              	movwf	___flmul@a+3
  2993  0091' 0830'              	movf	??_scale+8,w
  2994  0092' 0090'              	movwf	___flmul@a+2
  2995  0093' 082F'              	movf	??_scale+7,w
  2996  0094' 008F'              	movwf	___flmul@a+1
  2997  0095' 082E'              	movf	??_scale+6,w
  2998  0096' 008E'              	movwf	___flmul@a
  2999  0097' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3000  009C' 1283               	bcf	3,5	;RP0=0, select bank0
  3001  009D' 1303               	bcf	3,6	;RP1=0, select bank0
  3002  009E' 080D'              	movf	?___flmul+3,w
  3003  009F' 00B5'              	movwf	_scale$1255+3
  3004  00A0' 080C'              	movf	?___flmul+2,w
  3005  00A1' 00B4'              	movwf	_scale$1255+2
  3006  00A2' 080B'              	movf	?___flmul+1,w
  3007  00A3' 00B3'              	movwf	_scale$1255+1
  3008  00A4' 080A'              	movf	?___flmul,w
  3009  00A5' 00B2'              	movwf	_scale$1255
  3010                           
  3011                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3012  00A6' 300A               	movlw	10
  3013  00A7' 0083'              	movwf	___awmod@divisor
  3014  00A8' 3000               	movlw	0
  3015  00A9' 0084'              	movwf	___awmod@divisor+1
  3016  00AA' 0836'              	movf	scale@scl,w
  3017  00AB' 0085'              	movwf	___awmod@dividend
  3018  00AC' 0186'              	clrf	___awmod@dividend+1
  3019  00AD' 1B85'              	btfsc	___awmod@dividend,7
  3020  00AE' 0386'              	decf	___awmod@dividend+1,f
  3021  00AF' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  3022  00B4' 0803'              	movf	?___awmod,w
  3023  00B5' 1283               	bcf	3,5	;RP0=0, select bank0
  3024  00B6' 1303               	bcf	3,6	;RP1=0, select bank0
  3025  00B7' 00A8'              	movwf	??_scale
  3026  00B8' 3001               	movlw	1
  3027  00B9'                    u6355:
  3028  00B9' 1003               	clrc
  3029  00BA' 0DA8'              	rlf	??_scale,f
  3030  00BB' 3EFF               	addlw	-1
  3031  00BC' 1D03               	skipz
  3032  00BD' 2800'              	goto	u6355
  3033  00BE' 1003               	clrc
  3034  00BF' 0D28'              	rlf	??_scale,w
  3035  00C0' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3036  00C1' 0084               	movwf	4
  3037  00C2' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3038  00C7' 00A9'              	movwf	??_scale+1
  3039  00C8' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3040  00CD' 00AA'              	movwf	??_scale+2
  3041  00CE' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3042  00D3' 00AB'              	movwf	??_scale+3
  3043  00D4' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3044  00D9' 00AC'              	movwf	??_scale+4
  3045  00DA' 082C'              	movf	??_scale+4,w
  3046  00DB' 008D'              	movwf	___flmul@b+3
  3047  00DC' 082B'              	movf	??_scale+3,w
  3048  00DD' 008C'              	movwf	___flmul@b+2
  3049  00DE' 082A'              	movf	??_scale+2,w
  3050  00DF' 008B'              	movwf	___flmul@b+1
  3051  00E0' 0829'              	movf	??_scale+1,w
  3052  00E1' 008A'              	movwf	___flmul@b
  3053  00E2' 0835'              	movf	_scale$1255+3,w
  3054  00E3' 0091'              	movwf	___flmul@a+3
  3055  00E4' 0834'              	movf	_scale$1255+2,w
  3056  00E5' 0090'              	movwf	___flmul@a+2
  3057  00E6' 0833'              	movf	_scale$1255+1,w
  3058  00E7' 008F'              	movwf	___flmul@a+1
  3059  00E8' 0832'              	movf	_scale$1255,w
  3060  00E9' 008E'              	movwf	___flmul@a
  3061  00EA' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3062  00EF' 1283               	bcf	3,5	;RP0=0, select bank0
  3063  00F0' 1303               	bcf	3,6	;RP1=0, select bank0
  3064  00F1' 080D'              	movf	?___flmul+3,w
  3065  00F2' 00A7'              	movwf	?_scale+3
  3066  00F3' 080C'              	movf	?___flmul+2,w
  3067  00F4' 00A6'              	movwf	?_scale+2
  3068  00F5' 080B'              	movf	?___flmul+1,w
  3069  00F6' 00A5'              	movwf	?_scale+1
  3070  00F7' 080A'              	movf	?___flmul,w
  3071  00F8' 00A4'              	movwf	?_scale
  3072  00F9' 2800'              	goto	l319
  3073  00FA'                    l4213:
  3074  00FA' 0836'              	movf	scale@scl,w
  3075  00FB' 3A80               	xorlw	128
  3076  00FC' 3E75               	addlw	-139
  3077  00FD' 1C03               	skipc
  3078  00FE' 2800'              	goto	u6361
  3079  00FF' 2800'              	goto	u6360
  3080  0100'                    u6361:
  3081  0100' 2800'              	goto	l4219
  3082  0101'                    u6360:
  3083  0101'                    l4215:
  3084                           
  3085                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3086  0101' 300A               	movlw	10
  3087  0102' 0083'              	movwf	___awmod@divisor
  3088  0103' 3000               	movlw	0
  3089  0104' 0084'              	movwf	___awmod@divisor+1
  3090  0105' 0836'              	movf	scale@scl,w
  3091  0106' 0085'              	movwf	___awmod@dividend
  3092  0107' 0186'              	clrf	___awmod@dividend+1
  3093  0108' 1B85'              	btfsc	___awmod@dividend,7
  3094  0109' 0386'              	decf	___awmod@dividend+1,f
  3095  010A' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  3096  010F' 0803'              	movf	?___awmod,w
  3097  0110' 1283               	bcf	3,5	;RP0=0, select bank0
  3098  0111' 1303               	bcf	3,6	;RP1=0, select bank0
  3099  0112' 00A8'              	movwf	??_scale
  3100  0113' 3001               	movlw	1
  3101  0114'                    u6375:
  3102  0114' 1003               	clrc
  3103  0115' 0DA8'              	rlf	??_scale,f
  3104  0116' 3EFF               	addlw	-1
  3105  0117' 1D03               	skipz
  3106  0118' 2800'              	goto	u6375
  3107  0119' 1003               	clrc
  3108  011A' 0D28'              	rlf	??_scale,w
  3109  011B' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3110  011C' 0084               	movwf	4
  3111  011D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3112  0122' 00A9'              	movwf	??_scale+1
  3113  0123' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3114  0128' 00AA'              	movwf	??_scale+2
  3115  0129' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3116  012E' 00AB'              	movwf	??_scale+3
  3117  012F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3118  0134' 00AC'              	movwf	??_scale+4
  3119  0135' 082C'              	movf	??_scale+4,w
  3120  0136' 008D'              	movwf	___flmul@b+3
  3121  0137' 082B'              	movf	??_scale+3,w
  3122  0138' 008C'              	movwf	___flmul@b+2
  3123  0139' 082A'              	movf	??_scale+2,w
  3124  013A' 008B'              	movwf	___flmul@b+1
  3125  013B' 0829'              	movf	??_scale+1,w
  3126  013C' 008A'              	movwf	___flmul@b
  3127  013D' 300A               	movlw	10
  3128  013E' 0080'              	movwf	___awdiv@divisor
  3129  013F' 3000               	movlw	0
  3130  0140' 0081'              	movwf	___awdiv@divisor+1
  3131  0141' 0836'              	movf	scale@scl,w
  3132  0142' 0082'              	movwf	___awdiv@dividend
  3133  0143' 0183'              	clrf	___awdiv@dividend+1
  3134  0144' 1B82'              	btfsc	___awdiv@dividend,7
  3135  0145' 0383'              	decf	___awdiv@dividend+1,f
  3136  0146' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  3137  014B' 1283               	bcf	3,5	;RP0=0, select bank0
  3138  014C' 1303               	bcf	3,6	;RP1=0, select bank0
  3139  014D' 0800'              	movf	?___awdiv,w
  3140  014E' 00AD'              	movwf	??_scale+5
  3141  014F' 3001               	movlw	1
  3142  0150'                    u6385:
  3143  0150' 1003               	clrc
  3144  0151' 0DAD'              	rlf	??_scale+5,f
  3145  0152' 3EFF               	addlw	-1
  3146  0153' 1D03               	skipz
  3147  0154' 2800'              	goto	u6385
  3148  0155' 1003               	clrc
  3149  0156' 0D2D'              	rlf	??_scale+5,w
  3150  0157' 3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3151  0158' 0084               	movwf	4
  3152  0159' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3153  015E' 00AE'              	movwf	??_scale+6
  3154  015F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3155  0164' 00AF'              	movwf	??_scale+7
  3156  0165' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3157  016A' 00B0'              	movwf	??_scale+8
  3158  016B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3159  0170' 00B1'              	movwf	??_scale+9
  3160  0171' 0831'              	movf	??_scale+9,w
  3161  0172' 0091'              	movwf	___flmul@a+3
  3162  0173' 0830'              	movf	??_scale+8,w
  3163  0174' 0090'              	movwf	___flmul@a+2
  3164  0175' 082F'              	movf	??_scale+7,w
  3165  0176' 008F'              	movwf	___flmul@a+1
  3166  0177' 082E'              	movf	??_scale+6,w
  3167  0178' 008E'              	movwf	___flmul@a
  3168  0179' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3169  017E' 1283               	bcf	3,5	;RP0=0, select bank0
  3170  017F' 1303               	bcf	3,6	;RP1=0, select bank0
  3171  0180' 080D'              	movf	?___flmul+3,w
  3172  0181' 00A7'              	movwf	?_scale+3
  3173  0182' 080C'              	movf	?___flmul+2,w
  3174  0183' 00A6'              	movwf	?_scale+2
  3175  0184' 080B'              	movf	?___flmul+1,w
  3176  0185' 00A5'              	movwf	?_scale+1
  3177  0186' 080A'              	movf	?___flmul,w
  3178  0187' 00A4'              	movwf	?_scale
  3179  0188' 2800'              	goto	l319
  3180  0189'                    l4219:
  3181                           
  3182                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3183  0189' 0836'              	movf	scale@scl,w
  3184  018A' 00A8'              	movwf	??_scale
  3185  018B' 3001               	movlw	1
  3186  018C'                    u6395:
  3187  018C' 1003               	clrc
  3188  018D' 0DA8'              	rlf	??_scale,f
  3189  018E' 3EFF               	addlw	-1
  3190  018F' 1D03               	skipz
  3191  0190' 2800'              	goto	u6395
  3192  0191' 1003               	clrc
  3193  0192' 0D28'              	rlf	??_scale,w
  3194  0193' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3195  0194' 0084               	movwf	4
  3196  0195' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3197  019A' 00A9'              	movwf	??_scale+1
  3198  019B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3199  01A0' 00AA'              	movwf	??_scale+2
  3200  01A1' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3201  01A6' 00AB'              	movwf	??_scale+3
  3202  01A7' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3203  01AC' 00AC'              	movwf	??_scale+4
  3204  01AD' 082C'              	movf	??_scale+4,w
  3205  01AE' 00A7'              	movwf	?_scale+3
  3206  01AF' 082B'              	movf	??_scale+3,w
  3207  01B0' 00A6'              	movwf	?_scale+2
  3208  01B1' 082A'              	movf	??_scale+2,w
  3209  01B2' 00A5'              	movwf	?_scale+1
  3210  01B3' 0829'              	movf	??_scale+1,w
  3211  01B4' 00A4'              	movwf	?_scale
  3212  01B5' 2800'              	goto	l319
  3213  01B6'                    l4223:
  3214                           
  3215                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3216  01B6' 0836'              	movf	scale@scl,w
  3217  01B7' 3A80               	xorlw	128
  3218  01B8' 3E12               	addlw	-238
  3219  01B9' 1C03               	skipc
  3220  01BA' 2800'              	goto	u6401
  3221  01BB' 2800'              	goto	u6400
  3222  01BC'                    u6401:
  3223  01BC' 2800'              	goto	l4231
  3224  01BD'                    u6400:
  3225  01BD'                    l4225:
  3226                           
  3227                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3228  01BD' 300A               	movlw	10
  3229  01BE' 0080'              	movwf	___awdiv@divisor
  3230  01BF' 3000               	movlw	0
  3231  01C0' 0081'              	movwf	___awdiv@divisor+1
  3232  01C1' 0836'              	movf	scale@scl,w
  3233  01C2' 0085'              	movwf	___awmod@dividend
  3234  01C3' 0186'              	clrf	___awmod@dividend+1
  3235  01C4' 1B85'              	btfsc	___awmod@dividend,7
  3236  01C5' 0386'              	decf	___awmod@dividend+1,f
  3237  01C6' 3064               	movlw	100
  3238  01C7' 0083'              	movwf	___awmod@divisor
  3239  01C8' 3000               	movlw	0
  3240  01C9' 0084'              	movwf	___awmod@divisor+1
  3241  01CA' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  3242  01CF' 0804'              	movf	?___awmod+1,w
  3243  01D0' 1283               	bcf	3,5	;RP0=0, select bank0
  3244  01D1' 1303               	bcf	3,6	;RP1=0, select bank0
  3245  01D2' 0083'              	movwf	___awdiv@dividend+1
  3246  01D3' 0803'              	movf	?___awmod,w
  3247  01D4' 0082'              	movwf	___awdiv@dividend
  3248  01D5' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  3249  01DA' 1283               	bcf	3,5	;RP0=0, select bank0
  3250  01DB' 1303               	bcf	3,6	;RP1=0, select bank0
  3251  01DC' 0800'              	movf	?___awdiv,w
  3252  01DD' 00A8'              	movwf	??_scale
  3253  01DE' 3001               	movlw	1
  3254  01DF'                    u6415:
  3255  01DF' 1003               	clrc
  3256  01E0' 0DA8'              	rlf	??_scale,f
  3257  01E1' 3EFF               	addlw	-1
  3258  01E2' 1D03               	skipz
  3259  01E3' 2800'              	goto	u6415
  3260  01E4' 1003               	clrc
  3261  01E5' 0D28'              	rlf	??_scale,w
  3262  01E6' 3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3263  01E7' 0084               	movwf	4
  3264  01E8' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3265  01ED' 00A9'              	movwf	??_scale+1
  3266  01EE' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3267  01F3' 00AA'              	movwf	??_scale+2
  3268  01F4' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3269  01F9' 00AB'              	movwf	??_scale+3
  3270  01FA' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3271  01FF' 00AC'              	movwf	??_scale+4
  3272  0200' 082C'              	movf	??_scale+4,w
  3273  0201' 008D'              	movwf	___flmul@b+3
  3274  0202' 082B'              	movf	??_scale+3,w
  3275  0203' 008C'              	movwf	___flmul@b+2
  3276  0204' 082A'              	movf	??_scale+2,w
  3277  0205' 008B'              	movwf	___flmul@b+1
  3278  0206' 0829'              	movf	??_scale+1,w
  3279  0207' 008A'              	movwf	___flmul@b
  3280  0208' 3064               	movlw	100
  3281  0209' 0080'              	movwf	___awdiv@divisor
  3282  020A' 3000               	movlw	0
  3283  020B' 0081'              	movwf	___awdiv@divisor+1
  3284  020C' 0836'              	movf	scale@scl,w
  3285  020D' 0082'              	movwf	___awdiv@dividend
  3286  020E' 0183'              	clrf	___awdiv@dividend+1
  3287  020F' 1B82'              	btfsc	___awdiv@dividend,7
  3288  0210' 0383'              	decf	___awdiv@dividend+1,f
  3289  0211' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  3290  0216' 1283               	bcf	3,5	;RP0=0, select bank0
  3291  0217' 1303               	bcf	3,6	;RP1=0, select bank0
  3292  0218' 0800'              	movf	?___awdiv,w
  3293  0219' 00AD'              	movwf	??_scale+5
  3294  021A' 3001               	movlw	1
  3295  021B'                    u6425:
  3296  021B' 1003               	clrc
  3297  021C' 0DAD'              	rlf	??_scale+5,f
  3298  021D' 3EFF               	addlw	-1
  3299  021E' 1D03               	skipz
  3300  021F' 2800'              	goto	u6425
  3301  0220' 1003               	clrc
  3302  0221' 0D2D'              	rlf	??_scale+5,w
  3303  0222' 3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3304  0223' 0084               	movwf	4
  3305  0224' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3306  0229' 00AE'              	movwf	??_scale+6
  3307  022A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3308  022F' 00AF'              	movwf	??_scale+7
  3309  0230' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3310  0235' 00B0'              	movwf	??_scale+8
  3311  0236' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3312  023B' 00B1'              	movwf	??_scale+9
  3313  023C' 0831'              	movf	??_scale+9,w
  3314  023D' 0091'              	movwf	___flmul@a+3
  3315  023E' 0830'              	movf	??_scale+8,w
  3316  023F' 0090'              	movwf	___flmul@a+2
  3317  0240' 082F'              	movf	??_scale+7,w
  3318  0241' 008F'              	movwf	___flmul@a+1
  3319  0242' 082E'              	movf	??_scale+6,w
  3320  0243' 008E'              	movwf	___flmul@a
  3321  0244' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3322  0249' 1283               	bcf	3,5	;RP0=0, select bank0
  3323  024A' 1303               	bcf	3,6	;RP1=0, select bank0
  3324  024B' 080D'              	movf	?___flmul+3,w
  3325  024C' 00B5'              	movwf	_scale$1255+3
  3326  024D' 080C'              	movf	?___flmul+2,w
  3327  024E' 00B4'              	movwf	_scale$1255+2
  3328  024F' 080B'              	movf	?___flmul+1,w
  3329  0250' 00B3'              	movwf	_scale$1255+1
  3330  0251' 080A'              	movf	?___flmul,w
  3331  0252' 00B2'              	movwf	_scale$1255
  3332                           
  3333                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3334  0253' 300A               	movlw	10
  3335  0254' 0083'              	movwf	___awmod@divisor
  3336  0255' 3000               	movlw	0
  3337  0256' 0084'              	movwf	___awmod@divisor+1
  3338  0257' 0836'              	movf	scale@scl,w
  3339  0258' 0085'              	movwf	___awmod@dividend
  3340  0259' 0186'              	clrf	___awmod@dividend+1
  3341  025A' 1B85'              	btfsc	___awmod@dividend,7
  3342  025B' 0386'              	decf	___awmod@dividend+1,f
  3343  025C' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  3344  0261' 0803'              	movf	?___awmod,w
  3345  0262' 1283               	bcf	3,5	;RP0=0, select bank0
  3346  0263' 1303               	bcf	3,6	;RP1=0, select bank0
  3347  0264' 00A8'              	movwf	??_scale
  3348  0265' 3001               	movlw	1
  3349  0266'                    u6435:
  3350  0266' 1003               	clrc
  3351  0267' 0DA8'              	rlf	??_scale,f
  3352  0268' 3EFF               	addlw	-1
  3353  0269' 1D03               	skipz
  3354  026A' 2800'              	goto	u6435
  3355  026B' 1003               	clrc
  3356  026C' 0D28'              	rlf	??_scale,w
  3357  026D' 3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3358  026E' 0084               	movwf	4
  3359  026F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3360  0274' 00A9'              	movwf	??_scale+1
  3361  0275' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3362  027A' 00AA'              	movwf	??_scale+2
  3363  027B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3364  0280' 00AB'              	movwf	??_scale+3
  3365  0281' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3366  0286' 00AC'              	movwf	??_scale+4
  3367  0287' 082C'              	movf	??_scale+4,w
  3368  0288' 008D'              	movwf	___flmul@b+3
  3369  0289' 082B'              	movf	??_scale+3,w
  3370  028A' 008C'              	movwf	___flmul@b+2
  3371  028B' 082A'              	movf	??_scale+2,w
  3372  028C' 008B'              	movwf	___flmul@b+1
  3373  028D' 0829'              	movf	??_scale+1,w
  3374  028E' 008A'              	movwf	___flmul@b
  3375  028F' 0835'              	movf	_scale$1255+3,w
  3376  0290' 0091'              	movwf	___flmul@a+3
  3377  0291' 0834'              	movf	_scale$1255+2,w
  3378  0292' 0090'              	movwf	___flmul@a+2
  3379  0293' 0833'              	movf	_scale$1255+1,w
  3380  0294' 008F'              	movwf	___flmul@a+1
  3381  0295' 0832'              	movf	_scale$1255,w
  3382  0296' 008E'              	movwf	___flmul@a
  3383  0297' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3384  029C' 1283               	bcf	3,5	;RP0=0, select bank0
  3385  029D' 1303               	bcf	3,6	;RP1=0, select bank0
  3386  029E' 080D'              	movf	?___flmul+3,w
  3387  029F' 00A7'              	movwf	?_scale+3
  3388  02A0' 080C'              	movf	?___flmul+2,w
  3389  02A1' 00A6'              	movwf	?_scale+2
  3390  02A2' 080B'              	movf	?___flmul+1,w
  3391  02A3' 00A5'              	movwf	?_scale+1
  3392  02A4' 080A'              	movf	?___flmul,w
  3393  02A5' 00A4'              	movwf	?_scale
  3394  02A6' 2800'              	goto	l319
  3395  02A7'                    l4231:
  3396  02A7' 0836'              	movf	scale@scl,w
  3397  02A8' 3A80               	xorlw	128
  3398  02A9' 3E75               	addlw	-139
  3399  02AA' 1C03               	skipc
  3400  02AB' 2800'              	goto	u6441
  3401  02AC' 2800'              	goto	u6440
  3402  02AD'                    u6441:
  3403  02AD' 2800'              	goto	l4237
  3404  02AE'                    u6440:
  3405  02AE'                    l4233:
  3406                           
  3407                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3408  02AE' 300A               	movlw	10
  3409  02AF' 0083'              	movwf	___awmod@divisor
  3410  02B0' 3000               	movlw	0
  3411  02B1' 0084'              	movwf	___awmod@divisor+1
  3412  02B2' 0836'              	movf	scale@scl,w
  3413  02B3' 0085'              	movwf	___awmod@dividend
  3414  02B4' 0186'              	clrf	___awmod@dividend+1
  3415  02B5' 1B85'              	btfsc	___awmod@dividend,7
  3416  02B6' 0386'              	decf	___awmod@dividend+1,f
  3417  02B7' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  3418  02BC' 0803'              	movf	?___awmod,w
  3419  02BD' 1283               	bcf	3,5	;RP0=0, select bank0
  3420  02BE' 1303               	bcf	3,6	;RP1=0, select bank0
  3421  02BF' 00A8'              	movwf	??_scale
  3422  02C0' 3001               	movlw	1
  3423  02C1'                    u6455:
  3424  02C1' 1003               	clrc
  3425  02C2' 0DA8'              	rlf	??_scale,f
  3426  02C3' 3EFF               	addlw	-1
  3427  02C4' 1D03               	skipz
  3428  02C5' 2800'              	goto	u6455
  3429  02C6' 1003               	clrc
  3430  02C7' 0D28'              	rlf	??_scale,w
  3431  02C8' 3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3432  02C9' 0084               	movwf	4
  3433  02CA' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3434  02CF' 00A9'              	movwf	??_scale+1
  3435  02D0' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3436  02D5' 00AA'              	movwf	??_scale+2
  3437  02D6' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3438  02DB' 00AB'              	movwf	??_scale+3
  3439  02DC' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3440  02E1' 00AC'              	movwf	??_scale+4
  3441  02E2' 082C'              	movf	??_scale+4,w
  3442  02E3' 008D'              	movwf	___flmul@b+3
  3443  02E4' 082B'              	movf	??_scale+3,w
  3444  02E5' 008C'              	movwf	___flmul@b+2
  3445  02E6' 082A'              	movf	??_scale+2,w
  3446  02E7' 008B'              	movwf	___flmul@b+1
  3447  02E8' 0829'              	movf	??_scale+1,w
  3448  02E9' 008A'              	movwf	___flmul@b
  3449  02EA' 300A               	movlw	10
  3450  02EB' 0080'              	movwf	___awdiv@divisor
  3451  02EC' 3000               	movlw	0
  3452  02ED' 0081'              	movwf	___awdiv@divisor+1
  3453  02EE' 0836'              	movf	scale@scl,w
  3454  02EF' 0082'              	movwf	___awdiv@dividend
  3455  02F0' 0183'              	clrf	___awdiv@dividend+1
  3456  02F1' 1B82'              	btfsc	___awdiv@dividend,7
  3457  02F2' 0383'              	decf	___awdiv@dividend+1,f
  3458  02F3' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  3459  02F8' 1283               	bcf	3,5	;RP0=0, select bank0
  3460  02F9' 1303               	bcf	3,6	;RP1=0, select bank0
  3461  02FA' 0800'              	movf	?___awdiv,w
  3462  02FB' 00AD'              	movwf	??_scale+5
  3463  02FC' 3001               	movlw	1
  3464  02FD'                    u6465:
  3465  02FD' 1003               	clrc
  3466  02FE' 0DAD'              	rlf	??_scale+5,f
  3467  02FF' 3EFF               	addlw	-1
  3468  0300' 1D03               	skipz
  3469  0301' 2800'              	goto	u6465
  3470  0302' 1003               	clrc
  3471  0303' 0D2D'              	rlf	??_scale+5,w
  3472  0304' 3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3473  0305' 0084               	movwf	4
  3474  0306' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3475  030B' 00AE'              	movwf	??_scale+6
  3476  030C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3477  0311' 00AF'              	movwf	??_scale+7
  3478  0312' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3479  0317' 00B0'              	movwf	??_scale+8
  3480  0318' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3481  031D' 00B1'              	movwf	??_scale+9
  3482  031E' 0831'              	movf	??_scale+9,w
  3483  031F' 0091'              	movwf	___flmul@a+3
  3484  0320' 0830'              	movf	??_scale+8,w
  3485  0321' 0090'              	movwf	___flmul@a+2
  3486  0322' 082F'              	movf	??_scale+7,w
  3487  0323' 008F'              	movwf	___flmul@a+1
  3488  0324' 082E'              	movf	??_scale+6,w
  3489  0325' 008E'              	movwf	___flmul@a
  3490  0326' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3491  032B' 1283               	bcf	3,5	;RP0=0, select bank0
  3492  032C' 1303               	bcf	3,6	;RP1=0, select bank0
  3493  032D' 080D'              	movf	?___flmul+3,w
  3494  032E' 00A7'              	movwf	?_scale+3
  3495  032F' 080C'              	movf	?___flmul+2,w
  3496  0330' 00A6'              	movwf	?_scale+2
  3497  0331' 080B'              	movf	?___flmul+1,w
  3498  0332' 00A5'              	movwf	?_scale+1
  3499  0333' 080A'              	movf	?___flmul,w
  3500  0334' 00A4'              	movwf	?_scale
  3501  0335' 2800'              	goto	l319
  3502  0336'                    l4237:
  3503                           
  3504                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3505  0336' 0836'              	movf	scale@scl,w
  3506  0337' 00A8'              	movwf	??_scale
  3507  0338' 3001               	movlw	1
  3508  0339'                    u6475:
  3509  0339' 1003               	clrc
  3510  033A' 0DA8'              	rlf	??_scale,f
  3511  033B' 3EFF               	addlw	-1
  3512  033C' 1D03               	skipz
  3513  033D' 2800'              	goto	u6475
  3514  033E' 1003               	clrc
  3515  033F' 0D28'              	rlf	??_scale,w
  3516  0340' 3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3517  0341' 0084               	movwf	4
  3518  0342' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3519  0347' 00A9'              	movwf	??_scale+1
  3520  0348' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3521  034D' 00AA'              	movwf	??_scale+2
  3522  034E' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3523  0353' 00AB'              	movwf	??_scale+3
  3524  0354' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3525  0359' 00AC'              	movwf	??_scale+4
  3526  035A' 082C'              	movf	??_scale+4,w
  3527  035B' 00A7'              	movwf	?_scale+3
  3528  035C' 082B'              	movf	??_scale+3,w
  3529  035D' 00A6'              	movwf	?_scale+2
  3530  035E' 082A'              	movf	??_scale+2,w
  3531  035F' 00A5'              	movwf	?_scale+1
  3532  0360' 0829'              	movf	??_scale+1,w
  3533  0361' 00A4'              	movwf	?_scale
  3534  0362'                    l319:
  3535  0362' 0008               	return
  3536  0363'                    __end_of_scale:
  3537                           
  3538                           	psect	text3
  3539  0000'                    __ptext3:	
  3540 ;; *************** function ___awmod *****************
  3541 ;; Defined at:
  3542 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;  divisor         2    3[COMMON] int 
  3545 ;;  dividend        2    5[COMMON] int 
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;  sign            1    9[COMMON] unsigned char 
  3548 ;;  counter         1    8[COMMON] unsigned char 
  3549 ;; Return value:  Size  Location     Type
  3550 ;;                  2    3[COMMON] int 
  3551 ;; Registers used:
  3552 ;;		wreg, status,2, status,0
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3558 ;;      Params:         4       0       0       0       0
  3559 ;;      Locals:         2       0       0       0       0
  3560 ;;      Temps:          1       0       0       0       0
  3561 ;;      Totals:         7       0       0       0       0
  3562 ;;Total ram usage:        7 bytes
  3563 ;; Hardware stack levels used:    1
  3564 ;; Hardware stack levels required when called:    2
  3565 ;; This function calls:
  3566 ;;		Nothing
  3567 ;; This function is called by:
  3568 ;;		_scale
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           
  3573                           ;psect for function ___awmod
  3574  0000'                    ___awmod:
  3575  0000'                    l2617:	
  3576                           ;incstack = 0
  3577                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3578                           
  3579  0000' 0189'              	clrf	___awmod@sign
  3580  0001'                    l2619:
  3581  0001' 1F86'              	btfss	___awmod@dividend+1,7
  3582  0002' 2800'              	goto	u3241
  3583  0003' 2800'              	goto	u3240
  3584  0004'                    u3241:
  3585  0004' 2800'              	goto	l2625
  3586  0005'                    u3240:
  3587  0005'                    l2621:
  3588  0005' 0985'              	comf	___awmod@dividend,f
  3589  0006' 0986'              	comf	___awmod@dividend+1,f
  3590  0007' 0A85'              	incf	___awmod@dividend,f
  3591  0008' 1903               	skipnz
  3592  0009' 0A86'              	incf	___awmod@dividend+1,f
  3593  000A'                    l2623:
  3594  000A' 0189'              	clrf	___awmod@sign
  3595  000B' 0A89'              	incf	___awmod@sign,f
  3596  000C'                    l2625:
  3597  000C' 1F84'              	btfss	___awmod@divisor+1,7
  3598  000D' 2800'              	goto	u3251
  3599  000E' 2800'              	goto	u3250
  3600  000F'                    u3251:
  3601  000F' 2800'              	goto	l2629
  3602  0010'                    u3250:
  3603  0010'                    l2627:
  3604  0010' 0983'              	comf	___awmod@divisor,f
  3605  0011' 0984'              	comf	___awmod@divisor+1,f
  3606  0012' 0A83'              	incf	___awmod@divisor,f
  3607  0013' 1903               	skipnz
  3608  0014' 0A84'              	incf	___awmod@divisor+1,f
  3609  0015'                    l2629:
  3610  0015' 0803'              	movf	___awmod@divisor,w
  3611  0016' 0404'              	iorwf	___awmod@divisor+1,w
  3612  0017' 1903               	btfsc	3,2
  3613  0018' 2800'              	goto	u3261
  3614  0019' 2800'              	goto	u3260
  3615  001A'                    u3261:
  3616  001A' 2800'              	goto	l2647
  3617  001B'                    u3260:
  3618  001B'                    l2631:
  3619  001B' 0188'              	clrf	___awmod@counter
  3620  001C' 0A88'              	incf	___awmod@counter,f
  3621  001D' 2800'              	goto	l2637
  3622  001E'                    l2633:
  3623  001E' 3001               	movlw	1
  3624  001F'                    u3275:
  3625  001F' 1003               	clrc
  3626  0020' 0D83'              	rlf	___awmod@divisor,f
  3627  0021' 0D84'              	rlf	___awmod@divisor+1,f
  3628  0022' 3EFF               	addlw	-1
  3629  0023' 1D03               	skipz
  3630  0024' 2800'              	goto	u3275
  3631  0025'                    l2635:
  3632  0025' 3001               	movlw	1
  3633  0026' 0087'              	movwf	??___awmod
  3634  0027' 0807'              	movf	??___awmod,w
  3635  0028' 0788'              	addwf	___awmod@counter,f
  3636  0029'                    l2637:
  3637  0029' 1F84'              	btfss	___awmod@divisor+1,7
  3638  002A' 2800'              	goto	u3281
  3639  002B' 2800'              	goto	u3280
  3640  002C'                    u3281:
  3641  002C' 2800'              	goto	l2633
  3642  002D'                    u3280:
  3643  002D'                    l2639:
  3644  002D' 0804'              	movf	___awmod@divisor+1,w
  3645  002E' 0206'              	subwf	___awmod@dividend+1,w
  3646  002F' 1D03               	skipz
  3647  0030' 2800'              	goto	u3295
  3648  0031' 0803'              	movf	___awmod@divisor,w
  3649  0032' 0205'              	subwf	___awmod@dividend,w
  3650  0033'                    u3295:
  3651  0033' 1C03               	skipc
  3652  0034' 2800'              	goto	u3291
  3653  0035' 2800'              	goto	u3290
  3654  0036'                    u3291:
  3655  0036' 2800'              	goto	l2643
  3656  0037'                    u3290:
  3657  0037'                    l2641:
  3658  0037' 0803'              	movf	___awmod@divisor,w
  3659  0038' 0285'              	subwf	___awmod@dividend,f
  3660  0039' 0804'              	movf	___awmod@divisor+1,w
  3661  003A' 1C03               	skipc
  3662  003B' 0386'              	decf	___awmod@dividend+1,f
  3663  003C' 0286'              	subwf	___awmod@dividend+1,f
  3664  003D'                    l2643:
  3665  003D' 3001               	movlw	1
  3666  003E'                    u3305:
  3667  003E' 1003               	clrc
  3668  003F' 0C84'              	rrf	___awmod@divisor+1,f
  3669  0040' 0C83'              	rrf	___awmod@divisor,f
  3670  0041' 3EFF               	addlw	-1
  3671  0042' 1D03               	skipz
  3672  0043' 2800'              	goto	u3305
  3673  0044'                    l2645:
  3674  0044' 3001               	movlw	1
  3675  0045' 0288'              	subwf	___awmod@counter,f
  3676  0046' 1D03               	btfss	3,2
  3677  0047' 2800'              	goto	u3311
  3678  0048' 2800'              	goto	u3310
  3679  0049'                    u3311:
  3680  0049' 2800'              	goto	l2639
  3681  004A'                    u3310:
  3682  004A'                    l2647:
  3683  004A' 0809'              	movf	___awmod@sign,w
  3684  004B' 1903               	btfsc	3,2
  3685  004C' 2800'              	goto	u3321
  3686  004D' 2800'              	goto	u3320
  3687  004E'                    u3321:
  3688  004E' 2800'              	goto	l2651
  3689  004F'                    u3320:
  3690  004F'                    l2649:
  3691  004F' 0985'              	comf	___awmod@dividend,f
  3692  0050' 0986'              	comf	___awmod@dividend+1,f
  3693  0051' 0A85'              	incf	___awmod@dividend,f
  3694  0052' 1903               	skipnz
  3695  0053' 0A86'              	incf	___awmod@dividend+1,f
  3696  0054'                    l2651:
  3697  0054' 0806'              	movf	___awmod@dividend+1,w
  3698  0055' 0084'              	movwf	?___awmod+1
  3699  0056' 0805'              	movf	___awmod@dividend,w
  3700  0057' 0083'              	movwf	?___awmod
  3701  0058'                    l564:
  3702  0058' 0008               	return
  3703  0059'                    __end_of___awmod:
  3704                           
  3705                           	psect	text4
  3706  0000'                    __ptext4:	
  3707 ;; *************** function ___awdiv *****************
  3708 ;; Defined at:
  3709 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;  divisor         2    0[BANK0 ] int 
  3712 ;;  dividend        2    2[BANK0 ] int 
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;  quotient        2    7[BANK0 ] int 
  3715 ;;  sign            1    6[BANK0 ] unsigned char 
  3716 ;;  counter         1    5[BANK0 ] unsigned char 
  3717 ;; Return value:  Size  Location     Type
  3718 ;;                  2    0[BANK0 ] int 
  3719 ;; Registers used:
  3720 ;;		wreg, status,2, status,0
  3721 ;; Tracked objects:
  3722 ;;		On entry : 0/0
  3723 ;;		On exit  : 0/0
  3724 ;;		Unchanged: 0/0
  3725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3726 ;;      Params:         0       4       0       0       0
  3727 ;;      Locals:         0       4       0       0       0
  3728 ;;      Temps:          0       1       0       0       0
  3729 ;;      Totals:         0       9       0       0       0
  3730 ;;Total ram usage:        9 bytes
  3731 ;; Hardware stack levels used:    1
  3732 ;; Hardware stack levels required when called:    2
  3733 ;; This function calls:
  3734 ;;		Nothing
  3735 ;; This function is called by:
  3736 ;;		_scale
  3737 ;;		_sprintf
  3738 ;; This function uses a non-reentrant model
  3739 ;;
  3740                           
  3741                           
  3742                           ;psect for function ___awdiv
  3743  0000'                    ___awdiv:
  3744  0000'                    l4137:	
  3745                           ;incstack = 0
  3746                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3747                           
  3748  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  3749  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  3750  0002' 0186'              	clrf	___awdiv@sign
  3751  0003'                    l4139:
  3752  0003' 1F81'              	btfss	___awdiv@divisor+1,7
  3753  0004' 2800'              	goto	u6211
  3754  0005' 2800'              	goto	u6210
  3755  0006'                    u6211:
  3756  0006' 2800'              	goto	l4145
  3757  0007'                    u6210:
  3758  0007'                    l4141:
  3759  0007' 0980'              	comf	___awdiv@divisor,f
  3760  0008' 0981'              	comf	___awdiv@divisor+1,f
  3761  0009' 0A80'              	incf	___awdiv@divisor,f
  3762  000A' 1903               	skipnz
  3763  000B' 0A81'              	incf	___awdiv@divisor+1,f
  3764  000C'                    l4143:
  3765  000C' 0186'              	clrf	___awdiv@sign
  3766  000D' 0A86'              	incf	___awdiv@sign,f
  3767  000E'                    l4145:
  3768  000E' 1F83'              	btfss	___awdiv@dividend+1,7
  3769  000F' 2800'              	goto	u6221
  3770  0010' 2800'              	goto	u6220
  3771  0011'                    u6221:
  3772  0011' 2800'              	goto	l4151
  3773  0012'                    u6220:
  3774  0012'                    l4147:
  3775  0012' 0982'              	comf	___awdiv@dividend,f
  3776  0013' 0983'              	comf	___awdiv@dividend+1,f
  3777  0014' 0A82'              	incf	___awdiv@dividend,f
  3778  0015' 1903               	skipnz
  3779  0016' 0A83'              	incf	___awdiv@dividend+1,f
  3780  0017'                    l4149:
  3781  0017' 3001               	movlw	1
  3782  0018' 0084'              	movwf	??___awdiv
  3783  0019' 0804'              	movf	??___awdiv,w
  3784  001A' 0686'              	xorwf	___awdiv@sign,f
  3785  001B'                    l4151:
  3786  001B' 0187'              	clrf	___awdiv@quotient
  3787  001C' 0188'              	clrf	___awdiv@quotient+1
  3788  001D'                    l4153:
  3789  001D' 0800'              	movf	___awdiv@divisor,w
  3790  001E' 0401'              	iorwf	___awdiv@divisor+1,w
  3791  001F' 1903               	btfsc	3,2
  3792  0020' 2800'              	goto	u6231
  3793  0021' 2800'              	goto	u6230
  3794  0022'                    u6231:
  3795  0022' 2800'              	goto	l4173
  3796  0023'                    u6230:
  3797  0023'                    l4155:
  3798  0023' 0185'              	clrf	___awdiv@counter
  3799  0024' 0A85'              	incf	___awdiv@counter,f
  3800  0025' 2800'              	goto	l4161
  3801  0026'                    l4157:
  3802  0026' 3001               	movlw	1
  3803  0027'                    u6245:
  3804  0027' 1003               	clrc
  3805  0028' 0D80'              	rlf	___awdiv@divisor,f
  3806  0029' 0D81'              	rlf	___awdiv@divisor+1,f
  3807  002A' 3EFF               	addlw	-1
  3808  002B' 1D03               	skipz
  3809  002C' 2800'              	goto	u6245
  3810  002D'                    l4159:
  3811  002D' 3001               	movlw	1
  3812  002E' 0084'              	movwf	??___awdiv
  3813  002F' 0804'              	movf	??___awdiv,w
  3814  0030' 0785'              	addwf	___awdiv@counter,f
  3815  0031'                    l4161:
  3816  0031' 1F81'              	btfss	___awdiv@divisor+1,7
  3817  0032' 2800'              	goto	u6251
  3818  0033' 2800'              	goto	u6250
  3819  0034'                    u6251:
  3820  0034' 2800'              	goto	l4157
  3821  0035'                    u6250:
  3822  0035'                    l4163:
  3823  0035' 3001               	movlw	1
  3824  0036'                    u6265:
  3825  0036' 1003               	clrc
  3826  0037' 0D87'              	rlf	___awdiv@quotient,f
  3827  0038' 0D88'              	rlf	___awdiv@quotient+1,f
  3828  0039' 3EFF               	addlw	-1
  3829  003A' 1D03               	skipz
  3830  003B' 2800'              	goto	u6265
  3831  003C' 0801'              	movf	___awdiv@divisor+1,w
  3832  003D' 0203'              	subwf	___awdiv@dividend+1,w
  3833  003E' 1D03               	skipz
  3834  003F' 2800'              	goto	u6275
  3835  0040' 0800'              	movf	___awdiv@divisor,w
  3836  0041' 0202'              	subwf	___awdiv@dividend,w
  3837  0042'                    u6275:
  3838  0042' 1C03               	skipc
  3839  0043' 2800'              	goto	u6271
  3840  0044' 2800'              	goto	u6270
  3841  0045'                    u6271:
  3842  0045' 2800'              	goto	l4169
  3843  0046'                    u6270:
  3844  0046'                    l4165:
  3845  0046' 0800'              	movf	___awdiv@divisor,w
  3846  0047' 0282'              	subwf	___awdiv@dividend,f
  3847  0048' 0801'              	movf	___awdiv@divisor+1,w
  3848  0049' 1C03               	skipc
  3849  004A' 0383'              	decf	___awdiv@dividend+1,f
  3850  004B' 0283'              	subwf	___awdiv@dividend+1,f
  3851  004C'                    l4167:
  3852  004C' 1407'              	bsf	___awdiv@quotient,0
  3853  004D'                    l4169:
  3854  004D' 3001               	movlw	1
  3855  004E'                    u6285:
  3856  004E' 1003               	clrc
  3857  004F' 0C81'              	rrf	___awdiv@divisor+1,f
  3858  0050' 0C80'              	rrf	___awdiv@divisor,f
  3859  0051' 3EFF               	addlw	-1
  3860  0052' 1D03               	skipz
  3861  0053' 2800'              	goto	u6285
  3862  0054'                    l4171:
  3863  0054' 3001               	movlw	1
  3864  0055' 0285'              	subwf	___awdiv@counter,f
  3865  0056' 1D03               	btfss	3,2
  3866  0057' 2800'              	goto	u6291
  3867  0058' 2800'              	goto	u6290
  3868  0059'                    u6291:
  3869  0059' 2800'              	goto	l4163
  3870  005A'                    u6290:
  3871  005A'                    l4173:
  3872  005A' 0806'              	movf	___awdiv@sign,w
  3873  005B' 1903               	btfsc	3,2
  3874  005C' 2800'              	goto	u6301
  3875  005D' 2800'              	goto	u6300
  3876  005E'                    u6301:
  3877  005E' 2800'              	goto	l4177
  3878  005F'                    u6300:
  3879  005F'                    l4175:
  3880  005F' 0987'              	comf	___awdiv@quotient,f
  3881  0060' 0988'              	comf	___awdiv@quotient+1,f
  3882  0061' 0A87'              	incf	___awdiv@quotient,f
  3883  0062' 1903               	skipnz
  3884  0063' 0A88'              	incf	___awdiv@quotient+1,f
  3885  0064'                    l4177:
  3886  0064' 0808'              	movf	___awdiv@quotient+1,w
  3887  0065' 0081'              	movwf	?___awdiv+1
  3888  0066' 0807'              	movf	___awdiv@quotient,w
  3889  0067' 0080'              	movwf	?___awdiv
  3890  0068'                    l551:
  3891  0068' 0008               	return
  3892  0069'                    __end_of___awdiv:
  3893                           
  3894                           	psect	text5
  3895  0000'                    __ptext5:	
  3896 ;; *************** function _isdigit *****************
  3897 ;; Defined at:
  3898 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;  c               1    wreg     unsigned char 
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;  c               1    4[COMMON] unsigned char 
  3903 ;; Return value:  Size  Location     Type
  3904 ;;		None               void
  3905 ;; Registers used:
  3906 ;;		wreg, status,2, status,0
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3912 ;;      Params:         0       0       0       0       0
  3913 ;;      Locals:         2       0       0       0       0
  3914 ;;      Temps:          0       0       0       0       0
  3915 ;;      Totals:         2       0       0       0       0
  3916 ;;Total ram usage:        2 bytes
  3917 ;; Hardware stack levels used:    1
  3918 ;; Hardware stack levels required when called:    2
  3919 ;; This function calls:
  3920 ;;		Nothing
  3921 ;; This function is called by:
  3922 ;;		_sprintf
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925                           
  3926                           
  3927                           ;psect for function _isdigit
  3928  0000'                    _isdigit:
  3929                           
  3930                           ;incstack = 0
  3931                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3932                           ;isdigit@c stored from wreg
  3933  0000' 0084'              	movwf	isdigit@c
  3934  0001'                    l3115:
  3935  0001' 0183'              	clrf	_isdigit$1072
  3936  0002'                    l3117:
  3937  0002' 303A               	movlw	58
  3938  0003' 0204'              	subwf	isdigit@c,w
  3939  0004' 1803               	skipnc
  3940  0005' 2800'              	goto	u4541
  3941  0006' 2800'              	goto	u4540
  3942  0007'                    u4541:
  3943  0007' 2800'              	goto	l3123
  3944  0008'                    u4540:
  3945  0008'                    l3119:
  3946  0008' 3030               	movlw	48
  3947  0009' 0204'              	subwf	isdigit@c,w
  3948  000A' 1C03               	skipc
  3949  000B' 2800'              	goto	u4551
  3950  000C' 2800'              	goto	u4550
  3951  000D'                    u4551:
  3952  000D' 2800'              	goto	l3123
  3953  000E'                    u4550:
  3954  000E'                    l3121:
  3955  000E' 0183'              	clrf	_isdigit$1072
  3956  000F' 0A83'              	incf	_isdigit$1072,f
  3957  0010'                    l3123:
  3958  0010' 0C03'              	rrf	_isdigit$1072,w
  3959  0011'                    l885:
  3960  0011' 0008               	return
  3961  0012'                    __end_of_isdigit:
  3962                           
  3963                           	psect	text6
  3964  0000'                    __ptext6:	
  3965 ;; *************** function _fround *****************
  3966 ;; Defined at:
  3967 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3968 ;; Parameters:    Size  Location     Type
  3969 ;;  prec            1    wreg     unsigned char 
  3970 ;; Auto vars:     Size  Location     Type
  3971 ;;  prec            1   55[BANK0 ] unsigned char 
  3972 ;; Return value:  Size  Location     Type
  3973 ;;                  4   36[BANK0 ] unsigned char 
  3974 ;; Registers used:
  3975 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3976 ;; Tracked objects:
  3977 ;;		On entry : 0/0
  3978 ;;		On exit  : 0/0
  3979 ;;		Unchanged: 0/0
  3980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3981 ;;      Params:         0       4       0       0       0
  3982 ;;      Locals:         0       9       0       0       0
  3983 ;;      Temps:          0       7       0       0       0
  3984 ;;      Totals:         0      20       0       0       0
  3985 ;;Total ram usage:       20 bytes
  3986 ;; Hardware stack levels used:    1
  3987 ;; Hardware stack levels required when called:    4
  3988 ;; This function calls:
  3989 ;;		___flmul
  3990 ;;		___lwdiv
  3991 ;;		___lwmod
  3992 ;; This function is called by:
  3993 ;;		_sprintf
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996                           
  3997                           
  3998                           ;psect for function _fround
  3999  0000'                    _fround:
  4000                           
  4001                           ;incstack = 0
  4002                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4003                           ;fround@prec stored from wreg
  4004  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4005  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4006  0002' 00B7'              	movwf	fround@prec
  4007  0003'                    l3057:
  4008                           
  4009                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4010  0003' 306E               	movlw	110
  4011  0004' 0237'              	subwf	fround@prec,w
  4012  0005' 1C03               	skipc
  4013  0006' 2800'              	goto	u4291
  4014  0007' 2800'              	goto	u4290
  4015  0008'                    u4291:
  4016  0008' 2800'              	goto	l3065
  4017  0009'                    u4290:
  4018  0009'                    l3059:
  4019                           
  4020                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4021  0009' 303F               	movlw	63
  4022  000A' 008D'              	movwf	___flmul@b+3
  4023  000B' 3000               	movlw	0
  4024  000C' 008C'              	movwf	___flmul@b+2
  4025  000D' 3000               	movlw	0
  4026  000E' 008B'              	movwf	___flmul@b+1
  4027  000F' 3000               	movlw	0
  4028  0010' 008A'              	movwf	___flmul@b
  4029  0011' 3064               	movlw	100
  4030  0012' 0080'              	movwf	___lwdiv@divisor
  4031  0013' 3000               	movlw	0
  4032  0014' 0081'              	movwf	___lwdiv@divisor+1
  4033  0015' 0837'              	movf	fround@prec,w
  4034  0016' 00A8'              	movwf	??_fround
  4035  0017' 01A9'              	clrf	??_fround+1
  4036  0018' 0828'              	movf	??_fround,w
  4037  0019' 0082'              	movwf	___lwdiv@dividend
  4038  001A' 0829'              	movf	??_fround+1,w
  4039  001B' 0083'              	movwf	___lwdiv@dividend+1
  4040  001C' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwdiv
  4041  0021' 1283               	bcf	3,5	;RP0=0, select bank0
  4042  0022' 1303               	bcf	3,6	;RP1=0, select bank0
  4043  0023' 0800'              	movf	?___lwdiv,w
  4044  0024' 00AA'              	movwf	??_fround+2
  4045  0025' 3001               	movlw	1
  4046  0026'                    u4305:
  4047  0026' 1003               	clrc
  4048  0027' 0DAA'              	rlf	??_fround+2,f
  4049  0028' 3EFF               	addlw	-1
  4050  0029' 1D03               	skipz
  4051  002A' 2800'              	goto	u4305
  4052  002B' 1003               	clrc
  4053  002C' 0D2A'              	rlf	??_fround+2,w
  4054  002D' 3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4055  002E' 0084               	movwf	4
  4056  002F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4057  0034' 00AB'              	movwf	??_fround+3
  4058  0035' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4059  003A' 00AC'              	movwf	??_fround+4
  4060  003B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4061  0040' 00AD'              	movwf	??_fround+5
  4062  0041' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4063  0046' 00AE'              	movwf	??_fround+6
  4064  0047' 082E'              	movf	??_fround+6,w
  4065  0048' 0091'              	movwf	___flmul@a+3
  4066  0049' 082D'              	movf	??_fround+5,w
  4067  004A' 0090'              	movwf	___flmul@a+2
  4068  004B' 082C'              	movf	??_fround+4,w
  4069  004C' 008F'              	movwf	___flmul@a+1
  4070  004D' 082B'              	movf	??_fround+3,w
  4071  004E' 008E'              	movwf	___flmul@a
  4072  004F' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4073  0054' 1283               	bcf	3,5	;RP0=0, select bank0
  4074  0055' 1303               	bcf	3,6	;RP1=0, select bank0
  4075  0056' 080D'              	movf	?___flmul+3,w
  4076  0057' 00B6'              	movwf	_fround$1253+3
  4077  0058' 080C'              	movf	?___flmul+2,w
  4078  0059' 00B5'              	movwf	_fround$1253+2
  4079  005A' 080B'              	movf	?___flmul+1,w
  4080  005B' 00B4'              	movwf	_fround$1253+1
  4081  005C' 080A'              	movf	?___flmul,w
  4082  005D' 00B3'              	movwf	_fround$1253
  4083                           
  4084                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4085  005E' 300A               	movlw	10
  4086  005F' 0080'              	movwf	___lwdiv@divisor
  4087  0060' 3000               	movlw	0
  4088  0061' 0081'              	movwf	___lwdiv@divisor+1
  4089  0062' 0837'              	movf	fround@prec,w
  4090  0063' 00A8'              	movwf	??_fround
  4091  0064' 01A9'              	clrf	??_fround+1
  4092  0065' 0828'              	movf	??_fround,w
  4093  0066' 0085'              	movwf	___lwmod@dividend
  4094  0067' 0829'              	movf	??_fround+1,w
  4095  0068' 0086'              	movwf	___lwmod@dividend+1
  4096  0069' 3064               	movlw	100
  4097  006A' 0083'              	movwf	___lwmod@divisor
  4098  006B' 3000               	movlw	0
  4099  006C' 0084'              	movwf	___lwmod@divisor+1
  4100  006D' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwmod
  4101  0072' 0804'              	movf	?___lwmod+1,w
  4102  0073' 1283               	bcf	3,5	;RP0=0, select bank0
  4103  0074' 1303               	bcf	3,6	;RP1=0, select bank0
  4104  0075' 0083'              	movwf	___lwdiv@dividend+1
  4105  0076' 0803'              	movf	?___lwmod,w
  4106  0077' 0082'              	movwf	___lwdiv@dividend
  4107  0078' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwdiv
  4108  007D' 1283               	bcf	3,5	;RP0=0, select bank0
  4109  007E' 1303               	bcf	3,6	;RP1=0, select bank0
  4110  007F' 0800'              	movf	?___lwdiv,w
  4111  0080' 00AA'              	movwf	??_fround+2
  4112  0081' 3001               	movlw	1
  4113  0082'                    u4315:
  4114  0082' 1003               	clrc
  4115  0083' 0DAA'              	rlf	??_fround+2,f
  4116  0084' 3EFF               	addlw	-1
  4117  0085' 1D03               	skipz
  4118  0086' 2800'              	goto	u4315
  4119  0087' 1003               	clrc
  4120  0088' 0D2A'              	rlf	??_fround+2,w
  4121  0089' 3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4122  008A' 0084               	movwf	4
  4123  008B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4124  0090' 00AB'              	movwf	??_fround+3
  4125  0091' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4126  0096' 00AC'              	movwf	??_fround+4
  4127  0097' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4128  009C' 00AD'              	movwf	??_fround+5
  4129  009D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4130  00A2' 00AE'              	movwf	??_fround+6
  4131  00A3' 082E'              	movf	??_fround+6,w
  4132  00A4' 008D'              	movwf	___flmul@b+3
  4133  00A5' 082D'              	movf	??_fround+5,w
  4134  00A6' 008C'              	movwf	___flmul@b+2
  4135  00A7' 082C'              	movf	??_fround+4,w
  4136  00A8' 008B'              	movwf	___flmul@b+1
  4137  00A9' 082B'              	movf	??_fround+3,w
  4138  00AA' 008A'              	movwf	___flmul@b
  4139  00AB' 0836'              	movf	_fround$1253+3,w
  4140  00AC' 0091'              	movwf	___flmul@a+3
  4141  00AD' 0835'              	movf	_fround$1253+2,w
  4142  00AE' 0090'              	movwf	___flmul@a+2
  4143  00AF' 0834'              	movf	_fround$1253+1,w
  4144  00B0' 008F'              	movwf	___flmul@a+1
  4145  00B1' 0833'              	movf	_fround$1253,w
  4146  00B2' 008E'              	movwf	___flmul@a
  4147  00B3' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4148  00B8' 1283               	bcf	3,5	;RP0=0, select bank0
  4149  00B9' 1303               	bcf	3,6	;RP1=0, select bank0
  4150  00BA' 080D'              	movf	?___flmul+3,w
  4151  00BB' 00B2'              	movwf	_fround$1254+3
  4152  00BC' 080C'              	movf	?___flmul+2,w
  4153  00BD' 00B1'              	movwf	_fround$1254+2
  4154  00BE' 080B'              	movf	?___flmul+1,w
  4155  00BF' 00B0'              	movwf	_fround$1254+1
  4156  00C0' 080A'              	movf	?___flmul,w
  4157  00C1' 00AF'              	movwf	_fround$1254
  4158                           
  4159                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4160  00C2' 300A               	movlw	10
  4161  00C3' 0083'              	movwf	___lwmod@divisor
  4162  00C4' 3000               	movlw	0
  4163  00C5' 0084'              	movwf	___lwmod@divisor+1
  4164  00C6' 0837'              	movf	fround@prec,w
  4165  00C7' 00A8'              	movwf	??_fround
  4166  00C8' 01A9'              	clrf	??_fround+1
  4167  00C9' 0828'              	movf	??_fround,w
  4168  00CA' 0085'              	movwf	___lwmod@dividend
  4169  00CB' 0829'              	movf	??_fround+1,w
  4170  00CC' 0086'              	movwf	___lwmod@dividend+1
  4171  00CD' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwmod
  4172  00D2' 0803'              	movf	?___lwmod,w
  4173  00D3' 1283               	bcf	3,5	;RP0=0, select bank0
  4174  00D4' 1303               	bcf	3,6	;RP1=0, select bank0
  4175  00D5' 00AA'              	movwf	??_fround+2
  4176  00D6' 3001               	movlw	1
  4177  00D7'                    u4325:
  4178  00D7' 1003               	clrc
  4179  00D8' 0DAA'              	rlf	??_fround+2,f
  4180  00D9' 3EFF               	addlw	-1
  4181  00DA' 1D03               	skipz
  4182  00DB' 2800'              	goto	u4325
  4183  00DC' 1003               	clrc
  4184  00DD' 0D2A'              	rlf	??_fround+2,w
  4185  00DE' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4186  00DF' 0084               	movwf	4
  4187  00E0' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4188  00E5' 00AB'              	movwf	??_fround+3
  4189  00E6' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4190  00EB' 00AC'              	movwf	??_fround+4
  4191  00EC' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4192  00F1' 00AD'              	movwf	??_fround+5
  4193  00F2' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4194  00F7' 00AE'              	movwf	??_fround+6
  4195  00F8' 082E'              	movf	??_fround+6,w
  4196  00F9' 008D'              	movwf	___flmul@b+3
  4197  00FA' 082D'              	movf	??_fround+5,w
  4198  00FB' 008C'              	movwf	___flmul@b+2
  4199  00FC' 082C'              	movf	??_fround+4,w
  4200  00FD' 008B'              	movwf	___flmul@b+1
  4201  00FE' 082B'              	movf	??_fround+3,w
  4202  00FF' 008A'              	movwf	___flmul@b
  4203  0100' 0832'              	movf	_fround$1254+3,w
  4204  0101' 0091'              	movwf	___flmul@a+3
  4205  0102' 0831'              	movf	_fround$1254+2,w
  4206  0103' 0090'              	movwf	___flmul@a+2
  4207  0104' 0830'              	movf	_fround$1254+1,w
  4208  0105' 008F'              	movwf	___flmul@a+1
  4209  0106' 082F'              	movf	_fround$1254,w
  4210  0107' 008E'              	movwf	___flmul@a
  4211  0108' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4212  010D' 1283               	bcf	3,5	;RP0=0, select bank0
  4213  010E' 1303               	bcf	3,6	;RP1=0, select bank0
  4214  010F' 080D'              	movf	?___flmul+3,w
  4215  0110' 00A7'              	movwf	?_fround+3
  4216  0111' 080C'              	movf	?___flmul+2,w
  4217  0112' 00A6'              	movwf	?_fround+2
  4218  0113' 080B'              	movf	?___flmul+1,w
  4219  0114' 00A5'              	movwf	?_fround+1
  4220  0115' 080A'              	movf	?___flmul,w
  4221  0116' 00A4'              	movwf	?_fround
  4222  0117' 2800'              	goto	l312
  4223  0118'                    l3065:
  4224  0118' 300B               	movlw	11
  4225  0119' 0237'              	subwf	fround@prec,w
  4226  011A' 1C03               	skipc
  4227  011B' 2800'              	goto	u4331
  4228  011C' 2800'              	goto	u4330
  4229  011D'                    u4331:
  4230  011D' 2800'              	goto	l3071
  4231  011E'                    u4330:
  4232  011E'                    l3067:
  4233                           
  4234                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4235  011E' 303F               	movlw	63
  4236  011F' 008D'              	movwf	___flmul@b+3
  4237  0120' 3000               	movlw	0
  4238  0121' 008C'              	movwf	___flmul@b+2
  4239  0122' 3000               	movlw	0
  4240  0123' 008B'              	movwf	___flmul@b+1
  4241  0124' 3000               	movlw	0
  4242  0125' 008A'              	movwf	___flmul@b
  4243  0126' 300A               	movlw	10
  4244  0127' 0080'              	movwf	___lwdiv@divisor
  4245  0128' 3000               	movlw	0
  4246  0129' 0081'              	movwf	___lwdiv@divisor+1
  4247  012A' 0837'              	movf	fround@prec,w
  4248  012B' 00A8'              	movwf	??_fround
  4249  012C' 01A9'              	clrf	??_fround+1
  4250  012D' 0828'              	movf	??_fround,w
  4251  012E' 0082'              	movwf	___lwdiv@dividend
  4252  012F' 0829'              	movf	??_fround+1,w
  4253  0130' 0083'              	movwf	___lwdiv@dividend+1
  4254  0131' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwdiv
  4255  0136' 1283               	bcf	3,5	;RP0=0, select bank0
  4256  0137' 1303               	bcf	3,6	;RP1=0, select bank0
  4257  0138' 0800'              	movf	?___lwdiv,w
  4258  0139' 00AA'              	movwf	??_fround+2
  4259  013A' 3001               	movlw	1
  4260  013B'                    u4345:
  4261  013B' 1003               	clrc
  4262  013C' 0DAA'              	rlf	??_fround+2,f
  4263  013D' 3EFF               	addlw	-1
  4264  013E' 1D03               	skipz
  4265  013F' 2800'              	goto	u4345
  4266  0140' 1003               	clrc
  4267  0141' 0D2A'              	rlf	??_fround+2,w
  4268  0142' 3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4269  0143' 0084               	movwf	4
  4270  0144' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4271  0149' 00AB'              	movwf	??_fround+3
  4272  014A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4273  014F' 00AC'              	movwf	??_fround+4
  4274  0150' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4275  0155' 00AD'              	movwf	??_fround+5
  4276  0156' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4277  015B' 00AE'              	movwf	??_fround+6
  4278  015C' 082E'              	movf	??_fround+6,w
  4279  015D' 0091'              	movwf	___flmul@a+3
  4280  015E' 082D'              	movf	??_fround+5,w
  4281  015F' 0090'              	movwf	___flmul@a+2
  4282  0160' 082C'              	movf	??_fround+4,w
  4283  0161' 008F'              	movwf	___flmul@a+1
  4284  0162' 082B'              	movf	??_fround+3,w
  4285  0163' 008E'              	movwf	___flmul@a
  4286  0164' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4287  0169' 1283               	bcf	3,5	;RP0=0, select bank0
  4288  016A' 1303               	bcf	3,6	;RP1=0, select bank0
  4289  016B' 080D'              	movf	?___flmul+3,w
  4290  016C' 00B6'              	movwf	_fround$1253+3
  4291  016D' 080C'              	movf	?___flmul+2,w
  4292  016E' 00B5'              	movwf	_fround$1253+2
  4293  016F' 080B'              	movf	?___flmul+1,w
  4294  0170' 00B4'              	movwf	_fround$1253+1
  4295  0171' 080A'              	movf	?___flmul,w
  4296  0172' 00B3'              	movwf	_fround$1253
  4297                           
  4298                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4299  0173' 300A               	movlw	10
  4300  0174' 0083'              	movwf	___lwmod@divisor
  4301  0175' 3000               	movlw	0
  4302  0176' 0084'              	movwf	___lwmod@divisor+1
  4303  0177' 0837'              	movf	fround@prec,w
  4304  0178' 00A8'              	movwf	??_fround
  4305  0179' 01A9'              	clrf	??_fround+1
  4306  017A' 0828'              	movf	??_fround,w
  4307  017B' 0085'              	movwf	___lwmod@dividend
  4308  017C' 0829'              	movf	??_fround+1,w
  4309  017D' 0086'              	movwf	___lwmod@dividend+1
  4310  017E' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwmod
  4311  0183' 0803'              	movf	?___lwmod,w
  4312  0184' 1283               	bcf	3,5	;RP0=0, select bank0
  4313  0185' 1303               	bcf	3,6	;RP1=0, select bank0
  4314  0186' 00AA'              	movwf	??_fround+2
  4315  0187' 3001               	movlw	1
  4316  0188'                    u4355:
  4317  0188' 1003               	clrc
  4318  0189' 0DAA'              	rlf	??_fround+2,f
  4319  018A' 3EFF               	addlw	-1
  4320  018B' 1D03               	skipz
  4321  018C' 2800'              	goto	u4355
  4322  018D' 1003               	clrc
  4323  018E' 0D2A'              	rlf	??_fround+2,w
  4324  018F' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4325  0190' 0084               	movwf	4
  4326  0191' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4327  0196' 00AB'              	movwf	??_fround+3
  4328  0197' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4329  019C' 00AC'              	movwf	??_fround+4
  4330  019D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4331  01A2' 00AD'              	movwf	??_fround+5
  4332  01A3' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4333  01A8' 00AE'              	movwf	??_fround+6
  4334  01A9' 082E'              	movf	??_fround+6,w
  4335  01AA' 008D'              	movwf	___flmul@b+3
  4336  01AB' 082D'              	movf	??_fround+5,w
  4337  01AC' 008C'              	movwf	___flmul@b+2
  4338  01AD' 082C'              	movf	??_fround+4,w
  4339  01AE' 008B'              	movwf	___flmul@b+1
  4340  01AF' 082B'              	movf	??_fround+3,w
  4341  01B0' 008A'              	movwf	___flmul@b
  4342  01B1' 0836'              	movf	_fround$1253+3,w
  4343  01B2' 0091'              	movwf	___flmul@a+3
  4344  01B3' 0835'              	movf	_fround$1253+2,w
  4345  01B4' 0090'              	movwf	___flmul@a+2
  4346  01B5' 0834'              	movf	_fround$1253+1,w
  4347  01B6' 008F'              	movwf	___flmul@a+1
  4348  01B7' 0833'              	movf	_fround$1253,w
  4349  01B8' 008E'              	movwf	___flmul@a
  4350  01B9' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4351  01BE' 1283               	bcf	3,5	;RP0=0, select bank0
  4352  01BF' 1303               	bcf	3,6	;RP1=0, select bank0
  4353  01C0' 080D'              	movf	?___flmul+3,w
  4354  01C1' 00A7'              	movwf	?_fround+3
  4355  01C2' 080C'              	movf	?___flmul+2,w
  4356  01C3' 00A6'              	movwf	?_fround+2
  4357  01C4' 080B'              	movf	?___flmul+1,w
  4358  01C5' 00A5'              	movwf	?_fround+1
  4359  01C6' 080A'              	movf	?___flmul,w
  4360  01C7' 00A4'              	movwf	?_fround
  4361  01C8' 2800'              	goto	l312
  4362  01C9'                    l3071:
  4363                           
  4364                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4365  01C9' 303F               	movlw	63
  4366  01CA' 008D'              	movwf	___flmul@b+3
  4367  01CB' 3000               	movlw	0
  4368  01CC' 008C'              	movwf	___flmul@b+2
  4369  01CD' 3000               	movlw	0
  4370  01CE' 008B'              	movwf	___flmul@b+1
  4371  01CF' 3000               	movlw	0
  4372  01D0' 008A'              	movwf	___flmul@b
  4373  01D1' 0837'              	movf	fround@prec,w
  4374  01D2' 00A8'              	movwf	??_fround
  4375  01D3' 3001               	movlw	1
  4376  01D4'                    u4365:
  4377  01D4' 1003               	clrc
  4378  01D5' 0DA8'              	rlf	??_fround,f
  4379  01D6' 3EFF               	addlw	-1
  4380  01D7' 1D03               	skipz
  4381  01D8' 2800'              	goto	u4365
  4382  01D9' 1003               	clrc
  4383  01DA' 0D28'              	rlf	??_fround,w
  4384  01DB' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4385  01DC' 0084               	movwf	4
  4386  01DD' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4387  01E2' 00A9'              	movwf	??_fround+1
  4388  01E3' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4389  01E8' 00AA'              	movwf	??_fround+2
  4390  01E9' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4391  01EE' 00AB'              	movwf	??_fround+3
  4392  01EF' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4393  01F4' 00AC'              	movwf	??_fround+4
  4394  01F5' 082C'              	movf	??_fround+4,w
  4395  01F6' 0091'              	movwf	___flmul@a+3
  4396  01F7' 082B'              	movf	??_fround+3,w
  4397  01F8' 0090'              	movwf	___flmul@a+2
  4398  01F9' 082A'              	movf	??_fround+2,w
  4399  01FA' 008F'              	movwf	___flmul@a+1
  4400  01FB' 0829'              	movf	??_fround+1,w
  4401  01FC' 008E'              	movwf	___flmul@a
  4402  01FD' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4403  0202' 1283               	bcf	3,5	;RP0=0, select bank0
  4404  0203' 1303               	bcf	3,6	;RP1=0, select bank0
  4405  0204' 080D'              	movf	?___flmul+3,w
  4406  0205' 00A7'              	movwf	?_fround+3
  4407  0206' 080C'              	movf	?___flmul+2,w
  4408  0207' 00A6'              	movwf	?_fround+2
  4409  0208' 080B'              	movf	?___flmul+1,w
  4410  0209' 00A5'              	movwf	?_fround+1
  4411  020A' 080A'              	movf	?___flmul,w
  4412  020B' 00A4'              	movwf	?_fround
  4413  020C'                    l312:
  4414  020C' 0008               	return
  4415  020D'                    __end_of_fround:
  4416                           
  4417                           	psect	text7
  4418  0000'                    __ptext7:	
  4419 ;; *************** function ___lwmod *****************
  4420 ;; Defined at:
  4421 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4422 ;; Parameters:    Size  Location     Type
  4423 ;;  divisor         2    3[COMMON] unsigned int 
  4424 ;;  dividend        2    5[COMMON] unsigned int 
  4425 ;; Auto vars:     Size  Location     Type
  4426 ;;  counter         1    8[COMMON] unsigned char 
  4427 ;; Return value:  Size  Location     Type
  4428 ;;                  2    3[COMMON] unsigned int 
  4429 ;; Registers used:
  4430 ;;		wreg, status,2, status,0
  4431 ;; Tracked objects:
  4432 ;;		On entry : 0/0
  4433 ;;		On exit  : 0/0
  4434 ;;		Unchanged: 0/0
  4435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4436 ;;      Params:         4       0       0       0       0
  4437 ;;      Locals:         1       0       0       0       0
  4438 ;;      Temps:          1       0       0       0       0
  4439 ;;      Totals:         6       0       0       0       0
  4440 ;;Total ram usage:        6 bytes
  4441 ;; Hardware stack levels used:    1
  4442 ;; Hardware stack levels required when called:    2
  4443 ;; This function calls:
  4444 ;;		Nothing
  4445 ;; This function is called by:
  4446 ;;		_fround
  4447 ;; This function uses a non-reentrant model
  4448 ;;
  4449                           
  4450                           
  4451                           ;psect for function ___lwmod
  4452  0000'                    ___lwmod:
  4453  0000'                    l2681:	
  4454                           ;incstack = 0
  4455                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4456                           
  4457  0000' 0803'              	movf	___lwmod@divisor,w
  4458  0001' 0404'              	iorwf	___lwmod@divisor+1,w
  4459  0002' 1903               	btfsc	3,2
  4460  0003' 2800'              	goto	u3401
  4461  0004' 2800'              	goto	u3400
  4462  0005'                    u3401:
  4463  0005' 2800'              	goto	l2699
  4464  0006'                    u3400:
  4465  0006'                    l2683:
  4466  0006' 0188'              	clrf	___lwmod@counter
  4467  0007' 0A88'              	incf	___lwmod@counter,f
  4468  0008' 2800'              	goto	l2689
  4469  0009'                    l2685:
  4470  0009' 3001               	movlw	1
  4471  000A'                    u3415:
  4472  000A' 1003               	clrc
  4473  000B' 0D83'              	rlf	___lwmod@divisor,f
  4474  000C' 0D84'              	rlf	___lwmod@divisor+1,f
  4475  000D' 3EFF               	addlw	-1
  4476  000E' 1D03               	skipz
  4477  000F' 2800'              	goto	u3415
  4478  0010'                    l2687:
  4479  0010' 3001               	movlw	1
  4480  0011' 0087'              	movwf	??___lwmod
  4481  0012' 0807'              	movf	??___lwmod,w
  4482  0013' 0788'              	addwf	___lwmod@counter,f
  4483  0014'                    l2689:
  4484  0014' 1F84'              	btfss	___lwmod@divisor+1,7
  4485  0015' 2800'              	goto	u3421
  4486  0016' 2800'              	goto	u3420
  4487  0017'                    u3421:
  4488  0017' 2800'              	goto	l2685
  4489  0018'                    u3420:
  4490  0018'                    l2691:
  4491  0018' 0804'              	movf	___lwmod@divisor+1,w
  4492  0019' 0206'              	subwf	___lwmod@dividend+1,w
  4493  001A' 1D03               	skipz
  4494  001B' 2800'              	goto	u3435
  4495  001C' 0803'              	movf	___lwmod@divisor,w
  4496  001D' 0205'              	subwf	___lwmod@dividend,w
  4497  001E'                    u3435:
  4498  001E' 1C03               	skipc
  4499  001F' 2800'              	goto	u3431
  4500  0020' 2800'              	goto	u3430
  4501  0021'                    u3431:
  4502  0021' 2800'              	goto	l2695
  4503  0022'                    u3430:
  4504  0022'                    l2693:
  4505  0022' 0803'              	movf	___lwmod@divisor,w
  4506  0023' 0285'              	subwf	___lwmod@dividend,f
  4507  0024' 0804'              	movf	___lwmod@divisor+1,w
  4508  0025' 1C03               	skipc
  4509  0026' 0386'              	decf	___lwmod@dividend+1,f
  4510  0027' 0286'              	subwf	___lwmod@dividend+1,f
  4511  0028'                    l2695:
  4512  0028' 3001               	movlw	1
  4513  0029'                    u3445:
  4514  0029' 1003               	clrc
  4515  002A' 0C84'              	rrf	___lwmod@divisor+1,f
  4516  002B' 0C83'              	rrf	___lwmod@divisor,f
  4517  002C' 3EFF               	addlw	-1
  4518  002D' 1D03               	skipz
  4519  002E' 2800'              	goto	u3445
  4520  002F'                    l2697:
  4521  002F' 3001               	movlw	1
  4522  0030' 0288'              	subwf	___lwmod@counter,f
  4523  0031' 1D03               	btfss	3,2
  4524  0032' 2800'              	goto	u3451
  4525  0033' 2800'              	goto	u3450
  4526  0034'                    u3451:
  4527  0034' 2800'              	goto	l2691
  4528  0035'                    u3450:
  4529  0035'                    l2699:
  4530  0035' 0806'              	movf	___lwmod@dividend+1,w
  4531  0036' 0084'              	movwf	?___lwmod+1
  4532  0037' 0805'              	movf	___lwmod@dividend,w
  4533  0038' 0083'              	movwf	?___lwmod
  4534  0039'                    l714:
  4535  0039' 0008               	return
  4536  003A'                    __end_of___lwmod:
  4537                           
  4538                           	psect	text8
  4539  0000'                    __ptext8:	
  4540 ;; *************** function ___lwdiv *****************
  4541 ;; Defined at:
  4542 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;  divisor         2    0[BANK0 ] unsigned int 
  4545 ;;  dividend        2    2[BANK0 ] unsigned int 
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;  quotient        2    4[BANK0 ] unsigned int 
  4548 ;;  counter         1    6[BANK0 ] unsigned char 
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  2    0[BANK0 ] unsigned int 
  4551 ;; Registers used:
  4552 ;;		wreg, status,2, status,0
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4558 ;;      Params:         0       4       0       0       0
  4559 ;;      Locals:         0       3       0       0       0
  4560 ;;      Temps:          1       0       0       0       0
  4561 ;;      Totals:         1       7       0       0       0
  4562 ;;Total ram usage:        8 bytes
  4563 ;; Hardware stack levels used:    1
  4564 ;; Hardware stack levels required when called:    2
  4565 ;; This function calls:
  4566 ;;		Nothing
  4567 ;; This function is called by:
  4568 ;;		_fround
  4569 ;; This function uses a non-reentrant model
  4570 ;;
  4571                           
  4572                           
  4573                           ;psect for function ___lwdiv
  4574  0000'                    ___lwdiv:
  4575  0000'                    l2655:	
  4576                           ;incstack = 0
  4577                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4578                           
  4579  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4580  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4581  0002' 0184'              	clrf	___lwdiv@quotient
  4582  0003' 0185'              	clrf	___lwdiv@quotient+1
  4583  0004'                    l2657:
  4584  0004' 0800'              	movf	___lwdiv@divisor,w
  4585  0005' 0401'              	iorwf	___lwdiv@divisor+1,w
  4586  0006' 1903               	btfsc	3,2
  4587  0007' 2800'              	goto	u3331
  4588  0008' 2800'              	goto	u3330
  4589  0009'                    u3331:
  4590  0009' 2800'              	goto	l2677
  4591  000A'                    u3330:
  4592  000A'                    l2659:
  4593  000A' 0186'              	clrf	___lwdiv@counter
  4594  000B' 0A86'              	incf	___lwdiv@counter,f
  4595  000C' 2800'              	goto	l2665
  4596  000D'                    l2661:
  4597  000D' 3001               	movlw	1
  4598  000E'                    u3345:
  4599  000E' 1003               	clrc
  4600  000F' 0D80'              	rlf	___lwdiv@divisor,f
  4601  0010' 0D81'              	rlf	___lwdiv@divisor+1,f
  4602  0011' 3EFF               	addlw	-1
  4603  0012' 1D03               	skipz
  4604  0013' 2800'              	goto	u3345
  4605  0014'                    l2663:
  4606  0014' 3001               	movlw	1
  4607  0015' 0089'              	movwf	??___lwdiv
  4608  0016' 0809'              	movf	??___lwdiv,w
  4609  0017' 0786'              	addwf	___lwdiv@counter,f
  4610  0018'                    l2665:
  4611  0018' 1F81'              	btfss	___lwdiv@divisor+1,7
  4612  0019' 2800'              	goto	u3351
  4613  001A' 2800'              	goto	u3350
  4614  001B'                    u3351:
  4615  001B' 2800'              	goto	l2661
  4616  001C'                    u3350:
  4617  001C'                    l2667:
  4618  001C' 3001               	movlw	1
  4619  001D'                    u3365:
  4620  001D' 1003               	clrc
  4621  001E' 0D84'              	rlf	___lwdiv@quotient,f
  4622  001F' 0D85'              	rlf	___lwdiv@quotient+1,f
  4623  0020' 3EFF               	addlw	-1
  4624  0021' 1D03               	skipz
  4625  0022' 2800'              	goto	u3365
  4626  0023' 0801'              	movf	___lwdiv@divisor+1,w
  4627  0024' 0203'              	subwf	___lwdiv@dividend+1,w
  4628  0025' 1D03               	skipz
  4629  0026' 2800'              	goto	u3375
  4630  0027' 0800'              	movf	___lwdiv@divisor,w
  4631  0028' 0202'              	subwf	___lwdiv@dividend,w
  4632  0029'                    u3375:
  4633  0029' 1C03               	skipc
  4634  002A' 2800'              	goto	u3371
  4635  002B' 2800'              	goto	u3370
  4636  002C'                    u3371:
  4637  002C' 2800'              	goto	l2673
  4638  002D'                    u3370:
  4639  002D'                    l2669:
  4640  002D' 0800'              	movf	___lwdiv@divisor,w
  4641  002E' 0282'              	subwf	___lwdiv@dividend,f
  4642  002F' 0801'              	movf	___lwdiv@divisor+1,w
  4643  0030' 1C03               	skipc
  4644  0031' 0383'              	decf	___lwdiv@dividend+1,f
  4645  0032' 0283'              	subwf	___lwdiv@dividend+1,f
  4646  0033'                    l2671:
  4647  0033' 1404'              	bsf	___lwdiv@quotient,0
  4648  0034'                    l2673:
  4649  0034' 3001               	movlw	1
  4650  0035'                    u3385:
  4651  0035' 1003               	clrc
  4652  0036' 0C81'              	rrf	___lwdiv@divisor+1,f
  4653  0037' 0C80'              	rrf	___lwdiv@divisor,f
  4654  0038' 3EFF               	addlw	-1
  4655  0039' 1D03               	skipz
  4656  003A' 2800'              	goto	u3385
  4657  003B'                    l2675:
  4658  003B' 3001               	movlw	1
  4659  003C' 0286'              	subwf	___lwdiv@counter,f
  4660  003D' 1D03               	btfss	3,2
  4661  003E' 2800'              	goto	u3391
  4662  003F' 2800'              	goto	u3390
  4663  0040'                    u3391:
  4664  0040' 2800'              	goto	l2667
  4665  0041'                    u3390:
  4666  0041'                    l2677:
  4667  0041' 0805'              	movf	___lwdiv@quotient+1,w
  4668  0042' 0081'              	movwf	?___lwdiv+1
  4669  0043' 0804'              	movf	___lwdiv@quotient,w
  4670  0044' 0080'              	movwf	?___lwdiv
  4671  0045'                    l704:
  4672  0045' 0008               	return
  4673  0046'                    __end_of___lwdiv:
  4674                           
  4675                           	psect	text9
  4676  0000'                    __ptext9:	
  4677 ;; *************** function ___flmul *****************
  4678 ;; Defined at:
  4679 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  4680 ;; Parameters:    Size  Location     Type
  4681 ;;  b               4   10[BANK0 ] unsigned int 
  4682 ;;  a               4   14[BANK0 ] unsigned int 
  4683 ;; Auto vars:     Size  Location     Type
  4684 ;;  prod            4   30[BANK0 ] struct .
  4685 ;;  grs             4   24[BANK0 ] unsigned long 
  4686 ;;  temp            2   34[BANK0 ] struct .
  4687 ;;  bexp            1   29[BANK0 ] unsigned char 
  4688 ;;  aexp            1   28[BANK0 ] unsigned char 
  4689 ;;  sign            1   23[BANK0 ] unsigned char 
  4690 ;; Return value:  Size  Location     Type
  4691 ;;                  4   10[BANK0 ] unsigned char 
  4692 ;; Registers used:
  4693 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4694 ;; Tracked objects:
  4695 ;;		On entry : 0/0
  4696 ;;		On exit  : 0/0
  4697 ;;		Unchanged: 0/0
  4698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4699 ;;      Params:         0       8       0       0       0
  4700 ;;      Locals:         0      13       0       0       0
  4701 ;;      Temps:          0       5       0       0       0
  4702 ;;      Totals:         0      26       0       0       0
  4703 ;;Total ram usage:       26 bytes
  4704 ;; Hardware stack levels used:    1
  4705 ;; Hardware stack levels required when called:    3
  4706 ;; This function calls:
  4707 ;;		__Umul8_16
  4708 ;; This function is called by:
  4709 ;;		_main
  4710 ;;		_fround
  4711 ;;		_scale
  4712 ;;		_sprintf
  4713 ;; This function uses a non-reentrant model
  4714 ;;
  4715                           
  4716                           
  4717                           ;psect for function ___flmul
  4718  0000'                    ___flmul:
  4719  0000'                    l2897:	
  4720                           ;incstack = 0
  4721                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4722                           
  4723  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4724  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4725  0002' 080D'              	movf	___flmul@b+3,w
  4726  0003' 3980               	andlw	128
  4727  0004' 0092'              	movwf	??___flmul
  4728  0005' 0812'              	movf	??___flmul,w
  4729  0006' 0097'              	movwf	___flmul@sign
  4730  0007'                    l2899:
  4731  0007' 080D'              	movf	___flmul@b+3,w
  4732  0008' 0092'              	movwf	??___flmul
  4733  0009' 0712'              	addwf	??___flmul,w
  4734  000A' 0093'              	movwf	??___flmul+1
  4735  000B' 0813'              	movf	??___flmul+1,w
  4736  000C' 009D'              	movwf	___flmul@bexp
  4737  000D'                    l2901:
  4738  000D' 1F8C'              	btfss	___flmul@b+2,7
  4739  000E' 2800'              	goto	u3921
  4740  000F' 2800'              	goto	u3920
  4741  0010'                    u3921:
  4742  0010' 2800'              	goto	l2905
  4743  0011'                    u3920:
  4744  0011'                    l2903:
  4745  0011' 141D'              	bsf	___flmul@bexp,0
  4746  0012'                    l2905:
  4747  0012' 081D'              	movf	___flmul@bexp,w
  4748  0013' 1903               	btfsc	3,2
  4749  0014' 2800'              	goto	u3931
  4750  0015' 2800'              	goto	u3930
  4751  0016'                    u3931:
  4752  0016' 2800'              	goto	l2913
  4753  0017'                    u3930:
  4754  0017'                    l2907:
  4755  0017' 0A1D'              	incf	___flmul@bexp,w
  4756  0018' 1D03               	btfss	3,2
  4757  0019' 2800'              	goto	u3941
  4758  001A' 2800'              	goto	u3940
  4759  001B'                    u3941:
  4760  001B' 2800'              	goto	l2911
  4761  001C'                    u3940:
  4762  001C'                    l2909:
  4763  001C' 3000               	movlw	0
  4764  001D' 008D'              	movwf	___flmul@b+3
  4765  001E' 3000               	movlw	0
  4766  001F' 008C'              	movwf	___flmul@b+2
  4767  0020' 3000               	movlw	0
  4768  0021' 008B'              	movwf	___flmul@b+1
  4769  0022' 3000               	movlw	0
  4770  0023' 008A'              	movwf	___flmul@b
  4771  0024'                    l2911:
  4772  0024' 178C'              	bsf	___flmul@b+2,7
  4773  0025' 2800'              	goto	l2915
  4774  0026'                    l2913:
  4775  0026' 3000               	movlw	0
  4776  0027' 008D'              	movwf	___flmul@b+3
  4777  0028' 3000               	movlw	0
  4778  0029' 008C'              	movwf	___flmul@b+2
  4779  002A' 3000               	movlw	0
  4780  002B' 008B'              	movwf	___flmul@b+1
  4781  002C' 3000               	movlw	0
  4782  002D' 008A'              	movwf	___flmul@b
  4783  002E'                    l2915:
  4784  002E' 0811'              	movf	___flmul@a+3,w
  4785  002F' 3980               	andlw	128
  4786  0030' 0092'              	movwf	??___flmul
  4787  0031' 0812'              	movf	??___flmul,w
  4788  0032' 0697'              	xorwf	___flmul@sign,f
  4789  0033'                    l2917:
  4790  0033' 0811'              	movf	___flmul@a+3,w
  4791  0034' 0092'              	movwf	??___flmul
  4792  0035' 0712'              	addwf	??___flmul,w
  4793  0036' 0093'              	movwf	??___flmul+1
  4794  0037' 0813'              	movf	??___flmul+1,w
  4795  0038' 009C'              	movwf	___flmul@aexp
  4796  0039'                    l2919:
  4797  0039' 1F90'              	btfss	___flmul@a+2,7
  4798  003A' 2800'              	goto	u3951
  4799  003B' 2800'              	goto	u3950
  4800  003C'                    u3951:
  4801  003C' 2800'              	goto	l2923
  4802  003D'                    u3950:
  4803  003D'                    l2921:
  4804  003D' 141C'              	bsf	___flmul@aexp,0
  4805  003E'                    l2923:
  4806  003E' 081C'              	movf	___flmul@aexp,w
  4807  003F' 1903               	btfsc	3,2
  4808  0040' 2800'              	goto	u3961
  4809  0041' 2800'              	goto	u3960
  4810  0042'                    u3961:
  4811  0042' 2800'              	goto	l2931
  4812  0043'                    u3960:
  4813  0043'                    l2925:
  4814  0043' 0A1C'              	incf	___flmul@aexp,w
  4815  0044' 1D03               	btfss	3,2
  4816  0045' 2800'              	goto	u3971
  4817  0046' 2800'              	goto	u3970
  4818  0047'                    u3971:
  4819  0047' 2800'              	goto	l2929
  4820  0048'                    u3970:
  4821  0048'                    l2927:
  4822  0048' 3000               	movlw	0
  4823  0049' 0091'              	movwf	___flmul@a+3
  4824  004A' 3000               	movlw	0
  4825  004B' 0090'              	movwf	___flmul@a+2
  4826  004C' 3000               	movlw	0
  4827  004D' 008F'              	movwf	___flmul@a+1
  4828  004E' 3000               	movlw	0
  4829  004F' 008E'              	movwf	___flmul@a
  4830  0050'                    l2929:
  4831  0050' 1790'              	bsf	___flmul@a+2,7
  4832  0051' 2800'              	goto	l2933
  4833  0052'                    l2931:
  4834  0052' 3000               	movlw	0
  4835  0053' 0091'              	movwf	___flmul@a+3
  4836  0054' 3000               	movlw	0
  4837  0055' 0090'              	movwf	___flmul@a+2
  4838  0056' 3000               	movlw	0
  4839  0057' 008F'              	movwf	___flmul@a+1
  4840  0058' 3000               	movlw	0
  4841  0059' 008E'              	movwf	___flmul@a
  4842  005A'                    l2933:
  4843  005A' 081C'              	movf	___flmul@aexp,w
  4844  005B' 1903               	btfsc	3,2
  4845  005C' 2800'              	goto	u3981
  4846  005D' 2800'              	goto	u3980
  4847  005E'                    u3981:
  4848  005E' 2800'              	goto	l2937
  4849  005F'                    u3980:
  4850  005F'                    l2935:
  4851  005F' 081D'              	movf	___flmul@bexp,w
  4852  0060' 1D03               	btfss	3,2
  4853  0061' 2800'              	goto	u3991
  4854  0062' 2800'              	goto	u3990
  4855  0063'                    u3991:
  4856  0063' 2800'              	goto	l2941
  4857  0064'                    u3990:
  4858  0064'                    l2937:
  4859  0064' 3000               	movlw	0
  4860  0065' 008D'              	movwf	?___flmul+3
  4861  0066' 3000               	movlw	0
  4862  0067' 008C'              	movwf	?___flmul+2
  4863  0068' 3000               	movlw	0
  4864  0069' 008B'              	movwf	?___flmul+1
  4865  006A' 3000               	movlw	0
  4866  006B' 008A'              	movwf	?___flmul
  4867  006C' 2800'              	goto	l821
  4868  006D'                    l2941:
  4869  006D' 080A'              	movf	___flmul@b,w
  4870  006E' 0092'              	movwf	??___flmul
  4871  006F' 0812'              	movf	??___flmul,w
  4872  0070' 0083'              	movwf	__Umul8_16@multiplicand
  4873  0071' 0810'              	movf	___flmul@a+2,w
  4874  0072' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  4875  0077' 0804'              	movf	?__Umul8_16+1,w
  4876  0078' 1283               	bcf	3,5	;RP0=0, select bank0
  4877  0079' 1303               	bcf	3,6	;RP1=0, select bank0
  4878  007A' 00A3'              	movwf	___flmul@temp+1
  4879  007B' 0803'              	movf	?__Umul8_16,w
  4880  007C' 00A2'              	movwf	___flmul@temp
  4881  007D'                    l2943:
  4882  007D' 0822'              	movf	___flmul@temp,w
  4883  007E' 0092'              	movwf	??___flmul
  4884  007F' 0193'              	clrf	??___flmul+1
  4885  0080' 0194'              	clrf	??___flmul+2
  4886  0081' 0195'              	clrf	??___flmul+3
  4887  0082' 0815'              	movf	??___flmul+3,w
  4888  0083' 009B'              	movwf	___flmul@grs+3
  4889  0084' 0814'              	movf	??___flmul+2,w
  4890  0085' 009A'              	movwf	___flmul@grs+2
  4891  0086' 0813'              	movf	??___flmul+1,w
  4892  0087' 0099'              	movwf	___flmul@grs+1
  4893  0088' 0812'              	movf	??___flmul,w
  4894  0089' 0098'              	movwf	___flmul@grs
  4895  008A'                    l2945:
  4896  008A' 0823'              	movf	___flmul@temp+1,w
  4897  008B' 0092'              	movwf	??___flmul
  4898  008C' 0193'              	clrf	??___flmul+1
  4899  008D' 0194'              	clrf	??___flmul+2
  4900  008E' 0195'              	clrf	??___flmul+3
  4901  008F' 0815'              	movf	??___flmul+3,w
  4902  0090' 00A1'              	movwf	___flmul@prod+3
  4903  0091' 0814'              	movf	??___flmul+2,w
  4904  0092' 00A0'              	movwf	___flmul@prod+2
  4905  0093' 0813'              	movf	??___flmul+1,w
  4906  0094' 009F'              	movwf	___flmul@prod+1
  4907  0095' 0812'              	movf	??___flmul,w
  4908  0096' 009E'              	movwf	___flmul@prod
  4909  0097' 080B'              	movf	___flmul@b+1,w
  4910  0098' 0092'              	movwf	??___flmul
  4911  0099' 0812'              	movf	??___flmul,w
  4912  009A' 0083'              	movwf	__Umul8_16@multiplicand
  4913  009B' 080F'              	movf	___flmul@a+1,w
  4914  009C' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  4915  00A1' 0804'              	movf	?__Umul8_16+1,w
  4916  00A2' 1283               	bcf	3,5	;RP0=0, select bank0
  4917  00A3' 1303               	bcf	3,6	;RP1=0, select bank0
  4918  00A4' 00A3'              	movwf	___flmul@temp+1
  4919  00A5' 0803'              	movf	?__Umul8_16,w
  4920  00A6' 00A2'              	movwf	___flmul@temp
  4921  00A7'                    l2947:
  4922  00A7' 0822'              	movf	___flmul@temp,w
  4923  00A8' 0092'              	movwf	??___flmul
  4924  00A9' 0193'              	clrf	??___flmul+1
  4925  00AA' 0194'              	clrf	??___flmul+2
  4926  00AB' 0195'              	clrf	??___flmul+3
  4927  00AC' 0812'              	movf	??___flmul,w
  4928  00AD' 0798'              	addwf	___flmul@grs,f
  4929  00AE' 0813'              	movf	??___flmul+1,w
  4930  00AF' 1103               	clrz
  4931  00B0' 1803               	skipnc
  4932  00B1' 3E01               	addlw	1
  4933  00B2' 1903               	skipnz
  4934  00B3' 2800'              	goto	u4001
  4935  00B4' 0799'              	addwf	___flmul@grs+1,f
  4936  00B5'                    u4001:
  4937  00B5' 0814'              	movf	??___flmul+2,w
  4938  00B6' 1103               	clrz
  4939  00B7' 1803               	skipnc
  4940  00B8' 3E01               	addlw	1
  4941  00B9' 1903               	skipnz
  4942  00BA' 2800'              	goto	u4002
  4943  00BB' 079A'              	addwf	___flmul@grs+2,f
  4944  00BC'                    u4002:
  4945  00BC' 0815'              	movf	??___flmul+3,w
  4946  00BD' 1103               	clrz
  4947  00BE' 1803               	skipnc
  4948  00BF' 3E01               	addlw	1
  4949  00C0' 1903               	skipnz
  4950  00C1' 2800'              	goto	u4003
  4951  00C2' 079B'              	addwf	___flmul@grs+3,f
  4952  00C3'                    u4003:
  4953  00C3'                    l2949:
  4954  00C3' 0823'              	movf	___flmul@temp+1,w
  4955  00C4' 0092'              	movwf	??___flmul
  4956  00C5' 0193'              	clrf	??___flmul+1
  4957  00C6' 0194'              	clrf	??___flmul+2
  4958  00C7' 0195'              	clrf	??___flmul+3
  4959  00C8' 0812'              	movf	??___flmul,w
  4960  00C9' 079E'              	addwf	___flmul@prod,f
  4961  00CA' 0813'              	movf	??___flmul+1,w
  4962  00CB' 1103               	clrz
  4963  00CC' 1803               	skipnc
  4964  00CD' 3E01               	addlw	1
  4965  00CE' 1903               	skipnz
  4966  00CF' 2800'              	goto	u4011
  4967  00D0' 079F'              	addwf	___flmul@prod+1,f
  4968  00D1'                    u4011:
  4969  00D1' 0814'              	movf	??___flmul+2,w
  4970  00D2' 1103               	clrz
  4971  00D3' 1803               	skipnc
  4972  00D4' 3E01               	addlw	1
  4973  00D5' 1903               	skipnz
  4974  00D6' 2800'              	goto	u4012
  4975  00D7' 07A0'              	addwf	___flmul@prod+2,f
  4976  00D8'                    u4012:
  4977  00D8' 0815'              	movf	??___flmul+3,w
  4978  00D9' 1103               	clrz
  4979  00DA' 1803               	skipnc
  4980  00DB' 3E01               	addlw	1
  4981  00DC' 1903               	skipnz
  4982  00DD' 2800'              	goto	u4013
  4983  00DE' 07A1'              	addwf	___flmul@prod+3,f
  4984  00DF'                    u4013:
  4985  00DF' 080C'              	movf	___flmul@b+2,w
  4986  00E0' 0092'              	movwf	??___flmul
  4987  00E1' 0812'              	movf	??___flmul,w
  4988  00E2' 0083'              	movwf	__Umul8_16@multiplicand
  4989  00E3' 080E'              	movf	___flmul@a,w
  4990  00E4' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  4991  00E9' 0804'              	movf	?__Umul8_16+1,w
  4992  00EA' 1283               	bcf	3,5	;RP0=0, select bank0
  4993  00EB' 1303               	bcf	3,6	;RP1=0, select bank0
  4994  00EC' 00A3'              	movwf	___flmul@temp+1
  4995  00ED' 0803'              	movf	?__Umul8_16,w
  4996  00EE' 00A2'              	movwf	___flmul@temp
  4997  00EF'                    l2951:
  4998  00EF' 0822'              	movf	___flmul@temp,w
  4999  00F0' 0092'              	movwf	??___flmul
  5000  00F1' 0193'              	clrf	??___flmul+1
  5001  00F2' 0194'              	clrf	??___flmul+2
  5002  00F3' 0195'              	clrf	??___flmul+3
  5003  00F4' 0812'              	movf	??___flmul,w
  5004  00F5' 0798'              	addwf	___flmul@grs,f
  5005  00F6' 0813'              	movf	??___flmul+1,w
  5006  00F7' 1103               	clrz
  5007  00F8' 1803               	skipnc
  5008  00F9' 3E01               	addlw	1
  5009  00FA' 1903               	skipnz
  5010  00FB' 2800'              	goto	u4021
  5011  00FC' 0799'              	addwf	___flmul@grs+1,f
  5012  00FD'                    u4021:
  5013  00FD' 0814'              	movf	??___flmul+2,w
  5014  00FE' 1103               	clrz
  5015  00FF' 1803               	skipnc
  5016  0100' 3E01               	addlw	1
  5017  0101' 1903               	skipnz
  5018  0102' 2800'              	goto	u4022
  5019  0103' 079A'              	addwf	___flmul@grs+2,f
  5020  0104'                    u4022:
  5021  0104' 0815'              	movf	??___flmul+3,w
  5022  0105' 1103               	clrz
  5023  0106' 1803               	skipnc
  5024  0107' 3E01               	addlw	1
  5025  0108' 1903               	skipnz
  5026  0109' 2800'              	goto	u4023
  5027  010A' 079B'              	addwf	___flmul@grs+3,f
  5028  010B'                    u4023:
  5029  010B'                    l2953:
  5030  010B' 0823'              	movf	___flmul@temp+1,w
  5031  010C' 0092'              	movwf	??___flmul
  5032  010D' 0193'              	clrf	??___flmul+1
  5033  010E' 0194'              	clrf	??___flmul+2
  5034  010F' 0195'              	clrf	??___flmul+3
  5035  0110' 0812'              	movf	??___flmul,w
  5036  0111' 079E'              	addwf	___flmul@prod,f
  5037  0112' 0813'              	movf	??___flmul+1,w
  5038  0113' 1103               	clrz
  5039  0114' 1803               	skipnc
  5040  0115' 3E01               	addlw	1
  5041  0116' 1903               	skipnz
  5042  0117' 2800'              	goto	u4031
  5043  0118' 079F'              	addwf	___flmul@prod+1,f
  5044  0119'                    u4031:
  5045  0119' 0814'              	movf	??___flmul+2,w
  5046  011A' 1103               	clrz
  5047  011B' 1803               	skipnc
  5048  011C' 3E01               	addlw	1
  5049  011D' 1903               	skipnz
  5050  011E' 2800'              	goto	u4032
  5051  011F' 07A0'              	addwf	___flmul@prod+2,f
  5052  0120'                    u4032:
  5053  0120' 0815'              	movf	??___flmul+3,w
  5054  0121' 1103               	clrz
  5055  0122' 1803               	skipnc
  5056  0123' 3E01               	addlw	1
  5057  0124' 1903               	skipnz
  5058  0125' 2800'              	goto	u4033
  5059  0126' 07A1'              	addwf	___flmul@prod+3,f
  5060  0127'                    u4033:
  5061  0127'                    l2955:
  5062  0127' 3008               	movlw	8
  5063  0128' 0092'              	movwf	??___flmul
  5064  0129'                    u4045:
  5065  0129' 1003               	clrc
  5066  012A' 0D98'              	rlf	___flmul@grs,f
  5067  012B' 0D99'              	rlf	___flmul@grs+1,f
  5068  012C' 0D9A'              	rlf	___flmul@grs+2,f
  5069  012D' 0D9B'              	rlf	___flmul@grs+3,f
  5070  012E' 0B92'              	decfsz	??___flmul,f
  5071  012F' 2800'              	goto	u4045
  5072  0130'                    l2957:
  5073  0130' 080B'              	movf	___flmul@b+1,w
  5074  0131' 0092'              	movwf	??___flmul
  5075  0132' 0812'              	movf	??___flmul,w
  5076  0133' 0083'              	movwf	__Umul8_16@multiplicand
  5077  0134' 080E'              	movf	___flmul@a,w
  5078  0135' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  5079  013A' 0804'              	movf	?__Umul8_16+1,w
  5080  013B' 1283               	bcf	3,5	;RP0=0, select bank0
  5081  013C' 1303               	bcf	3,6	;RP1=0, select bank0
  5082  013D' 00A3'              	movwf	___flmul@temp+1
  5083  013E' 0803'              	movf	?__Umul8_16,w
  5084  013F' 00A2'              	movwf	___flmul@temp
  5085  0140'                    l2959:
  5086  0140' 0822'              	movf	___flmul@temp,w
  5087  0141' 0092'              	movwf	??___flmul
  5088  0142' 0823'              	movf	___flmul@temp+1,w
  5089  0143' 0093'              	movwf	??___flmul+1
  5090  0144' 0194'              	clrf	??___flmul+2
  5091  0145' 0195'              	clrf	??___flmul+3
  5092  0146' 0812'              	movf	??___flmul,w
  5093  0147' 0798'              	addwf	___flmul@grs,f
  5094  0148' 0813'              	movf	??___flmul+1,w
  5095  0149' 1103               	clrz
  5096  014A' 1803               	skipnc
  5097  014B' 3E01               	addlw	1
  5098  014C' 1903               	skipnz
  5099  014D' 2800'              	goto	u4051
  5100  014E' 0799'              	addwf	___flmul@grs+1,f
  5101  014F'                    u4051:
  5102  014F' 0814'              	movf	??___flmul+2,w
  5103  0150' 1103               	clrz
  5104  0151' 1803               	skipnc
  5105  0152' 3E01               	addlw	1
  5106  0153' 1903               	skipnz
  5107  0154' 2800'              	goto	u4052
  5108  0155' 079A'              	addwf	___flmul@grs+2,f
  5109  0156'                    u4052:
  5110  0156' 0815'              	movf	??___flmul+3,w
  5111  0157' 1103               	clrz
  5112  0158' 1803               	skipnc
  5113  0159' 3E01               	addlw	1
  5114  015A' 1903               	skipnz
  5115  015B' 2800'              	goto	u4053
  5116  015C' 079B'              	addwf	___flmul@grs+3,f
  5117  015D'                    u4053:
  5118  015D'                    l2961:
  5119  015D' 080A'              	movf	___flmul@b,w
  5120  015E' 0092'              	movwf	??___flmul
  5121  015F' 0812'              	movf	??___flmul,w
  5122  0160' 0083'              	movwf	__Umul8_16@multiplicand
  5123  0161' 080F'              	movf	___flmul@a+1,w
  5124  0162' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  5125  0167' 0804'              	movf	?__Umul8_16+1,w
  5126  0168' 1283               	bcf	3,5	;RP0=0, select bank0
  5127  0169' 1303               	bcf	3,6	;RP1=0, select bank0
  5128  016A' 00A3'              	movwf	___flmul@temp+1
  5129  016B' 0803'              	movf	?__Umul8_16,w
  5130  016C' 00A2'              	movwf	___flmul@temp
  5131  016D'                    l2963:
  5132  016D' 0822'              	movf	___flmul@temp,w
  5133  016E' 0092'              	movwf	??___flmul
  5134  016F' 0823'              	movf	___flmul@temp+1,w
  5135  0170' 0093'              	movwf	??___flmul+1
  5136  0171' 0194'              	clrf	??___flmul+2
  5137  0172' 0195'              	clrf	??___flmul+3
  5138  0173' 0812'              	movf	??___flmul,w
  5139  0174' 0798'              	addwf	___flmul@grs,f
  5140  0175' 0813'              	movf	??___flmul+1,w
  5141  0176' 1103               	clrz
  5142  0177' 1803               	skipnc
  5143  0178' 3E01               	addlw	1
  5144  0179' 1903               	skipnz
  5145  017A' 2800'              	goto	u4061
  5146  017B' 0799'              	addwf	___flmul@grs+1,f
  5147  017C'                    u4061:
  5148  017C' 0814'              	movf	??___flmul+2,w
  5149  017D' 1103               	clrz
  5150  017E' 1803               	skipnc
  5151  017F' 3E01               	addlw	1
  5152  0180' 1903               	skipnz
  5153  0181' 2800'              	goto	u4062
  5154  0182' 079A'              	addwf	___flmul@grs+2,f
  5155  0183'                    u4062:
  5156  0183' 0815'              	movf	??___flmul+3,w
  5157  0184' 1103               	clrz
  5158  0185' 1803               	skipnc
  5159  0186' 3E01               	addlw	1
  5160  0187' 1903               	skipnz
  5161  0188' 2800'              	goto	u4063
  5162  0189' 079B'              	addwf	___flmul@grs+3,f
  5163  018A'                    u4063:
  5164  018A'                    l2965:
  5165  018A' 3008               	movlw	8
  5166  018B' 0092'              	movwf	??___flmul
  5167  018C'                    u4075:
  5168  018C' 1003               	clrc
  5169  018D' 0D98'              	rlf	___flmul@grs,f
  5170  018E' 0D99'              	rlf	___flmul@grs+1,f
  5171  018F' 0D9A'              	rlf	___flmul@grs+2,f
  5172  0190' 0D9B'              	rlf	___flmul@grs+3,f
  5173  0191' 0B92'              	decfsz	??___flmul,f
  5174  0192' 2800'              	goto	u4075
  5175  0193' 080A'              	movf	___flmul@b,w
  5176  0194' 0092'              	movwf	??___flmul
  5177  0195' 0812'              	movf	??___flmul,w
  5178  0196' 0083'              	movwf	__Umul8_16@multiplicand
  5179  0197' 080E'              	movf	___flmul@a,w
  5180  0198' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  5181  019D' 0804'              	movf	?__Umul8_16+1,w
  5182  019E' 1283               	bcf	3,5	;RP0=0, select bank0
  5183  019F' 1303               	bcf	3,6	;RP1=0, select bank0
  5184  01A0' 00A3'              	movwf	___flmul@temp+1
  5185  01A1' 0803'              	movf	?__Umul8_16,w
  5186  01A2' 00A2'              	movwf	___flmul@temp
  5187  01A3'                    l2967:
  5188  01A3' 0822'              	movf	___flmul@temp,w
  5189  01A4' 0092'              	movwf	??___flmul
  5190  01A5' 0823'              	movf	___flmul@temp+1,w
  5191  01A6' 0093'              	movwf	??___flmul+1
  5192  01A7' 0194'              	clrf	??___flmul+2
  5193  01A8' 0195'              	clrf	??___flmul+3
  5194  01A9' 0812'              	movf	??___flmul,w
  5195  01AA' 0798'              	addwf	___flmul@grs,f
  5196  01AB' 0813'              	movf	??___flmul+1,w
  5197  01AC' 1103               	clrz
  5198  01AD' 1803               	skipnc
  5199  01AE' 3E01               	addlw	1
  5200  01AF' 1903               	skipnz
  5201  01B0' 2800'              	goto	u4081
  5202  01B1' 0799'              	addwf	___flmul@grs+1,f
  5203  01B2'                    u4081:
  5204  01B2' 0814'              	movf	??___flmul+2,w
  5205  01B3' 1103               	clrz
  5206  01B4' 1803               	skipnc
  5207  01B5' 3E01               	addlw	1
  5208  01B6' 1903               	skipnz
  5209  01B7' 2800'              	goto	u4082
  5210  01B8' 079A'              	addwf	___flmul@grs+2,f
  5211  01B9'                    u4082:
  5212  01B9' 0815'              	movf	??___flmul+3,w
  5213  01BA' 1103               	clrz
  5214  01BB' 1803               	skipnc
  5215  01BC' 3E01               	addlw	1
  5216  01BD' 1903               	skipnz
  5217  01BE' 2800'              	goto	u4083
  5218  01BF' 079B'              	addwf	___flmul@grs+3,f
  5219  01C0'                    u4083:
  5220  01C0'                    l2969:
  5221  01C0' 080B'              	movf	___flmul@b+1,w
  5222  01C1' 0092'              	movwf	??___flmul
  5223  01C2' 0812'              	movf	??___flmul,w
  5224  01C3' 0083'              	movwf	__Umul8_16@multiplicand
  5225  01C4' 0810'              	movf	___flmul@a+2,w
  5226  01C5' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  5227  01CA' 0804'              	movf	?__Umul8_16+1,w
  5228  01CB' 1283               	bcf	3,5	;RP0=0, select bank0
  5229  01CC' 1303               	bcf	3,6	;RP1=0, select bank0
  5230  01CD' 00A3'              	movwf	___flmul@temp+1
  5231  01CE' 0803'              	movf	?__Umul8_16,w
  5232  01CF' 00A2'              	movwf	___flmul@temp
  5233  01D0' 0822'              	movf	___flmul@temp,w
  5234  01D1' 0092'              	movwf	??___flmul
  5235  01D2' 0823'              	movf	___flmul@temp+1,w
  5236  01D3' 0093'              	movwf	??___flmul+1
  5237  01D4' 0194'              	clrf	??___flmul+2
  5238  01D5' 0195'              	clrf	??___flmul+3
  5239  01D6' 0812'              	movf	??___flmul,w
  5240  01D7' 079E'              	addwf	___flmul@prod,f
  5241  01D8' 0813'              	movf	??___flmul+1,w
  5242  01D9' 1103               	clrz
  5243  01DA' 1803               	skipnc
  5244  01DB' 3E01               	addlw	1
  5245  01DC' 1903               	skipnz
  5246  01DD' 2800'              	goto	u4091
  5247  01DE' 079F'              	addwf	___flmul@prod+1,f
  5248  01DF'                    u4091:
  5249  01DF' 0814'              	movf	??___flmul+2,w
  5250  01E0' 1103               	clrz
  5251  01E1' 1803               	skipnc
  5252  01E2' 3E01               	addlw	1
  5253  01E3' 1903               	skipnz
  5254  01E4' 2800'              	goto	u4092
  5255  01E5' 07A0'              	addwf	___flmul@prod+2,f
  5256  01E6'                    u4092:
  5257  01E6' 0815'              	movf	??___flmul+3,w
  5258  01E7' 1103               	clrz
  5259  01E8' 1803               	skipnc
  5260  01E9' 3E01               	addlw	1
  5261  01EA' 1903               	skipnz
  5262  01EB' 2800'              	goto	u4093
  5263  01EC' 07A1'              	addwf	___flmul@prod+3,f
  5264  01ED'                    u4093:
  5265  01ED'                    l2971:
  5266  01ED' 080C'              	movf	___flmul@b+2,w
  5267  01EE' 0092'              	movwf	??___flmul
  5268  01EF' 0812'              	movf	??___flmul,w
  5269  01F0' 0083'              	movwf	__Umul8_16@multiplicand
  5270  01F1' 080F'              	movf	___flmul@a+1,w
  5271  01F2' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  5272  01F7' 0804'              	movf	?__Umul8_16+1,w
  5273  01F8' 1283               	bcf	3,5	;RP0=0, select bank0
  5274  01F9' 1303               	bcf	3,6	;RP1=0, select bank0
  5275  01FA' 00A3'              	movwf	___flmul@temp+1
  5276  01FB' 0803'              	movf	?__Umul8_16,w
  5277  01FC' 00A2'              	movwf	___flmul@temp
  5278  01FD'                    l2973:
  5279  01FD' 0822'              	movf	___flmul@temp,w
  5280  01FE' 0092'              	movwf	??___flmul
  5281  01FF' 0823'              	movf	___flmul@temp+1,w
  5282  0200' 0093'              	movwf	??___flmul+1
  5283  0201' 0194'              	clrf	??___flmul+2
  5284  0202' 0195'              	clrf	??___flmul+3
  5285  0203' 0812'              	movf	??___flmul,w
  5286  0204' 079E'              	addwf	___flmul@prod,f
  5287  0205' 0813'              	movf	??___flmul+1,w
  5288  0206' 1103               	clrz
  5289  0207' 1803               	skipnc
  5290  0208' 3E01               	addlw	1
  5291  0209' 1903               	skipnz
  5292  020A' 2800'              	goto	u4101
  5293  020B' 079F'              	addwf	___flmul@prod+1,f
  5294  020C'                    u4101:
  5295  020C' 0814'              	movf	??___flmul+2,w
  5296  020D' 1103               	clrz
  5297  020E' 1803               	skipnc
  5298  020F' 3E01               	addlw	1
  5299  0210' 1903               	skipnz
  5300  0211' 2800'              	goto	u4102
  5301  0212' 07A0'              	addwf	___flmul@prod+2,f
  5302  0213'                    u4102:
  5303  0213' 0815'              	movf	??___flmul+3,w
  5304  0214' 1103               	clrz
  5305  0215' 1803               	skipnc
  5306  0216' 3E01               	addlw	1
  5307  0217' 1903               	skipnz
  5308  0218' 2800'              	goto	u4103
  5309  0219' 07A1'              	addwf	___flmul@prod+3,f
  5310  021A'                    u4103:
  5311  021A' 080C'              	movf	___flmul@b+2,w
  5312  021B' 0092'              	movwf	??___flmul
  5313  021C' 0812'              	movf	??___flmul,w
  5314  021D' 0083'              	movwf	__Umul8_16@multiplicand
  5315  021E' 0810'              	movf	___flmul@a+2,w
  5316  021F' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  5317  0224' 0804'              	movf	?__Umul8_16+1,w
  5318  0225' 1283               	bcf	3,5	;RP0=0, select bank0
  5319  0226' 1303               	bcf	3,6	;RP1=0, select bank0
  5320  0227' 00A3'              	movwf	___flmul@temp+1
  5321  0228' 0803'              	movf	?__Umul8_16,w
  5322  0229' 00A2'              	movwf	___flmul@temp
  5323  022A'                    l2975:
  5324  022A' 0822'              	movf	___flmul@temp,w
  5325  022B' 0092'              	movwf	??___flmul
  5326  022C' 0823'              	movf	___flmul@temp+1,w
  5327  022D' 0093'              	movwf	??___flmul+1
  5328  022E' 0194'              	clrf	??___flmul+2
  5329  022F' 0195'              	clrf	??___flmul+3
  5330  0230' 3008               	movlw	8
  5331  0231'                    u4115:
  5332  0231' 1003               	clrc
  5333  0232' 0D92'              	rlf	??___flmul,f
  5334  0233' 0D93'              	rlf	??___flmul+1,f
  5335  0234' 0D94'              	rlf	??___flmul+2,f
  5336  0235' 0D95'              	rlf	??___flmul+3,f
  5337  0236'                    u4110:
  5338  0236' 3EFF               	addlw	-1
  5339  0237' 1D03               	skipz
  5340  0238' 2800'              	goto	u4115
  5341  0239' 0812'              	movf	??___flmul,w
  5342  023A' 079E'              	addwf	___flmul@prod,f
  5343  023B' 0813'              	movf	??___flmul+1,w
  5344  023C' 1103               	clrz
  5345  023D' 1803               	skipnc
  5346  023E' 3E01               	addlw	1
  5347  023F' 1903               	skipnz
  5348  0240' 2800'              	goto	u4121
  5349  0241' 079F'              	addwf	___flmul@prod+1,f
  5350  0242'                    u4121:
  5351  0242' 0814'              	movf	??___flmul+2,w
  5352  0243' 1103               	clrz
  5353  0244' 1803               	skipnc
  5354  0245' 3E01               	addlw	1
  5355  0246' 1903               	skipnz
  5356  0247' 2800'              	goto	u4122
  5357  0248' 07A0'              	addwf	___flmul@prod+2,f
  5358  0249'                    u4122:
  5359  0249' 0815'              	movf	??___flmul+3,w
  5360  024A' 1103               	clrz
  5361  024B' 1803               	skipnc
  5362  024C' 3E01               	addlw	1
  5363  024D' 1903               	skipnz
  5364  024E' 2800'              	goto	u4123
  5365  024F' 07A1'              	addwf	___flmul@prod+3,f
  5366  0250'                    u4123:
  5367  0250'                    l2977:
  5368  0250' 0818'              	movf	___flmul@grs,w
  5369  0251' 0092'              	movwf	??___flmul
  5370  0252' 0819'              	movf	___flmul@grs+1,w
  5371  0253' 0093'              	movwf	??___flmul+1
  5372  0254' 081A'              	movf	___flmul@grs+2,w
  5373  0255' 0094'              	movwf	??___flmul+2
  5374  0256' 081B'              	movf	___flmul@grs+3,w
  5375  0257' 0095'              	movwf	??___flmul+3
  5376  0258' 3018               	movlw	24
  5377  0259'                    u4135:
  5378  0259' 1003               	clrc
  5379  025A' 0C95'              	rrf	??___flmul+3,f
  5380  025B' 0C94'              	rrf	??___flmul+2,f
  5381  025C' 0C93'              	rrf	??___flmul+1,f
  5382  025D' 0C92'              	rrf	??___flmul,f
  5383  025E'                    u4130:
  5384  025E' 3EFF               	addlw	-1
  5385  025F' 1D03               	skipz
  5386  0260' 2800'              	goto	u4135
  5387  0261' 0812'              	movf	??___flmul,w
  5388  0262' 079E'              	addwf	___flmul@prod,f
  5389  0263' 0813'              	movf	??___flmul+1,w
  5390  0264' 1103               	clrz
  5391  0265' 1803               	skipnc
  5392  0266' 3E01               	addlw	1
  5393  0267' 1903               	skipnz
  5394  0268' 2800'              	goto	u4141
  5395  0269' 079F'              	addwf	___flmul@prod+1,f
  5396  026A'                    u4141:
  5397  026A' 0814'              	movf	??___flmul+2,w
  5398  026B' 1103               	clrz
  5399  026C' 1803               	skipnc
  5400  026D' 3E01               	addlw	1
  5401  026E' 1903               	skipnz
  5402  026F' 2800'              	goto	u4142
  5403  0270' 07A0'              	addwf	___flmul@prod+2,f
  5404  0271'                    u4142:
  5405  0271' 0815'              	movf	??___flmul+3,w
  5406  0272' 1103               	clrz
  5407  0273' 1803               	skipnc
  5408  0274' 3E01               	addlw	1
  5409  0275' 1903               	skipnz
  5410  0276' 2800'              	goto	u4143
  5411  0277' 07A1'              	addwf	___flmul@prod+3,f
  5412  0278'                    u4143:
  5413  0278'                    l2979:
  5414  0278' 3008               	movlw	8
  5415  0279' 0092'              	movwf	??___flmul
  5416  027A'                    u4155:
  5417  027A' 1003               	clrc
  5418  027B' 0D98'              	rlf	___flmul@grs,f
  5419  027C' 0D99'              	rlf	___flmul@grs+1,f
  5420  027D' 0D9A'              	rlf	___flmul@grs+2,f
  5421  027E' 0D9B'              	rlf	___flmul@grs+3,f
  5422  027F' 0B92'              	decfsz	??___flmul,f
  5423  0280' 2800'              	goto	u4155
  5424  0281'                    l2981:
  5425  0281' 081D'              	movf	___flmul@bexp,w
  5426  0282' 071C'              	addwf	___flmul@aexp,w
  5427  0283' 0092'              	movwf	??___flmul
  5428  0284' 0193'              	clrf	??___flmul+1
  5429  0285' 0D93'              	rlf	??___flmul+1,f
  5430  0286' 0812'              	movf	??___flmul,w
  5431  0287' 3E82               	addlw	130
  5432  0288' 00A2'              	movwf	___flmul@temp
  5433  0289' 0813'              	movf	??___flmul+1,w
  5434  028A' 1803               	skipnc
  5435  028B' 3E01               	addlw	1
  5436  028C' 3EFF               	addlw	255
  5437  028D' 00A3'              	movwf	___flmul@temp+1
  5438  028E' 2800'              	goto	l2993
  5439  028F'                    l2983:
  5440  028F' 3001               	movlw	1
  5441  0290' 0092'              	movwf	??___flmul
  5442  0291'                    u4165:
  5443  0291' 1003               	clrc
  5444  0292' 0D9E'              	rlf	___flmul@prod,f
  5445  0293' 0D9F'              	rlf	___flmul@prod+1,f
  5446  0294' 0DA0'              	rlf	___flmul@prod+2,f
  5447  0295' 0DA1'              	rlf	___flmul@prod+3,f
  5448  0296' 0B92'              	decfsz	??___flmul,f
  5449  0297' 2800'              	goto	u4165
  5450  0298'                    l2985:
  5451  0298' 1F9B'              	btfss	___flmul@grs+3,7
  5452  0299' 2800'              	goto	u4171
  5453  029A' 2800'              	goto	u4170
  5454  029B'                    u4171:
  5455  029B' 2800'              	goto	l2989
  5456  029C'                    u4170:
  5457  029C'                    l2987:
  5458  029C' 141E'              	bsf	___flmul@prod,0
  5459  029D'                    l2989:
  5460  029D' 3001               	movlw	1
  5461  029E' 0092'              	movwf	??___flmul
  5462  029F'                    u4185:
  5463  029F' 1003               	clrc
  5464  02A0' 0D98'              	rlf	___flmul@grs,f
  5465  02A1' 0D99'              	rlf	___flmul@grs+1,f
  5466  02A2' 0D9A'              	rlf	___flmul@grs+2,f
  5467  02A3' 0D9B'              	rlf	___flmul@grs+3,f
  5468  02A4' 0B92'              	decfsz	??___flmul,f
  5469  02A5' 2800'              	goto	u4185
  5470  02A6'                    l2991:
  5471  02A6' 30FF               	movlw	255
  5472  02A7' 07A2'              	addwf	___flmul@temp,f
  5473  02A8' 1803               	skipnc
  5474  02A9' 0AA3'              	incf	___flmul@temp+1,f
  5475  02AA' 30FF               	movlw	255
  5476  02AB' 07A3'              	addwf	___flmul@temp+1,f
  5477  02AC'                    l2993:
  5478  02AC' 1FA0'              	btfss	___flmul@prod+2,7
  5479  02AD' 2800'              	goto	u4191
  5480  02AE' 2800'              	goto	u4190
  5481  02AF'                    u4191:
  5482  02AF' 2800'              	goto	l2983
  5483  02B0'                    u4190:
  5484  02B0'                    l2995:
  5485  02B0' 019C'              	clrf	___flmul@aexp
  5486  02B1'                    l2997:
  5487  02B1' 1F9B'              	btfss	___flmul@grs+3,7
  5488  02B2' 2800'              	goto	u4201
  5489  02B3' 2800'              	goto	u4200
  5490  02B4'                    u4201:
  5491  02B4' 2800'              	goto	l3005
  5492  02B5'                    u4200:
  5493  02B5'                    l2999:
  5494  02B5' 30FF               	movlw	255
  5495  02B6' 0518'              	andwf	___flmul@grs,w
  5496  02B7' 0092'              	movwf	??___flmul
  5497  02B8' 30FF               	movlw	255
  5498  02B9' 0519'              	andwf	___flmul@grs+1,w
  5499  02BA' 0093'              	movwf	??___flmul+1
  5500  02BB' 30FF               	movlw	255
  5501  02BC' 051A'              	andwf	___flmul@grs+2,w
  5502  02BD' 0094'              	movwf	??___flmul+2
  5503  02BE' 307F               	movlw	127
  5504  02BF' 051B'              	andwf	___flmul@grs+3,w
  5505  02C0' 0095'              	movwf	??___flmul+3
  5506  02C1' 0815'              	movf	??___flmul+3,w
  5507  02C2' 0414'              	iorwf	??___flmul+2,w
  5508  02C3' 0413'              	iorwf	??___flmul+1,w
  5509  02C4' 0412'              	iorwf	??___flmul,w
  5510  02C5' 1903               	skipnz
  5511  02C6' 2800'              	goto	u4211
  5512  02C7' 2800'              	goto	u4210
  5513  02C8'                    u4211:
  5514  02C8' 2800'              	goto	l827
  5515  02C9'                    u4210:
  5516  02C9'                    l3001:
  5517  02C9' 019C'              	clrf	___flmul@aexp
  5518  02CA' 0A9C'              	incf	___flmul@aexp,f
  5519  02CB' 2800'              	goto	l3005
  5520  02CC'                    l827:
  5521  02CC' 1C1E'              	btfss	___flmul@prod,0
  5522  02CD' 2800'              	goto	u4221
  5523  02CE' 2800'              	goto	u4220
  5524  02CF'                    u4221:
  5525  02CF' 2800'              	goto	l3005
  5526  02D0'                    u4220:
  5527  02D0' 2800'              	goto	l3001
  5528  02D1'                    l3005:
  5529  02D1' 081C'              	movf	___flmul@aexp,w
  5530  02D2' 1903               	btfsc	3,2
  5531  02D3' 2800'              	goto	u4231
  5532  02D4' 2800'              	goto	u4230
  5533  02D5'                    u4231:
  5534  02D5' 2800'              	goto	l3015
  5535  02D6'                    u4230:
  5536  02D6'                    l3007:
  5537  02D6' 3001               	movlw	1
  5538  02D7' 079E'              	addwf	___flmul@prod,f
  5539  02D8' 3000               	movlw	0
  5540  02D9' 1803               	skipnc
  5541  02DA' 3001               	movlw	1
  5542  02DB' 079F'              	addwf	___flmul@prod+1,f
  5543  02DC' 3000               	movlw	0
  5544  02DD' 1803               	skipnc
  5545  02DE' 3001               	movlw	1
  5546  02DF' 07A0'              	addwf	___flmul@prod+2,f
  5547  02E0' 3000               	movlw	0
  5548  02E1' 1803               	skipnc
  5549  02E2' 3001               	movlw	1
  5550  02E3' 07A1'              	addwf	___flmul@prod+3,f
  5551  02E4'                    l3009:
  5552  02E4' 1C21'              	btfss	___flmul@prod+3,0
  5553  02E5' 2800'              	goto	u4241
  5554  02E6' 2800'              	goto	u4240
  5555  02E7'                    u4241:
  5556  02E7' 2800'              	goto	l3015
  5557  02E8'                    u4240:
  5558  02E8'                    l3011:
  5559  02E8' 081E'              	movf	___flmul@prod,w
  5560  02E9' 0092'              	movwf	??___flmul
  5561  02EA' 081F'              	movf	___flmul@prod+1,w
  5562  02EB' 0093'              	movwf	??___flmul+1
  5563  02EC' 0820'              	movf	___flmul@prod+2,w
  5564  02ED' 0094'              	movwf	??___flmul+2
  5565  02EE' 0821'              	movf	___flmul@prod+3,w
  5566  02EF' 0095'              	movwf	??___flmul+3
  5567  02F0' 3001               	movlw	1
  5568  02F1' 0096'              	movwf	??___flmul+4
  5569  02F2'                    u4255:
  5570  02F2' 0D15'              	rlf	??___flmul+3,w
  5571  02F3' 0C95'              	rrf	??___flmul+3,f
  5572  02F4' 0C94'              	rrf	??___flmul+2,f
  5573  02F5' 0C93'              	rrf	??___flmul+1,f
  5574  02F6' 0C92'              	rrf	??___flmul,f
  5575  02F7'                    u4250:
  5576  02F7' 0B96'              	decfsz	??___flmul+4,f
  5577  02F8' 2800'              	goto	u4255
  5578  02F9' 0815'              	movf	??___flmul+3,w
  5579  02FA' 00A1'              	movwf	___flmul@prod+3
  5580  02FB' 0814'              	movf	??___flmul+2,w
  5581  02FC' 00A0'              	movwf	___flmul@prod+2
  5582  02FD' 0813'              	movf	??___flmul+1,w
  5583  02FE' 009F'              	movwf	___flmul@prod+1
  5584  02FF' 0812'              	movf	??___flmul,w
  5585  0300' 009E'              	movwf	___flmul@prod
  5586  0301'                    l3013:
  5587  0301' 3001               	movlw	1
  5588  0302' 07A2'              	addwf	___flmul@temp,f
  5589  0303' 1803               	skipnc
  5590  0304' 0AA3'              	incf	___flmul@temp+1,f
  5591  0305' 3000               	movlw	0
  5592  0306' 07A3'              	addwf	___flmul@temp+1,f
  5593  0307'                    l3015:
  5594  0307' 0823'              	movf	___flmul@temp+1,w
  5595  0308' 3A80               	xorlw	128
  5596  0309' 00FF               	movwf	btemp+1
  5597  030A' 3080               	movlw	128
  5598  030B' 027F               	subwf	btemp+1,w
  5599  030C' 1D03               	skipz
  5600  030D' 2800'              	goto	u4265
  5601  030E' 30FF               	movlw	255
  5602  030F' 0222'              	subwf	___flmul@temp,w
  5603  0310'                    u4265:
  5604  0310' 1C03               	skipc
  5605  0311' 2800'              	goto	u4261
  5606  0312' 2800'              	goto	u4260
  5607  0313'                    u4261:
  5608  0313' 2800'              	goto	l3019
  5609  0314'                    u4260:
  5610  0314'                    l3017:
  5611  0314' 307F               	movlw	127
  5612  0315' 1283               	bcf	3,5	;RP0=0, select bank0
  5613  0316' 1303               	bcf	3,6	;RP1=0, select bank0
  5614  0317' 00A1'              	movwf	___flmul@prod+3
  5615  0318' 3080               	movlw	128
  5616  0319' 00A0'              	movwf	___flmul@prod+2
  5617  031A' 3000               	movlw	0
  5618  031B' 009F'              	movwf	___flmul@prod+1
  5619  031C' 3000               	movlw	0
  5620  031D' 009E'              	movwf	___flmul@prod
  5621  031E' 2800'              	goto	l833
  5622  031F'                    l3019:
  5623  031F' 1283               	bcf	3,5	;RP0=0, select bank0
  5624  0320' 1303               	bcf	3,6	;RP1=0, select bank0
  5625  0321' 0823'              	movf	___flmul@temp+1,w
  5626  0322' 3A80               	xorlw	128
  5627  0323' 00FF               	movwf	btemp+1
  5628  0324' 3080               	movlw	128
  5629  0325' 027F               	subwf	btemp+1,w
  5630  0326' 1D03               	skipz
  5631  0327' 2800'              	goto	u4275
  5632  0328' 3001               	movlw	1
  5633  0329' 0222'              	subwf	___flmul@temp,w
  5634  032A'                    u4275:
  5635  032A' 1803               	skipnc
  5636  032B' 2800'              	goto	u4271
  5637  032C' 2800'              	goto	u4270
  5638  032D'                    u4271:
  5639  032D' 2800'              	goto	l3025
  5640  032E'                    u4270:
  5641  032E'                    l3021:
  5642  032E' 3000               	movlw	0
  5643  032F' 1283               	bcf	3,5	;RP0=0, select bank0
  5644  0330' 1303               	bcf	3,6	;RP1=0, select bank0
  5645  0331' 00A1'              	movwf	___flmul@prod+3
  5646  0332' 3000               	movlw	0
  5647  0333' 00A0'              	movwf	___flmul@prod+2
  5648  0334' 3000               	movlw	0
  5649  0335' 009F'              	movwf	___flmul@prod+1
  5650  0336' 3000               	movlw	0
  5651  0337' 009E'              	movwf	___flmul@prod
  5652  0338'                    l3023:
  5653  0338' 0197'              	clrf	___flmul@sign
  5654  0339' 2800'              	goto	l833
  5655  033A'                    l3025:
  5656  033A' 1283               	bcf	3,5	;RP0=0, select bank0
  5657  033B' 1303               	bcf	3,6	;RP1=0, select bank0
  5658  033C' 0822'              	movf	___flmul@temp,w
  5659  033D' 0092'              	movwf	??___flmul
  5660  033E' 0812'              	movf	??___flmul,w
  5661  033F' 009D'              	movwf	___flmul@bexp
  5662  0340' 30FF               	movlw	255
  5663  0341' 059E'              	andwf	___flmul@prod,f
  5664  0342' 30FF               	movlw	255
  5665  0343' 059F'              	andwf	___flmul@prod+1,f
  5666  0344' 307F               	movlw	127
  5667  0345' 05A0'              	andwf	___flmul@prod+2,f
  5668  0346' 3000               	movlw	0
  5669  0347' 05A1'              	andwf	___flmul@prod+3,f
  5670  0348'                    l3027:
  5671  0348' 1C1D'              	btfss	___flmul@bexp,0
  5672  0349' 2800'              	goto	u4281
  5673  034A' 2800'              	goto	u4280
  5674  034B'                    u4281:
  5675  034B' 2800'              	goto	l3031
  5676  034C'                    u4280:
  5677  034C'                    l3029:
  5678  034C' 17A0'              	bsf	___flmul@prod+2,7
  5679  034D'                    l3031:
  5680  034D' 081D'              	movf	___flmul@bexp,w
  5681  034E' 0092'              	movwf	??___flmul
  5682  034F' 1003               	clrc
  5683  0350' 0C12'              	rrf	??___flmul,w
  5684  0351' 0093'              	movwf	??___flmul+1
  5685  0352' 0813'              	movf	??___flmul+1,w
  5686  0353' 00A1'              	movwf	___flmul@prod+3
  5687  0354'                    l833:
  5688  0354' 0817'              	movf	___flmul@sign,w
  5689  0355' 0092'              	movwf	??___flmul
  5690  0356' 0812'              	movf	??___flmul,w
  5691  0357' 04A1'              	iorwf	___flmul@prod+3,f
  5692  0358'                    l3033:
  5693  0358' 0821'              	movf	___flmul@prod+3,w
  5694  0359' 008D'              	movwf	?___flmul+3
  5695  035A' 0820'              	movf	___flmul@prod+2,w
  5696  035B' 008C'              	movwf	?___flmul+2
  5697  035C' 081F'              	movf	___flmul@prod+1,w
  5698  035D' 008B'              	movwf	?___flmul+1
  5699  035E' 081E'              	movf	___flmul@prod,w
  5700  035F' 008A'              	movwf	?___flmul
  5701  0360'                    l821:
  5702  0360' 0008               	return
  5703  0361'                    __end_of___flmul:
  5704                           
  5705                           	psect	text10
  5706  0000'                    __ptext10:	
  5707 ;; *************** function __Umul8_16 *****************
  5708 ;; Defined at:
  5709 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  5710 ;; Parameters:    Size  Location     Type
  5711 ;;  multiplier      1    wreg     unsigned char 
  5712 ;;  multiplicand    1    3[COMMON] unsigned char 
  5713 ;; Auto vars:     Size  Location     Type
  5714 ;;  multiplier      1    4[BANK0 ] unsigned char 
  5715 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  5716 ;;  product         2    0[BANK0 ] unsigned int 
  5717 ;; Return value:  Size  Location     Type
  5718 ;;                  2    3[COMMON] unsigned int 
  5719 ;; Registers used:
  5720 ;;		wreg, status,2, status,0
  5721 ;; Tracked objects:
  5722 ;;		On entry : 0/0
  5723 ;;		On exit  : 0/0
  5724 ;;		Unchanged: 0/0
  5725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5726 ;;      Params:         2       0       0       0       0
  5727 ;;      Locals:         0       5       0       0       0
  5728 ;;      Temps:          2       0       0       0       0
  5729 ;;      Totals:         4       5       0       0       0
  5730 ;;Total ram usage:        9 bytes
  5731 ;; Hardware stack levels used:    1
  5732 ;; Hardware stack levels required when called:    2
  5733 ;; This function calls:
  5734 ;;		Nothing
  5735 ;; This function is called by:
  5736 ;;		___flmul
  5737 ;; This function uses a non-reentrant model
  5738 ;;
  5739                           
  5740                           
  5741                           ;psect for function __Umul8_16
  5742  0000'                    __Umul8_16:
  5743                           
  5744                           ;incstack = 0
  5745                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5746                           ;__Umul8_16@multiplier stored from wreg
  5747  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  5748  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  5749  0002' 0084'              	movwf	__Umul8_16@multiplier
  5750  0003'                    l2557:
  5751  0003' 0180'              	clrf	__Umul8_16@product
  5752  0004' 0181'              	clrf	__Umul8_16@product+1
  5753  0005'                    l2559:
  5754  0005' 0803'              	movf	__Umul8_16@multiplicand,w
  5755  0006' 0085'              	movwf	??__Umul8_16
  5756  0007' 0186'              	clrf	??__Umul8_16+1
  5757  0008' 0805'              	movf	??__Umul8_16,w
  5758  0009' 0082'              	movwf	__Umul8_16@word_mpld
  5759  000A' 0806'              	movf	??__Umul8_16+1,w
  5760  000B' 0083'              	movwf	__Umul8_16@word_mpld+1
  5761  000C'                    l2561:
  5762  000C' 1C04'              	btfss	__Umul8_16@multiplier,0
  5763  000D' 2800'              	goto	u3111
  5764  000E' 2800'              	goto	u3110
  5765  000F'                    u3111:
  5766  000F' 2800'              	goto	l840
  5767  0010'                    u3110:
  5768  0010'                    l2563:
  5769  0010' 0802'              	movf	__Umul8_16@word_mpld,w
  5770  0011' 0780'              	addwf	__Umul8_16@product,f
  5771  0012' 1803               	skipnc
  5772  0013' 0A81'              	incf	__Umul8_16@product+1,f
  5773  0014' 0803'              	movf	__Umul8_16@word_mpld+1,w
  5774  0015' 0781'              	addwf	__Umul8_16@product+1,f
  5775  0016'                    l840:
  5776  0016' 3001               	movlw	1
  5777  0017'                    u3125:
  5778  0017' 1003               	clrc
  5779  0018' 0D82'              	rlf	__Umul8_16@word_mpld,f
  5780  0019' 0D83'              	rlf	__Umul8_16@word_mpld+1,f
  5781  001A' 3EFF               	addlw	-1
  5782  001B' 1D03               	skipz
  5783  001C' 2800'              	goto	u3125
  5784  001D' 1003               	clrc
  5785  001E' 0C84'              	rrf	__Umul8_16@multiplier,f
  5786  001F'                    l2565:
  5787  001F' 0804'              	movf	__Umul8_16@multiplier,w
  5788  0020' 1D03               	btfss	3,2
  5789  0021' 2800'              	goto	u3131
  5790  0022' 2800'              	goto	u3130
  5791  0023'                    u3131:
  5792  0023' 2800'              	goto	l2561
  5793  0024'                    u3130:
  5794  0024'                    l2567:
  5795  0024' 0801'              	movf	__Umul8_16@product+1,w
  5796  0025' 0084'              	movwf	?__Umul8_16+1
  5797  0026' 0800'              	movf	__Umul8_16@product,w
  5798  0027' 0083'              	movwf	?__Umul8_16
  5799  0028'                    l842:
  5800  0028' 0008               	return
  5801  0029'                    __end_of__Umul8_16:
  5802                           
  5803                           	psect	text11
  5804  0000'                    __ptext11:	
  5805 ;; *************** function __tdiv_to_l_ *****************
  5806 ;; Defined at:
  5807 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  5808 ;; Parameters:    Size  Location     Type
  5809 ;;  f1              4    0[BANK0 ] float 
  5810 ;;  f2              4    4[BANK0 ] float 
  5811 ;; Auto vars:     Size  Location     Type
  5812 ;;  quot            4    8[BANK0 ] unsigned long 
  5813 ;;  exp1            1   13[BANK0 ] unsigned char 
  5814 ;;  cntr            1   12[BANK0 ] unsigned char 
  5815 ;; Return value:  Size  Location     Type
  5816 ;;                  4    0[BANK0 ] unsigned long 
  5817 ;; Registers used:
  5818 ;;		wreg, status,2, status,0
  5819 ;; Tracked objects:
  5820 ;;		On entry : 0/0
  5821 ;;		On exit  : 0/0
  5822 ;;		Unchanged: 0/0
  5823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5824 ;;      Params:         0       8       0       0       0
  5825 ;;      Locals:         0       6       0       0       0
  5826 ;;      Temps:          4       0       0       0       0
  5827 ;;      Totals:         4      14       0       0       0
  5828 ;;Total ram usage:       18 bytes
  5829 ;; Hardware stack levels used:    1
  5830 ;; Hardware stack levels required when called:    2
  5831 ;; This function calls:
  5832 ;;		Nothing
  5833 ;; This function is called by:
  5834 ;;		_sprintf
  5835 ;; This function uses a non-reentrant model
  5836 ;;
  5837                           
  5838                           
  5839                           ;psect for function __tdiv_to_l_
  5840  0000'                    __tdiv_to_l_:
  5841  0000'                    l4241:	
  5842                           ;incstack = 0
  5843                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5844                           
  5845  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  5846  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  5847  0002' 0800'              	movf	__tdiv_to_l_@f1,w
  5848  0003' 0083'              	movwf	??__tdiv_to_l_
  5849  0004' 0801'              	movf	__tdiv_to_l_@f1+1,w
  5850  0005' 0084'              	movwf	??__tdiv_to_l_+1
  5851  0006' 0802'              	movf	__tdiv_to_l_@f1+2,w
  5852  0007' 0085'              	movwf	??__tdiv_to_l_+2
  5853  0008' 1003               	clrc
  5854  0009' 0D04'              	rlf	??__tdiv_to_l_+1,w
  5855  000A' 0D05'              	rlf	??__tdiv_to_l_+2,w
  5856  000B' 0086'              	movwf	??__tdiv_to_l_+3
  5857  000C' 0806'              	movf	??__tdiv_to_l_+3,w
  5858  000D' 008D'              	movwf	__tdiv_to_l_@exp1
  5859  000E' 080D'              	movf	__tdiv_to_l_@exp1,w
  5860  000F' 1D03               	btfss	3,2
  5861  0010' 2800'              	goto	u6481
  5862  0011' 2800'              	goto	u6480
  5863  0012'                    u6481:
  5864  0012' 2800'              	goto	l4247
  5865  0013'                    u6480:
  5866  0013'                    l4243:
  5867  0013' 3000               	movlw	0
  5868  0014' 0083'              	movwf	?__tdiv_to_l_+3
  5869  0015' 3000               	movlw	0
  5870  0016' 0082'              	movwf	?__tdiv_to_l_+2
  5871  0017' 3000               	movlw	0
  5872  0018' 0081'              	movwf	?__tdiv_to_l_+1
  5873  0019' 3000               	movlw	0
  5874  001A' 0080'              	movwf	?__tdiv_to_l_
  5875  001B' 2800'              	goto	l615
  5876  001C'                    l4247:
  5877  001C' 0804'              	movf	__tdiv_to_l_@f2,w
  5878  001D' 0083'              	movwf	??__tdiv_to_l_
  5879  001E' 0805'              	movf	__tdiv_to_l_@f2+1,w
  5880  001F' 0084'              	movwf	??__tdiv_to_l_+1
  5881  0020' 0806'              	movf	__tdiv_to_l_@f2+2,w
  5882  0021' 0085'              	movwf	??__tdiv_to_l_+2
  5883  0022' 1003               	clrc
  5884  0023' 0D04'              	rlf	??__tdiv_to_l_+1,w
  5885  0024' 0D05'              	rlf	??__tdiv_to_l_+2,w
  5886  0025' 0086'              	movwf	??__tdiv_to_l_+3
  5887  0026' 0806'              	movf	??__tdiv_to_l_+3,w
  5888  0027' 008C'              	movwf	__tdiv_to_l_@cntr
  5889  0028' 080C'              	movf	__tdiv_to_l_@cntr,w
  5890  0029' 1D03               	btfss	3,2
  5891  002A' 2800'              	goto	u6491
  5892  002B' 2800'              	goto	u6490
  5893  002C'                    u6491:
  5894  002C' 2800'              	goto	l616
  5895  002D'                    u6490:
  5896  002D' 2800'              	goto	l4243
  5897  002E'                    l616:
  5898  002E' 1781'              	bsf	__tdiv_to_l_@f1+1,7
  5899  002F'                    l4253:
  5900  002F' 30FF               	movlw	255
  5901  0030' 0580'              	andwf	__tdiv_to_l_@f1,f
  5902  0031' 30FF               	movlw	255
  5903  0032' 0581'              	andwf	__tdiv_to_l_@f1+1,f
  5904  0033' 3000               	movlw	0
  5905  0034' 0582'              	andwf	__tdiv_to_l_@f1+2,f
  5906  0035'                    l4255:
  5907  0035' 1785'              	bsf	__tdiv_to_l_@f2+1,7
  5908  0036' 30FF               	movlw	255
  5909  0037' 0584'              	andwf	__tdiv_to_l_@f2,f
  5910  0038' 30FF               	movlw	255
  5911  0039' 0585'              	andwf	__tdiv_to_l_@f2+1,f
  5912  003A' 3000               	movlw	0
  5913  003B' 0586'              	andwf	__tdiv_to_l_@f2+2,f
  5914  003C' 3000               	movlw	0
  5915  003D' 008B'              	movwf	__tdiv_to_l_@quot+3
  5916  003E' 3000               	movlw	0
  5917  003F' 008A'              	movwf	__tdiv_to_l_@quot+2
  5918  0040' 3000               	movlw	0
  5919  0041' 0089'              	movwf	__tdiv_to_l_@quot+1
  5920  0042' 3000               	movlw	0
  5921  0043' 0088'              	movwf	__tdiv_to_l_@quot
  5922  0044'                    l4257:
  5923  0044' 307F               	movlw	127
  5924  0045' 028D'              	subwf	__tdiv_to_l_@exp1,f
  5925  0046'                    l4259:
  5926  0046' 3098               	movlw	152
  5927  0047' 070C'              	addwf	__tdiv_to_l_@cntr,w
  5928  0048' 0083'              	movwf	??__tdiv_to_l_
  5929  0049' 0803'              	movf	??__tdiv_to_l_,w
  5930  004A' 028D'              	subwf	__tdiv_to_l_@exp1,f
  5931  004B' 3018               	movlw	24
  5932  004C' 0083'              	movwf	??__tdiv_to_l_
  5933  004D' 0803'              	movf	??__tdiv_to_l_,w
  5934  004E' 008C'              	movwf	__tdiv_to_l_@cntr
  5935  004F'                    l4261:
  5936  004F' 3001               	movlw	1
  5937  0050' 0083'              	movwf	??__tdiv_to_l_
  5938  0051'                    u6505:
  5939  0051' 1003               	clrc
  5940  0052' 0D88'              	rlf	__tdiv_to_l_@quot,f
  5941  0053' 0D89'              	rlf	__tdiv_to_l_@quot+1,f
  5942  0054' 0D8A'              	rlf	__tdiv_to_l_@quot+2,f
  5943  0055' 0D8B'              	rlf	__tdiv_to_l_@quot+3,f
  5944  0056' 0B83'              	decfsz	??__tdiv_to_l_,f
  5945  0057' 2800'              	goto	u6505
  5946  0058'                    l4263:
  5947  0058' 0806'              	movf	__tdiv_to_l_@f2+2,w
  5948  0059' 0202'              	subwf	__tdiv_to_l_@f1+2,w
  5949  005A' 1D03               	skipz
  5950  005B' 2800'              	goto	u6515
  5951  005C' 0805'              	movf	__tdiv_to_l_@f2+1,w
  5952  005D' 0201'              	subwf	__tdiv_to_l_@f1+1,w
  5953  005E' 1D03               	skipz
  5954  005F' 2800'              	goto	u6515
  5955  0060' 0804'              	movf	__tdiv_to_l_@f2,w
  5956  0061' 0200'              	subwf	__tdiv_to_l_@f1,w
  5957  0062'                    u6515:
  5958  0062' 1C03               	skipc
  5959  0063' 2800'              	goto	u6511
  5960  0064' 2800'              	goto	u6510
  5961  0065'                    u6511:
  5962  0065' 2800'              	goto	l4269
  5963  0066'                    u6510:
  5964  0066'                    l4265:
  5965  0066' 0804'              	movf	__tdiv_to_l_@f2,w
  5966  0067' 0280'              	subwf	__tdiv_to_l_@f1,f
  5967  0068' 0805'              	movf	__tdiv_to_l_@f2+1,w
  5968  0069' 1C03               	skipc
  5969  006A' 0F05'              	incfsz	__tdiv_to_l_@f2+1,w
  5970  006B' 0281'              	subwf	__tdiv_to_l_@f1+1,f
  5971  006C' 0806'              	movf	__tdiv_to_l_@f2+2,w
  5972  006D' 1C03               	skipc
  5973  006E' 0A06'              	incf	__tdiv_to_l_@f2+2,w
  5974  006F' 0282'              	subwf	__tdiv_to_l_@f1+2,f
  5975  0070'                    l4267:
  5976  0070' 1408'              	bsf	__tdiv_to_l_@quot,0
  5977  0071'                    l4269:
  5978  0071' 3001               	movlw	1
  5979  0072'                    u6525:
  5980  0072' 1003               	clrc
  5981  0073' 0D80'              	rlf	__tdiv_to_l_@f1,f
  5982  0074' 0D81'              	rlf	__tdiv_to_l_@f1+1,f
  5983  0075' 0D82'              	rlf	__tdiv_to_l_@f1+2,f
  5984  0076' 3EFF               	addlw	-1
  5985  0077' 1D03               	skipz
  5986  0078' 2800'              	goto	u6525
  5987  0079'                    l4271:
  5988  0079' 3001               	movlw	1
  5989  007A' 028C'              	subwf	__tdiv_to_l_@cntr,f
  5990  007B' 1D03               	btfss	3,2
  5991  007C' 2800'              	goto	u6531
  5992  007D' 2800'              	goto	u6530
  5993  007E'                    u6531:
  5994  007E' 2800'              	goto	l4261
  5995  007F'                    u6530:
  5996  007F'                    l619:
  5997  007F' 1F8D'              	btfss	__tdiv_to_l_@exp1,7
  5998  0080' 2800'              	goto	u6541
  5999  0081' 2800'              	goto	u6540
  6000  0082'                    u6541:
  6001  0082' 2800'              	goto	l4281
  6002  0083'                    u6540:
  6003  0083'                    l4273:
  6004  0083' 080D'              	movf	__tdiv_to_l_@exp1,w
  6005  0084' 3A80               	xorlw	128
  6006  0085' 3E97               	addlw	151
  6007  0086' 1803               	skipnc
  6008  0087' 2800'              	goto	u6551
  6009  0088' 2800'              	goto	u6550
  6010  0089'                    u6551:
  6011  0089' 2800'              	goto	l4279
  6012  008A'                    u6550:
  6013  008A' 2800'              	goto	l4243
  6014  008B'                    l4279:
  6015  008B' 3001               	movlw	1
  6016  008C'                    u6565:
  6017  008C' 1003               	clrc
  6018  008D' 0C8B'              	rrf	__tdiv_to_l_@quot+3,f
  6019  008E' 0C8A'              	rrf	__tdiv_to_l_@quot+2,f
  6020  008F' 0C89'              	rrf	__tdiv_to_l_@quot+1,f
  6021  0090' 0C88'              	rrf	__tdiv_to_l_@quot,f
  6022  0091' 3EFF               	addlw	-1
  6023  0092' 1D03               	skipz
  6024  0093' 2800'              	goto	u6565
  6025  0094' 3001               	movlw	1
  6026  0095' 0083'              	movwf	??__tdiv_to_l_
  6027  0096' 0803'              	movf	??__tdiv_to_l_,w
  6028  0097' 078D'              	addwf	__tdiv_to_l_@exp1,f
  6029  0098' 1D03               	btfss	3,2
  6030  0099' 2800'              	goto	u6571
  6031  009A' 2800'              	goto	u6570
  6032  009B'                    u6571:
  6033  009B' 2800'              	goto	l4279
  6034  009C'                    u6570:
  6035  009C' 2800'              	goto	l4289
  6036  009D'                    l4281:
  6037  009D' 3018               	movlw	24
  6038  009E' 020D'              	subwf	__tdiv_to_l_@exp1,w
  6039  009F' 1C03               	skipc
  6040  00A0' 2800'              	goto	u6581
  6041  00A1' 2800'              	goto	u6580
  6042  00A2'                    u6581:
  6043  00A2' 2800'              	goto	l626
  6044  00A3'                    u6580:
  6045  00A3' 2800'              	goto	l4243
  6046  00A4'                    l4287:
  6047  00A4' 3001               	movlw	1
  6048  00A5' 0083'              	movwf	??__tdiv_to_l_
  6049  00A6'                    u6595:
  6050  00A6' 1003               	clrc
  6051  00A7' 0D88'              	rlf	__tdiv_to_l_@quot,f
  6052  00A8' 0D89'              	rlf	__tdiv_to_l_@quot+1,f
  6053  00A9' 0D8A'              	rlf	__tdiv_to_l_@quot+2,f
  6054  00AA' 0D8B'              	rlf	__tdiv_to_l_@quot+3,f
  6055  00AB' 0B83'              	decfsz	??__tdiv_to_l_,f
  6056  00AC' 2800'              	goto	u6595
  6057  00AD' 3001               	movlw	1
  6058  00AE' 028D'              	subwf	__tdiv_to_l_@exp1,f
  6059  00AF'                    l626:
  6060  00AF' 080D'              	movf	__tdiv_to_l_@exp1,w
  6061  00B0' 1D03               	btfss	3,2
  6062  00B1' 2800'              	goto	u6601
  6063  00B2' 2800'              	goto	u6600
  6064  00B3'                    u6601:
  6065  00B3' 2800'              	goto	l4287
  6066  00B4'                    u6600:
  6067  00B4'                    l4289:
  6068  00B4' 080B'              	movf	__tdiv_to_l_@quot+3,w
  6069  00B5' 0083'              	movwf	?__tdiv_to_l_+3
  6070  00B6' 080A'              	movf	__tdiv_to_l_@quot+2,w
  6071  00B7' 0082'              	movwf	?__tdiv_to_l_+2
  6072  00B8' 0809'              	movf	__tdiv_to_l_@quot+1,w
  6073  00B9' 0081'              	movwf	?__tdiv_to_l_+1
  6074  00BA' 0808'              	movf	__tdiv_to_l_@quot,w
  6075  00BB' 0080'              	movwf	?__tdiv_to_l_
  6076  00BC'                    l615:
  6077  00BC' 0008               	return
  6078  00BD'                    __end_of__tdiv_to_l_:
  6079                           
  6080                           	psect	text12
  6081  0000'                    __ptext12:	
  6082 ;; *************** function __div_to_l_ *****************
  6083 ;; Defined at:
  6084 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  6085 ;; Parameters:    Size  Location     Type
  6086 ;;  f1              4    0[BANK0 ] unsigned long 
  6087 ;;  f2              4    4[BANK0 ] unsigned long 
  6088 ;; Auto vars:     Size  Location     Type
  6089 ;;  quot            4    4[COMMON] unsigned long 
  6090 ;;  exp1            1    9[COMMON] unsigned char 
  6091 ;;  cntr            1    8[COMMON] unsigned char 
  6092 ;; Return value:  Size  Location     Type
  6093 ;;                  4    0[BANK0 ] unsigned long 
  6094 ;; Registers used:
  6095 ;;		wreg, status,2, status,0
  6096 ;; Tracked objects:
  6097 ;;		On entry : 0/0
  6098 ;;		On exit  : 0/0
  6099 ;;		Unchanged: 0/0
  6100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6101 ;;      Params:         0       8       0       0       0
  6102 ;;      Locals:         6       0       0       0       0
  6103 ;;      Temps:          1       0       0       0       0
  6104 ;;      Totals:         7       8       0       0       0
  6105 ;;Total ram usage:       15 bytes
  6106 ;; Hardware stack levels used:    1
  6107 ;; Hardware stack levels required when called:    2
  6108 ;; This function calls:
  6109 ;;		Nothing
  6110 ;; This function is called by:
  6111 ;;		_sprintf
  6112 ;; This function uses a non-reentrant model
  6113 ;;
  6114                           
  6115                           
  6116                           ;psect for function __div_to_l_
  6117  0000'                    __div_to_l_:
  6118  0000'                    l4293:	
  6119                           ;incstack = 0
  6120                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6121                           
  6122  0000' 1003               	clrc
  6123  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  6124  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  6125  0003' 0D02'              	rlf	__div_to_l_@f1+2,w
  6126  0004' 0D03'              	rlf	__div_to_l_@f1+3,w
  6127  0005' 0083'              	movwf	??__div_to_l_
  6128  0006' 0803'              	movf	??__div_to_l_,w
  6129  0007' 0089'              	movwf	__div_to_l_@exp1
  6130  0008' 0809'              	movf	__div_to_l_@exp1,w
  6131  0009' 1D03               	btfss	3,2
  6132  000A' 2800'              	goto	u6611
  6133  000B' 2800'              	goto	u6610
  6134  000C'                    u6611:
  6135  000C' 2800'              	goto	l4299
  6136  000D'                    u6610:
  6137  000D'                    l4295:
  6138  000D' 3000               	movlw	0
  6139  000E' 0083'              	movwf	?__div_to_l_+3
  6140  000F' 3000               	movlw	0
  6141  0010' 0082'              	movwf	?__div_to_l_+2
  6142  0011' 3000               	movlw	0
  6143  0012' 0081'              	movwf	?__div_to_l_+1
  6144  0013' 3000               	movlw	0
  6145  0014' 0080'              	movwf	?__div_to_l_
  6146  0015' 2800'              	goto	l568
  6147  0016'                    l4299:
  6148  0016' 1003               	clrc
  6149  0017' 0D06'              	rlf	__div_to_l_@f2+2,w
  6150  0018' 0D07'              	rlf	__div_to_l_@f2+3,w
  6151  0019' 0083'              	movwf	??__div_to_l_
  6152  001A' 0803'              	movf	??__div_to_l_,w
  6153  001B' 0088'              	movwf	__div_to_l_@cntr
  6154  001C' 0808'              	movf	__div_to_l_@cntr,w
  6155  001D' 1D03               	btfss	3,2
  6156  001E' 2800'              	goto	u6621
  6157  001F' 2800'              	goto	u6620
  6158  0020'                    u6621:
  6159  0020' 2800'              	goto	l569
  6160  0021'                    u6620:
  6161  0021' 2800'              	goto	l4295
  6162  0022'                    l569:
  6163  0022' 1782'              	bsf	__div_to_l_@f1+2,7
  6164  0023'                    l4305:
  6165  0023' 30FF               	movlw	255
  6166  0024' 0580'              	andwf	__div_to_l_@f1,f
  6167  0025' 30FF               	movlw	255
  6168  0026' 0581'              	andwf	__div_to_l_@f1+1,f
  6169  0027' 30FF               	movlw	255
  6170  0028' 0582'              	andwf	__div_to_l_@f1+2,f
  6171  0029' 3000               	movlw	0
  6172  002A' 0583'              	andwf	__div_to_l_@f1+3,f
  6173  002B'                    l4307:
  6174  002B' 1786'              	bsf	__div_to_l_@f2+2,7
  6175  002C' 30FF               	movlw	255
  6176  002D' 0584'              	andwf	__div_to_l_@f2,f
  6177  002E' 30FF               	movlw	255
  6178  002F' 0585'              	andwf	__div_to_l_@f2+1,f
  6179  0030' 30FF               	movlw	255
  6180  0031' 0586'              	andwf	__div_to_l_@f2+2,f
  6181  0032' 3000               	movlw	0
  6182  0033' 0587'              	andwf	__div_to_l_@f2+3,f
  6183  0034' 3000               	movlw	0
  6184  0035' 0087'              	movwf	__div_to_l_@quot+3
  6185  0036' 3000               	movlw	0
  6186  0037' 0086'              	movwf	__div_to_l_@quot+2
  6187  0038' 3000               	movlw	0
  6188  0039' 0085'              	movwf	__div_to_l_@quot+1
  6189  003A' 3000               	movlw	0
  6190  003B' 0084'              	movwf	__div_to_l_@quot
  6191  003C'                    l4309:
  6192  003C' 307F               	movlw	127
  6193  003D' 0289'              	subwf	__div_to_l_@exp1,f
  6194  003E'                    l4311:
  6195  003E' 30A0               	movlw	160
  6196  003F' 0708'              	addwf	__div_to_l_@cntr,w
  6197  0040' 0083'              	movwf	??__div_to_l_
  6198  0041' 0803'              	movf	??__div_to_l_,w
  6199  0042' 0289'              	subwf	__div_to_l_@exp1,f
  6200  0043' 3020               	movlw	32
  6201  0044' 0083'              	movwf	??__div_to_l_
  6202  0045' 0803'              	movf	??__div_to_l_,w
  6203  0046' 0088'              	movwf	__div_to_l_@cntr
  6204  0047'                    l4313:
  6205  0047' 3001               	movlw	1
  6206  0048' 0083'              	movwf	??__div_to_l_
  6207  0049'                    u6635:
  6208  0049' 1003               	clrc
  6209  004A' 0D84'              	rlf	__div_to_l_@quot,f
  6210  004B' 0D85'              	rlf	__div_to_l_@quot+1,f
  6211  004C' 0D86'              	rlf	__div_to_l_@quot+2,f
  6212  004D' 0D87'              	rlf	__div_to_l_@quot+3,f
  6213  004E' 0B83'              	decfsz	??__div_to_l_,f
  6214  004F' 2800'              	goto	u6635
  6215  0050'                    l4315:
  6216  0050' 0807'              	movf	__div_to_l_@f2+3,w
  6217  0051' 0203'              	subwf	__div_to_l_@f1+3,w
  6218  0052' 1D03               	skipz
  6219  0053' 2800'              	goto	u6645
  6220  0054' 0806'              	movf	__div_to_l_@f2+2,w
  6221  0055' 0202'              	subwf	__div_to_l_@f1+2,w
  6222  0056' 1D03               	skipz
  6223  0057' 2800'              	goto	u6645
  6224  0058' 0805'              	movf	__div_to_l_@f2+1,w
  6225  0059' 0201'              	subwf	__div_to_l_@f1+1,w
  6226  005A' 1D03               	skipz
  6227  005B' 2800'              	goto	u6645
  6228  005C' 0804'              	movf	__div_to_l_@f2,w
  6229  005D' 0200'              	subwf	__div_to_l_@f1,w
  6230  005E'                    u6645:
  6231  005E' 1C03               	skipc
  6232  005F' 2800'              	goto	u6641
  6233  0060' 2800'              	goto	u6640
  6234  0061'                    u6641:
  6235  0061' 2800'              	goto	l4321
  6236  0062'                    u6640:
  6237  0062'                    l4317:
  6238  0062' 0804'              	movf	__div_to_l_@f2,w
  6239  0063' 0280'              	subwf	__div_to_l_@f1,f
  6240  0064' 0805'              	movf	__div_to_l_@f2+1,w
  6241  0065' 1C03               	skipc
  6242  0066' 0F05'              	incfsz	__div_to_l_@f2+1,w
  6243  0067' 0281'              	subwf	__div_to_l_@f1+1,f
  6244  0068' 0806'              	movf	__div_to_l_@f2+2,w
  6245  0069' 1C03               	skipc
  6246  006A' 0F06'              	incfsz	__div_to_l_@f2+2,w
  6247  006B' 0282'              	subwf	__div_to_l_@f1+2,f
  6248  006C' 0807'              	movf	__div_to_l_@f2+3,w
  6249  006D' 1C03               	skipc
  6250  006E' 0F07'              	incfsz	__div_to_l_@f2+3,w
  6251  006F' 0283'              	subwf	__div_to_l_@f1+3,f
  6252  0070'                    l4319:
  6253  0070' 1404'              	bsf	__div_to_l_@quot,0
  6254  0071'                    l4321:
  6255  0071' 3001               	movlw	1
  6256  0072' 0083'              	movwf	??__div_to_l_
  6257  0073'                    u6655:
  6258  0073' 1003               	clrc
  6259  0074' 0D80'              	rlf	__div_to_l_@f1,f
  6260  0075' 0D81'              	rlf	__div_to_l_@f1+1,f
  6261  0076' 0D82'              	rlf	__div_to_l_@f1+2,f
  6262  0077' 0D83'              	rlf	__div_to_l_@f1+3,f
  6263  0078' 0B83'              	decfsz	??__div_to_l_,f
  6264  0079' 2800'              	goto	u6655
  6265  007A'                    l4323:
  6266  007A' 3001               	movlw	1
  6267  007B' 0288'              	subwf	__div_to_l_@cntr,f
  6268  007C' 1D03               	btfss	3,2
  6269  007D' 2800'              	goto	u6661
  6270  007E' 2800'              	goto	u6660
  6271  007F'                    u6661:
  6272  007F' 2800'              	goto	l4313
  6273  0080'                    u6660:
  6274  0080'                    l572:
  6275  0080' 1F89'              	btfss	__div_to_l_@exp1,7
  6276  0081' 2800'              	goto	u6671
  6277  0082' 2800'              	goto	u6670
  6278  0083'                    u6671:
  6279  0083' 2800'              	goto	l4333
  6280  0084'                    u6670:
  6281  0084'                    l4325:
  6282  0084' 0809'              	movf	__div_to_l_@exp1,w
  6283  0085' 3A80               	xorlw	128
  6284  0086' 3E9F               	addlw	159
  6285  0087' 1803               	skipnc
  6286  0088' 2800'              	goto	u6681
  6287  0089' 2800'              	goto	u6680
  6288  008A'                    u6681:
  6289  008A' 2800'              	goto	l4331
  6290  008B'                    u6680:
  6291  008B' 2800'              	goto	l4295
  6292  008C'                    l4331:
  6293  008C' 3001               	movlw	1
  6294  008D'                    u6695:
  6295  008D' 1003               	clrc
  6296  008E' 0C87'              	rrf	__div_to_l_@quot+3,f
  6297  008F' 0C86'              	rrf	__div_to_l_@quot+2,f
  6298  0090' 0C85'              	rrf	__div_to_l_@quot+1,f
  6299  0091' 0C84'              	rrf	__div_to_l_@quot,f
  6300  0092' 3EFF               	addlw	-1
  6301  0093' 1D03               	skipz
  6302  0094' 2800'              	goto	u6695
  6303  0095' 3001               	movlw	1
  6304  0096' 0083'              	movwf	??__div_to_l_
  6305  0097' 0803'              	movf	??__div_to_l_,w
  6306  0098' 0789'              	addwf	__div_to_l_@exp1,f
  6307  0099' 1D03               	btfss	3,2
  6308  009A' 2800'              	goto	u6701
  6309  009B' 2800'              	goto	u6700
  6310  009C'                    u6701:
  6311  009C' 2800'              	goto	l4331
  6312  009D'                    u6700:
  6313  009D' 2800'              	goto	l4341
  6314  009E'                    l4333:
  6315  009E' 3020               	movlw	32
  6316  009F' 0209'              	subwf	__div_to_l_@exp1,w
  6317  00A0' 1C03               	skipc
  6318  00A1' 2800'              	goto	u6711
  6319  00A2' 2800'              	goto	u6710
  6320  00A3'                    u6711:
  6321  00A3' 2800'              	goto	l579
  6322  00A4'                    u6710:
  6323  00A4' 2800'              	goto	l4295
  6324  00A5'                    l4339:
  6325  00A5' 3001               	movlw	1
  6326  00A6' 0083'              	movwf	??__div_to_l_
  6327  00A7'                    u6725:
  6328  00A7' 1003               	clrc
  6329  00A8' 0D84'              	rlf	__div_to_l_@quot,f
  6330  00A9' 0D85'              	rlf	__div_to_l_@quot+1,f
  6331  00AA' 0D86'              	rlf	__div_to_l_@quot+2,f
  6332  00AB' 0D87'              	rlf	__div_to_l_@quot+3,f
  6333  00AC' 0B83'              	decfsz	??__div_to_l_,f
  6334  00AD' 2800'              	goto	u6725
  6335  00AE' 3001               	movlw	1
  6336  00AF' 0289'              	subwf	__div_to_l_@exp1,f
  6337  00B0'                    l579:
  6338  00B0' 0809'              	movf	__div_to_l_@exp1,w
  6339  00B1' 1D03               	btfss	3,2
  6340  00B2' 2800'              	goto	u6731
  6341  00B3' 2800'              	goto	u6730
  6342  00B4'                    u6731:
  6343  00B4' 2800'              	goto	l4339
  6344  00B5'                    u6730:
  6345  00B5'                    l4341:
  6346  00B5' 0807'              	movf	__div_to_l_@quot+3,w
  6347  00B6' 1283               	bcf	3,5	;RP0=0, select bank0
  6348  00B7' 1303               	bcf	3,6	;RP1=0, select bank0
  6349  00B8' 0083'              	movwf	?__div_to_l_+3
  6350  00B9' 0806'              	movf	__div_to_l_@quot+2,w
  6351  00BA' 0082'              	movwf	?__div_to_l_+2
  6352  00BB' 0805'              	movf	__div_to_l_@quot+1,w
  6353  00BC' 0081'              	movwf	?__div_to_l_+1
  6354  00BD' 0804'              	movf	__div_to_l_@quot,w
  6355  00BE' 0080'              	movwf	?__div_to_l_
  6356  00BF'                    l568:
  6357  00BF' 0008               	return
  6358  00C0'                    __end_of__div_to_l_:
  6359                           
  6360                           	psect	text13
  6361  0000'                    __ptext13:	
  6362 ;; *************** function ___xxtofl *****************
  6363 ;; Defined at:
  6364 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  6365 ;; Parameters:    Size  Location     Type
  6366 ;;  sign            1    wreg     unsigned char 
  6367 ;;  val             4    3[COMMON] long 
  6368 ;; Auto vars:     Size  Location     Type
  6369 ;;  sign            1    4[BANK0 ] unsigned char 
  6370 ;;  arg             4    6[BANK0 ] unsigned long 
  6371 ;;  exp             1    5[BANK0 ] unsigned char 
  6372 ;; Return value:  Size  Location     Type
  6373 ;;                  4    3[COMMON] unsigned char 
  6374 ;; Registers used:
  6375 ;;		wreg, status,2, status,0
  6376 ;; Tracked objects:
  6377 ;;		On entry : 0/0
  6378 ;;		On exit  : 0/0
  6379 ;;		Unchanged: 0/0
  6380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6381 ;;      Params:         4       0       0       0       0
  6382 ;;      Locals:         0       6       0       0       0
  6383 ;;      Temps:          0       4       0       0       0
  6384 ;;      Totals:         4      10       0       0       0
  6385 ;;Total ram usage:       14 bytes
  6386 ;; Hardware stack levels used:    1
  6387 ;; Hardware stack levels required when called:    2
  6388 ;; This function calls:
  6389 ;;		Nothing
  6390 ;; This function is called by:
  6391 ;;		_main
  6392 ;;		_sprintf
  6393 ;; This function uses a non-reentrant model
  6394 ;;
  6395                           
  6396                           
  6397                           ;psect for function ___xxtofl
  6398  0000'                    ___xxtofl:
  6399                           
  6400                           ;incstack = 0
  6401                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6402                           ;___xxtofl@sign stored from wreg
  6403  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  6404  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  6405  0002' 0084'              	movwf	___xxtofl@sign
  6406  0003'                    l4421:
  6407  0003' 0804'              	movf	___xxtofl@sign,w
  6408  0004' 1903               	btfsc	3,2
  6409  0005' 2800'              	goto	u6971
  6410  0006' 2800'              	goto	u6970
  6411  0007'                    u6971:
  6412  0007' 2800'              	goto	l4427
  6413  0008'                    u6970:
  6414  0008'                    l4423:
  6415  0008' 1F86'              	btfss	___xxtofl@val+3,7
  6416  0009' 2800'              	goto	u6981
  6417  000A' 2800'              	goto	u6980
  6418  000B'                    u6981:
  6419  000B' 2800'              	goto	l4427
  6420  000C'                    u6980:
  6421  000C'                    l4425:
  6422  000C' 0903'              	comf	___xxtofl@val,w
  6423  000D' 0086'              	movwf	___xxtofl@arg
  6424  000E' 0904'              	comf	___xxtofl@val+1,w
  6425  000F' 0087'              	movwf	___xxtofl@arg+1
  6426  0010' 0905'              	comf	___xxtofl@val+2,w
  6427  0011' 0088'              	movwf	___xxtofl@arg+2
  6428  0012' 0906'              	comf	___xxtofl@val+3,w
  6429  0013' 0089'              	movwf	___xxtofl@arg+3
  6430  0014' 0A86'              	incf	___xxtofl@arg,f
  6431  0015' 1903               	skipnz
  6432  0016' 0A87'              	incf	___xxtofl@arg+1,f
  6433  0017' 1903               	skipnz
  6434  0018' 0A88'              	incf	___xxtofl@arg+2,f
  6435  0019' 1903               	skipnz
  6436  001A' 0A89'              	incf	___xxtofl@arg+3,f
  6437  001B' 2800'              	goto	l865
  6438  001C'                    l4427:
  6439  001C' 0806'              	movf	___xxtofl@val+3,w
  6440  001D' 0089'              	movwf	___xxtofl@arg+3
  6441  001E' 0805'              	movf	___xxtofl@val+2,w
  6442  001F' 0088'              	movwf	___xxtofl@arg+2
  6443  0020' 0804'              	movf	___xxtofl@val+1,w
  6444  0021' 0087'              	movwf	___xxtofl@arg+1
  6445  0022' 0803'              	movf	___xxtofl@val,w
  6446  0023' 0086'              	movwf	___xxtofl@arg
  6447  0024'                    l865:
  6448  0024' 0806'              	movf	___xxtofl@val+3,w
  6449  0025' 0405'              	iorwf	___xxtofl@val+2,w
  6450  0026' 0404'              	iorwf	___xxtofl@val+1,w
  6451  0027' 0403'              	iorwf	___xxtofl@val,w
  6452  0028' 1D03               	skipz
  6453  0029' 2800'              	goto	u6991
  6454  002A' 2800'              	goto	u6990
  6455  002B'                    u6991:
  6456  002B' 2800'              	goto	l4433
  6457  002C'                    u6990:
  6458  002C'                    l4429:
  6459  002C' 3000               	movlw	0
  6460  002D' 0086'              	movwf	?___xxtofl+3
  6461  002E' 3000               	movlw	0
  6462  002F' 0085'              	movwf	?___xxtofl+2
  6463  0030' 3000               	movlw	0
  6464  0031' 0084'              	movwf	?___xxtofl+1
  6465  0032' 3000               	movlw	0
  6466  0033' 0083'              	movwf	?___xxtofl
  6467  0034' 2800'              	goto	l867
  6468  0035'                    l4433:
  6469  0035' 3096               	movlw	150
  6470  0036' 0080'              	movwf	??___xxtofl
  6471  0037' 0800'              	movf	??___xxtofl,w
  6472  0038' 0085'              	movwf	___xxtofl@exp
  6473  0039' 2800'              	goto	l4437
  6474  003A'                    l4435:
  6475  003A' 3001               	movlw	1
  6476  003B' 0080'              	movwf	??___xxtofl
  6477  003C' 0800'              	movf	??___xxtofl,w
  6478  003D' 0785'              	addwf	___xxtofl@exp,f
  6479  003E' 3001               	movlw	1
  6480  003F'                    u7005:
  6481  003F' 1003               	clrc
  6482  0040' 0C89'              	rrf	___xxtofl@arg+3,f
  6483  0041' 0C88'              	rrf	___xxtofl@arg+2,f
  6484  0042' 0C87'              	rrf	___xxtofl@arg+1,f
  6485  0043' 0C86'              	rrf	___xxtofl@arg,f
  6486  0044' 3EFF               	addlw	-1
  6487  0045' 1D03               	skipz
  6488  0046' 2800'              	goto	u7005
  6489  0047'                    l4437:
  6490  0047' 30FE               	movlw	254
  6491  0048' 0509'              	andwf	___xxtofl@arg+3,w
  6492  0049' 1D03               	btfss	3,2
  6493  004A' 2800'              	goto	u7011
  6494  004B' 2800'              	goto	u7010
  6495  004C'                    u7011:
  6496  004C' 2800'              	goto	l4435
  6497  004D'                    u7010:
  6498  004D' 2800'              	goto	l871
  6499  004E'                    l4439:
  6500  004E' 3001               	movlw	1
  6501  004F' 0080'              	movwf	??___xxtofl
  6502  0050' 0800'              	movf	??___xxtofl,w
  6503  0051' 0785'              	addwf	___xxtofl@exp,f
  6504  0052'                    l4441:
  6505  0052' 3001               	movlw	1
  6506  0053' 0786'              	addwf	___xxtofl@arg,f
  6507  0054' 3000               	movlw	0
  6508  0055' 1803               	skipnc
  6509  0056' 3001               	movlw	1
  6510  0057' 0787'              	addwf	___xxtofl@arg+1,f
  6511  0058' 3000               	movlw	0
  6512  0059' 1803               	skipnc
  6513  005A' 3001               	movlw	1
  6514  005B' 0788'              	addwf	___xxtofl@arg+2,f
  6515  005C' 3000               	movlw	0
  6516  005D' 1803               	skipnc
  6517  005E' 3001               	movlw	1
  6518  005F' 0789'              	addwf	___xxtofl@arg+3,f
  6519  0060'                    l4443:
  6520  0060' 3001               	movlw	1
  6521  0061'                    u7025:
  6522  0061' 1003               	clrc
  6523  0062' 0C89'              	rrf	___xxtofl@arg+3,f
  6524  0063' 0C88'              	rrf	___xxtofl@arg+2,f
  6525  0064' 0C87'              	rrf	___xxtofl@arg+1,f
  6526  0065' 0C86'              	rrf	___xxtofl@arg,f
  6527  0066' 3EFF               	addlw	-1
  6528  0067' 1D03               	skipz
  6529  0068' 2800'              	goto	u7025
  6530  0069'                    l871:
  6531  0069' 30FF               	movlw	255
  6532  006A' 0509'              	andwf	___xxtofl@arg+3,w
  6533  006B' 1D03               	btfss	3,2
  6534  006C' 2800'              	goto	u7031
  6535  006D' 2800'              	goto	u7030
  6536  006E'                    u7031:
  6537  006E' 2800'              	goto	l4439
  6538  006F'                    u7030:
  6539  006F' 2800'              	goto	l4447
  6540  0070'                    l4445:
  6541  0070' 3001               	movlw	1
  6542  0071' 0285'              	subwf	___xxtofl@exp,f
  6543  0072' 3001               	movlw	1
  6544  0073' 0080'              	movwf	??___xxtofl
  6545  0074'                    u7045:
  6546  0074' 1003               	clrc
  6547  0075' 0D86'              	rlf	___xxtofl@arg,f
  6548  0076' 0D87'              	rlf	___xxtofl@arg+1,f
  6549  0077' 0D88'              	rlf	___xxtofl@arg+2,f
  6550  0078' 0D89'              	rlf	___xxtofl@arg+3,f
  6551  0079' 0B80'              	decfsz	??___xxtofl,f
  6552  007A' 2800'              	goto	u7045
  6553  007B'                    l4447:
  6554  007B' 1B88'              	btfsc	___xxtofl@arg+2,7
  6555  007C' 2800'              	goto	u7051
  6556  007D' 2800'              	goto	u7050
  6557  007E'                    u7051:
  6558  007E' 2800'              	goto	l878
  6559  007F'                    u7050:
  6560  007F'                    l4449:
  6561  007F' 3002               	movlw	2
  6562  0080' 0205'              	subwf	___xxtofl@exp,w
  6563  0081' 1803               	skipnc
  6564  0082' 2800'              	goto	u7061
  6565  0083' 2800'              	goto	u7060
  6566  0084'                    u7061:
  6567  0084' 2800'              	goto	l4445
  6568  0085'                    u7060:
  6569  0085'                    l878:
  6570  0085' 1805'              	btfsc	___xxtofl@exp,0
  6571  0086' 2800'              	goto	u7071
  6572  0087' 2800'              	goto	u7070
  6573  0088'                    u7071:
  6574  0088' 2800'              	goto	l879
  6575  0089'                    u7070:
  6576  0089'                    l4451:
  6577  0089' 30FF               	movlw	255
  6578  008A' 0586'              	andwf	___xxtofl@arg,f
  6579  008B' 30FF               	movlw	255
  6580  008C' 0587'              	andwf	___xxtofl@arg+1,f
  6581  008D' 307F               	movlw	127
  6582  008E' 0588'              	andwf	___xxtofl@arg+2,f
  6583  008F' 30FF               	movlw	255
  6584  0090' 0589'              	andwf	___xxtofl@arg+3,f
  6585  0091'                    l879:
  6586  0091' 1003               	clrc
  6587  0092' 0C85'              	rrf	___xxtofl@exp,f
  6588  0093'                    l4453:
  6589  0093' 0805'              	movf	___xxtofl@exp,w
  6590  0094' 0080'              	movwf	??___xxtofl
  6591  0095' 0181'              	clrf	??___xxtofl+1
  6592  0096' 0182'              	clrf	??___xxtofl+2
  6593  0097' 0183'              	clrf	??___xxtofl+3
  6594  0098' 3018               	movlw	24
  6595  0099'                    u7085:
  6596  0099' 1003               	clrc
  6597  009A' 0D80'              	rlf	??___xxtofl,f
  6598  009B' 0D81'              	rlf	??___xxtofl+1,f
  6599  009C' 0D82'              	rlf	??___xxtofl+2,f
  6600  009D' 0D83'              	rlf	??___xxtofl+3,f
  6601  009E'                    u7080:
  6602  009E' 3EFF               	addlw	-1
  6603  009F' 1D03               	skipz
  6604  00A0' 2800'              	goto	u7085
  6605  00A1' 0800'              	movf	??___xxtofl,w
  6606  00A2' 0486'              	iorwf	___xxtofl@arg,f
  6607  00A3' 0801'              	movf	??___xxtofl+1,w
  6608  00A4' 0487'              	iorwf	___xxtofl@arg+1,f
  6609  00A5' 0802'              	movf	??___xxtofl+2,w
  6610  00A6' 0488'              	iorwf	___xxtofl@arg+2,f
  6611  00A7' 0803'              	movf	??___xxtofl+3,w
  6612  00A8' 0489'              	iorwf	___xxtofl@arg+3,f
  6613  00A9'                    l4455:
  6614  00A9' 0804'              	movf	___xxtofl@sign,w
  6615  00AA' 1903               	btfsc	3,2
  6616  00AB' 2800'              	goto	u7091
  6617  00AC' 2800'              	goto	u7090
  6618  00AD'                    u7091:
  6619  00AD' 2800'              	goto	l4461
  6620  00AE'                    u7090:
  6621  00AE'                    l4457:
  6622  00AE' 1F86'              	btfss	___xxtofl@val+3,7
  6623  00AF' 2800'              	goto	u7101
  6624  00B0' 2800'              	goto	u7100
  6625  00B1'                    u7101:
  6626  00B1' 2800'              	goto	l4461
  6627  00B2'                    u7100:
  6628  00B2'                    l4459:
  6629  00B2' 1789'              	bsf	___xxtofl@arg+3,7
  6630  00B3'                    l4461:
  6631  00B3' 0809'              	movf	___xxtofl@arg+3,w
  6632  00B4' 0086'              	movwf	?___xxtofl+3
  6633  00B5' 0808'              	movf	___xxtofl@arg+2,w
  6634  00B6' 0085'              	movwf	?___xxtofl+2
  6635  00B7' 0807'              	movf	___xxtofl@arg+1,w
  6636  00B8' 0084'              	movwf	?___xxtofl+1
  6637  00B9' 0806'              	movf	___xxtofl@arg,w
  6638  00BA' 0083'              	movwf	?___xxtofl
  6639  00BB'                    l867:
  6640  00BB' 0008               	return
  6641  00BC'                    __end_of___xxtofl:
  6642                           
  6643                           	psect	text14
  6644  0000'                    __ptext14:	
  6645 ;; *************** function ___wmul *****************
  6646 ;; Defined at:
  6647 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  6648 ;; Parameters:    Size  Location     Type
  6649 ;;  multiplier      2    3[COMMON] unsigned int 
  6650 ;;  multiplicand    2    5[COMMON] unsigned int 
  6651 ;; Auto vars:     Size  Location     Type
  6652 ;;  product         2    7[COMMON] unsigned int 
  6653 ;; Return value:  Size  Location     Type
  6654 ;;                  2    3[COMMON] unsigned int 
  6655 ;; Registers used:
  6656 ;;		wreg, status,2, status,0
  6657 ;; Tracked objects:
  6658 ;;		On entry : 0/0
  6659 ;;		On exit  : 0/0
  6660 ;;		Unchanged: 0/0
  6661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6662 ;;      Params:         4       0       0       0       0
  6663 ;;      Locals:         2       0       0       0       0
  6664 ;;      Temps:          0       0       0       0       0
  6665 ;;      Totals:         6       0       0       0       0
  6666 ;;Total ram usage:        6 bytes
  6667 ;; Hardware stack levels used:    1
  6668 ;; Hardware stack levels required when called:    2
  6669 ;; This function calls:
  6670 ;;		Nothing
  6671 ;; This function is called by:
  6672 ;;		_sprintf
  6673 ;; This function uses a non-reentrant model
  6674 ;;
  6675                           
  6676                           
  6677                           ;psect for function ___wmul
  6678  0000'                    ___wmul:
  6679  0000'                    l3231:	
  6680                           ;incstack = 0
  6681                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6682                           
  6683  0000' 0187'              	clrf	___wmul@product
  6684  0001' 0188'              	clrf	___wmul@product+1
  6685  0002'                    l3233:
  6686  0002' 1C03'              	btfss	___wmul@multiplier,0
  6687  0003' 2800'              	goto	u4821
  6688  0004' 2800'              	goto	u4820
  6689  0005'                    u4821:
  6690  0005' 2800'              	goto	l398
  6691  0006'                    u4820:
  6692  0006'                    l3235:
  6693  0006' 0805'              	movf	___wmul@multiplicand,w
  6694  0007' 0787'              	addwf	___wmul@product,f
  6695  0008' 1803               	skipnc
  6696  0009' 0A88'              	incf	___wmul@product+1,f
  6697  000A' 0806'              	movf	___wmul@multiplicand+1,w
  6698  000B' 0788'              	addwf	___wmul@product+1,f
  6699  000C'                    l398:
  6700  000C' 3001               	movlw	1
  6701  000D'                    u4835:
  6702  000D' 1003               	clrc
  6703  000E' 0D85'              	rlf	___wmul@multiplicand,f
  6704  000F' 0D86'              	rlf	___wmul@multiplicand+1,f
  6705  0010' 3EFF               	addlw	-1
  6706  0011' 1D03               	skipz
  6707  0012' 2800'              	goto	u4835
  6708  0013'                    l3237:
  6709  0013' 3001               	movlw	1
  6710  0014'                    u4845:
  6711  0014' 1003               	clrc
  6712  0015' 0C84'              	rrf	___wmul@multiplier+1,f
  6713  0016' 0C83'              	rrf	___wmul@multiplier,f
  6714  0017' 3EFF               	addlw	-1
  6715  0018' 1D03               	skipz
  6716  0019' 2800'              	goto	u4845
  6717  001A'                    l3239:
  6718  001A' 0803'              	movf	___wmul@multiplier,w
  6719  001B' 0404'              	iorwf	___wmul@multiplier+1,w
  6720  001C' 1D03               	btfss	3,2
  6721  001D' 2800'              	goto	u4851
  6722  001E' 2800'              	goto	u4850
  6723  001F'                    u4851:
  6724  001F' 2800'              	goto	l3233
  6725  0020'                    u4850:
  6726  0020'                    l3241:
  6727  0020' 0808'              	movf	___wmul@product+1,w
  6728  0021' 0084'              	movwf	?___wmul+1
  6729  0022' 0807'              	movf	___wmul@product,w
  6730  0023' 0083'              	movwf	?___wmul
  6731  0024'                    l400:
  6732  0024' 0008               	return
  6733  0025'                    __end_of___wmul:
  6734                           
  6735                           	psect	text15
  6736  0000'                    __ptext15:	
  6737 ;; *************** function ___llmod *****************
  6738 ;; Defined at:
  6739 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  6740 ;; Parameters:    Size  Location     Type
  6741 ;;  divisor         4    8[BANK0 ] unsigned long 
  6742 ;;  dividend        4   12[BANK0 ] unsigned long 
  6743 ;; Auto vars:     Size  Location     Type
  6744 ;;  counter         1   16[BANK0 ] unsigned char 
  6745 ;; Return value:  Size  Location     Type
  6746 ;;                  4    8[BANK0 ] unsigned long 
  6747 ;; Registers used:
  6748 ;;		wreg, status,2, status,0
  6749 ;; Tracked objects:
  6750 ;;		On entry : 0/0
  6751 ;;		On exit  : 0/0
  6752 ;;		Unchanged: 0/0
  6753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6754 ;;      Params:         0       8       0       0       0
  6755 ;;      Locals:         0       1       0       0       0
  6756 ;;      Temps:          1       0       0       0       0
  6757 ;;      Totals:         1       9       0       0       0
  6758 ;;Total ram usage:       10 bytes
  6759 ;; Hardware stack levels used:    1
  6760 ;; Hardware stack levels required when called:    2
  6761 ;; This function calls:
  6762 ;;		Nothing
  6763 ;; This function is called by:
  6764 ;;		_sprintf
  6765 ;; This function uses a non-reentrant model
  6766 ;;
  6767                           
  6768                           
  6769                           ;psect for function ___llmod
  6770  0000'                    ___llmod:
  6771  0000'                    l4401:	
  6772                           ;incstack = 0
  6773                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6774                           
  6775  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  6776  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  6777  0002' 080B'              	movf	___llmod@divisor+3,w
  6778  0003' 040A'              	iorwf	___llmod@divisor+2,w
  6779  0004' 0409'              	iorwf	___llmod@divisor+1,w
  6780  0005' 0408'              	iorwf	___llmod@divisor,w
  6781  0006' 1903               	skipnz
  6782  0007' 2800'              	goto	u6911
  6783  0008' 2800'              	goto	u6910
  6784  0009'                    u6911:
  6785  0009' 2800'              	goto	l4417
  6786  000A'                    u6910:
  6787  000A'                    l4403:
  6788  000A' 0190'              	clrf	___llmod@counter
  6789  000B' 0A90'              	incf	___llmod@counter,f
  6790  000C' 2800'              	goto	l4407
  6791  000D'                    l4405:
  6792  000D' 3001               	movlw	1
  6793  000E' 0089'              	movwf	??___llmod
  6794  000F'                    u6925:
  6795  000F' 1003               	clrc
  6796  0010' 0D88'              	rlf	___llmod@divisor,f
  6797  0011' 0D89'              	rlf	___llmod@divisor+1,f
  6798  0012' 0D8A'              	rlf	___llmod@divisor+2,f
  6799  0013' 0D8B'              	rlf	___llmod@divisor+3,f
  6800  0014' 0B89'              	decfsz	??___llmod,f
  6801  0015' 2800'              	goto	u6925
  6802  0016' 3001               	movlw	1
  6803  0017' 0089'              	movwf	??___llmod
  6804  0018' 0809'              	movf	??___llmod,w
  6805  0019' 0790'              	addwf	___llmod@counter,f
  6806  001A'                    l4407:
  6807  001A' 1F8B'              	btfss	___llmod@divisor+3,7
  6808  001B' 2800'              	goto	u6931
  6809  001C' 2800'              	goto	u6930
  6810  001D'                    u6931:
  6811  001D' 2800'              	goto	l4405
  6812  001E'                    u6930:
  6813  001E'                    l4409:
  6814  001E' 080B'              	movf	___llmod@divisor+3,w
  6815  001F' 020F'              	subwf	___llmod@dividend+3,w
  6816  0020' 1D03               	skipz
  6817  0021' 2800'              	goto	u6945
  6818  0022' 080A'              	movf	___llmod@divisor+2,w
  6819  0023' 020E'              	subwf	___llmod@dividend+2,w
  6820  0024' 1D03               	skipz
  6821  0025' 2800'              	goto	u6945
  6822  0026' 0809'              	movf	___llmod@divisor+1,w
  6823  0027' 020D'              	subwf	___llmod@dividend+1,w
  6824  0028' 1D03               	skipz
  6825  0029' 2800'              	goto	u6945
  6826  002A' 0808'              	movf	___llmod@divisor,w
  6827  002B' 020C'              	subwf	___llmod@dividend,w
  6828  002C'                    u6945:
  6829  002C' 1C03               	skipc
  6830  002D' 2800'              	goto	u6941
  6831  002E' 2800'              	goto	u6940
  6832  002F'                    u6941:
  6833  002F' 2800'              	goto	l4413
  6834  0030'                    u6940:
  6835  0030'                    l4411:
  6836  0030' 0808'              	movf	___llmod@divisor,w
  6837  0031' 028C'              	subwf	___llmod@dividend,f
  6838  0032' 0809'              	movf	___llmod@divisor+1,w
  6839  0033' 1C03               	skipc
  6840  0034' 0F09'              	incfsz	___llmod@divisor+1,w
  6841  0035' 028D'              	subwf	___llmod@dividend+1,f
  6842  0036' 080A'              	movf	___llmod@divisor+2,w
  6843  0037' 1C03               	skipc
  6844  0038' 0F0A'              	incfsz	___llmod@divisor+2,w
  6845  0039' 028E'              	subwf	___llmod@dividend+2,f
  6846  003A' 080B'              	movf	___llmod@divisor+3,w
  6847  003B' 1C03               	skipc
  6848  003C' 0F0B'              	incfsz	___llmod@divisor+3,w
  6849  003D' 028F'              	subwf	___llmod@dividend+3,f
  6850  003E'                    l4413:
  6851  003E' 3001               	movlw	1
  6852  003F'                    u6955:
  6853  003F' 1003               	clrc
  6854  0040' 0C8B'              	rrf	___llmod@divisor+3,f
  6855  0041' 0C8A'              	rrf	___llmod@divisor+2,f
  6856  0042' 0C89'              	rrf	___llmod@divisor+1,f
  6857  0043' 0C88'              	rrf	___llmod@divisor,f
  6858  0044' 3EFF               	addlw	-1
  6859  0045' 1D03               	skipz
  6860  0046' 2800'              	goto	u6955
  6861  0047'                    l4415:
  6862  0047' 3001               	movlw	1
  6863  0048' 0290'              	subwf	___llmod@counter,f
  6864  0049' 1D03               	btfss	3,2
  6865  004A' 2800'              	goto	u6961
  6866  004B' 2800'              	goto	u6960
  6867  004C'                    u6961:
  6868  004C' 2800'              	goto	l4409
  6869  004D'                    u6960:
  6870  004D'                    l4417:
  6871  004D' 080F'              	movf	___llmod@dividend+3,w
  6872  004E' 008B'              	movwf	?___llmod+3
  6873  004F' 080E'              	movf	___llmod@dividend+2,w
  6874  0050' 008A'              	movwf	?___llmod+2
  6875  0051' 080D'              	movf	___llmod@dividend+1,w
  6876  0052' 0089'              	movwf	?___llmod+1
  6877  0053' 080C'              	movf	___llmod@dividend,w
  6878  0054' 0088'              	movwf	?___llmod
  6879  0055'                    l654:
  6880  0055' 0008               	return
  6881  0056'                    __end_of___llmod:
  6882                           
  6883                           	psect	text16
  6884  0000'                    __ptext16:	
  6885 ;; *************** function ___lldiv *****************
  6886 ;; Defined at:
  6887 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  6888 ;; Parameters:    Size  Location     Type
  6889 ;;  divisor         4    0[BANK0 ] unsigned long 
  6890 ;;  dividend        4    4[BANK0 ] unsigned long 
  6891 ;; Auto vars:     Size  Location     Type
  6892 ;;  quotient        4    4[COMMON] unsigned long 
  6893 ;;  counter         1    8[COMMON] unsigned char 
  6894 ;; Return value:  Size  Location     Type
  6895 ;;                  4    0[BANK0 ] unsigned long 
  6896 ;; Registers used:
  6897 ;;		wreg, status,2, status,0
  6898 ;; Tracked objects:
  6899 ;;		On entry : 0/0
  6900 ;;		On exit  : 0/0
  6901 ;;		Unchanged: 0/0
  6902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6903 ;;      Params:         0       8       0       0       0
  6904 ;;      Locals:         5       0       0       0       0
  6905 ;;      Temps:          1       0       0       0       0
  6906 ;;      Totals:         6       8       0       0       0
  6907 ;;Total ram usage:       14 bytes
  6908 ;; Hardware stack levels used:    1
  6909 ;; Hardware stack levels required when called:    2
  6910 ;; This function calls:
  6911 ;;		Nothing
  6912 ;; This function is called by:
  6913 ;;		_sprintf
  6914 ;; This function uses a non-reentrant model
  6915 ;;
  6916                           
  6917                           
  6918                           ;psect for function ___lldiv
  6919  0000'                    ___lldiv:
  6920  0000'                    l4345:	
  6921                           ;incstack = 0
  6922                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6923                           
  6924  0000' 3000               	movlw	0
  6925  0001' 0087'              	movwf	___lldiv@quotient+3
  6926  0002' 3000               	movlw	0
  6927  0003' 0086'              	movwf	___lldiv@quotient+2
  6928  0004' 3000               	movlw	0
  6929  0005' 0085'              	movwf	___lldiv@quotient+1
  6930  0006' 3000               	movlw	0
  6931  0007' 0084'              	movwf	___lldiv@quotient
  6932  0008' 1283               	bcf	3,5	;RP0=0, select bank0
  6933  0009' 1303               	bcf	3,6	;RP1=0, select bank0
  6934  000A' 0803'              	movf	___lldiv@divisor+3,w
  6935  000B' 0402'              	iorwf	___lldiv@divisor+2,w
  6936  000C' 0401'              	iorwf	___lldiv@divisor+1,w
  6937  000D' 0400'              	iorwf	___lldiv@divisor,w
  6938  000E' 1903               	skipnz
  6939  000F' 2800'              	goto	u6741
  6940  0010' 2800'              	goto	u6740
  6941  0011'                    u6741:
  6942  0011' 2800'              	goto	l4365
  6943  0012'                    u6740:
  6944  0012'                    l4347:
  6945  0012' 0188'              	clrf	___lldiv@counter
  6946  0013' 0A88'              	incf	___lldiv@counter,f
  6947  0014' 2800'              	goto	l4351
  6948  0015'                    l4349:
  6949  0015' 3001               	movlw	1
  6950  0016' 0083'              	movwf	??___lldiv
  6951  0017'                    u6755:
  6952  0017' 1003               	clrc
  6953  0018' 0D80'              	rlf	___lldiv@divisor,f
  6954  0019' 0D81'              	rlf	___lldiv@divisor+1,f
  6955  001A' 0D82'              	rlf	___lldiv@divisor+2,f
  6956  001B' 0D83'              	rlf	___lldiv@divisor+3,f
  6957  001C' 0B83'              	decfsz	??___lldiv,f
  6958  001D' 2800'              	goto	u6755
  6959  001E' 3001               	movlw	1
  6960  001F' 0083'              	movwf	??___lldiv
  6961  0020' 0803'              	movf	??___lldiv,w
  6962  0021' 0788'              	addwf	___lldiv@counter,f
  6963  0022'                    l4351:
  6964  0022' 1F83'              	btfss	___lldiv@divisor+3,7
  6965  0023' 2800'              	goto	u6761
  6966  0024' 2800'              	goto	u6760
  6967  0025'                    u6761:
  6968  0025' 2800'              	goto	l4349
  6969  0026'                    u6760:
  6970  0026'                    l4353:
  6971  0026' 3001               	movlw	1
  6972  0027' 0083'              	movwf	??___lldiv
  6973  0028'                    u6775:
  6974  0028' 1003               	clrc
  6975  0029' 0D84'              	rlf	___lldiv@quotient,f
  6976  002A' 0D85'              	rlf	___lldiv@quotient+1,f
  6977  002B' 0D86'              	rlf	___lldiv@quotient+2,f
  6978  002C' 0D87'              	rlf	___lldiv@quotient+3,f
  6979  002D' 0B83'              	decfsz	??___lldiv,f
  6980  002E' 2800'              	goto	u6775
  6981  002F'                    l4355:
  6982  002F' 0803'              	movf	___lldiv@divisor+3,w
  6983  0030' 0207'              	subwf	___lldiv@dividend+3,w
  6984  0031' 1D03               	skipz
  6985  0032' 2800'              	goto	u6785
  6986  0033' 0802'              	movf	___lldiv@divisor+2,w
  6987  0034' 0206'              	subwf	___lldiv@dividend+2,w
  6988  0035' 1D03               	skipz
  6989  0036' 2800'              	goto	u6785
  6990  0037' 0801'              	movf	___lldiv@divisor+1,w
  6991  0038' 0205'              	subwf	___lldiv@dividend+1,w
  6992  0039' 1D03               	skipz
  6993  003A' 2800'              	goto	u6785
  6994  003B' 0800'              	movf	___lldiv@divisor,w
  6995  003C' 0204'              	subwf	___lldiv@dividend,w
  6996  003D'                    u6785:
  6997  003D' 1C03               	skipc
  6998  003E' 2800'              	goto	u6781
  6999  003F' 2800'              	goto	u6780
  7000  0040'                    u6781:
  7001  0040' 2800'              	goto	l4361
  7002  0041'                    u6780:
  7003  0041'                    l4357:
  7004  0041' 0800'              	movf	___lldiv@divisor,w
  7005  0042' 0284'              	subwf	___lldiv@dividend,f
  7006  0043' 0801'              	movf	___lldiv@divisor+1,w
  7007  0044' 1C03               	skipc
  7008  0045' 0F01'              	incfsz	___lldiv@divisor+1,w
  7009  0046' 0285'              	subwf	___lldiv@dividend+1,f
  7010  0047' 0802'              	movf	___lldiv@divisor+2,w
  7011  0048' 1C03               	skipc
  7012  0049' 0F02'              	incfsz	___lldiv@divisor+2,w
  7013  004A' 0286'              	subwf	___lldiv@dividend+2,f
  7014  004B' 0803'              	movf	___lldiv@divisor+3,w
  7015  004C' 1C03               	skipc
  7016  004D' 0F03'              	incfsz	___lldiv@divisor+3,w
  7017  004E' 0287'              	subwf	___lldiv@dividend+3,f
  7018  004F'                    l4359:
  7019  004F' 1404'              	bsf	___lldiv@quotient,0
  7020  0050'                    l4361:
  7021  0050' 3001               	movlw	1
  7022  0051'                    u6795:
  7023  0051' 1003               	clrc
  7024  0052' 0C83'              	rrf	___lldiv@divisor+3,f
  7025  0053' 0C82'              	rrf	___lldiv@divisor+2,f
  7026  0054' 0C81'              	rrf	___lldiv@divisor+1,f
  7027  0055' 0C80'              	rrf	___lldiv@divisor,f
  7028  0056' 3EFF               	addlw	-1
  7029  0057' 1D03               	skipz
  7030  0058' 2800'              	goto	u6795
  7031  0059'                    l4363:
  7032  0059' 3001               	movlw	1
  7033  005A' 0288'              	subwf	___lldiv@counter,f
  7034  005B' 1D03               	btfss	3,2
  7035  005C' 2800'              	goto	u6801
  7036  005D' 2800'              	goto	u6800
  7037  005E'                    u6801:
  7038  005E' 2800'              	goto	l4353
  7039  005F'                    u6800:
  7040  005F'                    l4365:
  7041  005F' 0807'              	movf	___lldiv@quotient+3,w
  7042  0060' 0083'              	movwf	?___lldiv+3
  7043  0061' 0806'              	movf	___lldiv@quotient+2,w
  7044  0062' 0082'              	movwf	?___lldiv+2
  7045  0063' 0805'              	movf	___lldiv@quotient+1,w
  7046  0064' 0081'              	movwf	?___lldiv+1
  7047  0065' 0804'              	movf	___lldiv@quotient,w
  7048  0066' 0080'              	movwf	?___lldiv
  7049  0067'                    l434:
  7050  0067' 0008               	return
  7051  0068'                    __end_of___lldiv:
  7052                           
  7053                           	psect	text17
  7054  0000'                    __ptext17:	
  7055 ;; *************** function ___fltol *****************
  7056 ;; Defined at:
  7057 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  7058 ;; Parameters:    Size  Location     Type
  7059 ;;  f1              4   55[BANK0 ] unsigned long 
  7060 ;; Auto vars:     Size  Location     Type
  7061 ;;  exp1            1   65[BANK0 ] unsigned char 
  7062 ;;  sign1           1   64[BANK0 ] unsigned char 
  7063 ;; Return value:  Size  Location     Type
  7064 ;;                  4   55[BANK0 ] long 
  7065 ;; Registers used:
  7066 ;;		wreg, status,2, status,0
  7067 ;; Tracked objects:
  7068 ;;		On entry : 0/0
  7069 ;;		On exit  : 0/0
  7070 ;;		Unchanged: 0/0
  7071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7072 ;;      Params:         0       4       0       0       0
  7073 ;;      Locals:         0       2       0       0       0
  7074 ;;      Temps:          0       5       0       0       0
  7075 ;;      Totals:         0      11       0       0       0
  7076 ;;Total ram usage:       11 bytes
  7077 ;; Hardware stack levels used:    1
  7078 ;; Hardware stack levels required when called:    2
  7079 ;; This function calls:
  7080 ;;		Nothing
  7081 ;; This function is called by:
  7082 ;;		_sprintf
  7083 ;; This function uses a non-reentrant model
  7084 ;;
  7085                           
  7086                           
  7087                           ;psect for function ___fltol
  7088  0000'                    ___fltol:
  7089  0000'                    l3309:	
  7090                           ;incstack = 0
  7091                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7092                           
  7093  0000' 1003               	clrc
  7094  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  7095  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  7096  0003' 0D39'              	rlf	___fltol@f1+2,w
  7097  0004' 0D3A'              	rlf	___fltol@f1+3,w
  7098  0005' 00BB'              	movwf	??___fltol
  7099  0006' 083B'              	movf	??___fltol,w
  7100  0007' 00C1'              	movwf	___fltol@exp1
  7101  0008' 0841'              	movf	___fltol@exp1,w
  7102  0009' 1D03               	btfss	3,2
  7103  000A' 2800'              	goto	u5041
  7104  000B' 2800'              	goto	u5040
  7105  000C'                    u5041:
  7106  000C' 2800'              	goto	l3315
  7107  000D'                    u5040:
  7108  000D'                    l3311:
  7109  000D' 3000               	movlw	0
  7110  000E' 00BA'              	movwf	?___fltol+3
  7111  000F' 3000               	movlw	0
  7112  0010' 00B9'              	movwf	?___fltol+2
  7113  0011' 3000               	movlw	0
  7114  0012' 00B8'              	movwf	?___fltol+1
  7115  0013' 3000               	movlw	0
  7116  0014' 00B7'              	movwf	?___fltol
  7117  0015' 2800'              	goto	l601
  7118  0016'                    l3315:
  7119  0016' 0837'              	movf	___fltol@f1,w
  7120  0017' 00BB'              	movwf	??___fltol
  7121  0018' 0838'              	movf	___fltol@f1+1,w
  7122  0019' 00BC'              	movwf	??___fltol+1
  7123  001A' 0839'              	movf	___fltol@f1+2,w
  7124  001B' 00BD'              	movwf	??___fltol+2
  7125  001C' 083A'              	movf	___fltol@f1+3,w
  7126  001D' 00BE'              	movwf	??___fltol+3
  7127  001E' 301F               	movlw	31
  7128  001F'                    u5055:
  7129  001F' 1003               	clrc
  7130  0020' 0CBE'              	rrf	??___fltol+3,f
  7131  0021' 0CBD'              	rrf	??___fltol+2,f
  7132  0022' 0CBC'              	rrf	??___fltol+1,f
  7133  0023' 0CBB'              	rrf	??___fltol,f
  7134  0024'                    u5050:
  7135  0024' 3EFF               	addlw	-1
  7136  0025' 1D03               	skipz
  7137  0026' 2800'              	goto	u5055
  7138  0027' 083B'              	movf	??___fltol,w
  7139  0028' 00BF'              	movwf	??___fltol+4
  7140  0029' 083F'              	movf	??___fltol+4,w
  7141  002A' 00C0'              	movwf	___fltol@sign1
  7142  002B'                    l3317:
  7143  002B' 17B9'              	bsf	___fltol@f1+2,7
  7144  002C'                    l3319:
  7145  002C' 30FF               	movlw	255
  7146  002D' 05B7'              	andwf	___fltol@f1,f
  7147  002E' 30FF               	movlw	255
  7148  002F' 05B8'              	andwf	___fltol@f1+1,f
  7149  0030' 30FF               	movlw	255
  7150  0031' 05B9'              	andwf	___fltol@f1+2,f
  7151  0032' 3000               	movlw	0
  7152  0033' 05BA'              	andwf	___fltol@f1+3,f
  7153  0034'                    l3321:
  7154  0034' 3096               	movlw	150
  7155  0035' 02C1'              	subwf	___fltol@exp1,f
  7156  0036'                    l3323:
  7157  0036' 1FC1'              	btfss	___fltol@exp1,7
  7158  0037' 2800'              	goto	u5061
  7159  0038' 2800'              	goto	u5060
  7160  0039'                    u5061:
  7161  0039' 2800'              	goto	l3333
  7162  003A'                    u5060:
  7163  003A'                    l3325:
  7164  003A' 0841'              	movf	___fltol@exp1,w
  7165  003B' 3A80               	xorlw	128
  7166  003C' 3E97               	addlw	151
  7167  003D' 1803               	skipnc
  7168  003E' 2800'              	goto	u5071
  7169  003F' 2800'              	goto	u5070
  7170  0040'                    u5071:
  7171  0040' 2800'              	goto	l3331
  7172  0041'                    u5070:
  7173  0041' 2800'              	goto	l3311
  7174  0042'                    l3331:
  7175  0042' 3001               	movlw	1
  7176  0043'                    u5085:
  7177  0043' 1003               	clrc
  7178  0044' 0CBA'              	rrf	___fltol@f1+3,f
  7179  0045' 0CB9'              	rrf	___fltol@f1+2,f
  7180  0046' 0CB8'              	rrf	___fltol@f1+1,f
  7181  0047' 0CB7'              	rrf	___fltol@f1,f
  7182  0048' 3EFF               	addlw	-1
  7183  0049' 1D03               	skipz
  7184  004A' 2800'              	goto	u5085
  7185  004B' 3001               	movlw	1
  7186  004C' 00BB'              	movwf	??___fltol
  7187  004D' 083B'              	movf	??___fltol,w
  7188  004E' 07C1'              	addwf	___fltol@exp1,f
  7189  004F' 1D03               	btfss	3,2
  7190  0050' 2800'              	goto	u5091
  7191  0051' 2800'              	goto	u5090
  7192  0052'                    u5091:
  7193  0052' 2800'              	goto	l3331
  7194  0053'                    u5090:
  7195  0053' 2800'              	goto	l3341
  7196  0054'                    l3333:
  7197  0054' 3020               	movlw	32
  7198  0055' 0241'              	subwf	___fltol@exp1,w
  7199  0056' 1C03               	skipc
  7200  0057' 2800'              	goto	u5101
  7201  0058' 2800'              	goto	u5100
  7202  0059'                    u5101:
  7203  0059' 2800'              	goto	l608
  7204  005A'                    u5100:
  7205  005A' 2800'              	goto	l3311
  7206  005B'                    l3339:
  7207  005B' 3001               	movlw	1
  7208  005C' 00BB'              	movwf	??___fltol
  7209  005D'                    u5115:
  7210  005D' 1003               	clrc
  7211  005E' 0DB7'              	rlf	___fltol@f1,f
  7212  005F' 0DB8'              	rlf	___fltol@f1+1,f
  7213  0060' 0DB9'              	rlf	___fltol@f1+2,f
  7214  0061' 0DBA'              	rlf	___fltol@f1+3,f
  7215  0062' 0BBB'              	decfsz	??___fltol,f
  7216  0063' 2800'              	goto	u5115
  7217  0064' 3001               	movlw	1
  7218  0065' 02C1'              	subwf	___fltol@exp1,f
  7219  0066'                    l608:
  7220  0066' 0841'              	movf	___fltol@exp1,w
  7221  0067' 1D03               	btfss	3,2
  7222  0068' 2800'              	goto	u5121
  7223  0069' 2800'              	goto	u5120
  7224  006A'                    u5121:
  7225  006A' 2800'              	goto	l3339
  7226  006B'                    u5120:
  7227  006B'                    l3341:
  7228  006B' 0840'              	movf	___fltol@sign1,w
  7229  006C' 1903               	btfsc	3,2
  7230  006D' 2800'              	goto	u5131
  7231  006E' 2800'              	goto	u5130
  7232  006F'                    u5131:
  7233  006F' 2800'              	goto	l611
  7234  0070'                    u5130:
  7235  0070'                    l3343:
  7236  0070' 09B7'              	comf	___fltol@f1,f
  7237  0071' 09B8'              	comf	___fltol@f1+1,f
  7238  0072' 09B9'              	comf	___fltol@f1+2,f
  7239  0073' 09BA'              	comf	___fltol@f1+3,f
  7240  0074' 0AB7'              	incf	___fltol@f1,f
  7241  0075' 1903               	skipnz
  7242  0076' 0AB8'              	incf	___fltol@f1+1,f
  7243  0077' 1903               	skipnz
  7244  0078' 0AB9'              	incf	___fltol@f1+2,f
  7245  0079' 1903               	skipnz
  7246  007A' 0ABA'              	incf	___fltol@f1+3,f
  7247  007B'                    l611:
  7248  007B'                    l601:
  7249  007B' 0008               	return
  7250  007C'                    __end_of___fltol:
  7251                           
  7252                           	psect	text18
  7253  0000'                    __ptext18:	
  7254 ;; *************** function ___flsub *****************
  7255 ;; Defined at:
  7256 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7257 ;; Parameters:    Size  Location     Type
  7258 ;;  a               4    0[BANK1 ] long 
  7259 ;;  b               4    4[BANK1 ] long 
  7260 ;; Auto vars:     Size  Location     Type
  7261 ;;		None
  7262 ;; Return value:  Size  Location     Type
  7263 ;;                  4    0[BANK1 ] long 
  7264 ;; Registers used:
  7265 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7266 ;; Tracked objects:
  7267 ;;		On entry : 0/0
  7268 ;;		On exit  : 0/0
  7269 ;;		Unchanged: 0/0
  7270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7271 ;;      Params:         0       0       8       0       0
  7272 ;;      Locals:         0       0       0       0       0
  7273 ;;      Temps:          0       0       0       0       0
  7274 ;;      Totals:         0       0       8       0       0
  7275 ;;Total ram usage:        8 bytes
  7276 ;; Hardware stack levels used:    1
  7277 ;; Hardware stack levels required when called:    3
  7278 ;; This function calls:
  7279 ;;		___fladd
  7280 ;; This function is called by:
  7281 ;;		_sprintf
  7282 ;; This function uses a non-reentrant model
  7283 ;;
  7284                           
  7285                           
  7286                           ;psect for function ___flsub
  7287  0000'                    ___flsub:
  7288  0000'                    l3365:	
  7289                           ;incstack = 0
  7290                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7291                           
  7292  0000' 3080               	movlw	128
  7293  0001' 1683               	bsf	3,5	;RP0=1, select bank1
  7294  0002' 1303               	bcf	3,6	;RP1=0, select bank1
  7295  0003' 0680'              	xorwf	(___flsub@a+3)^(0+128),f
  7296  0004'                    l3367:
  7297  0004' 0800'              	movf	(___flsub@b+3)^(0+128),w
  7298  0005' 1283               	bcf	3,5	;RP0=0, select bank0
  7299  0006' 1303               	bcf	3,6	;RP1=0, select bank0
  7300  0007' 00BB'              	movwf	___fladd@b+3
  7301  0008' 1683               	bsf	3,5	;RP0=1, select bank1
  7302  0009' 1303               	bcf	3,6	;RP1=0, select bank1
  7303  000A' 0800'              	movf	(___flsub@b+2)^(0+128),w
  7304  000B' 1283               	bcf	3,5	;RP0=0, select bank0
  7305  000C' 1303               	bcf	3,6	;RP1=0, select bank0
  7306  000D' 00BA'              	movwf	___fladd@b+2
  7307  000E' 1683               	bsf	3,5	;RP0=1, select bank1
  7308  000F' 1303               	bcf	3,6	;RP1=0, select bank1
  7309  0010' 0800'              	movf	(___flsub@b+1)^(0+128),w
  7310  0011' 1283               	bcf	3,5	;RP0=0, select bank0
  7311  0012' 1303               	bcf	3,6	;RP1=0, select bank0
  7312  0013' 00B9'              	movwf	___fladd@b+1
  7313  0014' 1683               	bsf	3,5	;RP0=1, select bank1
  7314  0015' 1303               	bcf	3,6	;RP1=0, select bank1
  7315  0016' 0800'              	movf	___flsub@b^(0+128),w
  7316  0017' 1283               	bcf	3,5	;RP0=0, select bank0
  7317  0018' 1303               	bcf	3,6	;RP1=0, select bank0
  7318  0019' 00B8'              	movwf	___fladd@b
  7319  001A' 1683               	bsf	3,5	;RP0=1, select bank1
  7320  001B' 1303               	bcf	3,6	;RP1=0, select bank1
  7321  001C' 0800'              	movf	(___flsub@a+3)^(0+128),w
  7322  001D' 1283               	bcf	3,5	;RP0=0, select bank0
  7323  001E' 1303               	bcf	3,6	;RP1=0, select bank0
  7324  001F' 00BF'              	movwf	___fladd@a+3
  7325  0020' 1683               	bsf	3,5	;RP0=1, select bank1
  7326  0021' 1303               	bcf	3,6	;RP1=0, select bank1
  7327  0022' 0800'              	movf	(___flsub@a+2)^(0+128),w
  7328  0023' 1283               	bcf	3,5	;RP0=0, select bank0
  7329  0024' 1303               	bcf	3,6	;RP1=0, select bank0
  7330  0025' 00BE'              	movwf	___fladd@a+2
  7331  0026' 1683               	bsf	3,5	;RP0=1, select bank1
  7332  0027' 1303               	bcf	3,6	;RP1=0, select bank1
  7333  0028' 0800'              	movf	(___flsub@a+1)^(0+128),w
  7334  0029' 1283               	bcf	3,5	;RP0=0, select bank0
  7335  002A' 1303               	bcf	3,6	;RP1=0, select bank0
  7336  002B' 00BD'              	movwf	___fladd@a+1
  7337  002C' 1683               	bsf	3,5	;RP0=1, select bank1
  7338  002D' 1303               	bcf	3,6	;RP1=0, select bank1
  7339  002E' 0800'              	movf	___flsub@a^(0+128),w
  7340  002F' 1283               	bcf	3,5	;RP0=0, select bank0
  7341  0030' 1303               	bcf	3,6	;RP1=0, select bank0
  7342  0031' 00BC'              	movwf	___fladd@a
  7343  0032' 120A' 118A' 2000' 120A' 118A' 	fcall	___fladd
  7344  0037' 1283               	bcf	3,5	;RP0=0, select bank0
  7345  0038' 1303               	bcf	3,6	;RP1=0, select bank0
  7346  0039' 083B'              	movf	?___fladd+3,w
  7347  003A' 1683               	bsf	3,5	;RP0=1, select bank1
  7348  003B' 1303               	bcf	3,6	;RP1=0, select bank1
  7349  003C' 0080'              	movwf	(?___flsub+3)^(0+128)
  7350  003D' 1283               	bcf	3,5	;RP0=0, select bank0
  7351  003E' 1303               	bcf	3,6	;RP1=0, select bank0
  7352  003F' 083A'              	movf	?___fladd+2,w
  7353  0040' 1683               	bsf	3,5	;RP0=1, select bank1
  7354  0041' 1303               	bcf	3,6	;RP1=0, select bank1
  7355  0042' 0080'              	movwf	(?___flsub+2)^(0+128)
  7356  0043' 1283               	bcf	3,5	;RP0=0, select bank0
  7357  0044' 1303               	bcf	3,6	;RP1=0, select bank0
  7358  0045' 0839'              	movf	?___fladd+1,w
  7359  0046' 1683               	bsf	3,5	;RP0=1, select bank1
  7360  0047' 1303               	bcf	3,6	;RP1=0, select bank1
  7361  0048' 0080'              	movwf	(?___flsub+1)^(0+128)
  7362  0049' 1283               	bcf	3,5	;RP0=0, select bank0
  7363  004A' 1303               	bcf	3,6	;RP1=0, select bank0
  7364  004B' 0838'              	movf	?___fladd,w
  7365  004C' 1683               	bsf	3,5	;RP0=1, select bank1
  7366  004D' 1303               	bcf	3,6	;RP1=0, select bank1
  7367  004E' 0080'              	movwf	?___flsub^(0+128)
  7368  004F'                    l771:
  7369  004F' 0008               	return
  7370  0050'                    __end_of___flsub:
  7371                           
  7372                           	psect	text19
  7373  0000'                    __ptext19:	
  7374 ;; *************** function ___fladd *****************
  7375 ;; Defined at:
  7376 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7377 ;; Parameters:    Size  Location     Type
  7378 ;;  b               4   56[BANK0 ] long 
  7379 ;;  a               4   60[BANK0 ] long 
  7380 ;; Auto vars:     Size  Location     Type
  7381 ;;  grs             1   75[BANK0 ] unsigned char 
  7382 ;;  bexp            1   74[BANK0 ] unsigned char 
  7383 ;;  aexp            1   73[BANK0 ] unsigned char 
  7384 ;;  signs           1   72[BANK0 ] unsigned char 
  7385 ;; Return value:  Size  Location     Type
  7386 ;;                  4   56[BANK0 ] unsigned char 
  7387 ;; Registers used:
  7388 ;;		wreg, status,2, status,0, btemp+1
  7389 ;; Tracked objects:
  7390 ;;		On entry : 0/0
  7391 ;;		On exit  : 0/0
  7392 ;;		Unchanged: 0/0
  7393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7394 ;;      Params:         0       8       0       0       0
  7395 ;;      Locals:         0       4       0       0       0
  7396 ;;      Temps:          0       8       0       0       0
  7397 ;;      Totals:         0      20       0       0       0
  7398 ;;Total ram usage:       20 bytes
  7399 ;; Hardware stack levels used:    1
  7400 ;; Hardware stack levels required when called:    2
  7401 ;; This function calls:
  7402 ;;		Nothing
  7403 ;; This function is called by:
  7404 ;;		_sprintf
  7405 ;;		___flsub
  7406 ;; This function uses a non-reentrant model
  7407 ;;
  7408                           
  7409                           
  7410                           ;psect for function ___fladd
  7411  0000'                    ___fladd:
  7412  0000'                    l2703:	
  7413                           ;incstack = 0
  7414                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7415                           
  7416  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  7417  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  7418  0002' 083B'              	movf	___fladd@b+3,w
  7419  0003' 3980               	andlw	128
  7420  0004' 00C0'              	movwf	??___fladd
  7421  0005' 0840'              	movf	??___fladd,w
  7422  0006' 00C8'              	movwf	___fladd@signs
  7423  0007'                    l2705:
  7424  0007' 083B'              	movf	___fladd@b+3,w
  7425  0008' 00C0'              	movwf	??___fladd
  7426  0009' 0740'              	addwf	??___fladd,w
  7427  000A' 00C1'              	movwf	??___fladd+1
  7428  000B' 0841'              	movf	??___fladd+1,w
  7429  000C' 00CA'              	movwf	___fladd@bexp
  7430  000D'                    l2707:
  7431  000D' 1FBA'              	btfss	___fladd@b+2,7
  7432  000E' 2800'              	goto	u3461
  7433  000F' 2800'              	goto	u3460
  7434  0010'                    u3461:
  7435  0010' 2800'              	goto	l2711
  7436  0011'                    u3460:
  7437  0011'                    l2709:
  7438  0011' 144A'              	bsf	___fladd@bexp,0
  7439  0012'                    l2711:
  7440  0012' 084A'              	movf	___fladd@bexp,w
  7441  0013' 1903               	btfsc	3,2
  7442  0014' 2800'              	goto	u3471
  7443  0015' 2800'              	goto	u3470
  7444  0016'                    u3471:
  7445  0016' 2800'              	goto	l2721
  7446  0017'                    u3470:
  7447  0017'                    l2713:
  7448  0017' 0A4A'              	incf	___fladd@bexp,w
  7449  0018' 1D03               	btfss	3,2
  7450  0019' 2800'              	goto	u3481
  7451  001A' 2800'              	goto	u3480
  7452  001B'                    u3481:
  7453  001B' 2800'              	goto	l2717
  7454  001C'                    u3480:
  7455  001C'                    l2715:
  7456  001C' 3000               	movlw	0
  7457  001D' 00BB'              	movwf	___fladd@b+3
  7458  001E' 3000               	movlw	0
  7459  001F' 00BA'              	movwf	___fladd@b+2
  7460  0020' 3000               	movlw	0
  7461  0021' 00B9'              	movwf	___fladd@b+1
  7462  0022' 3000               	movlw	0
  7463  0023' 00B8'              	movwf	___fladd@b
  7464  0024'                    l2717:
  7465  0024' 17BA'              	bsf	___fladd@b+2,7
  7466  0025'                    l2719:
  7467  0025' 01BB'              	clrf	___fladd@b+3
  7468  0026' 2800'              	goto	l2723
  7469  0027'                    l2721:
  7470  0027' 3000               	movlw	0
  7471  0028' 00BB'              	movwf	___fladd@b+3
  7472  0029' 3000               	movlw	0
  7473  002A' 00BA'              	movwf	___fladd@b+2
  7474  002B' 3000               	movlw	0
  7475  002C' 00B9'              	movwf	___fladd@b+1
  7476  002D' 3000               	movlw	0
  7477  002E' 00B8'              	movwf	___fladd@b
  7478  002F'                    l2723:
  7479  002F' 083F'              	movf	___fladd@a+3,w
  7480  0030' 3980               	andlw	128
  7481  0031' 00C0'              	movwf	??___fladd
  7482  0032' 0840'              	movf	??___fladd,w
  7483  0033' 00C9'              	movwf	___fladd@aexp
  7484  0034'                    l2725:
  7485  0034' 0849'              	movf	___fladd@aexp,w
  7486  0035' 0648'              	xorwf	___fladd@signs,w
  7487  0036' 1903               	skipnz
  7488  0037' 2800'              	goto	u3491
  7489  0038' 2800'              	goto	u3490
  7490  0039'                    u3491:
  7491  0039' 2800'              	goto	l2729
  7492  003A'                    u3490:
  7493  003A'                    l2727:
  7494  003A' 1748'              	bsf	___fladd@signs,6
  7495  003B'                    l2729:
  7496  003B' 083F'              	movf	___fladd@a+3,w
  7497  003C' 00C0'              	movwf	??___fladd
  7498  003D' 0740'              	addwf	??___fladd,w
  7499  003E' 00C1'              	movwf	??___fladd+1
  7500  003F' 0841'              	movf	??___fladd+1,w
  7501  0040' 00C9'              	movwf	___fladd@aexp
  7502  0041'                    l2731:
  7503  0041' 1FBE'              	btfss	___fladd@a+2,7
  7504  0042' 2800'              	goto	u3501
  7505  0043' 2800'              	goto	u3500
  7506  0044'                    u3501:
  7507  0044' 2800'              	goto	l2735
  7508  0045'                    u3500:
  7509  0045'                    l2733:
  7510  0045' 1449'              	bsf	___fladd@aexp,0
  7511  0046'                    l2735:
  7512  0046' 0849'              	movf	___fladd@aexp,w
  7513  0047' 1903               	btfsc	3,2
  7514  0048' 2800'              	goto	u3511
  7515  0049' 2800'              	goto	u3510
  7516  004A'                    u3511:
  7517  004A' 2800'              	goto	l2745
  7518  004B'                    u3510:
  7519  004B'                    l2737:
  7520  004B' 0A49'              	incf	___fladd@aexp,w
  7521  004C' 1D03               	btfss	3,2
  7522  004D' 2800'              	goto	u3521
  7523  004E' 2800'              	goto	u3520
  7524  004F'                    u3521:
  7525  004F' 2800'              	goto	l2741
  7526  0050'                    u3520:
  7527  0050'                    l2739:
  7528  0050' 3000               	movlw	0
  7529  0051' 00BF'              	movwf	___fladd@a+3
  7530  0052' 3000               	movlw	0
  7531  0053' 00BE'              	movwf	___fladd@a+2
  7532  0054' 3000               	movlw	0
  7533  0055' 00BD'              	movwf	___fladd@a+1
  7534  0056' 3000               	movlw	0
  7535  0057' 00BC'              	movwf	___fladd@a
  7536  0058'                    l2741:
  7537  0058' 17BE'              	bsf	___fladd@a+2,7
  7538  0059'                    l2743:
  7539  0059' 01BF'              	clrf	___fladd@a+3
  7540  005A' 2800'              	goto	l725
  7541  005B'                    l2745:
  7542  005B' 3000               	movlw	0
  7543  005C' 00BF'              	movwf	___fladd@a+3
  7544  005D' 3000               	movlw	0
  7545  005E' 00BE'              	movwf	___fladd@a+2
  7546  005F' 3000               	movlw	0
  7547  0060' 00BD'              	movwf	___fladd@a+1
  7548  0061' 3000               	movlw	0
  7549  0062' 00BC'              	movwf	___fladd@a
  7550  0063'                    l725:
  7551  0063' 084A'              	movf	___fladd@bexp,w
  7552  0064' 0249'              	subwf	___fladd@aexp,w
  7553  0065' 1803               	skipnc
  7554  0066' 2800'              	goto	u3531
  7555  0067' 2800'              	goto	u3530
  7556  0068'                    u3531:
  7557  0068' 2800'              	goto	l2781
  7558  0069'                    u3530:
  7559  0069'                    l2747:
  7560  0069' 1F48'              	btfss	___fladd@signs,6
  7561  006A' 2800'              	goto	u3541
  7562  006B' 2800'              	goto	u3540
  7563  006C'                    u3541:
  7564  006C' 2800'              	goto	l2751
  7565  006D'                    u3540:
  7566  006D'                    l2749:
  7567  006D' 3080               	movlw	128
  7568  006E' 00C0'              	movwf	??___fladd
  7569  006F' 0840'              	movf	??___fladd,w
  7570  0070' 06C8'              	xorwf	___fladd@signs,f
  7571  0071'                    l2751:
  7572  0071' 084A'              	movf	___fladd@bexp,w
  7573  0072' 00C0'              	movwf	??___fladd
  7574  0073' 0840'              	movf	??___fladd,w
  7575  0074' 00CB'              	movwf	___fladd@grs
  7576  0075'                    l2753:
  7577  0075' 0849'              	movf	___fladd@aexp,w
  7578  0076' 00C0'              	movwf	??___fladd
  7579  0077' 0840'              	movf	??___fladd,w
  7580  0078' 00CA'              	movwf	___fladd@bexp
  7581  0079'                    l2755:
  7582  0079' 084B'              	movf	___fladd@grs,w
  7583  007A' 00C0'              	movwf	??___fladd
  7584  007B' 0840'              	movf	??___fladd,w
  7585  007C' 00C9'              	movwf	___fladd@aexp
  7586  007D'                    l2757:
  7587  007D' 0838'              	movf	___fladd@b,w
  7588  007E' 00C0'              	movwf	??___fladd
  7589  007F' 0840'              	movf	??___fladd,w
  7590  0080' 00CB'              	movwf	___fladd@grs
  7591  0081'                    l2759:
  7592  0081' 083C'              	movf	___fladd@a,w
  7593  0082' 00C0'              	movwf	??___fladd
  7594  0083' 0840'              	movf	??___fladd,w
  7595  0084' 00B8'              	movwf	___fladd@b
  7596  0085'                    l2761:
  7597  0085' 084B'              	movf	___fladd@grs,w
  7598  0086' 00C0'              	movwf	??___fladd
  7599  0087' 0840'              	movf	??___fladd,w
  7600  0088' 00BC'              	movwf	___fladd@a
  7601  0089'                    l2763:
  7602  0089' 0839'              	movf	___fladd@b+1,w
  7603  008A' 00C0'              	movwf	??___fladd
  7604  008B' 0840'              	movf	??___fladd,w
  7605  008C' 00CB'              	movwf	___fladd@grs
  7606  008D'                    l2765:
  7607  008D' 083D'              	movf	___fladd@a+1,w
  7608  008E' 00C0'              	movwf	??___fladd
  7609  008F' 0840'              	movf	??___fladd,w
  7610  0090' 00B9'              	movwf	___fladd@b+1
  7611  0091'                    l2767:
  7612  0091' 084B'              	movf	___fladd@grs,w
  7613  0092' 00C0'              	movwf	??___fladd
  7614  0093' 0840'              	movf	??___fladd,w
  7615  0094' 00BD'              	movwf	___fladd@a+1
  7616  0095'                    l2769:
  7617  0095' 083A'              	movf	___fladd@b+2,w
  7618  0096' 00C0'              	movwf	??___fladd
  7619  0097' 0840'              	movf	??___fladd,w
  7620  0098' 00CB'              	movwf	___fladd@grs
  7621  0099'                    l2771:
  7622  0099' 083E'              	movf	___fladd@a+2,w
  7623  009A' 00C0'              	movwf	??___fladd
  7624  009B' 0840'              	movf	??___fladd,w
  7625  009C' 00BA'              	movwf	___fladd@b+2
  7626  009D'                    l2773:
  7627  009D' 084B'              	movf	___fladd@grs,w
  7628  009E' 00C0'              	movwf	??___fladd
  7629  009F' 0840'              	movf	??___fladd,w
  7630  00A0' 00BE'              	movwf	___fladd@a+2
  7631  00A1'                    l2775:
  7632  00A1' 083B'              	movf	___fladd@b+3,w
  7633  00A2' 00C0'              	movwf	??___fladd
  7634  00A3' 0840'              	movf	??___fladd,w
  7635  00A4' 00CB'              	movwf	___fladd@grs
  7636  00A5'                    l2777:
  7637  00A5' 083F'              	movf	___fladd@a+3,w
  7638  00A6' 00C0'              	movwf	??___fladd
  7639  00A7' 0840'              	movf	??___fladd,w
  7640  00A8' 00BB'              	movwf	___fladd@b+3
  7641  00A9'                    l2779:
  7642  00A9' 084B'              	movf	___fladd@grs,w
  7643  00AA' 00C0'              	movwf	??___fladd
  7644  00AB' 0840'              	movf	??___fladd,w
  7645  00AC' 00BF'              	movwf	___fladd@a+3
  7646  00AD'                    l2781:
  7647  00AD' 01CB'              	clrf	___fladd@grs
  7648  00AE'                    l2783:
  7649  00AE' 0849'              	movf	___fladd@aexp,w
  7650  00AF' 00C0'              	movwf	??___fladd
  7651  00B0' 01C1'              	clrf	??___fladd+1
  7652  00B1' 0841'              	movf	??___fladd+1,w
  7653  00B2' 00C3'              	movwf	??___fladd+3
  7654  00B3' 084A'              	movf	___fladd@bexp,w
  7655  00B4' 0240'              	subwf	??___fladd,w
  7656  00B5' 00C2'              	movwf	??___fladd+2
  7657  00B6' 1C03               	skipc
  7658  00B7' 03C3'              	decf	??___fladd+3,f
  7659  00B8' 0843'              	movf	??___fladd+3,w
  7660  00B9' 3A80               	xorlw	128
  7661  00BA' 00FF               	movwf	btemp+1
  7662  00BB' 3080               	movlw	128
  7663  00BC' 027F               	subwf	btemp+1,w
  7664  00BD' 1D03               	skipz
  7665  00BE' 2800'              	goto	u3555
  7666  00BF' 301A               	movlw	26
  7667  00C0' 0242'              	subwf	??___fladd+2,w
  7668  00C1'                    u3555:
  7669  00C1' 1C03               	skipc
  7670  00C2' 2800'              	goto	u3551
  7671  00C3' 2800'              	goto	u3550
  7672  00C4'                    u3551:
  7673  00C4' 2800'              	goto	l2799
  7674  00C5'                    u3550:
  7675  00C5'                    l2785:
  7676  00C5' 1283               	bcf	3,5	;RP0=0, select bank0
  7677  00C6' 1303               	bcf	3,6	;RP1=0, select bank0
  7678  00C7' 083B'              	movf	___fladd@b+3,w
  7679  00C8' 043A'              	iorwf	___fladd@b+2,w
  7680  00C9' 0439'              	iorwf	___fladd@b+1,w
  7681  00CA' 0438'              	iorwf	___fladd@b,w
  7682  00CB' 1D03               	skipz
  7683  00CC' 2800'              	goto	u3561
  7684  00CD' 2800'              	goto	u3560
  7685  00CE'                    u3561:
  7686  00CE' 3001               	movlw	1
  7687  00CF' 2800'              	goto	u3570
  7688  00D0'                    u3560:
  7689  00D0' 3000               	movlw	0
  7690  00D1'                    u3570:
  7691  00D1' 00C0'              	movwf	??___fladd
  7692  00D2' 0840'              	movf	??___fladd,w
  7693  00D3' 00CB'              	movwf	___fladd@grs
  7694  00D4' 3000               	movlw	0
  7695  00D5' 00BB'              	movwf	___fladd@b+3
  7696  00D6' 3000               	movlw	0
  7697  00D7' 00BA'              	movwf	___fladd@b+2
  7698  00D8' 3000               	movlw	0
  7699  00D9' 00B9'              	movwf	___fladd@b+1
  7700  00DA' 3000               	movlw	0
  7701  00DB' 00B8'              	movwf	___fladd@b
  7702  00DC' 0849'              	movf	___fladd@aexp,w
  7703  00DD' 00C0'              	movwf	??___fladd
  7704  00DE' 0840'              	movf	??___fladd,w
  7705  00DF' 00CA'              	movwf	___fladd@bexp
  7706  00E0' 2800'              	goto	l729
  7707  00E1'                    l731:
  7708  00E1' 1C4B'              	btfss	___fladd@grs,0
  7709  00E2' 2800'              	goto	u3581
  7710  00E3' 2800'              	goto	u3580
  7711  00E4'                    u3581:
  7712  00E4' 2800'              	goto	l2789
  7713  00E5'                    u3580:
  7714  00E5'                    l2787:
  7715  00E5' 084B'              	movf	___fladd@grs,w
  7716  00E6' 00C0'              	movwf	??___fladd
  7717  00E7' 1003               	clrc
  7718  00E8' 0C40'              	rrf	??___fladd,w
  7719  00E9' 3801               	iorlw	1
  7720  00EA' 00C1'              	movwf	??___fladd+1
  7721  00EB' 0841'              	movf	??___fladd+1,w
  7722  00EC' 00CB'              	movwf	___fladd@grs
  7723  00ED' 2800'              	goto	l2791
  7724  00EE'                    l2789:
  7725  00EE' 1003               	clrc
  7726  00EF' 0CCB'              	rrf	___fladd@grs,f
  7727  00F0'                    l2791:
  7728  00F0' 1C38'              	btfss	___fladd@b,0
  7729  00F1' 2800'              	goto	u3591
  7730  00F2' 2800'              	goto	u3590
  7731  00F3'                    u3591:
  7732  00F3' 2800'              	goto	l2795
  7733  00F4'                    u3590:
  7734  00F4'                    l2793:
  7735  00F4' 17CB'              	bsf	___fladd@grs,7
  7736  00F5'                    l2795:
  7737  00F5' 3001               	movlw	1
  7738  00F6' 00C0'              	movwf	??___fladd
  7739  00F7'                    u3605:
  7740  00F7' 0D3B'              	rlf	___fladd@b+3,w
  7741  00F8' 0CBB'              	rrf	___fladd@b+3,f
  7742  00F9' 0CBA'              	rrf	___fladd@b+2,f
  7743  00FA' 0CB9'              	rrf	___fladd@b+1,f
  7744  00FB' 0CB8'              	rrf	___fladd@b,f
  7745  00FC' 0B80'              	decfsz	??___fladd& (0+127),f
  7746  00FD' 2800'              	goto	u3605
  7747  00FE'                    l2797:
  7748  00FE' 3001               	movlw	1
  7749  00FF' 00C0'              	movwf	??___fladd
  7750  0100' 0840'              	movf	??___fladd,w
  7751  0101' 07CA'              	addwf	___fladd@bexp,f
  7752  0102'                    l2799:
  7753  0102' 1283               	bcf	3,5	;RP0=0, select bank0
  7754  0103' 1303               	bcf	3,6	;RP1=0, select bank0
  7755  0104' 0849'              	movf	___fladd@aexp,w
  7756  0105' 024A'              	subwf	___fladd@bexp,w
  7757  0106' 1C03               	skipc
  7758  0107' 2800'              	goto	u3611
  7759  0108' 2800'              	goto	u3610
  7760  0109'                    u3611:
  7761  0109' 2800'              	goto	l731
  7762  010A'                    u3610:
  7763  010A'                    l729:
  7764  010A' 1B48'              	btfsc	___fladd@signs,6
  7765  010B' 2800'              	goto	u3621
  7766  010C' 2800'              	goto	u3620
  7767  010D'                    u3621:
  7768  010D' 2800'              	goto	l2825
  7769  010E'                    u3620:
  7770  010E'                    l2801:
  7771  010E' 084A'              	movf	___fladd@bexp,w
  7772  010F' 1D03               	btfss	3,2
  7773  0110' 2800'              	goto	u3631
  7774  0111' 2800'              	goto	u3630
  7775  0112'                    u3631:
  7776  0112' 2800'              	goto	l2807
  7777  0113'                    u3630:
  7778  0113'                    l2803:
  7779  0113' 3000               	movlw	0
  7780  0114' 00BB'              	movwf	?___fladd+3
  7781  0115' 3000               	movlw	0
  7782  0116' 00BA'              	movwf	?___fladd+2
  7783  0117' 3000               	movlw	0
  7784  0118' 00B9'              	movwf	?___fladd+1
  7785  0119' 3000               	movlw	0
  7786  011A' 00B8'              	movwf	?___fladd
  7787  011B' 2800'              	goto	l738
  7788  011C'                    l2807:
  7789  011C' 083C'              	movf	___fladd@a,w
  7790  011D' 07B8'              	addwf	___fladd@b,f
  7791  011E' 083D'              	movf	___fladd@a+1,w
  7792  011F' 1103               	clrz
  7793  0120' 1803               	skipnc
  7794  0121' 3E01               	addlw	1
  7795  0122' 1903               	skipnz
  7796  0123' 2800'              	goto	u3641
  7797  0124' 07B9'              	addwf	___fladd@b+1,f
  7798  0125'                    u3641:
  7799  0125' 083E'              	movf	___fladd@a+2,w
  7800  0126' 1103               	clrz
  7801  0127' 1803               	skipnc
  7802  0128' 3E01               	addlw	1
  7803  0129' 1903               	skipnz
  7804  012A' 2800'              	goto	u3642
  7805  012B' 07BA'              	addwf	___fladd@b+2,f
  7806  012C'                    u3642:
  7807  012C' 083F'              	movf	___fladd@a+3,w
  7808  012D' 1103               	clrz
  7809  012E' 1803               	skipnc
  7810  012F' 3E01               	addlw	1
  7811  0130' 1903               	skipnz
  7812  0131' 2800'              	goto	u3643
  7813  0132' 07BB'              	addwf	___fladd@b+3,f
  7814  0133'                    u3643:
  7815  0133'                    l2809:
  7816  0133' 1C3B'              	btfss	___fladd@b+3,0
  7817  0134' 2800'              	goto	u3651
  7818  0135' 2800'              	goto	u3650
  7819  0136'                    u3651:
  7820  0136' 2800'              	goto	l2859
  7821  0137'                    u3650:
  7822  0137'                    l2811:
  7823  0137' 1C4B'              	btfss	___fladd@grs,0
  7824  0138' 2800'              	goto	u3661
  7825  0139' 2800'              	goto	u3660
  7826  013A'                    u3661:
  7827  013A' 2800'              	goto	l2815
  7828  013B'                    u3660:
  7829  013B'                    l2813:
  7830  013B' 084B'              	movf	___fladd@grs,w
  7831  013C' 00C0'              	movwf	??___fladd
  7832  013D' 1003               	clrc
  7833  013E' 0C40'              	rrf	??___fladd,w
  7834  013F' 3801               	iorlw	1
  7835  0140' 00C1'              	movwf	??___fladd+1
  7836  0141' 0841'              	movf	??___fladd+1,w
  7837  0142' 00CB'              	movwf	___fladd@grs
  7838  0143' 2800'              	goto	l2817
  7839  0144'                    l2815:
  7840  0144' 1003               	clrc
  7841  0145' 0CCB'              	rrf	___fladd@grs,f
  7842  0146'                    l2817:
  7843  0146' 1C38'              	btfss	___fladd@b,0
  7844  0147' 2800'              	goto	u3671
  7845  0148' 2800'              	goto	u3670
  7846  0149'                    u3671:
  7847  0149' 2800'              	goto	l2821
  7848  014A'                    u3670:
  7849  014A'                    l2819:
  7850  014A' 17CB'              	bsf	___fladd@grs,7
  7851  014B'                    l2821:
  7852  014B' 3001               	movlw	1
  7853  014C' 00C0'              	movwf	??___fladd
  7854  014D'                    u3685:
  7855  014D' 0D3B'              	rlf	___fladd@b+3,w
  7856  014E' 0CBB'              	rrf	___fladd@b+3,f
  7857  014F' 0CBA'              	rrf	___fladd@b+2,f
  7858  0150' 0CB9'              	rrf	___fladd@b+1,f
  7859  0151' 0CB8'              	rrf	___fladd@b,f
  7860  0152' 0B80'              	decfsz	??___fladd& (0+127),f
  7861  0153' 2800'              	goto	u3685
  7862  0154'                    l2823:
  7863  0154' 3001               	movlw	1
  7864  0155' 00C0'              	movwf	??___fladd
  7865  0156' 0840'              	movf	??___fladd,w
  7866  0157' 07CA'              	addwf	___fladd@bexp,f
  7867  0158' 2800'              	goto	l2859
  7868  0159'                    l2825:
  7869  0159' 083B'              	movf	___fladd@b+3,w
  7870  015A' 3A80               	xorlw	128
  7871  015B' 00FF               	movwf	btemp+1
  7872  015C' 083F'              	movf	___fladd@a+3,w
  7873  015D' 3A80               	xorlw	128
  7874  015E' 027F               	subwf	btemp+1,w
  7875  015F' 1D03               	skipz
  7876  0160' 2800'              	goto	u3693
  7877  0161' 083E'              	movf	___fladd@a+2,w
  7878  0162' 023A'              	subwf	___fladd@b+2,w
  7879  0163' 1D03               	skipz
  7880  0164' 2800'              	goto	u3693
  7881  0165' 083D'              	movf	___fladd@a+1,w
  7882  0166' 0239'              	subwf	___fladd@b+1,w
  7883  0167' 1D03               	skipz
  7884  0168' 2800'              	goto	u3693
  7885  0169' 083C'              	movf	___fladd@a,w
  7886  016A' 0238'              	subwf	___fladd@b,w
  7887  016B'                    u3693:
  7888  016B' 1803               	skipnc
  7889  016C' 2800'              	goto	u3691
  7890  016D' 2800'              	goto	u3690
  7891  016E'                    u3691:
  7892  016E' 2800'              	goto	l2835
  7893  016F'                    u3690:
  7894  016F'                    l2827:
  7895  016F' 30FF               	movlw	255
  7896  0170' 00C0'              	movwf	??___fladd
  7897  0171' 30FF               	movlw	255
  7898  0172' 00C1'              	movwf	??___fladd+1
  7899  0173' 30FF               	movlw	255
  7900  0174' 00C2'              	movwf	??___fladd+2
  7901  0175' 30FF               	movlw	255
  7902  0176' 00C3'              	movwf	??___fladd+3
  7903  0177' 083C'              	movf	___fladd@a,w
  7904  0178' 00C4'              	movwf	??___fladd+4
  7905  0179' 083D'              	movf	___fladd@a+1,w
  7906  017A' 00C5'              	movwf	??___fladd+5
  7907  017B' 083E'              	movf	___fladd@a+2,w
  7908  017C' 00C6'              	movwf	??___fladd+6
  7909  017D' 083F'              	movf	___fladd@a+3,w
  7910  017E' 00C7'              	movwf	??___fladd+7
  7911  017F' 0838'              	movf	___fladd@b,w
  7912  0180' 02C4'              	subwf	??___fladd+4,f
  7913  0181' 0839'              	movf	___fladd@b+1,w
  7914  0182' 1C03               	skipc
  7915  0183' 0F39'              	incfsz	___fladd@b+1,w
  7916  0184' 2800'              	goto	u3701
  7917  0185' 2800'              	goto	u3702
  7918  0186'                    u3701:
  7919  0186' 02C5'              	subwf	??___fladd+5,f
  7920  0187'                    u3702:
  7921  0187' 083A'              	movf	___fladd@b+2,w
  7922  0188' 1C03               	skipc
  7923  0189' 0F3A'              	incfsz	___fladd@b+2,w
  7924  018A' 2800'              	goto	u3703
  7925  018B' 2800'              	goto	u3704
  7926  018C'                    u3703:
  7927  018C' 02C6'              	subwf	??___fladd+6,f
  7928  018D'                    u3704:
  7929  018D' 083B'              	movf	___fladd@b+3,w
  7930  018E' 1C03               	skipc
  7931  018F' 0F3B'              	incfsz	___fladd@b+3,w
  7932  0190' 2800'              	goto	u3705
  7933  0191' 2800'              	goto	u3706
  7934  0192'                    u3705:
  7935  0192' 02C7'              	subwf	??___fladd+7,f
  7936  0193'                    u3706:
  7937  0193' 0844'              	movf	??___fladd+4,w
  7938  0194' 07C0'              	addwf	??___fladd,f
  7939  0195' 0845'              	movf	??___fladd+5,w
  7940  0196' 1803               	skipnc
  7941  0197' 0F45'              	incfsz	??___fladd+5,w
  7942  0198' 2800'              	goto	u3710
  7943  0199' 2800'              	goto	u3711
  7944  019A'                    u3710:
  7945  019A' 07C1'              	addwf	??___fladd+1,f
  7946  019B'                    u3711:
  7947  019B' 0846'              	movf	??___fladd+6,w
  7948  019C' 1803               	skipnc
  7949  019D' 0F46'              	incfsz	??___fladd+6,w
  7950  019E' 2800'              	goto	u3712
  7951  019F' 2800'              	goto	u3713
  7952  01A0'                    u3712:
  7953  01A0' 07C2'              	addwf	??___fladd+2,f
  7954  01A1'                    u3713:
  7955  01A1' 0847'              	movf	??___fladd+7,w
  7956  01A2' 1803               	skipnc
  7957  01A3' 0A47'              	incf	??___fladd+7,w
  7958  01A4' 07C3'              	addwf	??___fladd+3,f
  7959  01A5' 0843'              	movf	??___fladd+3,w
  7960  01A6' 00BB'              	movwf	___fladd@b+3
  7961  01A7' 0842'              	movf	??___fladd+2,w
  7962  01A8' 00BA'              	movwf	___fladd@b+2
  7963  01A9' 0841'              	movf	??___fladd+1,w
  7964  01AA' 00B9'              	movwf	___fladd@b+1
  7965  01AB' 0840'              	movf	??___fladd,w
  7966  01AC' 00B8'              	movwf	___fladd@b
  7967  01AD'                    l2829:
  7968  01AD' 3080               	movlw	128
  7969  01AE' 00C0'              	movwf	??___fladd
  7970  01AF' 0840'              	movf	??___fladd,w
  7971  01B0' 06C8'              	xorwf	___fladd@signs,f
  7972  01B1' 09CB'              	comf	___fladd@grs,f
  7973  01B2' 0ACB'              	incf	___fladd@grs,f
  7974  01B3'                    l2831:
  7975  01B3' 084B'              	movf	___fladd@grs,w
  7976  01B4' 1D03               	btfss	3,2
  7977  01B5' 2800'              	goto	u3721
  7978  01B6' 2800'              	goto	u3720
  7979  01B7'                    u3721:
  7980  01B7' 2800'              	goto	l746
  7981  01B8'                    u3720:
  7982  01B8'                    l2833:
  7983  01B8' 3001               	movlw	1
  7984  01B9' 07B8'              	addwf	___fladd@b,f
  7985  01BA' 3000               	movlw	0
  7986  01BB' 1803               	skipnc
  7987  01BC' 3001               	movlw	1
  7988  01BD' 07B9'              	addwf	___fladd@b+1,f
  7989  01BE' 3000               	movlw	0
  7990  01BF' 1803               	skipnc
  7991  01C0' 3001               	movlw	1
  7992  01C1' 07BA'              	addwf	___fladd@b+2,f
  7993  01C2' 3000               	movlw	0
  7994  01C3' 1803               	skipnc
  7995  01C4' 3001               	movlw	1
  7996  01C5' 07BB'              	addwf	___fladd@b+3,f
  7997  01C6' 2800'              	goto	l746
  7998  01C7'                    l2835:
  7999  01C7' 083C'              	movf	___fladd@a,w
  8000  01C8' 02B8'              	subwf	___fladd@b,f
  8001  01C9' 083D'              	movf	___fladd@a+1,w
  8002  01CA' 1C03               	skipc
  8003  01CB' 0F3D'              	incfsz	___fladd@a+1,w
  8004  01CC' 02B9'              	subwf	___fladd@b+1,f
  8005  01CD' 083E'              	movf	___fladd@a+2,w
  8006  01CE' 1C03               	skipc
  8007  01CF' 0F3E'              	incfsz	___fladd@a+2,w
  8008  01D0' 02BA'              	subwf	___fladd@b+2,f
  8009  01D1' 083F'              	movf	___fladd@a+3,w
  8010  01D2' 1C03               	skipc
  8011  01D3' 0F3F'              	incfsz	___fladd@a+3,w
  8012  01D4' 02BB'              	subwf	___fladd@b+3,f
  8013  01D5'                    l746:
  8014  01D5' 083B'              	movf	___fladd@b+3,w
  8015  01D6' 043A'              	iorwf	___fladd@b+2,w
  8016  01D7' 0439'              	iorwf	___fladd@b+1,w
  8017  01D8' 0438'              	iorwf	___fladd@b,w
  8018  01D9' 1D03               	skipz
  8019  01DA' 2800'              	goto	u3731
  8020  01DB' 2800'              	goto	u3730
  8021  01DC'                    u3731:
  8022  01DC' 2800'              	goto	l2857
  8023  01DD'                    u3730:
  8024  01DD'                    l2837:
  8025  01DD' 084B'              	movf	___fladd@grs,w
  8026  01DE' 1D03               	btfss	3,2
  8027  01DF' 2800'              	goto	u3741
  8028  01E0' 2800'              	goto	u3740
  8029  01E1'                    u3741:
  8030  01E1' 2800'              	goto	l2857
  8031  01E2'                    u3740:
  8032  01E2'                    l2839:
  8033  01E2' 3000               	movlw	0
  8034  01E3' 00BB'              	movwf	?___fladd+3
  8035  01E4' 3000               	movlw	0
  8036  01E5' 00BA'              	movwf	?___fladd+2
  8037  01E6' 3000               	movlw	0
  8038  01E7' 00B9'              	movwf	?___fladd+1
  8039  01E8' 3000               	movlw	0
  8040  01E9' 00B8'              	movwf	?___fladd
  8041  01EA' 2800'              	goto	l738
  8042  01EB'                    l2843:
  8043  01EB' 3001               	movlw	1
  8044  01EC' 00C0'              	movwf	??___fladd
  8045  01ED'                    u3755:
  8046  01ED' 1003               	clrc
  8047  01EE' 0DB8'              	rlf	___fladd@b,f
  8048  01EF' 0DB9'              	rlf	___fladd@b+1,f
  8049  01F0' 0DBA'              	rlf	___fladd@b+2,f
  8050  01F1' 0DBB'              	rlf	___fladd@b+3,f
  8051  01F2' 0BC0'              	decfsz	??___fladd,f
  8052  01F3' 2800'              	goto	u3755
  8053  01F4'                    l2845:
  8054  01F4' 1FCB'              	btfss	___fladd@grs,7
  8055  01F5' 2800'              	goto	u3761
  8056  01F6' 2800'              	goto	u3760
  8057  01F7'                    u3761:
  8058  01F7' 2800'              	goto	l750
  8059  01F8'                    u3760:
  8060  01F8'                    l2847:
  8061  01F8' 1438'              	bsf	___fladd@b,0
  8062  01F9'                    l750:
  8063  01F9' 1C4B'              	btfss	___fladd@grs,0
  8064  01FA' 2800'              	goto	u3771
  8065  01FB' 2800'              	goto	u3770
  8066  01FC'                    u3771:
  8067  01FC' 2800'              	goto	l2851
  8068  01FD'                    u3770:
  8069  01FD'                    l2849:
  8070  01FD' 1403               	setc
  8071  01FE' 0DCB'              	rlf	___fladd@grs,f
  8072  01FF' 2800'              	goto	l2853
  8073  0200'                    l2851:
  8074  0200' 1003               	clrc
  8075  0201' 0DCB'              	rlf	___fladd@grs,f
  8076  0202'                    l2853:
  8077  0202' 084A'              	movf	___fladd@bexp,w
  8078  0203' 1903               	btfsc	3,2
  8079  0204' 2800'              	goto	u3781
  8080  0205' 2800'              	goto	u3780
  8081  0206'                    u3781:
  8082  0206' 2800'              	goto	l2857
  8083  0207'                    u3780:
  8084  0207'                    l2855:
  8085  0207' 3001               	movlw	1
  8086  0208' 02CA'              	subwf	___fladd@bexp,f
  8087  0209'                    l2857:
  8088  0209' 1FBA'              	btfss	___fladd@b+2,7
  8089  020A' 2800'              	goto	u3791
  8090  020B' 2800'              	goto	u3790
  8091  020C'                    u3791:
  8092  020C' 2800'              	goto	l2843
  8093  020D'                    u3790:
  8094  020D'                    l2859:
  8095  020D' 01C9'              	clrf	___fladd@aexp
  8096  020E'                    l2861:
  8097  020E' 1FCB'              	btfss	___fladd@grs,7
  8098  020F' 2800'              	goto	u3801
  8099  0210' 2800'              	goto	u3800
  8100  0211'                    u3801:
  8101  0211' 2800'              	goto	l2869
  8102  0212'                    u3800:
  8103  0212'                    l2863:
  8104  0212' 084B'              	movf	___fladd@grs,w
  8105  0213' 397F               	andlw	127
  8106  0214' 1903               	btfsc	3,2
  8107  0215' 2800'              	goto	u3811
  8108  0216' 2800'              	goto	u3810
  8109  0217'                    u3811:
  8110  0217' 2800'              	goto	l756
  8111  0218'                    u3810:
  8112  0218'                    l2865:
  8113  0218' 01C9'              	clrf	___fladd@aexp
  8114  0219' 0AC9'              	incf	___fladd@aexp,f
  8115  021A' 2800'              	goto	l2869
  8116  021B'                    l756:
  8117  021B' 1C38'              	btfss	___fladd@b,0
  8118  021C' 2800'              	goto	u3821
  8119  021D' 2800'              	goto	u3820
  8120  021E'                    u3821:
  8121  021E' 2800'              	goto	l2869
  8122  021F'                    u3820:
  8123  021F' 2800'              	goto	l2865
  8124  0220'                    l2869:
  8125  0220' 0849'              	movf	___fladd@aexp,w
  8126  0221' 1903               	btfsc	3,2
  8127  0222' 2800'              	goto	u3831
  8128  0223' 2800'              	goto	u3830
  8129  0224'                    u3831:
  8130  0224' 2800'              	goto	l759
  8131  0225'                    u3830:
  8132  0225'                    l2871:
  8133  0225' 3001               	movlw	1
  8134  0226' 07B8'              	addwf	___fladd@b,f
  8135  0227' 3000               	movlw	0
  8136  0228' 1803               	skipnc
  8137  0229' 3001               	movlw	1
  8138  022A' 07B9'              	addwf	___fladd@b+1,f
  8139  022B' 3000               	movlw	0
  8140  022C' 1803               	skipnc
  8141  022D' 3001               	movlw	1
  8142  022E' 07BA'              	addwf	___fladd@b+2,f
  8143  022F' 3000               	movlw	0
  8144  0230' 1803               	skipnc
  8145  0231' 3001               	movlw	1
  8146  0232' 07BB'              	addwf	___fladd@b+3,f
  8147  0233'                    l2873:
  8148  0233' 1C3B'              	btfss	___fladd@b+3,0
  8149  0234' 2800'              	goto	u3841
  8150  0235' 2800'              	goto	u3840
  8151  0236'                    u3841:
  8152  0236' 2800'              	goto	l759
  8153  0237'                    u3840:
  8154  0237'                    l2875:
  8155  0237' 0838'              	movf	___fladd@b,w
  8156  0238' 00C0'              	movwf	??___fladd
  8157  0239' 0839'              	movf	___fladd@b+1,w
  8158  023A' 00C1'              	movwf	??___fladd+1
  8159  023B' 083A'              	movf	___fladd@b+2,w
  8160  023C' 00C2'              	movwf	??___fladd+2
  8161  023D' 083B'              	movf	___fladd@b+3,w
  8162  023E' 00C3'              	movwf	??___fladd+3
  8163  023F' 3001               	movlw	1
  8164  0240' 00C4'              	movwf	??___fladd+4
  8165  0241'                    u3855:
  8166  0241' 0D43'              	rlf	??___fladd+3,w
  8167  0242' 0CC3'              	rrf	??___fladd+3,f
  8168  0243' 0CC2'              	rrf	??___fladd+2,f
  8169  0244' 0CC1'              	rrf	??___fladd+1,f
  8170  0245' 0CC0'              	rrf	??___fladd,f
  8171  0246'                    u3850:
  8172  0246' 0BC4'              	decfsz	??___fladd+4,f
  8173  0247' 2800'              	goto	u3855
  8174  0248' 0843'              	movf	??___fladd+3,w
  8175  0249' 00BB'              	movwf	___fladd@b+3
  8176  024A' 0842'              	movf	??___fladd+2,w
  8177  024B' 00BA'              	movwf	___fladd@b+2
  8178  024C' 0841'              	movf	??___fladd+1,w
  8179  024D' 00B9'              	movwf	___fladd@b+1
  8180  024E' 0840'              	movf	??___fladd,w
  8181  024F' 00B8'              	movwf	___fladd@b
  8182  0250' 0A4A'              	incf	___fladd@bexp,w
  8183  0251' 1903               	btfsc	3,2
  8184  0252' 2800'              	goto	u3861
  8185  0253' 2800'              	goto	u3860
  8186  0254'                    u3861:
  8187  0254' 2800'              	goto	l759
  8188  0255'                    u3860:
  8189  0255'                    l2877:
  8190  0255' 3001               	movlw	1
  8191  0256' 00C0'              	movwf	??___fladd
  8192  0257' 0840'              	movf	??___fladd,w
  8193  0258' 07CA'              	addwf	___fladd@bexp,f
  8194  0259'                    l759:
  8195  0259' 0A4A'              	incf	___fladd@bexp,w
  8196  025A' 1903               	btfsc	3,2
  8197  025B' 2800'              	goto	u3871
  8198  025C' 2800'              	goto	u3870
  8199  025D'                    u3871:
  8200  025D' 2800'              	goto	l2881
  8201  025E'                    u3870:
  8202  025E'                    l2879:
  8203  025E' 084A'              	movf	___fladd@bexp,w
  8204  025F' 1D03               	btfss	3,2
  8205  0260' 2800'              	goto	u3881
  8206  0261' 2800'              	goto	u3880
  8207  0262'                    u3881:
  8208  0262' 2800'              	goto	l2887
  8209  0263'                    u3880:
  8210  0263'                    l2881:
  8211  0263' 3000               	movlw	0
  8212  0264' 00BB'              	movwf	___fladd@b+3
  8213  0265' 3000               	movlw	0
  8214  0266' 00BA'              	movwf	___fladd@b+2
  8215  0267' 3000               	movlw	0
  8216  0268' 00B9'              	movwf	___fladd@b+1
  8217  0269' 3000               	movlw	0
  8218  026A' 00B8'              	movwf	___fladd@b
  8219  026B'                    l2883:
  8220  026B' 084A'              	movf	___fladd@bexp,w
  8221  026C' 1D03               	btfss	3,2
  8222  026D' 2800'              	goto	u3891
  8223  026E' 2800'              	goto	u3890
  8224  026F'                    u3891:
  8225  026F' 2800'              	goto	l2887
  8226  0270'                    u3890:
  8227  0270'                    l2885:
  8228  0270' 01C8'              	clrf	___fladd@signs
  8229  0271'                    l2887:
  8230  0271' 1C4A'              	btfss	___fladd@bexp,0
  8231  0272' 2800'              	goto	u3901
  8232  0273' 2800'              	goto	u3900
  8233  0274'                    u3901:
  8234  0274' 2800'              	goto	l2891
  8235  0275'                    u3900:
  8236  0275'                    l2889:
  8237  0275' 17BA'              	bsf	___fladd@b+2,7
  8238  0276' 2800'              	goto	l767
  8239  0277'                    l2891:
  8240  0277' 307F               	movlw	127
  8241  0278' 00C0'              	movwf	??___fladd
  8242  0279' 0840'              	movf	??___fladd,w
  8243  027A' 05BA'              	andwf	___fladd@b+2,f
  8244  027B'                    l767:
  8245  027B' 084A'              	movf	___fladd@bexp,w
  8246  027C' 00C0'              	movwf	??___fladd
  8247  027D' 1003               	clrc
  8248  027E' 0C40'              	rrf	??___fladd,w
  8249  027F' 00C1'              	movwf	??___fladd+1
  8250  0280' 0841'              	movf	??___fladd+1,w
  8251  0281' 00BB'              	movwf	___fladd@b+3
  8252  0282'                    l2893:
  8253  0282' 1FC8'              	btfss	___fladd@signs,7
  8254  0283' 2800'              	goto	u3911
  8255  0284' 2800'              	goto	u3910
  8256  0285'                    u3911:
  8257  0285' 2800'              	goto	l768
  8258  0286'                    u3910:
  8259  0286'                    l2895:
  8260  0286' 17BB'              	bsf	___fladd@b+3,7
  8261  0287'                    l768:
  8262  0287'                    l738:
  8263  0287' 0008               	return
  8264  0288'                    __end_of___fladd:
  8265                           
  8266                           	psect	text20
  8267  0000'                    __ptext20:	
  8268 ;; *************** function ___flneg *****************
  8269 ;; Defined at:
  8270 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  8271 ;; Parameters:    Size  Location     Type
  8272 ;;  f1              4    3[COMMON] unsigned char 
  8273 ;; Auto vars:     Size  Location     Type
  8274 ;;		None
  8275 ;; Return value:  Size  Location     Type
  8276 ;;                  4    3[COMMON] unsigned char 
  8277 ;; Registers used:
  8278 ;;		wreg
  8279 ;; Tracked objects:
  8280 ;;		On entry : 0/0
  8281 ;;		On exit  : 0/0
  8282 ;;		Unchanged: 0/0
  8283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8284 ;;      Params:         4       0       0       0       0
  8285 ;;      Locals:         0       0       0       0       0
  8286 ;;      Temps:          0       0       0       0       0
  8287 ;;      Totals:         4       0       0       0       0
  8288 ;;Total ram usage:        4 bytes
  8289 ;; Hardware stack levels used:    1
  8290 ;; Hardware stack levels required when called:    2
  8291 ;; This function calls:
  8292 ;;		Nothing
  8293 ;; This function is called by:
  8294 ;;		_sprintf
  8295 ;; This function uses a non-reentrant model
  8296 ;;
  8297                           
  8298                           
  8299                           ;psect for function ___flneg
  8300  0000'                    ___flneg:
  8301  0000'                    l3301:	
  8302                           ;incstack = 0
  8303                           ; Regs used in ___flneg: [wreg]
  8304                           
  8305  0000' 0806'              	movf	___flneg@f1+3,w
  8306  0001' 0405'              	iorwf	___flneg@f1+2,w
  8307  0002' 0404'              	iorwf	___flneg@f1+1,w
  8308  0003' 0403'              	iorwf	___flneg@f1,w
  8309  0004' 1903               	skipnz
  8310  0005' 2800'              	goto	u5031
  8311  0006' 2800'              	goto	u5030
  8312  0007'                    u5031:
  8313  0007' 2800'              	goto	l3305
  8314  0008'                    u5030:
  8315  0008'                    l3303:
  8316  0008' 3080               	movlw	128
  8317  0009' 0686'              	xorwf	___flneg@f1+3,f
  8318  000A'                    l3305:
  8319  000A'                    l597:
  8320  000A' 0008               	return
  8321  000B'                    __end_of___flneg:
  8322                           
  8323                           	psect	text21
  8324  0000'                    __ptext21:	
  8325 ;; *************** function ___flge *****************
  8326 ;; Defined at:
  8327 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  8328 ;; Parameters:    Size  Location     Type
  8329 ;;  ff1             4    0[BANK0 ] unsigned char 
  8330 ;;  ff2             4    4[BANK0 ] unsigned char 
  8331 ;; Auto vars:     Size  Location     Type
  8332 ;;		None
  8333 ;; Return value:  Size  Location     Type
  8334 ;;		None               void
  8335 ;; Registers used:
  8336 ;;		wreg, status,2, status,0
  8337 ;; Tracked objects:
  8338 ;;		On entry : 0/0
  8339 ;;		On exit  : 0/0
  8340 ;;		Unchanged: 0/0
  8341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8342 ;;      Params:         0       8       0       0       0
  8343 ;;      Locals:         0       0       0       0       0
  8344 ;;      Temps:          4       0       0       0       0
  8345 ;;      Totals:         4       8       0       0       0
  8346 ;;Total ram usage:       12 bytes
  8347 ;; Hardware stack levels used:    1
  8348 ;; Hardware stack levels required when called:    2
  8349 ;; This function calls:
  8350 ;;		Nothing
  8351 ;; This function is called by:
  8352 ;;		_sprintf
  8353 ;; This function uses a non-reentrant model
  8354 ;;
  8355                           
  8356                           
  8357                           ;psect for function ___flge
  8358  0000'                    ___flge:
  8359  0000'                    l4381:	
  8360                           ;incstack = 0
  8361                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8362                           
  8363  0000' 3000               	movlw	0
  8364  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  8365  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  8366  0003' 0500'              	andwf	___flge@ff1,w
  8367  0004' 0083'              	movwf	??___flge
  8368  0005' 3000               	movlw	0
  8369  0006' 0501'              	andwf	___flge@ff1+1,w
  8370  0007' 0084'              	movwf	??___flge+1
  8371  0008' 3080               	movlw	128
  8372  0009' 0502'              	andwf	___flge@ff1+2,w
  8373  000A' 0085'              	movwf	??___flge+2
  8374  000B' 307F               	movlw	127
  8375  000C' 0503'              	andwf	___flge@ff1+3,w
  8376  000D' 0086'              	movwf	??___flge+3
  8377  000E' 0806'              	movf	??___flge+3,w
  8378  000F' 0405'              	iorwf	??___flge+2,w
  8379  0010' 0404'              	iorwf	??___flge+1,w
  8380  0011' 0403'              	iorwf	??___flge,w
  8381  0012' 1D03               	skipz
  8382  0013' 2800'              	goto	u6841
  8383  0014' 2800'              	goto	u6840
  8384  0015'                    u6841:
  8385  0015' 2800'              	goto	l589
  8386  0016'                    u6840:
  8387  0016'                    l4383:
  8388  0016' 3000               	movlw	0
  8389  0017' 0083'              	movwf	___flge@ff1+3
  8390  0018' 3000               	movlw	0
  8391  0019' 0082'              	movwf	___flge@ff1+2
  8392  001A' 3000               	movlw	0
  8393  001B' 0081'              	movwf	___flge@ff1+1
  8394  001C' 3000               	movlw	0
  8395  001D' 0080'              	movwf	___flge@ff1
  8396  001E'                    l589:
  8397  001E' 3000               	movlw	0
  8398  001F' 0504'              	andwf	___flge@ff2,w
  8399  0020' 0083'              	movwf	??___flge
  8400  0021' 3000               	movlw	0
  8401  0022' 0505'              	andwf	___flge@ff2+1,w
  8402  0023' 0084'              	movwf	??___flge+1
  8403  0024' 3080               	movlw	128
  8404  0025' 0506'              	andwf	___flge@ff2+2,w
  8405  0026' 0085'              	movwf	??___flge+2
  8406  0027' 307F               	movlw	127
  8407  0028' 0507'              	andwf	___flge@ff2+3,w
  8408  0029' 0086'              	movwf	??___flge+3
  8409  002A' 0806'              	movf	??___flge+3,w
  8410  002B' 0405'              	iorwf	??___flge+2,w
  8411  002C' 0404'              	iorwf	??___flge+1,w
  8412  002D' 0403'              	iorwf	??___flge,w
  8413  002E' 1D03               	skipz
  8414  002F' 2800'              	goto	u6851
  8415  0030' 2800'              	goto	u6850
  8416  0031'                    u6851:
  8417  0031' 2800'              	goto	l4387
  8418  0032'                    u6850:
  8419  0032'                    l4385:
  8420  0032' 3000               	movlw	0
  8421  0033' 0087'              	movwf	___flge@ff2+3
  8422  0034' 3000               	movlw	0
  8423  0035' 0086'              	movwf	___flge@ff2+2
  8424  0036' 3000               	movlw	0
  8425  0037' 0085'              	movwf	___flge@ff2+1
  8426  0038' 3000               	movlw	0
  8427  0039' 0084'              	movwf	___flge@ff2
  8428  003A'                    l4387:
  8429  003A' 1F83'              	btfss	___flge@ff1+3,7
  8430  003B' 2800'              	goto	u6861
  8431  003C' 2800'              	goto	u6860
  8432  003D'                    u6861:
  8433  003D' 2800'              	goto	l4391
  8434  003E'                    u6860:
  8435  003E'                    l4389:
  8436  003E' 3000               	movlw	0
  8437  003F' 0083'              	movwf	??___flge
  8438  0040' 3000               	movlw	0
  8439  0041' 0084'              	movwf	??___flge+1
  8440  0042' 3000               	movlw	0
  8441  0043' 0085'              	movwf	??___flge+2
  8442  0044' 3080               	movlw	128
  8443  0045' 0086'              	movwf	??___flge+3
  8444  0046' 0800'              	movf	___flge@ff1,w
  8445  0047' 0283'              	subwf	??___flge,f
  8446  0048' 0801'              	movf	___flge@ff1+1,w
  8447  0049' 1C03               	skipc
  8448  004A' 0F01'              	incfsz	___flge@ff1+1,w
  8449  004B' 2800'              	goto	u6871
  8450  004C' 2800'              	goto	u6872
  8451  004D'                    u6871:
  8452  004D' 0284'              	subwf	??___flge+1,f
  8453  004E'                    u6872:
  8454  004E' 0802'              	movf	___flge@ff1+2,w
  8455  004F' 1C03               	skipc
  8456  0050' 0F02'              	incfsz	___flge@ff1+2,w
  8457  0051' 2800'              	goto	u6873
  8458  0052' 2800'              	goto	u6874
  8459  0053'                    u6873:
  8460  0053' 0285'              	subwf	??___flge+2,f
  8461  0054'                    u6874:
  8462  0054' 0803'              	movf	___flge@ff1+3,w
  8463  0055' 1C03               	skipc
  8464  0056' 0F03'              	incfsz	___flge@ff1+3,w
  8465  0057' 2800'              	goto	u6875
  8466  0058' 2800'              	goto	u6876
  8467  0059'                    u6875:
  8468  0059' 0286'              	subwf	??___flge+3,f
  8469  005A'                    u6876:
  8470  005A' 0806'              	movf	??___flge+3,w
  8471  005B' 0083'              	movwf	___flge@ff1+3
  8472  005C' 0805'              	movf	??___flge+2,w
  8473  005D' 0082'              	movwf	___flge@ff1+2
  8474  005E' 0804'              	movf	??___flge+1,w
  8475  005F' 0081'              	movwf	___flge@ff1+1
  8476  0060' 0803'              	movf	??___flge,w
  8477  0061' 0080'              	movwf	___flge@ff1
  8478  0062'                    l4391:
  8479  0062' 1F87'              	btfss	___flge@ff2+3,7
  8480  0063' 2800'              	goto	u6881
  8481  0064' 2800'              	goto	u6880
  8482  0065'                    u6881:
  8483  0065' 2800'              	goto	l592
  8484  0066'                    u6880:
  8485  0066'                    l4393:
  8486  0066' 3000               	movlw	0
  8487  0067' 0083'              	movwf	??___flge
  8488  0068' 3000               	movlw	0
  8489  0069' 0084'              	movwf	??___flge+1
  8490  006A' 3000               	movlw	0
  8491  006B' 0085'              	movwf	??___flge+2
  8492  006C' 3080               	movlw	128
  8493  006D' 0086'              	movwf	??___flge+3
  8494  006E' 0804'              	movf	___flge@ff2,w
  8495  006F' 0283'              	subwf	??___flge,f
  8496  0070' 0805'              	movf	___flge@ff2+1,w
  8497  0071' 1C03               	skipc
  8498  0072' 0F05'              	incfsz	___flge@ff2+1,w
  8499  0073' 2800'              	goto	u6891
  8500  0074' 2800'              	goto	u6892
  8501  0075'                    u6891:
  8502  0075' 0284'              	subwf	??___flge+1,f
  8503  0076'                    u6892:
  8504  0076' 0806'              	movf	___flge@ff2+2,w
  8505  0077' 1C03               	skipc
  8506  0078' 0F06'              	incfsz	___flge@ff2+2,w
  8507  0079' 2800'              	goto	u6893
  8508  007A' 2800'              	goto	u6894
  8509  007B'                    u6893:
  8510  007B' 0285'              	subwf	??___flge+2,f
  8511  007C'                    u6894:
  8512  007C' 0807'              	movf	___flge@ff2+3,w
  8513  007D' 1C03               	skipc
  8514  007E' 0F07'              	incfsz	___flge@ff2+3,w
  8515  007F' 2800'              	goto	u6895
  8516  0080' 2800'              	goto	u6896
  8517  0081'                    u6895:
  8518  0081' 0286'              	subwf	??___flge+3,f
  8519  0082'                    u6896:
  8520  0082' 0806'              	movf	??___flge+3,w
  8521  0083' 0087'              	movwf	___flge@ff2+3
  8522  0084' 0805'              	movf	??___flge+2,w
  8523  0085' 0086'              	movwf	___flge@ff2+2
  8524  0086' 0804'              	movf	??___flge+1,w
  8525  0087' 0085'              	movwf	___flge@ff2+1
  8526  0088' 0803'              	movf	??___flge,w
  8527  0089' 0084'              	movwf	___flge@ff2
  8528  008A'                    l592:
  8529  008A' 3080               	movlw	128
  8530  008B' 0683'              	xorwf	___flge@ff1+3,f
  8531  008C' 3080               	movlw	128
  8532  008D' 0687'              	xorwf	___flge@ff2+3,f
  8533  008E' 0807'              	movf	___flge@ff2+3,w
  8534  008F' 0203'              	subwf	___flge@ff1+3,w
  8535  0090' 1D03               	skipz
  8536  0091' 2800'              	goto	u6905
  8537  0092' 0806'              	movf	___flge@ff2+2,w
  8538  0093' 0202'              	subwf	___flge@ff1+2,w
  8539  0094' 1D03               	skipz
  8540  0095' 2800'              	goto	u6905
  8541  0096' 0805'              	movf	___flge@ff2+1,w
  8542  0097' 0201'              	subwf	___flge@ff1+1,w
  8543  0098' 1D03               	skipz
  8544  0099' 2800'              	goto	u6905
  8545  009A' 0804'              	movf	___flge@ff2,w
  8546  009B' 0200'              	subwf	___flge@ff1,w
  8547  009C'                    u6905:
  8548  009C' 1803               	skipnc
  8549  009D' 2800'              	goto	u6901
  8550  009E' 2800'              	goto	u6900
  8551  009F'                    u6901:
  8552  009F' 2800'              	goto	l4397
  8553  00A0'                    u6900:
  8554  00A0'                    l4395:
  8555  00A0' 1003               	clrc
  8556  00A1' 2800'              	goto	l593
  8557  00A2'                    l4397:
  8558  00A2' 1403               	setc
  8559  00A3'                    l593:
  8560  00A3' 0008               	return
  8561  00A4'                    __end_of___flge:
  8562                           
  8563                           	psect	text22
  8564  0000'                    __ptext22:	
  8565 ;; *************** function ___fleq *****************
  8566 ;; Defined at:
  8567 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  8568 ;; Parameters:    Size  Location     Type
  8569 ;;  ff1             4    0[BANK0 ] unsigned char 
  8570 ;;  ff2             4    4[BANK0 ] unsigned char 
  8571 ;; Auto vars:     Size  Location     Type
  8572 ;;		None
  8573 ;; Return value:  Size  Location     Type
  8574 ;;		None               void
  8575 ;; Registers used:
  8576 ;;		wreg, status,2, status,0
  8577 ;; Tracked objects:
  8578 ;;		On entry : 0/0
  8579 ;;		On exit  : 0/0
  8580 ;;		Unchanged: 0/0
  8581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8582 ;;      Params:         0       8       0       0       0
  8583 ;;      Locals:         0       0       0       0       0
  8584 ;;      Temps:          4       0       0       0       0
  8585 ;;      Totals:         4       8       0       0       0
  8586 ;;Total ram usage:       12 bytes
  8587 ;; Hardware stack levels used:    1
  8588 ;; Hardware stack levels required when called:    2
  8589 ;; This function calls:
  8590 ;;		Nothing
  8591 ;; This function is called by:
  8592 ;;		_sprintf
  8593 ;; This function uses a non-reentrant model
  8594 ;;
  8595                           
  8596                           
  8597                           ;psect for function ___fleq
  8598  0000'                    ___fleq:
  8599  0000'                    l4369:	
  8600                           ;incstack = 0
  8601                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8602                           
  8603  0000' 3000               	movlw	0
  8604  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  8605  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  8606  0003' 0500'              	andwf	___fleq@ff1,w
  8607  0004' 0083'              	movwf	??___fleq
  8608  0005' 3000               	movlw	0
  8609  0006' 0501'              	andwf	___fleq@ff1+1,w
  8610  0007' 0084'              	movwf	??___fleq+1
  8611  0008' 3080               	movlw	128
  8612  0009' 0502'              	andwf	___fleq@ff1+2,w
  8613  000A' 0085'              	movwf	??___fleq+2
  8614  000B' 307F               	movlw	127
  8615  000C' 0503'              	andwf	___fleq@ff1+3,w
  8616  000D' 0086'              	movwf	??___fleq+3
  8617  000E' 0806'              	movf	??___fleq+3,w
  8618  000F' 0405'              	iorwf	??___fleq+2,w
  8619  0010' 0404'              	iorwf	??___fleq+1,w
  8620  0011' 0403'              	iorwf	??___fleq,w
  8621  0012' 1D03               	skipz
  8622  0013' 2800'              	goto	u6811
  8623  0014' 2800'              	goto	u6810
  8624  0015'                    u6811:
  8625  0015' 2800'              	goto	l584
  8626  0016'                    u6810:
  8627  0016'                    l4371:
  8628  0016' 3000               	movlw	0
  8629  0017' 0083'              	movwf	___fleq@ff1+3
  8630  0018' 3000               	movlw	0
  8631  0019' 0082'              	movwf	___fleq@ff1+2
  8632  001A' 3000               	movlw	0
  8633  001B' 0081'              	movwf	___fleq@ff1+1
  8634  001C' 3000               	movlw	0
  8635  001D' 0080'              	movwf	___fleq@ff1
  8636  001E'                    l584:
  8637  001E' 3000               	movlw	0
  8638  001F' 0504'              	andwf	___fleq@ff2,w
  8639  0020' 0083'              	movwf	??___fleq
  8640  0021' 3000               	movlw	0
  8641  0022' 0505'              	andwf	___fleq@ff2+1,w
  8642  0023' 0084'              	movwf	??___fleq+1
  8643  0024' 3080               	movlw	128
  8644  0025' 0506'              	andwf	___fleq@ff2+2,w
  8645  0026' 0085'              	movwf	??___fleq+2
  8646  0027' 307F               	movlw	127
  8647  0028' 0507'              	andwf	___fleq@ff2+3,w
  8648  0029' 0086'              	movwf	??___fleq+3
  8649  002A' 0806'              	movf	??___fleq+3,w
  8650  002B' 0405'              	iorwf	??___fleq+2,w
  8651  002C' 0404'              	iorwf	??___fleq+1,w
  8652  002D' 0403'              	iorwf	??___fleq,w
  8653  002E' 1D03               	skipz
  8654  002F' 2800'              	goto	u6821
  8655  0030' 2800'              	goto	u6820
  8656  0031'                    u6821:
  8657  0031' 2800'              	goto	l585
  8658  0032'                    u6820:
  8659  0032'                    l4373:
  8660  0032' 3000               	movlw	0
  8661  0033' 0087'              	movwf	___fleq@ff2+3
  8662  0034' 3000               	movlw	0
  8663  0035' 0086'              	movwf	___fleq@ff2+2
  8664  0036' 3000               	movlw	0
  8665  0037' 0085'              	movwf	___fleq@ff2+1
  8666  0038' 3000               	movlw	0
  8667  0039' 0084'              	movwf	___fleq@ff2
  8668  003A'                    l585:
  8669  003A' 0807'              	movf	___fleq@ff2+3,w
  8670  003B' 0603'              	xorwf	___fleq@ff1+3,w
  8671  003C' 1D03               	skipz
  8672  003D' 2800'              	goto	u6835
  8673  003E' 0806'              	movf	___fleq@ff2+2,w
  8674  003F' 0602'              	xorwf	___fleq@ff1+2,w
  8675  0040' 1D03               	skipz
  8676  0041' 2800'              	goto	u6835
  8677  0042' 0805'              	movf	___fleq@ff2+1,w
  8678  0043' 0601'              	xorwf	___fleq@ff1+1,w
  8679  0044' 1D03               	skipz
  8680  0045' 2800'              	goto	u6835
  8681  0046' 0804'              	movf	___fleq@ff2,w
  8682  0047' 0600'              	xorwf	___fleq@ff1,w
  8683  0048'                    u6835:
  8684  0048' 1903               	skipnz
  8685  0049' 2800'              	goto	u6831
  8686  004A' 2800'              	goto	u6830
  8687  004B'                    u6831:
  8688  004B' 2800'              	goto	l4377
  8689  004C'                    u6830:
  8690  004C'                    l4375:
  8691  004C' 1003               	clrc
  8692  004D' 2800'              	goto	l586
  8693  004E'                    l4377:
  8694  004E' 1403               	setc
  8695  004F'                    l586:
  8696  004F' 0008               	return
  8697  0050'                    __end_of___fleq:
  8698                           
  8699                           	psect	text23
  8700  0000'                    __ptext23:	
  8701 ;; *************** function _setup *****************
  8702 ;; Defined at:
  8703 ;;		line 121 in file "SerialLCD.c"
  8704 ;; Parameters:    Size  Location     Type
  8705 ;;		None
  8706 ;; Auto vars:     Size  Location     Type
  8707 ;;		None
  8708 ;; Return value:  Size  Location     Type
  8709 ;;                  1    wreg      void 
  8710 ;; Registers used:
  8711 ;;		wreg, status,2
  8712 ;; Tracked objects:
  8713 ;;		On entry : 0/0
  8714 ;;		On exit  : 0/0
  8715 ;;		Unchanged: 0/0
  8716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8717 ;;      Params:         0       0       0       0       0
  8718 ;;      Locals:         0       0       0       0       0
  8719 ;;      Temps:          0       0       0       0       0
  8720 ;;      Totals:         0       0       0       0       0
  8721 ;;Total ram usage:        0 bytes
  8722 ;; Hardware stack levels used:    1
  8723 ;; Hardware stack levels required when called:    2
  8724 ;; This function calls:
  8725 ;;		Nothing
  8726 ;; This function is called by:
  8727 ;;		_main
  8728 ;; This function uses a non-reentrant model
  8729 ;;
  8730                           
  8731                           
  8732                           ;psect for function _setup
  8733  0000'                    _setup:
  8734  0000'                    l3415:	
  8735                           ;incstack = 0
  8736                           ; Regs used in _setup: [wreg+status,2]
  8737                           
  8738                           
  8739                           ;SerialLCD.c: 124:     }
  8740  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  8741  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  8742  0002' 0187               	clrf	7	;volatile
  8743  0003'                    l3417:
  8744                           
  8745                           ;SerialLCD.c: 125:     else if (PIR1bits.RCIF){
  8746  0003' 1787               	bsf	7,7	;volatile
  8747                           
  8748                           ;SerialLCD.c: 126:         comando=Receive();
  8749  0004' 0188               	clrf	8	;volatile
  8750                           
  8751                           ;SerialLCD.c: 127:         _delay((unsigned long)((300)*(8000000/4000000.0)));
  8752  0005' 1683               	bsf	3,5	;RP0=1, select bank3
  8753  0006' 1703               	bsf	3,6	;RP1=1, select bank3
  8754  0007' 0188               	clrf	8	;volatile
  8755                           
  8756                           ;SerialLCD.c: 128:         PIR1bits.RCIF=0;
  8757  0008' 0189               	clrf	9	;volatile
  8758  0009'                    l3419:
  8759                           
  8760                           ;SerialLCD.c: 129:     }
  8761  0009' 1508               	bsf	8,2	;volatile
  8762  000A'                    l3421:
  8763                           
  8764                           ;SerialLCD.c: 130: 
  8765  000A' 1588               	bsf	8,3	;volatile
  8766                           
  8767                           ;SerialLCD.c: 131: }
  8768  000B' 1683               	bsf	3,5	;RP0=1, select bank1
  8769  000C' 1303               	bcf	3,6	;RP1=0, select bank1
  8770  000D' 0185               	clrf	5	;volatile
  8771  000E' 0186               	clrf	6	;volatile
  8772  000F'                    l3423:
  8773  000F' 1505               	bsf	5,2	;volatile
  8774  0010'                    l3425:
  8775  0010' 1585               	bsf	5,3	;volatile
  8776  0011'                    l3427:
  8777  0011' 178B               	bsf	11,7	;volatile
  8778  0012'                    l3429:
  8779  0012' 170B               	bsf	11,6	;volatile
  8780  0013' 1283               	bcf	3,5	;RP0=0, select bank0
  8781  0014' 1303               	bcf	3,6	;RP1=0, select bank0
  8782  0015' 0180'              	clrf	_Pots
  8783  0016'                    l3431:
  8784  0016' 3000               	movlw	0
  8785  0017' 1683               	bsf	3,5	;RP0=1, select bank1
  8786  0018' 1303               	bcf	3,6	;RP1=0, select bank1
  8787  0019' 0080'              	movwf	(_vol1+3)^(0+128)
  8788  001A' 3000               	movlw	0
  8789  001B' 0080'              	movwf	(_vol1+2)^(0+128)
  8790  001C' 3000               	movlw	0
  8791  001D' 0080'              	movwf	(_vol1+1)^(0+128)
  8792  001E' 3000               	movlw	0
  8793  001F' 0080'              	movwf	_vol1^(0+128)
  8794  0020'                    l3433:
  8795  0020' 3000               	movlw	0
  8796  0021' 0080'              	movwf	(_vol2+3)^(0+128)
  8797  0022' 3000               	movlw	0
  8798  0023' 0080'              	movwf	(_vol2+2)^(0+128)
  8799  0024' 3000               	movlw	0
  8800  0025' 0080'              	movwf	(_vol2+1)^(0+128)
  8801  0026' 3000               	movlw	0
  8802  0027' 0080'              	movwf	_vol2^(0+128)
  8803  0028'                    l88:
  8804  0028' 0008               	return
  8805  0029'                    __end_of_setup:
  8806                           
  8807                           	psect	text24
  8808  0000'                    __ptext24:	
  8809 ;; *************** function ___fldiv *****************
  8810 ;; Defined at:
  8811 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
  8812 ;; Parameters:    Size  Location     Type
  8813 ;;  a               4   36[BANK0 ] void 
  8814 ;;  b               4   40[BANK0 ] void 
  8815 ;; Auto vars:     Size  Location     Type
  8816 ;;  grs             4   56[BANK0 ] unsigned long 
  8817 ;;  rem             4   49[BANK0 ] unsigned long 
  8818 ;;  new_exp         2   54[BANK0 ] int 
  8819 ;;  aexp            1   61[BANK0 ] unsigned char 
  8820 ;;  bexp            1   60[BANK0 ] unsigned char 
  8821 ;;  sign            1   53[BANK0 ] unsigned char 
  8822 ;; Return value:  Size  Location     Type
  8823 ;;                  4   36[BANK0 ] unsigned char 
  8824 ;; Registers used:
  8825 ;;		wreg, status,2, status,0, btemp+1
  8826 ;; Tracked objects:
  8827 ;;		On entry : 0/0
  8828 ;;		On exit  : 0/0
  8829 ;;		Unchanged: 0/0
  8830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8831 ;;      Params:         0       8       0       0       0
  8832 ;;      Locals:         0      13       0       0       0
  8833 ;;      Temps:          0       5       0       0       0
  8834 ;;      Totals:         0      26       0       0       0
  8835 ;;Total ram usage:       26 bytes
  8836 ;; Hardware stack levels used:    1
  8837 ;; Hardware stack levels required when called:    2
  8838 ;; This function calls:
  8839 ;;		Nothing
  8840 ;; This function is called by:
  8841 ;;		_main
  8842 ;; This function uses a non-reentrant model
  8843 ;;
  8844                           
  8845                           
  8846                           ;psect for function ___fldiv
  8847  0000'                    ___fldiv:
  8848  0000'                    l3807:	
  8849                           ;incstack = 0
  8850                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  8851                           
  8852  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8853  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8854  0002' 082B'              	movf	___fldiv@b+3,w
  8855  0003' 3980               	andlw	128
  8856  0004' 00AC'              	movwf	??___fldiv
  8857  0005' 082C'              	movf	??___fldiv,w
  8858  0006' 00B5'              	movwf	___fldiv@sign
  8859  0007'                    l3809:
  8860  0007' 082B'              	movf	___fldiv@b+3,w
  8861  0008' 00AC'              	movwf	??___fldiv
  8862  0009' 072C'              	addwf	??___fldiv,w
  8863  000A' 00AD'              	movwf	??___fldiv+1
  8864  000B' 082D'              	movf	??___fldiv+1,w
  8865  000C' 00BC'              	movwf	___fldiv@bexp
  8866  000D'                    l3811:
  8867  000D' 1FAA'              	btfss	___fldiv@b+2,7
  8868  000E' 2800'              	goto	u5831
  8869  000F' 2800'              	goto	u5830
  8870  0010'                    u5831:
  8871  0010' 2800'              	goto	l3815
  8872  0011'                    u5830:
  8873  0011'                    l3813:
  8874  0011' 143C'              	bsf	___fldiv@bexp,0
  8875  0012'                    l3815:
  8876  0012' 083C'              	movf	___fldiv@bexp,w
  8877  0013' 1903               	btfsc	3,2
  8878  0014' 2800'              	goto	u5841
  8879  0015' 2800'              	goto	u5840
  8880  0016'                    u5841:
  8881  0016' 2800'              	goto	l3825
  8882  0017'                    u5840:
  8883  0017'                    l3817:
  8884  0017' 0A3C'              	incf	___fldiv@bexp,w
  8885  0018' 1D03               	btfss	3,2
  8886  0019' 2800'              	goto	u5851
  8887  001A' 2800'              	goto	u5850
  8888  001B'                    u5851:
  8889  001B' 2800'              	goto	l3821
  8890  001C'                    u5850:
  8891  001C'                    l3819:
  8892  001C' 3000               	movlw	0
  8893  001D' 00AB'              	movwf	___fldiv@b+3
  8894  001E' 3000               	movlw	0
  8895  001F' 00AA'              	movwf	___fldiv@b+2
  8896  0020' 3000               	movlw	0
  8897  0021' 00A9'              	movwf	___fldiv@b+1
  8898  0022' 3000               	movlw	0
  8899  0023' 00A8'              	movwf	___fldiv@b
  8900  0024'                    l3821:
  8901  0024' 17AA'              	bsf	___fldiv@b+2,7
  8902  0025'                    l3823:
  8903  0025' 01AB'              	clrf	___fldiv@b+3
  8904  0026' 2800'              	goto	l3827
  8905  0027'                    l3825:
  8906  0027' 3000               	movlw	0
  8907  0028' 00AB'              	movwf	___fldiv@b+3
  8908  0029' 3000               	movlw	0
  8909  002A' 00AA'              	movwf	___fldiv@b+2
  8910  002B' 3000               	movlw	0
  8911  002C' 00A9'              	movwf	___fldiv@b+1
  8912  002D' 3000               	movlw	0
  8913  002E' 00A8'              	movwf	___fldiv@b
  8914  002F'                    l3827:
  8915  002F' 0827'              	movf	___fldiv@a+3,w
  8916  0030' 3980               	andlw	128
  8917  0031' 00AC'              	movwf	??___fldiv
  8918  0032' 082C'              	movf	??___fldiv,w
  8919  0033' 06B5'              	xorwf	___fldiv@sign,f
  8920  0034'                    l3829:
  8921  0034' 0827'              	movf	___fldiv@a+3,w
  8922  0035' 00AC'              	movwf	??___fldiv
  8923  0036' 072C'              	addwf	??___fldiv,w
  8924  0037' 00AD'              	movwf	??___fldiv+1
  8925  0038' 082D'              	movf	??___fldiv+1,w
  8926  0039' 00BD'              	movwf	___fldiv@aexp
  8927  003A'                    l3831:
  8928  003A' 1FA6'              	btfss	___fldiv@a+2,7
  8929  003B' 2800'              	goto	u5861
  8930  003C' 2800'              	goto	u5860
  8931  003D'                    u5861:
  8932  003D' 2800'              	goto	l3835
  8933  003E'                    u5860:
  8934  003E'                    l3833:
  8935  003E' 143D'              	bsf	___fldiv@aexp,0
  8936  003F'                    l3835:
  8937  003F' 083D'              	movf	___fldiv@aexp,w
  8938  0040' 1903               	btfsc	3,2
  8939  0041' 2800'              	goto	u5871
  8940  0042' 2800'              	goto	u5870
  8941  0043'                    u5871:
  8942  0043' 2800'              	goto	l3845
  8943  0044'                    u5870:
  8944  0044'                    l3837:
  8945  0044' 0A3D'              	incf	___fldiv@aexp,w
  8946  0045' 1D03               	btfss	3,2
  8947  0046' 2800'              	goto	u5881
  8948  0047' 2800'              	goto	u5880
  8949  0048'                    u5881:
  8950  0048' 2800'              	goto	l3841
  8951  0049'                    u5880:
  8952  0049'                    l3839:
  8953  0049' 3000               	movlw	0
  8954  004A' 00A7'              	movwf	___fldiv@a+3
  8955  004B' 3000               	movlw	0
  8956  004C' 00A6'              	movwf	___fldiv@a+2
  8957  004D' 3000               	movlw	0
  8958  004E' 00A5'              	movwf	___fldiv@a+1
  8959  004F' 3000               	movlw	0
  8960  0050' 00A4'              	movwf	___fldiv@a
  8961  0051'                    l3841:
  8962  0051' 17A6'              	bsf	___fldiv@a+2,7
  8963  0052'                    l3843:
  8964  0052' 01A7'              	clrf	___fldiv@a+3
  8965  0053' 2800'              	goto	l781
  8966  0054'                    l3845:
  8967  0054' 3000               	movlw	0
  8968  0055' 00A7'              	movwf	___fldiv@a+3
  8969  0056' 3000               	movlw	0
  8970  0057' 00A6'              	movwf	___fldiv@a+2
  8971  0058' 3000               	movlw	0
  8972  0059' 00A5'              	movwf	___fldiv@a+1
  8973  005A' 3000               	movlw	0
  8974  005B' 00A4'              	movwf	___fldiv@a
  8975  005C'                    l781:
  8976  005C' 0827'              	movf	___fldiv@a+3,w
  8977  005D' 0426'              	iorwf	___fldiv@a+2,w
  8978  005E' 0425'              	iorwf	___fldiv@a+1,w
  8979  005F' 0424'              	iorwf	___fldiv@a,w
  8980  0060' 1D03               	skipz
  8981  0061' 2800'              	goto	u5891
  8982  0062' 2800'              	goto	u5890
  8983  0063'                    u5891:
  8984  0063' 2800'              	goto	l3855
  8985  0064'                    u5890:
  8986  0064'                    l3847:
  8987  0064' 3000               	movlw	0
  8988  0065' 00AB'              	movwf	___fldiv@b+3
  8989  0066' 3000               	movlw	0
  8990  0067' 00AA'              	movwf	___fldiv@b+2
  8991  0068' 3000               	movlw	0
  8992  0069' 00A9'              	movwf	___fldiv@b+1
  8993  006A' 3000               	movlw	0
  8994  006B' 00A8'              	movwf	___fldiv@b
  8995  006C' 3080               	movlw	128
  8996  006D' 04AA'              	iorwf	___fldiv@b+2,f
  8997  006E' 307F               	movlw	127
  8998  006F' 04AB'              	iorwf	___fldiv@b+3,f
  8999  0070'                    l3849:
  9000  0070' 0835'              	movf	___fldiv@sign,w
  9001  0071' 00AC'              	movwf	??___fldiv
  9002  0072' 082C'              	movf	??___fldiv,w
  9003  0073' 04AB'              	iorwf	___fldiv@b+3,f
  9004  0074'                    l3851:
  9005  0074' 082B'              	movf	___fldiv@b+3,w
  9006  0075' 00A7'              	movwf	?___fldiv+3
  9007  0076' 082A'              	movf	___fldiv@b+2,w
  9008  0077' 00A6'              	movwf	?___fldiv+2
  9009  0078' 0829'              	movf	___fldiv@b+1,w
  9010  0079' 00A5'              	movwf	?___fldiv+1
  9011  007A' 0828'              	movf	___fldiv@b,w
  9012  007B' 00A4'              	movwf	?___fldiv
  9013  007C' 2800'              	goto	l783
  9014  007D'                    l3855:
  9015  007D' 083C'              	movf	___fldiv@bexp,w
  9016  007E' 1D03               	btfss	3,2
  9017  007F' 2800'              	goto	u5901
  9018  0080' 2800'              	goto	u5900
  9019  0081'                    u5901:
  9020  0081' 2800'              	goto	l3861
  9021  0082'                    u5900:
  9022  0082'                    l3857:
  9023  0082' 3000               	movlw	0
  9024  0083' 00A7'              	movwf	?___fldiv+3
  9025  0084' 3000               	movlw	0
  9026  0085' 00A6'              	movwf	?___fldiv+2
  9027  0086' 3000               	movlw	0
  9028  0087' 00A5'              	movwf	?___fldiv+1
  9029  0088' 3000               	movlw	0
  9030  0089' 00A4'              	movwf	?___fldiv
  9031  008A' 2800'              	goto	l783
  9032  008B'                    l3861:
  9033  008B' 083C'              	movf	___fldiv@bexp,w
  9034  008C' 00AC'              	movwf	??___fldiv
  9035  008D' 01AD'              	clrf	??___fldiv+1
  9036  008E' 082D'              	movf	??___fldiv+1,w
  9037  008F' 00AF'              	movwf	??___fldiv+3
  9038  0090' 083D'              	movf	___fldiv@aexp,w
  9039  0091' 022C'              	subwf	??___fldiv,w
  9040  0092' 00AE'              	movwf	??___fldiv+2
  9041  0093' 1C03               	skipc
  9042  0094' 03AF'              	decf	??___fldiv+3,f
  9043  0095' 082E'              	movf	??___fldiv+2,w
  9044  0096' 3E7F               	addlw	127
  9045  0097' 00B6'              	movwf	___fldiv@new_exp
  9046  0098' 082F'              	movf	??___fldiv+3,w
  9047  0099' 1803               	skipnc
  9048  009A' 3E01               	addlw	1
  9049  009B' 3E00               	addlw	0
  9050  009C' 00B7'              	movwf	___fldiv@new_exp+1
  9051  009D'                    l3863:
  9052  009D' 082B'              	movf	___fldiv@b+3,w
  9053  009E' 00B4'              	movwf	___fldiv@rem+3
  9054  009F' 082A'              	movf	___fldiv@b+2,w
  9055  00A0' 00B3'              	movwf	___fldiv@rem+2
  9056  00A1' 0829'              	movf	___fldiv@b+1,w
  9057  00A2' 00B2'              	movwf	___fldiv@rem+1
  9058  00A3' 0828'              	movf	___fldiv@b,w
  9059  00A4' 00B1'              	movwf	___fldiv@rem
  9060  00A5'                    l3865:
  9061  00A5' 3000               	movlw	0
  9062  00A6' 00AB'              	movwf	___fldiv@b+3
  9063  00A7' 3000               	movlw	0
  9064  00A8' 00AA'              	movwf	___fldiv@b+2
  9065  00A9' 3000               	movlw	0
  9066  00AA' 00A9'              	movwf	___fldiv@b+1
  9067  00AB' 3000               	movlw	0
  9068  00AC' 00A8'              	movwf	___fldiv@b
  9069  00AD'                    l3867:
  9070  00AD' 3000               	movlw	0
  9071  00AE' 00BB'              	movwf	___fldiv@grs+3
  9072  00AF' 3000               	movlw	0
  9073  00B0' 00BA'              	movwf	___fldiv@grs+2
  9074  00B1' 3000               	movlw	0
  9075  00B2' 00B9'              	movwf	___fldiv@grs+1
  9076  00B3' 3000               	movlw	0
  9077  00B4' 00B8'              	movwf	___fldiv@grs
  9078  00B5'                    l3869:
  9079  00B5' 01BD'              	clrf	___fldiv@aexp
  9080  00B6' 2800'              	goto	l3889
  9081  00B7'                    l3871:
  9082  00B7' 083D'              	movf	___fldiv@aexp,w
  9083  00B8' 1903               	btfsc	3,2
  9084  00B9' 2800'              	goto	u5911
  9085  00BA' 2800'              	goto	u5910
  9086  00BB'                    u5911:
  9087  00BB' 2800'              	goto	l3881
  9088  00BC'                    u5910:
  9089  00BC'                    l3873:
  9090  00BC' 3001               	movlw	1
  9091  00BD' 00AC'              	movwf	??___fldiv
  9092  00BE'                    u5925:
  9093  00BE' 1003               	clrc
  9094  00BF' 0DB1'              	rlf	___fldiv@rem,f
  9095  00C0' 0DB2'              	rlf	___fldiv@rem+1,f
  9096  00C1' 0DB3'              	rlf	___fldiv@rem+2,f
  9097  00C2' 0DB4'              	rlf	___fldiv@rem+3,f
  9098  00C3' 0BAC'              	decfsz	??___fldiv,f
  9099  00C4' 2800'              	goto	u5925
  9100  00C5' 3001               	movlw	1
  9101  00C6' 00AC'              	movwf	??___fldiv
  9102  00C7'                    u5935:
  9103  00C7' 1003               	clrc
  9104  00C8' 0DA8'              	rlf	___fldiv@b,f
  9105  00C9' 0DA9'              	rlf	___fldiv@b+1,f
  9106  00CA' 0DAA'              	rlf	___fldiv@b+2,f
  9107  00CB' 0DAB'              	rlf	___fldiv@b+3,f
  9108  00CC' 0BAC'              	decfsz	??___fldiv,f
  9109  00CD' 2800'              	goto	u5935
  9110  00CE'                    l3875:
  9111  00CE' 1FBB'              	btfss	___fldiv@grs+3,7
  9112  00CF' 2800'              	goto	u5941
  9113  00D0' 2800'              	goto	u5940
  9114  00D1'                    u5941:
  9115  00D1' 2800'              	goto	l3879
  9116  00D2'                    u5940:
  9117  00D2'                    l3877:
  9118  00D2' 1428'              	bsf	___fldiv@b,0
  9119  00D3'                    l3879:
  9120  00D3' 3001               	movlw	1
  9121  00D4' 00AC'              	movwf	??___fldiv
  9122  00D5'                    u5955:
  9123  00D5' 1003               	clrc
  9124  00D6' 0DB8'              	rlf	___fldiv@grs,f
  9125  00D7' 0DB9'              	rlf	___fldiv@grs+1,f
  9126  00D8' 0DBA'              	rlf	___fldiv@grs+2,f
  9127  00D9' 0DBB'              	rlf	___fldiv@grs+3,f
  9128  00DA' 0BAC'              	decfsz	??___fldiv,f
  9129  00DB' 2800'              	goto	u5955
  9130  00DC'                    l3881:
  9131  00DC' 0827'              	movf	___fldiv@a+3,w
  9132  00DD' 0234'              	subwf	___fldiv@rem+3,w
  9133  00DE' 1D03               	skipz
  9134  00DF' 2800'              	goto	u5965
  9135  00E0' 0826'              	movf	___fldiv@a+2,w
  9136  00E1' 0233'              	subwf	___fldiv@rem+2,w
  9137  00E2' 1D03               	skipz
  9138  00E3' 2800'              	goto	u5965
  9139  00E4' 0825'              	movf	___fldiv@a+1,w
  9140  00E5' 0232'              	subwf	___fldiv@rem+1,w
  9141  00E6' 1D03               	skipz
  9142  00E7' 2800'              	goto	u5965
  9143  00E8' 0824'              	movf	___fldiv@a,w
  9144  00E9' 0231'              	subwf	___fldiv@rem,w
  9145  00EA'                    u5965:
  9146  00EA' 1C03               	skipc
  9147  00EB' 2800'              	goto	u5961
  9148  00EC' 2800'              	goto	u5960
  9149  00ED'                    u5961:
  9150  00ED' 2800'              	goto	l3887
  9151  00EE'                    u5960:
  9152  00EE'                    l3883:
  9153  00EE' 173B'              	bsf	___fldiv@grs+3,6
  9154  00EF'                    l3885:
  9155  00EF' 0824'              	movf	___fldiv@a,w
  9156  00F0' 02B1'              	subwf	___fldiv@rem,f
  9157  00F1' 0825'              	movf	___fldiv@a+1,w
  9158  00F2' 1C03               	skipc
  9159  00F3' 0F25'              	incfsz	___fldiv@a+1,w
  9160  00F4' 02B2'              	subwf	___fldiv@rem+1,f
  9161  00F5' 0826'              	movf	___fldiv@a+2,w
  9162  00F6' 1C03               	skipc
  9163  00F7' 0F26'              	incfsz	___fldiv@a+2,w
  9164  00F8' 02B3'              	subwf	___fldiv@rem+2,f
  9165  00F9' 0827'              	movf	___fldiv@a+3,w
  9166  00FA' 1C03               	skipc
  9167  00FB' 0F27'              	incfsz	___fldiv@a+3,w
  9168  00FC' 02B4'              	subwf	___fldiv@rem+3,f
  9169  00FD'                    l3887:
  9170  00FD' 3001               	movlw	1
  9171  00FE' 00AC'              	movwf	??___fldiv
  9172  00FF' 082C'              	movf	??___fldiv,w
  9173  0100' 07BD'              	addwf	___fldiv@aexp,f
  9174  0101'                    l3889:
  9175  0101' 301A               	movlw	26
  9176  0102' 023D'              	subwf	___fldiv@aexp,w
  9177  0103' 1C03               	skipc
  9178  0104' 2800'              	goto	u5971
  9179  0105' 2800'              	goto	u5970
  9180  0106'                    u5971:
  9181  0106' 2800'              	goto	l3871
  9182  0107'                    u5970:
  9183  0107'                    l3891:
  9184  0107' 0834'              	movf	___fldiv@rem+3,w
  9185  0108' 0433'              	iorwf	___fldiv@rem+2,w
  9186  0109' 0432'              	iorwf	___fldiv@rem+1,w
  9187  010A' 0431'              	iorwf	___fldiv@rem,w
  9188  010B' 1903               	skipnz
  9189  010C' 2800'              	goto	u5981
  9190  010D' 2800'              	goto	u5980
  9191  010E'                    u5981:
  9192  010E' 2800'              	goto	l3905
  9193  010F'                    u5980:
  9194  010F'                    l3893:
  9195  010F' 1438'              	bsf	___fldiv@grs,0
  9196  0110' 2800'              	goto	l3905
  9197  0111'                    l3895:
  9198  0111' 3001               	movlw	1
  9199  0112' 00AC'              	movwf	??___fldiv
  9200  0113'                    u5995:
  9201  0113' 1003               	clrc
  9202  0114' 0DA8'              	rlf	___fldiv@b,f
  9203  0115' 0DA9'              	rlf	___fldiv@b+1,f
  9204  0116' 0DAA'              	rlf	___fldiv@b+2,f
  9205  0117' 0DAB'              	rlf	___fldiv@b+3,f
  9206  0118' 0BAC'              	decfsz	??___fldiv,f
  9207  0119' 2800'              	goto	u5995
  9208  011A'                    l3897:
  9209  011A' 1FBB'              	btfss	___fldiv@grs+3,7
  9210  011B' 2800'              	goto	u6001
  9211  011C' 2800'              	goto	u6000
  9212  011D'                    u6001:
  9213  011D' 2800'              	goto	l3901
  9214  011E'                    u6000:
  9215  011E'                    l3899:
  9216  011E' 1428'              	bsf	___fldiv@b,0
  9217  011F'                    l3901:
  9218  011F' 3001               	movlw	1
  9219  0120' 00AC'              	movwf	??___fldiv
  9220  0121'                    u6015:
  9221  0121' 1003               	clrc
  9222  0122' 0DB8'              	rlf	___fldiv@grs,f
  9223  0123' 0DB9'              	rlf	___fldiv@grs+1,f
  9224  0124' 0DBA'              	rlf	___fldiv@grs+2,f
  9225  0125' 0DBB'              	rlf	___fldiv@grs+3,f
  9226  0126' 0BAC'              	decfsz	??___fldiv,f
  9227  0127' 2800'              	goto	u6015
  9228  0128'                    l3903:
  9229  0128' 30FF               	movlw	255
  9230  0129' 07B6'              	addwf	___fldiv@new_exp,f
  9231  012A' 1803               	skipnc
  9232  012B' 0AB7'              	incf	___fldiv@new_exp+1,f
  9233  012C' 30FF               	movlw	255
  9234  012D' 07B7'              	addwf	___fldiv@new_exp+1,f
  9235  012E'                    l3905:
  9236  012E' 1FAA'              	btfss	___fldiv@b+2,7
  9237  012F' 2800'              	goto	u6021
  9238  0130' 2800'              	goto	u6020
  9239  0131'                    u6021:
  9240  0131' 2800'              	goto	l3895
  9241  0132'                    u6020:
  9242  0132'                    l3907:
  9243  0132' 01BD'              	clrf	___fldiv@aexp
  9244  0133'                    l3909:
  9245  0133' 1FBB'              	btfss	___fldiv@grs+3,7
  9246  0134' 2800'              	goto	u6031
  9247  0135' 2800'              	goto	u6030
  9248  0136'                    u6031:
  9249  0136' 2800'              	goto	l3917
  9250  0137'                    u6030:
  9251  0137'                    l3911:
  9252  0137' 30FF               	movlw	255
  9253  0138' 0538'              	andwf	___fldiv@grs,w
  9254  0139' 00AC'              	movwf	??___fldiv
  9255  013A' 30FF               	movlw	255
  9256  013B' 0539'              	andwf	___fldiv@grs+1,w
  9257  013C' 00AD'              	movwf	??___fldiv+1
  9258  013D' 30FF               	movlw	255
  9259  013E' 053A'              	andwf	___fldiv@grs+2,w
  9260  013F' 00AE'              	movwf	??___fldiv+2
  9261  0140' 307F               	movlw	127
  9262  0141' 053B'              	andwf	___fldiv@grs+3,w
  9263  0142' 00AF'              	movwf	??___fldiv+3
  9264  0143' 082F'              	movf	??___fldiv+3,w
  9265  0144' 042E'              	iorwf	??___fldiv+2,w
  9266  0145' 042D'              	iorwf	??___fldiv+1,w
  9267  0146' 042C'              	iorwf	??___fldiv,w
  9268  0147' 1903               	skipnz
  9269  0148' 2800'              	goto	u6041
  9270  0149' 2800'              	goto	u6040
  9271  014A'                    u6041:
  9272  014A' 2800'              	goto	l797
  9273  014B'                    u6040:
  9274  014B'                    l3913:
  9275  014B' 01BD'              	clrf	___fldiv@aexp
  9276  014C' 0ABD'              	incf	___fldiv@aexp,f
  9277  014D' 2800'              	goto	l3917
  9278  014E'                    l797:
  9279  014E' 1C28'              	btfss	___fldiv@b,0
  9280  014F' 2800'              	goto	u6051
  9281  0150' 2800'              	goto	u6050
  9282  0151'                    u6051:
  9283  0151' 2800'              	goto	l3917
  9284  0152'                    u6050:
  9285  0152' 2800'              	goto	l3913
  9286  0153'                    l3917:
  9287  0153' 083D'              	movf	___fldiv@aexp,w
  9288  0154' 1903               	btfsc	3,2
  9289  0155' 2800'              	goto	u6061
  9290  0156' 2800'              	goto	u6060
  9291  0157'                    u6061:
  9292  0157' 2800'              	goto	l3927
  9293  0158'                    u6060:
  9294  0158'                    l3919:
  9295  0158' 3001               	movlw	1
  9296  0159' 07A8'              	addwf	___fldiv@b,f
  9297  015A' 3000               	movlw	0
  9298  015B' 1803               	skipnc
  9299  015C' 3001               	movlw	1
  9300  015D' 07A9'              	addwf	___fldiv@b+1,f
  9301  015E' 3000               	movlw	0
  9302  015F' 1803               	skipnc
  9303  0160' 3001               	movlw	1
  9304  0161' 07AA'              	addwf	___fldiv@b+2,f
  9305  0162' 3000               	movlw	0
  9306  0163' 1803               	skipnc
  9307  0164' 3001               	movlw	1
  9308  0165' 07AB'              	addwf	___fldiv@b+3,f
  9309  0166'                    l3921:
  9310  0166' 1C2B'              	btfss	___fldiv@b+3,0
  9311  0167' 2800'              	goto	u6071
  9312  0168' 2800'              	goto	u6070
  9313  0169'                    u6071:
  9314  0169' 2800'              	goto	l3927
  9315  016A'                    u6070:
  9316  016A'                    l3923:
  9317  016A' 0828'              	movf	___fldiv@b,w
  9318  016B' 00AC'              	movwf	??___fldiv
  9319  016C' 0829'              	movf	___fldiv@b+1,w
  9320  016D' 00AD'              	movwf	??___fldiv+1
  9321  016E' 082A'              	movf	___fldiv@b+2,w
  9322  016F' 00AE'              	movwf	??___fldiv+2
  9323  0170' 082B'              	movf	___fldiv@b+3,w
  9324  0171' 00AF'              	movwf	??___fldiv+3
  9325  0172' 3001               	movlw	1
  9326  0173' 00B0'              	movwf	??___fldiv+4
  9327  0174'                    u6085:
  9328  0174' 0D2F'              	rlf	??___fldiv+3,w
  9329  0175' 0CAF'              	rrf	??___fldiv+3,f
  9330  0176' 0CAE'              	rrf	??___fldiv+2,f
  9331  0177' 0CAD'              	rrf	??___fldiv+1,f
  9332  0178' 0CAC'              	rrf	??___fldiv,f
  9333  0179'                    u6080:
  9334  0179' 0BB0'              	decfsz	??___fldiv+4,f
  9335  017A' 2800'              	goto	u6085
  9336  017B' 082F'              	movf	??___fldiv+3,w
  9337  017C' 00AB'              	movwf	___fldiv@b+3
  9338  017D' 082E'              	movf	??___fldiv+2,w
  9339  017E' 00AA'              	movwf	___fldiv@b+2
  9340  017F' 082D'              	movf	??___fldiv+1,w
  9341  0180' 00A9'              	movwf	___fldiv@b+1
  9342  0181' 082C'              	movf	??___fldiv,w
  9343  0182' 00A8'              	movwf	___fldiv@b
  9344  0183'                    l3925:
  9345  0183' 3001               	movlw	1
  9346  0184' 07B6'              	addwf	___fldiv@new_exp,f
  9347  0185' 1803               	skipnc
  9348  0186' 0AB7'              	incf	___fldiv@new_exp+1,f
  9349  0187' 3000               	movlw	0
  9350  0188' 07B7'              	addwf	___fldiv@new_exp+1,f
  9351  0189'                    l3927:
  9352  0189' 0837'              	movf	___fldiv@new_exp+1,w
  9353  018A' 3A80               	xorlw	128
  9354  018B' 00FF               	movwf	btemp+1
  9355  018C' 3080               	movlw	128
  9356  018D' 027F               	subwf	btemp+1,w
  9357  018E' 1D03               	skipz
  9358  018F' 2800'              	goto	u6095
  9359  0190' 30FF               	movlw	255
  9360  0191' 0236'              	subwf	___fldiv@new_exp,w
  9361  0192'                    u6095:
  9362  0192' 1C03               	skipc
  9363  0193' 2800'              	goto	u6091
  9364  0194' 2800'              	goto	u6090
  9365  0195'                    u6091:
  9366  0195' 2800'              	goto	l3931
  9367  0196'                    u6090:
  9368  0196'                    l3929:
  9369  0196' 30FF               	movlw	255
  9370  0197' 1283               	bcf	3,5	;RP0=0, select bank0
  9371  0198' 1303               	bcf	3,6	;RP1=0, select bank0
  9372  0199' 00B6'              	movwf	___fldiv@new_exp
  9373  019A' 3000               	movlw	0
  9374  019B' 00B7'              	movwf	___fldiv@new_exp+1
  9375  019C' 3000               	movlw	0
  9376  019D' 00AB'              	movwf	___fldiv@b+3
  9377  019E' 3000               	movlw	0
  9378  019F' 00AA'              	movwf	___fldiv@b+2
  9379  01A0' 3000               	movlw	0
  9380  01A1' 00A9'              	movwf	___fldiv@b+1
  9381  01A2' 3000               	movlw	0
  9382  01A3' 00A8'              	movwf	___fldiv@b
  9383  01A4'                    l3931:
  9384  01A4' 1283               	bcf	3,5	;RP0=0, select bank0
  9385  01A5' 1303               	bcf	3,6	;RP1=0, select bank0
  9386  01A6' 0837'              	movf	___fldiv@new_exp+1,w
  9387  01A7' 3A80               	xorlw	128
  9388  01A8' 00FF               	movwf	btemp+1
  9389  01A9' 3080               	movlw	128
  9390  01AA' 027F               	subwf	btemp+1,w
  9391  01AB' 1D03               	skipz
  9392  01AC' 2800'              	goto	u6105
  9393  01AD' 3001               	movlw	1
  9394  01AE' 0236'              	subwf	___fldiv@new_exp,w
  9395  01AF'                    u6105:
  9396  01AF' 1803               	skipnc
  9397  01B0' 2800'              	goto	u6101
  9398  01B1' 2800'              	goto	u6100
  9399  01B2'                    u6101:
  9400  01B2' 2800'              	goto	l803
  9401  01B3'                    u6100:
  9402  01B3'                    l3933:
  9403  01B3' 1283               	bcf	3,5	;RP0=0, select bank0
  9404  01B4' 1303               	bcf	3,6	;RP1=0, select bank0
  9405  01B5' 01B6'              	clrf	___fldiv@new_exp
  9406  01B6' 01B7'              	clrf	___fldiv@new_exp+1
  9407  01B7'                    l3935:
  9408  01B7' 3000               	movlw	0
  9409  01B8' 00AB'              	movwf	___fldiv@b+3
  9410  01B9' 3000               	movlw	0
  9411  01BA' 00AA'              	movwf	___fldiv@b+2
  9412  01BB' 3000               	movlw	0
  9413  01BC' 00A9'              	movwf	___fldiv@b+1
  9414  01BD' 3000               	movlw	0
  9415  01BE' 00A8'              	movwf	___fldiv@b
  9416  01BF'                    l3937:
  9417  01BF' 01B5'              	clrf	___fldiv@sign
  9418  01C0'                    l803:
  9419  01C0' 1283               	bcf	3,5	;RP0=0, select bank0
  9420  01C1' 1303               	bcf	3,6	;RP1=0, select bank0
  9421  01C2' 0836'              	movf	___fldiv@new_exp,w
  9422  01C3' 00AC'              	movwf	??___fldiv
  9423  01C4' 082C'              	movf	??___fldiv,w
  9424  01C5' 00BC'              	movwf	___fldiv@bexp
  9425  01C6'                    l3939:
  9426  01C6' 1C3C'              	btfss	___fldiv@bexp,0
  9427  01C7' 2800'              	goto	u6111
  9428  01C8' 2800'              	goto	u6110
  9429  01C9'                    u6111:
  9430  01C9' 2800'              	goto	l3943
  9431  01CA'                    u6110:
  9432  01CA'                    l3941:
  9433  01CA' 17AA'              	bsf	___fldiv@b+2,7
  9434  01CB' 2800'              	goto	l805
  9435  01CC'                    l3943:
  9436  01CC' 307F               	movlw	127
  9437  01CD' 00AC'              	movwf	??___fldiv
  9438  01CE' 082C'              	movf	??___fldiv,w
  9439  01CF' 05AA'              	andwf	___fldiv@b+2,f
  9440  01D0'                    l805:
  9441  01D0' 083C'              	movf	___fldiv@bexp,w
  9442  01D1' 00AC'              	movwf	??___fldiv
  9443  01D2' 1003               	clrc
  9444  01D3' 0C2C'              	rrf	??___fldiv,w
  9445  01D4' 00AD'              	movwf	??___fldiv+1
  9446  01D5' 082D'              	movf	??___fldiv+1,w
  9447  01D6' 00AB'              	movwf	___fldiv@b+3
  9448  01D7' 0835'              	movf	___fldiv@sign,w
  9449  01D8' 00AC'              	movwf	??___fldiv
  9450  01D9' 082C'              	movf	??___fldiv,w
  9451  01DA' 04AB'              	iorwf	___fldiv@b+3,f
  9452  01DB' 2800'              	goto	l3851
  9453  01DC'                    l783:
  9454  01DC' 0008               	return
  9455  01DD'                    __end_of___fldiv:
  9456                           
  9457                           	psect	text25
  9458  0000'                    __ptext25:	
  9459 ;; *************** function _Lcd_Write_String *****************
  9460 ;; Defined at:
  9461 ;;		line 54 in file "LCD8.c"
  9462 ;; Parameters:    Size  Location     Type
  9463 ;;  a               2    6[COMMON] PTR unsigned char 
  9464 ;;		 -> str_contador(20), STR_5(3), str_vol2(20), STR_3(3), 
  9465 ;;		 -> str_vol1(20), STR_1(16), 
  9466 ;; Auto vars:     Size  Location     Type
  9467 ;;  i               2    8[COMMON] int 
  9468 ;; Return value:  Size  Location     Type
  9469 ;;                  1    wreg      void 
  9470 ;; Registers used:
  9471 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9472 ;; Tracked objects:
  9473 ;;		On entry : 0/0
  9474 ;;		On exit  : 0/0
  9475 ;;		Unchanged: 0/0
  9476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9477 ;;      Params:         2       0       0       0       0
  9478 ;;      Locals:         2       0       0       0       0
  9479 ;;      Temps:          0       3       0       0       0
  9480 ;;      Totals:         4       3       0       0       0
  9481 ;;Total ram usage:        7 bytes
  9482 ;; Hardware stack levels used:    1
  9483 ;; Hardware stack levels required when called:    4
  9484 ;; This function calls:
  9485 ;;		_Lcd_Write_Char
  9486 ;; This function is called by:
  9487 ;;		_main
  9488 ;; This function uses a non-reentrant model
  9489 ;;
  9490                           
  9491                           
  9492                           ;psect for function _Lcd_Write_String
  9493  0000'                    _Lcd_Write_String:
  9494  0000'                    l4497:	
  9495                           ;incstack = 0
  9496                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9497                           
  9498                           
  9499                           ;LCD8.c: 55:     int i;;LCD8.c: 56:     for (i = 0; a[i] != '\0'; i++)
  9500  0000' 0188'              	clrf	Lcd_Write_String@i
  9501  0001' 0189'              	clrf	Lcd_Write_String@i+1
  9502  0002' 2800'              	goto	l4503
  9503  0003'                    l4499:
  9504                           
  9505                           ;LCD8.c: 57:         Lcd_Write_Char(a[i]);
  9506  0003' 0808'              	movf	Lcd_Write_String@i,w
  9507  0004' 0706'              	addwf	Lcd_Write_String@a,w
  9508  0005' 0081'              	movwf	??_Lcd_Write_String+1
  9509  0006' 0807'              	movf	Lcd_Write_String@a+1,w
  9510  0007' 0080'              	movwf	??_Lcd_Write_String
  9511  0008' 1803               	skipnc
  9512  0009' 0A80'              	incf	??_Lcd_Write_String,f
  9513  000A' 1F88'              	btfss	Lcd_Write_String@i,7
  9514  000B' 2800'              	goto	u7130
  9515  000C' 0380'              	decf	??_Lcd_Write_String,f
  9516  000D'                    u7130:
  9517  000D' 1283               	bcf	3,5	;RP0=0, select bank0
  9518  000E' 1303               	bcf	3,6	;RP1=0, select bank0
  9519  000F' 0800'              	movf	??_Lcd_Write_String,w
  9520  0010' 0082'              	movwf	??_Lcd_Write_String+2
  9521  0011' 0802'              	movf	??_Lcd_Write_String+2,w
  9522  0012' 00FF               	movwf	btemp+1
  9523  0013' 0801'              	movf	??_Lcd_Write_String+1,w
  9524  0014' 0084               	movwf	4
  9525  0015' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  9526  001A' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_Char
  9527  001F'                    l4501:
  9528  001F' 3001               	movlw	1
  9529  0020' 0788'              	addwf	Lcd_Write_String@i,f
  9530  0021' 1803               	skipnc
  9531  0022' 0A89'              	incf	Lcd_Write_String@i+1,f
  9532  0023' 3000               	movlw	0
  9533  0024' 0789'              	addwf	Lcd_Write_String@i+1,f
  9534  0025'                    l4503:
  9535  0025' 0808'              	movf	Lcd_Write_String@i,w
  9536  0026' 0706'              	addwf	Lcd_Write_String@a,w
  9537  0027' 1283               	bcf	3,5	;RP0=0, select bank0
  9538  0028' 1303               	bcf	3,6	;RP1=0, select bank0
  9539  0029' 0081'              	movwf	??_Lcd_Write_String+1
  9540  002A' 0807'              	movf	Lcd_Write_String@a+1,w
  9541  002B' 0080'              	movwf	??_Lcd_Write_String
  9542  002C' 1803               	skipnc
  9543  002D' 0A80'              	incf	??_Lcd_Write_String,f
  9544  002E' 1F88'              	btfss	Lcd_Write_String@i,7
  9545  002F' 2800'              	goto	u7140
  9546  0030' 0380'              	decf	??_Lcd_Write_String,f
  9547  0031'                    u7140:
  9548  0031' 1283               	bcf	3,5	;RP0=0, select bank0
  9549  0032' 1303               	bcf	3,6	;RP1=0, select bank0
  9550  0033' 0800'              	movf	??_Lcd_Write_String,w
  9551  0034' 0082'              	movwf	??_Lcd_Write_String+2
  9552  0035' 0802'              	movf	??_Lcd_Write_String+2,w
  9553  0036' 00FF               	movwf	btemp+1
  9554  0037' 0801'              	movf	??_Lcd_Write_String+1,w
  9555  0038' 0084               	movwf	4
  9556  0039' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  9557  003E' 3A00               	xorlw	0
  9558  003F' 1D03               	skipz
  9559  0040' 2800'              	goto	u7151
  9560  0041' 2800'              	goto	u7150
  9561  0042'                    u7151:
  9562  0042' 2800'              	goto	l4499
  9563  0043'                    u7150:
  9564  0043'                    l180:
  9565  0043' 0008               	return
  9566  0044'                    __end_of_Lcd_Write_String:
  9567                           
  9568                           	psect	text26
  9569  0000'                    __ptext26:	
  9570 ;; *************** function _Lcd_Write_Char *****************
  9571 ;; Defined at:
  9572 ;;		line 46 in file "LCD8.c"
  9573 ;; Parameters:    Size  Location     Type
  9574 ;;  a               1    wreg     unsigned char 
  9575 ;; Auto vars:     Size  Location     Type
  9576 ;;  a               1    5[COMMON] unsigned char 
  9577 ;; Return value:  Size  Location     Type
  9578 ;;                  1    wreg      void 
  9579 ;; Registers used:
  9580 ;;		wreg, status,2, status,0, pclath, cstack
  9581 ;; Tracked objects:
  9582 ;;		On entry : 0/0
  9583 ;;		On exit  : 0/0
  9584 ;;		Unchanged: 0/0
  9585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9586 ;;      Params:         0       0       0       0       0
  9587 ;;      Locals:         1       0       0       0       0
  9588 ;;      Temps:          1       0       0       0       0
  9589 ;;      Totals:         2       0       0       0       0
  9590 ;;Total ram usage:        2 bytes
  9591 ;; Hardware stack levels used:    1
  9592 ;; Hardware stack levels required when called:    3
  9593 ;; This function calls:
  9594 ;;		_Lcd_Port
  9595 ;; This function is called by:
  9596 ;;		_Lcd_Write_String
  9597 ;; This function uses a non-reentrant model
  9598 ;;
  9599                           
  9600                           
  9601                           ;psect for function _Lcd_Write_Char
  9602  0000'                    _Lcd_Write_Char:
  9603                           
  9604                           ;incstack = 0
  9605                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9606                           ;Lcd_Write_Char@a stored from wreg
  9607  0000' 0085'              	movwf	Lcd_Write_Char@a
  9608  0001'                    l4191:
  9609                           
  9610                           ;LCD8.c: 47:     RB0 = 1;
  9611  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  9612  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  9613  0003' 1406               	bsf	6,0	;volatile
  9614  0004'                    l4193:
  9615                           
  9616                           ;LCD8.c: 48:     Lcd_Port(a);
  9617  0004' 0805'              	movf	Lcd_Write_Char@a,w
  9618  0005' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Port
  9619  000A'                    l4195:
  9620                           
  9621                           ;LCD8.c: 49:     RB1 = 1;
  9622  000A' 1283               	bcf	3,5	;RP0=0, select bank0
  9623  000B' 1303               	bcf	3,6	;RP1=0, select bank0
  9624  000C' 1486               	bsf	6,1	;volatile
  9625  000D'                    l4197:
  9626                           
  9627                           ;LCD8.c: 50:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9628  000D' 301A               	movlw	26
  9629  000E' 0084'              	movwf	??_Lcd_Write_Char
  9630  000F'                    u7637:
  9631  000F' 0B84'              	decfsz	??_Lcd_Write_Char,f
  9632  0010' 2800'              	goto	u7637
  9633  0011' 0000               	nop
  9634  0012'                    l4199:
  9635                           
  9636                           ;LCD8.c: 51:     RB1 = 0;
  9637  0012' 1283               	bcf	3,5	;RP0=0, select bank0
  9638  0013' 1303               	bcf	3,6	;RP1=0, select bank0
  9639  0014' 1086               	bcf	6,1	;volatile
  9640  0015'                    l174:
  9641  0015' 0008               	return
  9642  0016'                    __end_of_Lcd_Write_Char:
  9643                           
  9644                           	psect	text27
  9645  0000'                    __ptext27:	
  9646 ;; *************** function _Lcd_Set_Cursor *****************
  9647 ;; Defined at:
  9648 ;;		line 21 in file "LCD8.c"
  9649 ;; Parameters:    Size  Location     Type
  9650 ;;  a               1    wreg     unsigned char 
  9651 ;;  b               1    7[COMMON] unsigned char 
  9652 ;; Auto vars:     Size  Location     Type
  9653 ;;  a               1    8[COMMON] unsigned char 
  9654 ;; Return value:  Size  Location     Type
  9655 ;;                  1    wreg      void 
  9656 ;; Registers used:
  9657 ;;		wreg, status,2, status,0, pclath, cstack
  9658 ;; Tracked objects:
  9659 ;;		On entry : 0/0
  9660 ;;		On exit  : 0/0
  9661 ;;		Unchanged: 0/0
  9662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9663 ;;      Params:         1       0       0       0       0
  9664 ;;      Locals:         1       0       0       0       0
  9665 ;;      Temps:          0       0       0       0       0
  9666 ;;      Totals:         2       0       0       0       0
  9667 ;;Total ram usage:        2 bytes
  9668 ;; Hardware stack levels used:    1
  9669 ;; Hardware stack levels required when called:    4
  9670 ;; This function calls:
  9671 ;;		_Lcd_Cmd
  9672 ;; This function is called by:
  9673 ;;		_main
  9674 ;; This function uses a non-reentrant model
  9675 ;;
  9676                           
  9677                           
  9678                           ;psect for function _Lcd_Set_Cursor
  9679  0000'                    _Lcd_Set_Cursor:
  9680                           
  9681                           ;incstack = 0
  9682                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9683                           ;Lcd_Set_Cursor@a stored from wreg
  9684  0000' 0088'              	movwf	Lcd_Set_Cursor@a
  9685  0001'                    l4489:
  9686                           
  9687                           ;LCD8.c: 22:     if (a == 1) {
  9688  0001' 0308'              	decf	Lcd_Set_Cursor@a,w
  9689  0002' 1D03               	btfss	3,2
  9690  0003' 2800'              	goto	u7111
  9691  0004' 2800'              	goto	u7110
  9692  0005'                    u7111:
  9693  0005' 2800'              	goto	l4493
  9694  0006'                    u7110:
  9695  0006'                    l4491:
  9696                           
  9697                           ;LCD8.c: 23:         Lcd_Cmd(0x80 + b - 1);
  9698  0006' 0807'              	movf	Lcd_Set_Cursor@b,w
  9699  0007' 3E7F               	addlw	127
  9700  0008' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  9701                           
  9702                           ;LCD8.c: 24:     } else if (a == 2) {
  9703  000D' 2800'              	goto	l168
  9704  000E'                    l4493:
  9705  000E' 3002               	movlw	2
  9706  000F' 0608'              	xorwf	Lcd_Set_Cursor@a,w
  9707  0010' 1D03               	btfss	3,2
  9708  0011' 2800'              	goto	u7121
  9709  0012' 2800'              	goto	u7120
  9710  0013'                    u7121:
  9711  0013' 2800'              	goto	l168
  9712  0014'                    u7120:
  9713  0014'                    l4495:
  9714                           
  9715                           ;LCD8.c: 25:         Lcd_Cmd(0xC0 + b - 1);
  9716  0014' 0807'              	movf	Lcd_Set_Cursor@b,w
  9717  0015' 3EBF               	addlw	191
  9718  0016' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  9719  001B'                    l168:
  9720  001B' 0008               	return
  9721  001C'                    __end_of_Lcd_Set_Cursor:
  9722                           
  9723                           	psect	text28
  9724  0000'                    __ptext28:	
  9725 ;; *************** function _Lcd_Init *****************
  9726 ;; Defined at:
  9727 ;;		line 29 in file "LCD8.c"
  9728 ;; Parameters:    Size  Location     Type
  9729 ;;		None
  9730 ;; Auto vars:     Size  Location     Type
  9731 ;;		None
  9732 ;; Return value:  Size  Location     Type
  9733 ;;                  1    wreg      void 
  9734 ;; Registers used:
  9735 ;;		wreg, status,2, status,0, pclath, cstack
  9736 ;; Tracked objects:
  9737 ;;		On entry : 0/0
  9738 ;;		On exit  : 0/0
  9739 ;;		Unchanged: 0/0
  9740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9741 ;;      Params:         0       0       0       0       0
  9742 ;;      Locals:         0       0       0       0       0
  9743 ;;      Temps:          2       0       0       0       0
  9744 ;;      Totals:         2       0       0       0       0
  9745 ;;Total ram usage:        2 bytes
  9746 ;; Hardware stack levels used:    1
  9747 ;; Hardware stack levels required when called:    4
  9748 ;; This function calls:
  9749 ;;		_Lcd_Cmd
  9750 ;;		_Lcd_Port
  9751 ;; This function is called by:
  9752 ;;		_main
  9753 ;; This function uses a non-reentrant model
  9754 ;;
  9755                           
  9756                           
  9757                           ;psect for function _Lcd_Init
  9758  0000'                    _Lcd_Init:
  9759  0000'                    l4465:	
  9760                           ;incstack = 0
  9761                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9762                           
  9763                           
  9764                           ;LCD8.c: 30:     _delay((unsigned long)((15)*(8000000/4000.0)));
  9765  0000' 3027               	movlw	39
  9766  0001' 0088'              	movwf	??_Lcd_Init+1
  9767  0002' 30F5               	movlw	245
  9768  0003' 0087'              	movwf	??_Lcd_Init
  9769  0004'                    u7647:
  9770  0004' 0B87'              	decfsz	??_Lcd_Init,f
  9771  0005' 2800'              	goto	u7647
  9772  0006' 0B88'              	decfsz	??_Lcd_Init+1,f
  9773  0007' 2800'              	goto	u7647
  9774  0008'                    l4467:
  9775                           
  9776                           ;LCD8.c: 31:     Lcd_Port(0x00);
  9777  0008' 3000               	movlw	0
  9778  0009' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Port
  9779  000E'                    l4469:
  9780                           
  9781                           ;LCD8.c: 32:     _delay((unsigned long)((20)*(8000000/4000.0)));
  9782  000E' 3034               	movlw	52
  9783  000F' 0088'              	movwf	??_Lcd_Init+1
  9784  0010' 30F1               	movlw	241
  9785  0011' 0087'              	movwf	??_Lcd_Init
  9786  0012'                    u7657:
  9787  0012' 0B87'              	decfsz	??_Lcd_Init,f
  9788  0013' 2800'              	goto	u7657
  9789  0014' 0B88'              	decfsz	??_Lcd_Init+1,f
  9790  0015' 2800'              	goto	u7657
  9791  0016' 2800'              	nop2
  9792                           
  9793                           ;LCD8.c: 33:     Lcd_Cmd(0x30);
  9794  0017' 3030               	movlw	48
  9795  0018' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  9796  001D'                    l4471:
  9797                           
  9798                           ;LCD8.c: 34:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9799  001D' 300D               	movlw	13
  9800  001E' 0088'              	movwf	??_Lcd_Init+1
  9801  001F' 30FB               	movlw	251
  9802  0020' 0087'              	movwf	??_Lcd_Init
  9803  0021'                    u7667:
  9804  0021' 0B87'              	decfsz	??_Lcd_Init,f
  9805  0022' 2800'              	goto	u7667
  9806  0023' 0B88'              	decfsz	??_Lcd_Init+1,f
  9807  0024' 2800'              	goto	u7667
  9808  0025' 2800'              	nop2
  9809  0026'                    l4473:
  9810                           
  9811                           ;LCD8.c: 35:     Lcd_Cmd(0x30);
  9812  0026' 3030               	movlw	48
  9813  0027' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  9814                           
  9815                           ;LCD8.c: 36:     _delay((unsigned long)((160)*(8000000/4000000.0)));
  9816  002C' 306A               	movlw	106
  9817  002D' 0087'              	movwf	??_Lcd_Init
  9818  002E'                    u7677:
  9819  002E' 0B87'              	decfsz	??_Lcd_Init,f
  9820  002F' 2800'              	goto	u7677
  9821  0030' 0000               	nop
  9822  0031'                    l4475:
  9823                           
  9824                           ;LCD8.c: 37:     Lcd_Cmd(0x30);
  9825  0031' 3030               	movlw	48
  9826  0032' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  9827  0037'                    l4477:
  9828                           
  9829                           ;LCD8.c: 39:     Lcd_Cmd(0x38);
  9830  0037' 3038               	movlw	56
  9831  0038' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  9832  003D'                    l4479:
  9833                           
  9834                           ;LCD8.c: 40:     Lcd_Cmd(0x10);
  9835  003D' 3010               	movlw	16
  9836  003E' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  9837  0043'                    l4481:
  9838                           
  9839                           ;LCD8.c: 41:     Lcd_Cmd(0x01);
  9840  0043' 3001               	movlw	1
  9841  0044' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  9842  0049'                    l4483:
  9843                           
  9844                           ;LCD8.c: 42:     Lcd_Cmd(0x06);
  9845  0049' 3006               	movlw	6
  9846  004A' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  9847  004F'                    l4485:
  9848                           
  9849                           ;LCD8.c: 43:     Lcd_Cmd(0x0C);
  9850  004F' 300C               	movlw	12
  9851  0050' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  9852  0055'                    l171:
  9853  0055' 0008               	return
  9854  0056'                    __end_of_Lcd_Init:
  9855                           
  9856                           	psect	text29
  9857  0000'                    __ptext29:	
  9858 ;; *************** function _Lcd_Clear *****************
  9859 ;; Defined at:
  9860 ;;		line 16 in file "LCD8.c"
  9861 ;; Parameters:    Size  Location     Type
  9862 ;;		None
  9863 ;; Auto vars:     Size  Location     Type
  9864 ;;		None
  9865 ;; Return value:  Size  Location     Type
  9866 ;;                  1    wreg      void 
  9867 ;; Registers used:
  9868 ;;		wreg, status,2, status,0, pclath, cstack
  9869 ;; Tracked objects:
  9870 ;;		On entry : 0/0
  9871 ;;		On exit  : 0/0
  9872 ;;		Unchanged: 0/0
  9873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9874 ;;      Params:         0       0       0       0       0
  9875 ;;      Locals:         0       0       0       0       0
  9876 ;;      Temps:          0       0       0       0       0
  9877 ;;      Totals:         0       0       0       0       0
  9878 ;;Total ram usage:        0 bytes
  9879 ;; Hardware stack levels used:    1
  9880 ;; Hardware stack levels required when called:    4
  9881 ;; This function calls:
  9882 ;;		_Lcd_Cmd
  9883 ;; This function is called by:
  9884 ;;		_main
  9885 ;; This function uses a non-reentrant model
  9886 ;;
  9887                           
  9888                           
  9889                           ;psect for function _Lcd_Clear
  9890  0000'                    _Lcd_Clear:
  9891  0000'                    l4487:	
  9892                           ;incstack = 0
  9893                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  9894                           
  9895                           
  9896                           ;LCD8.c: 17:     Lcd_Cmd(0);
  9897  0000' 3000               	movlw	0
  9898  0001' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  9899                           
  9900                           ;LCD8.c: 18:     Lcd_Cmd(1);
  9901  0006' 3001               	movlw	1
  9902  0007' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  9903  000C'                    l162:
  9904  000C' 0008               	return
  9905  000D'                    __end_of_Lcd_Clear:
  9906                           
  9907                           	psect	text30
  9908  0000'                    __ptext30:	
  9909 ;; *************** function _Lcd_Cmd *****************
  9910 ;; Defined at:
  9911 ;;		line 8 in file "LCD8.c"
  9912 ;; Parameters:    Size  Location     Type
  9913 ;;  a               1    wreg     unsigned char 
  9914 ;; Auto vars:     Size  Location     Type
  9915 ;;  a               1    6[COMMON] unsigned char 
  9916 ;; Return value:  Size  Location     Type
  9917 ;;                  1    wreg      void 
  9918 ;; Registers used:
  9919 ;;		wreg, status,2, status,0, pclath, cstack
  9920 ;; Tracked objects:
  9921 ;;		On entry : 0/0
  9922 ;;		On exit  : 0/0
  9923 ;;		Unchanged: 0/0
  9924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9925 ;;      Params:         0       0       0       0       0
  9926 ;;      Locals:         1       0       0       0       0
  9927 ;;      Temps:          2       0       0       0       0
  9928 ;;      Totals:         3       0       0       0       0
  9929 ;;Total ram usage:        3 bytes
  9930 ;; Hardware stack levels used:    1
  9931 ;; Hardware stack levels required when called:    3
  9932 ;; This function calls:
  9933 ;;		_Lcd_Port
  9934 ;; This function is called by:
  9935 ;;		_Lcd_Clear
  9936 ;;		_Lcd_Set_Cursor
  9937 ;;		_Lcd_Init
  9938 ;;		_Lcd_Shift_Right
  9939 ;;		_Lcd_Shift_Left
  9940 ;; This function uses a non-reentrant model
  9941 ;;
  9942                           
  9943                           
  9944                           ;psect for function _Lcd_Cmd
  9945  0000'                    _Lcd_Cmd:
  9946                           
  9947                           ;incstack = 0
  9948                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9949                           ;Lcd_Cmd@a stored from wreg
  9950  0000' 0086'              	movwf	Lcd_Cmd@a
  9951  0001'                    l4181:
  9952                           
  9953                           ;LCD8.c: 9:     RB0 = 0;
  9954  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  9955  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  9956  0003' 1006               	bcf	6,0	;volatile
  9957  0004'                    l4183:
  9958                           
  9959                           ;LCD8.c: 10:     Lcd_Port(a);
  9960  0004' 0806'              	movf	Lcd_Cmd@a,w
  9961  0005' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Port
  9962  000A'                    l4185:
  9963                           
  9964                           ;LCD8.c: 11:     RB1 = 1;
  9965  000A' 1283               	bcf	3,5	;RP0=0, select bank0
  9966  000B' 1303               	bcf	3,6	;RP1=0, select bank0
  9967  000C' 1486               	bsf	6,1	;volatile
  9968  000D'                    l4187:
  9969                           
  9970                           ;LCD8.c: 12:     _delay((unsigned long)((4)*(8000000/4000.0)));
  9971  000D' 300B               	movlw	11
  9972  000E' 0085'              	movwf	??_Lcd_Cmd+1
  9973  000F' 3062               	movlw	98
  9974  0010' 0084'              	movwf	??_Lcd_Cmd
  9975  0011'                    u7687:
  9976  0011' 0B84'              	decfsz	??_Lcd_Cmd,f
  9977  0012' 2800'              	goto	u7687
  9978  0013' 0B85'              	decfsz	??_Lcd_Cmd+1,f
  9979  0014' 2800'              	goto	u7687
  9980  0015' 0000               	nop
  9981  0016'                    l4189:
  9982                           
  9983                           ;LCD8.c: 13:     RB1 = 0;
  9984  0016' 1283               	bcf	3,5	;RP0=0, select bank0
  9985  0017' 1303               	bcf	3,6	;RP1=0, select bank0
  9986  0018' 1086               	bcf	6,1	;volatile
  9987  0019'                    l159:
  9988  0019' 0008               	return
  9989  001A'                    __end_of_Lcd_Cmd:
  9990                           
  9991                           	psect	text31
  9992  0000'                    __ptext31:	
  9993 ;; *************** function _Lcd_Port *****************
  9994 ;; Defined at:
  9995 ;;		line 4 in file "LCD8.c"
  9996 ;; Parameters:    Size  Location     Type
  9997 ;;  a               1    wreg     unsigned char 
  9998 ;; Auto vars:     Size  Location     Type
  9999 ;;  a               1    3[COMMON] unsigned char 
 10000 ;; Return value:  Size  Location     Type
 10001 ;;                  1    wreg      void 
 10002 ;; Registers used:
 10003 ;;		wreg
 10004 ;; Tracked objects:
 10005 ;;		On entry : 0/0
 10006 ;;		On exit  : 0/0
 10007 ;;		Unchanged: 0/0
 10008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10009 ;;      Params:         0       0       0       0       0
 10010 ;;      Locals:         1       0       0       0       0
 10011 ;;      Temps:          0       0       0       0       0
 10012 ;;      Totals:         1       0       0       0       0
 10013 ;;Total ram usage:        1 bytes
 10014 ;; Hardware stack levels used:    1
 10015 ;; Hardware stack levels required when called:    2
 10016 ;; This function calls:
 10017 ;;		Nothing
 10018 ;; This function is called by:
 10019 ;;		_Lcd_Cmd
 10020 ;;		_Lcd_Init
 10021 ;;		_Lcd_Write_Char
 10022 ;; This function uses a non-reentrant model
 10023 ;;
 10024                           
 10025                           
 10026                           ;psect for function _Lcd_Port
 10027  0000'                    _Lcd_Port:
 10028                           
 10029                           ;incstack = 0
 10030                           ; Regs used in _Lcd_Port: [wreg]
 10031                           ;Lcd_Port@a stored from wreg
 10032  0000' 0083'              	movwf	Lcd_Port@a
 10033  0001'                    l4135:
 10034                           
 10035                           ;LCD8.c: 5:     PORTD = a;
 10036  0001' 0803'              	movf	Lcd_Port@a,w
 10037  0002' 1283               	bcf	3,5	;RP0=0, select bank0
 10038  0003' 1303               	bcf	3,6	;RP1=0, select bank0
 10039  0004' 0088               	movwf	8	;volatile
 10040  0005'                    l156:
 10041  0005' 0008               	return
 10042  0006'                    __end_of_Lcd_Port:
 10043                           
 10044                           	psect	text32
 10045  0000'                    __ptext32:	
 10046 ;; *************** function _EUSART_conf *****************
 10047 ;; Defined at:
 10048 ;;		line 3 in file "EUSART.c"
 10049 ;; Parameters:    Size  Location     Type
 10050 ;;		None
 10051 ;; Auto vars:     Size  Location     Type
 10052 ;;		None
 10053 ;; Return value:  Size  Location     Type
 10054 ;;                  1    wreg      void 
 10055 ;; Registers used:
 10056 ;;		wreg, status,2
 10057 ;; Tracked objects:
 10058 ;;		On entry : 0/0
 10059 ;;		On exit  : 0/0
 10060 ;;		Unchanged: 0/0
 10061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10062 ;;      Params:         0       0       0       0       0
 10063 ;;      Locals:         0       0       0       0       0
 10064 ;;      Temps:          0       0       0       0       0
 10065 ;;      Totals:         0       0       0       0       0
 10066 ;;Total ram usage:        0 bytes
 10067 ;; Hardware stack levels used:    1
 10068 ;; Hardware stack levels required when called:    2
 10069 ;; This function calls:
 10070 ;;		Nothing
 10071 ;; This function is called by:
 10072 ;;		_main
 10073 ;; This function uses a non-reentrant model
 10074 ;;
 10075                           
 10076                           
 10077                           ;psect for function _EUSART_conf
 10078  0000'                    _EUSART_conf:
 10079  0000'                    l3531:	
 10080                           ;incstack = 0
 10081                           ; Regs used in _EUSART_conf: [wreg+status,2]
 10082                           
 10083                           
 10084                           ;EUSART.c: 4:     TXSTAbits.TXEN=1;
 10085  0000' 1683               	bsf	3,5	;RP0=1, select bank1
 10086  0001' 1303               	bcf	3,6	;RP1=0, select bank1
 10087  0002' 1698               	bsf	24,5	;volatile
 10088                           
 10089                           ;EUSART.c: 5:     TXSTAbits.SYNC=0;
 10090  0003' 1218               	bcf	24,4	;volatile
 10091                           
 10092                           ;EUSART.c: 6:     RCSTAbits.SPEN=1;
 10093  0004' 1283               	bcf	3,5	;RP0=0, select bank0
 10094  0005' 1303               	bcf	3,6	;RP1=0, select bank0
 10095  0006' 1798               	bsf	24,7	;volatile
 10096                           
 10097                           ;EUSART.c: 7:     TXSTAbits.TX9=0;
 10098  0007' 1683               	bsf	3,5	;RP0=1, select bank1
 10099  0008' 1303               	bcf	3,6	;RP1=0, select bank1
 10100  0009' 1318               	bcf	24,6	;volatile
 10101                           
 10102                           ;EUSART.c: 8:     RCSTAbits.RC9=0;
 10103  000A' 1283               	bcf	3,5	;RP0=0, select bank0
 10104  000B' 1303               	bcf	3,6	;RP1=0, select bank0
 10105  000C' 1318               	bcf	24,6	;volatile
 10106                           
 10107                           ;EUSART.c: 9:     BAUDCTLbits.BRG16 = 0;
 10108  000D' 1683               	bsf	3,5	;RP0=1, select bank3
 10109  000E' 1703               	bsf	3,6	;RP1=1, select bank3
 10110  000F' 1187               	bcf	7,3	;volatile
 10111  0010'                    l3533:
 10112                           
 10113                           ;EUSART.c: 10:     SPBRG = 8000000/(16*(9600+1));
 10114  0010' 3062               	movlw	98
 10115  0011' 1683               	bsf	3,5	;RP0=1, select bank1
 10116  0012' 1303               	bcf	3,6	;RP1=0, select bank1
 10117  0013' 0099               	movwf	25	;volatile
 10118  0014'                    l3535:
 10119                           
 10120                           ;EUSART.c: 11:     TXSTAbits.BRGH=1;
 10121  0014' 1518               	bsf	24,2	;volatile
 10122  0015'                    l3537:
 10123                           
 10124                           ;EUSART.c: 12:     SPBRGH = 0;
 10125  0015' 019A               	clrf	26	;volatile
 10126  0016'                    l3539:
 10127                           
 10128                           ;EUSART.c: 13:     RCSTAbits.CREN=1;
 10129  0016' 1283               	bcf	3,5	;RP0=0, select bank0
 10130  0017' 1303               	bcf	3,6	;RP1=0, select bank0
 10131  0018' 1618               	bsf	24,4	;volatile
 10132  0019'                    l203:
 10133  0019' 0008               	return
 10134  001A'                    __end_of_EUSART_conf:
 10135                           
 10136                           	psect	text33
 10137  0000'                    __ptext33:	
 10138 ;; *************** function _ADC_setup *****************
 10139 ;; Defined at:
 10140 ;;		line 3 in file "ADC.c"
 10141 ;; Parameters:    Size  Location     Type
 10142 ;;  ConClock        1    wreg     unsigned char 
 10143 ;;  Channel         1    3[COMMON] unsigned char 
 10144 ;;  Format          1    4[COMMON] unsigned char 
 10145 ;;  Vref            1    5[COMMON] unsigned char 
 10146 ;; Auto vars:     Size  Location     Type
 10147 ;;  ConClock        1    8[COMMON] unsigned char 
 10148 ;; Return value:  Size  Location     Type
 10149 ;;                  1    wreg      void 
 10150 ;; Registers used:
 10151 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10152 ;; Tracked objects:
 10153 ;;		On entry : 0/0
 10154 ;;		On exit  : 0/0
 10155 ;;		Unchanged: 0/0
 10156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10157 ;;      Params:         3       0       0       0       0
 10158 ;;      Locals:         1       0       0       0       0
 10159 ;;      Temps:          2       0       0       0       0
 10160 ;;      Totals:         6       0       0       0       0
 10161 ;;Total ram usage:        6 bytes
 10162 ;; Hardware stack levels used:    1
 10163 ;; Hardware stack levels required when called:    2
 10164 ;; This function calls:
 10165 ;;		Nothing
 10166 ;; This function is called by:
 10167 ;;		_main
 10168 ;; This function uses a non-reentrant model
 10169 ;;
 10170                           
 10171                           
 10172                           ;psect for function _ADC_setup
 10173  0000'                    _ADC_setup:
 10174                           
 10175                           ;incstack = 0
 10176                           ; Regs used in _ADC_setup: [wreg-fsr0h+status,2+status,0]
 10177                           ;ADC_setup@ConClock stored from wreg
 10178  0000' 0088'              	movwf	ADC_setup@ConClock
 10179  0001'                    l3435:
 10180                           
 10181                           ;ADC.c: 4:     switch (ConClock) {
 10182  0001' 2800'              	goto	l3449
 10183  0002'                    l3437:
 10184                           
 10185                           ;ADC.c: 6:             ADCON0bits.ADCS = 0b00;
 10186  0002' 303F               	movlw	-193
 10187  0003' 1283               	bcf	3,5	;RP0=0, select bank0
 10188  0004' 1303               	bcf	3,6	;RP1=0, select bank0
 10189  0005' 059F               	andwf	31,f	;volatile
 10190                           
 10191                           ;ADC.c: 7:             break;
 10192  0006' 2800'              	goto	l3487
 10193  0007'                    l3439:
 10194                           
 10195                           ;ADC.c: 9:             ADCON0bits.ADCS = 0b01;
 10196  0007' 1283               	bcf	3,5	;RP0=0, select bank0
 10197  0008' 1303               	bcf	3,6	;RP1=0, select bank0
 10198  0009' 081F               	movf	31,w	;volatile
 10199  000A' 393F               	andlw	-193
 10200  000B' 3840               	iorlw	64
 10201  000C' 009F               	movwf	31	;volatile
 10202                           
 10203                           ;ADC.c: 10:             break;
 10204  000D' 2800'              	goto	l3487
 10205  000E'                    l3441:
 10206                           
 10207                           ;ADC.c: 12:             ADCON0bits.ADCS = 0b10;
 10208  000E' 1283               	bcf	3,5	;RP0=0, select bank0
 10209  000F' 1303               	bcf	3,6	;RP1=0, select bank0
 10210  0010' 081F               	movf	31,w	;volatile
 10211  0011' 393F               	andlw	-193
 10212  0012' 3880               	iorlw	128
 10213  0013' 009F               	movwf	31	;volatile
 10214                           
 10215                           ;ADC.c: 13:             break;
 10216  0014' 2800'              	goto	l3487
 10217  0015'                    l3443:
 10218                           
 10219                           ;ADC.c: 15:             ADCON0bits.ADCS = 0b11;
 10220  0015' 30C0               	movlw	192
 10221  0016' 1283               	bcf	3,5	;RP0=0, select bank0
 10222  0017' 1303               	bcf	3,6	;RP1=0, select bank0
 10223  0018' 049F               	iorwf	31,f	;volatile
 10224                           
 10225                           ;ADC.c: 16:             break;
 10226  0019' 2800'              	goto	l3487
 10227  001A'                    l3445:
 10228                           
 10229                           ;ADC.c: 18:             ADCON0bits.ADCS = 0b10;
 10230  001A' 1283               	bcf	3,5	;RP0=0, select bank0
 10231  001B' 1303               	bcf	3,6	;RP1=0, select bank0
 10232  001C' 081F               	movf	31,w	;volatile
 10233  001D' 393F               	andlw	-193
 10234  001E' 3880               	iorlw	128
 10235  001F' 009F               	movwf	31	;volatile
 10236                           
 10237                           ;ADC.c: 19:             break;
 10238  0020' 2800'              	goto	l3487
 10239  0021'                    l3449:
 10240  0021' 0808'              	movf	ADC_setup@ConClock,w
 10241  0022' 0086'              	movwf	??_ADC_setup
 10242  0023' 0187'              	clrf	??_ADC_setup+1
 10243                           
 10244                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10245                           ; Switch size 1, requested type "simple"
 10246                           ; Number of cases is 1, Range of values is 0 to 0
 10247                           ; switch strategies available:
 10248                           ; Name         Instructions Cycles
 10249                           ; simple_byte            4     3 (average)
 10250                           ; direct_byte           11     8 (fixed)
 10251                           ; jumptable            260     6 (fixed)
 10252                           ;	Chosen strategy is simple_byte
 10253  0024' 0807'              	movf	??_ADC_setup+1,w
 10254  0025' 3A00               	xorlw	0	; case 0
 10255  0026' 1903               	skipnz
 10256  0027' 2800'              	goto	l4901
 10257  0028' 2800'              	goto	l3445
 10258  0029'                    l4901:
 10259                           
 10260                           ; Switch size 1, requested type "simple"
 10261                           ; Number of cases is 4, Range of values is 1 to 4
 10262                           ; switch strategies available:
 10263                           ; Name         Instructions Cycles
 10264                           ; simple_byte           13     7 (average)
 10265                           ; direct_byte           23    11 (fixed)
 10266                           ; jumptable            263     9 (fixed)
 10267                           ;	Chosen strategy is simple_byte
 10268  0029' 0806'              	movf	??_ADC_setup,w
 10269  002A' 3A01               	xorlw	1	; case 1
 10270  002B' 1903               	skipnz
 10271  002C' 2800'              	goto	l3437
 10272  002D' 3A03               	xorlw	3	; case 2
 10273  002E' 1903               	skipnz
 10274  002F' 2800'              	goto	l3439
 10275  0030' 3A01               	xorlw	1	; case 3
 10276  0031' 1903               	skipnz
 10277  0032' 2800'              	goto	l3441
 10278  0033' 3A07               	xorlw	7	; case 4
 10279  0034' 1903               	skipnz
 10280  0035' 2800'              	goto	l3443
 10281  0036' 2800'              	goto	l3445
 10282  0037'                    l3451:
 10283                           
 10284                           ;ADC.c: 23:             ADCON0bits.CHS = 0b0000;
 10285  0037' 30C3               	movlw	-61
 10286  0038' 059F               	andwf	31,f	;volatile
 10287                           
 10288                           ;ADC.c: 24:             break;
 10289  0039' 2800'              	goto	l3489
 10290  003A'                    l3453:
 10291                           
 10292                           ;ADC.c: 26:             ADCON0bits.CHS = 0b0001;
 10293  003A' 081F               	movf	31,w	;volatile
 10294  003B' 39C3               	andlw	-61
 10295  003C' 3804               	iorlw	4
 10296  003D' 009F               	movwf	31	;volatile
 10297                           
 10298                           ;ADC.c: 27:             break;
 10299  003E' 2800'              	goto	l3489
 10300  003F'                    l3455:
 10301                           
 10302                           ;ADC.c: 29:             ADCON0bits.CHS = 0b0010;
 10303  003F' 081F               	movf	31,w	;volatile
 10304  0040' 39C3               	andlw	-61
 10305  0041' 3808               	iorlw	8
 10306  0042' 009F               	movwf	31	;volatile
 10307                           
 10308                           ;ADC.c: 30:             break;
 10309  0043' 2800'              	goto	l3489
 10310  0044'                    l3457:
 10311                           
 10312                           ;ADC.c: 32:             ADCON0bits.CHS = 0b0011;
 10313  0044' 081F               	movf	31,w	;volatile
 10314  0045' 39C3               	andlw	-61
 10315  0046' 380C               	iorlw	12
 10316  0047' 009F               	movwf	31	;volatile
 10317                           
 10318                           ;ADC.c: 33:             break;
 10319  0048' 2800'              	goto	l3489
 10320  0049'                    l3459:
 10321                           
 10322                           ;ADC.c: 35:             ADCON0bits.CHS = 0b0100;
 10323  0049' 081F               	movf	31,w	;volatile
 10324  004A' 39C3               	andlw	-61
 10325  004B' 3810               	iorlw	16
 10326  004C' 009F               	movwf	31	;volatile
 10327                           
 10328                           ;ADC.c: 36:             break;
 10329  004D' 2800'              	goto	l3489
 10330  004E'                    l3461:
 10331                           
 10332                           ;ADC.c: 38:             ADCON0bits.CHS = 0b0101;
 10333  004E' 081F               	movf	31,w	;volatile
 10334  004F' 39C3               	andlw	-61
 10335  0050' 3814               	iorlw	20
 10336  0051' 009F               	movwf	31	;volatile
 10337                           
 10338                           ;ADC.c: 39:             break;
 10339  0052' 2800'              	goto	l3489
 10340  0053'                    l3463:
 10341                           
 10342                           ;ADC.c: 41:             ADCON0bits.CHS = 0b0110;
 10343  0053' 081F               	movf	31,w	;volatile
 10344  0054' 39C3               	andlw	-61
 10345  0055' 3818               	iorlw	24
 10346  0056' 009F               	movwf	31	;volatile
 10347                           
 10348                           ;ADC.c: 42:             break;
 10349  0057' 2800'              	goto	l3489
 10350  0058'                    l3465:
 10351                           
 10352                           ;ADC.c: 44:             ADCON0bits.CHS = 0b0111;
 10353  0058' 081F               	movf	31,w	;volatile
 10354  0059' 39C3               	andlw	-61
 10355  005A' 381C               	iorlw	28
 10356  005B' 009F               	movwf	31	;volatile
 10357                           
 10358                           ;ADC.c: 45:             break;
 10359  005C' 2800'              	goto	l3489
 10360  005D'                    l3467:
 10361                           
 10362                           ;ADC.c: 47:             ADCON0bits.CHS = 0b1000;
 10363  005D' 081F               	movf	31,w	;volatile
 10364  005E' 39C3               	andlw	-61
 10365  005F' 3820               	iorlw	32
 10366  0060' 009F               	movwf	31	;volatile
 10367                           
 10368                           ;ADC.c: 48:             break;
 10369  0061' 2800'              	goto	l3489
 10370  0062'                    l3469:
 10371                           
 10372                           ;ADC.c: 50:             ADCON0bits.CHS = 0b1001;
 10373  0062' 081F               	movf	31,w	;volatile
 10374  0063' 39C3               	andlw	-61
 10375  0064' 3824               	iorlw	36
 10376  0065' 009F               	movwf	31	;volatile
 10377                           
 10378                           ;ADC.c: 51:             break;
 10379  0066' 2800'              	goto	l3489
 10380  0067'                    l3471:
 10381                           
 10382                           ;ADC.c: 53:             ADCON0bits.CHS = 0b1010;
 10383  0067' 081F               	movf	31,w	;volatile
 10384  0068' 39C3               	andlw	-61
 10385  0069' 3828               	iorlw	40
 10386  006A' 009F               	movwf	31	;volatile
 10387                           
 10388                           ;ADC.c: 54:             break;
 10389  006B' 2800'              	goto	l3489
 10390  006C'                    l3473:
 10391                           
 10392                           ;ADC.c: 56:             ADCON0bits.CHS = 0b1011;
 10393  006C' 081F               	movf	31,w	;volatile
 10394  006D' 39C3               	andlw	-61
 10395  006E' 382C               	iorlw	44
 10396  006F' 009F               	movwf	31	;volatile
 10397                           
 10398                           ;ADC.c: 57:             break;
 10399  0070' 2800'              	goto	l3489
 10400  0071'                    l3475:
 10401                           
 10402                           ;ADC.c: 59:             ADCON0bits.CHS = 0b1100;
 10403  0071' 081F               	movf	31,w	;volatile
 10404  0072' 39C3               	andlw	-61
 10405  0073' 3830               	iorlw	48
 10406  0074' 009F               	movwf	31	;volatile
 10407                           
 10408                           ;ADC.c: 60:             break;
 10409  0075' 2800'              	goto	l3489
 10410  0076'                    l3477:
 10411                           
 10412                           ;ADC.c: 62:             ADCON0bits.CHS = 0b1101;
 10413  0076' 081F               	movf	31,w	;volatile
 10414  0077' 39C3               	andlw	-61
 10415  0078' 3834               	iorlw	52
 10416  0079' 009F               	movwf	31	;volatile
 10417                           
 10418                           ;ADC.c: 63:             break;
 10419  007A' 2800'              	goto	l3489
 10420  007B'                    l3479:
 10421                           
 10422                           ;ADC.c: 65:             ADCON0bits.CHS = 0b1110;
 10423  007B' 081F               	movf	31,w	;volatile
 10424  007C' 39C3               	andlw	-61
 10425  007D' 3838               	iorlw	56
 10426  007E' 009F               	movwf	31	;volatile
 10427                           
 10428                           ;ADC.c: 66:             break;
 10429  007F' 2800'              	goto	l3489
 10430  0080'                    l3481:
 10431                           
 10432                           ;ADC.c: 68:             ADCON0bits.CHS = 0b1111;
 10433  0080' 303C               	movlw	60
 10434  0081' 049F               	iorwf	31,f	;volatile
 10435                           
 10436                           ;ADC.c: 69:             break;
 10437  0082' 2800'              	goto	l3489
 10438  0083'                    l3483:
 10439                           
 10440                           ;ADC.c: 71:             ADCON0bits.CHS = 0b0000;
 10441  0083' 30C3               	movlw	-61
 10442  0084' 059F               	andwf	31,f	;volatile
 10443                           
 10444                           ;ADC.c: 72:             break;
 10445  0085' 2800'              	goto	l3489
 10446  0086'                    l3487:
 10447  0086' 0803'              	movf	ADC_setup@Channel,w
 10448  0087' 0086'              	movwf	??_ADC_setup
 10449  0088' 0187'              	clrf	??_ADC_setup+1
 10450                           
 10451                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10452                           ; Switch size 1, requested type "simple"
 10453                           ; Number of cases is 1, Range of values is 0 to 0
 10454                           ; switch strategies available:
 10455                           ; Name         Instructions Cycles
 10456                           ; simple_byte            4     3 (average)
 10457                           ; direct_byte           11     8 (fixed)
 10458                           ; jumptable            260     6 (fixed)
 10459                           ;	Chosen strategy is simple_byte
 10460  0089' 0807'              	movf	??_ADC_setup+1,w
 10461  008A' 3A00               	xorlw	0	; case 0
 10462  008B' 1903               	skipnz
 10463  008C' 2800'              	goto	l4903
 10464  008D' 2800'              	goto	l3483
 10465  008E'                    l4903:
 10466                           
 10467                           ; Switch size 1, requested type "simple"
 10468                           ; Number of cases is 16, Range of values is 0 to 15
 10469                           ; switch strategies available:
 10470                           ; Name         Instructions Cycles
 10471                           ; simple_byte           49    25 (average)
 10472                           ; direct_byte           56     8 (fixed)
 10473                           ; jumptable            260     6 (fixed)
 10474                           ;	Chosen strategy is simple_byte
 10475  008E' 0806'              	movf	??_ADC_setup,w
 10476  008F' 3A00               	xorlw	0	; case 0
 10477  0090' 1903               	skipnz
 10478  0091' 2800'              	goto	l3451
 10479  0092' 3A01               	xorlw	1	; case 1
 10480  0093' 1903               	skipnz
 10481  0094' 2800'              	goto	l3453
 10482  0095' 3A03               	xorlw	3	; case 2
 10483  0096' 1903               	skipnz
 10484  0097' 2800'              	goto	l3455
 10485  0098' 3A01               	xorlw	1	; case 3
 10486  0099' 1903               	skipnz
 10487  009A' 2800'              	goto	l3457
 10488  009B' 3A07               	xorlw	7	; case 4
 10489  009C' 1903               	skipnz
 10490  009D' 2800'              	goto	l3459
 10491  009E' 3A01               	xorlw	1	; case 5
 10492  009F' 1903               	skipnz
 10493  00A0' 2800'              	goto	l3461
 10494  00A1' 3A03               	xorlw	3	; case 6
 10495  00A2' 1903               	skipnz
 10496  00A3' 2800'              	goto	l3463
 10497  00A4' 3A01               	xorlw	1	; case 7
 10498  00A5' 1903               	skipnz
 10499  00A6' 2800'              	goto	l3465
 10500  00A7' 3A0F               	xorlw	15	; case 8
 10501  00A8' 1903               	skipnz
 10502  00A9' 2800'              	goto	l3467
 10503  00AA' 3A01               	xorlw	1	; case 9
 10504  00AB' 1903               	skipnz
 10505  00AC' 2800'              	goto	l3469
 10506  00AD' 3A03               	xorlw	3	; case 10
 10507  00AE' 1903               	skipnz
 10508  00AF' 2800'              	goto	l3471
 10509  00B0' 3A01               	xorlw	1	; case 11
 10510  00B1' 1903               	skipnz
 10511  00B2' 2800'              	goto	l3473
 10512  00B3' 3A07               	xorlw	7	; case 12
 10513  00B4' 1903               	skipnz
 10514  00B5' 2800'              	goto	l3475
 10515  00B6' 3A01               	xorlw	1	; case 13
 10516  00B7' 1903               	skipnz
 10517  00B8' 2800'              	goto	l3477
 10518  00B9' 3A03               	xorlw	3	; case 14
 10519  00BA' 1903               	skipnz
 10520  00BB' 2800'              	goto	l3479
 10521  00BC' 3A01               	xorlw	1	; case 15
 10522  00BD' 1903               	skipnz
 10523  00BE' 2800'              	goto	l3481
 10524  00BF' 2800'              	goto	l3483
 10525  00C0'                    l3489:
 10526                           
 10527                           ;ADC.c: 74:     if (Format == 1) {
 10528  00C0' 0304'              	decf	ADC_setup@Format,w
 10529  00C1' 1D03               	btfss	3,2
 10530  00C2' 2800'              	goto	u5341
 10531  00C3' 2800'              	goto	u5340
 10532  00C4'                    u5341:
 10533  00C4' 2800'              	goto	l136
 10534  00C5'                    u5340:
 10535  00C5'                    l3491:
 10536                           
 10537                           ;ADC.c: 75:         ADCON1bits.ADFM = 1;
 10538  00C5' 1683               	bsf	3,5	;RP0=1, select bank1
 10539  00C6' 1303               	bcf	3,6	;RP1=0, select bank1
 10540  00C7' 179F               	bsf	31,7	;volatile
 10541                           
 10542                           ;ADC.c: 76:     } else {
 10543  00C8' 2800'              	goto	l3495
 10544  00C9'                    l136:
 10545                           
 10546                           ;ADC.c: 77:         ADCON1bits.ADFM = 0;
 10547  00C9' 1683               	bsf	3,5	;RP0=1, select bank1
 10548  00CA' 1303               	bcf	3,6	;RP1=0, select bank1
 10549  00CB' 139F               	bcf	31,7	;volatile
 10550  00CC' 2800'              	goto	l3495
 10551  00CD'                    l139:	
 10552                           ;ADC.c: 80:         case 1:
 10553                           
 10554                           
 10555                           ;ADC.c: 81:             ADCON1bits.VCFG0 = 0;
 10556  00CD' 121F               	bcf	31,4	;volatile
 10557                           
 10558                           ;ADC.c: 82:             ADCON1bits.VCFG1 = 0;
 10559  00CE' 129F               	bcf	31,5	;volatile
 10560                           
 10561                           ;ADC.c: 83:             break;
 10562  00CF' 2800'              	goto	l140
 10563  00D0'                    l141:	
 10564                           ;ADC.c: 84:         case 2:
 10565                           
 10566                           
 10567                           ;ADC.c: 85:             ADCON1bits.VCFG0 = 1;
 10568  00D0' 161F               	bsf	31,4	;volatile
 10569                           
 10570                           ;ADC.c: 86:             ADCON1bits.VCFG1 = 1;
 10571  00D1' 169F               	bsf	31,5	;volatile
 10572                           
 10573                           ;ADC.c: 87:             break;
 10574  00D2' 2800'              	goto	l140
 10575  00D3'                    l142:	
 10576                           ;ADC.c: 88:         case 3:
 10577                           
 10578                           
 10579                           ;ADC.c: 89:             ADCON1bits.VCFG0 = 0;
 10580  00D3' 121F               	bcf	31,4	;volatile
 10581                           
 10582                           ;ADC.c: 90:             ADCON1bits.VCFG1 = 1;
 10583  00D4' 169F               	bsf	31,5	;volatile
 10584                           
 10585                           ;ADC.c: 91:             break;
 10586  00D5' 2800'              	goto	l140
 10587  00D6'                    l143:	
 10588                           ;ADC.c: 92:         case 4:
 10589                           
 10590                           
 10591                           ;ADC.c: 93:             ADCON1bits.VCFG0 = 1;
 10592  00D6' 161F               	bsf	31,4	;volatile
 10593                           
 10594                           ;ADC.c: 94:             ADCON1bits.VCFG1 = 0;
 10595  00D7' 129F               	bcf	31,5	;volatile
 10596                           
 10597                           ;ADC.c: 95:             break;
 10598  00D8' 2800'              	goto	l140
 10599  00D9'                    l144:	
 10600                           ;ADC.c: 96:         default:
 10601                           
 10602                           
 10603                           ;ADC.c: 97:             ADCON1bits.VCFG0 = 0;
 10604  00D9' 121F               	bcf	31,4	;volatile
 10605                           
 10606                           ;ADC.c: 98:             ADCON1bits.VCFG1 = 0;
 10607  00DA' 129F               	bcf	31,5	;volatile
 10608                           
 10609                           ;ADC.c: 99:             break;
 10610  00DB' 2800'              	goto	l140
 10611  00DC'                    l3495:
 10612  00DC' 0805'              	movf	ADC_setup@Vref,w
 10613  00DD' 0086'              	movwf	??_ADC_setup
 10614  00DE' 0187'              	clrf	??_ADC_setup+1
 10615                           
 10616                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10617                           ; Switch size 1, requested type "simple"
 10618                           ; Number of cases is 1, Range of values is 0 to 0
 10619                           ; switch strategies available:
 10620                           ; Name         Instructions Cycles
 10621                           ; simple_byte            4     3 (average)
 10622                           ; direct_byte           11     8 (fixed)
 10623                           ; jumptable            260     6 (fixed)
 10624                           ;	Chosen strategy is simple_byte
 10625  00DF' 0807'              	movf	??_ADC_setup+1,w
 10626  00E0' 3A00               	xorlw	0	; case 0
 10627  00E1' 1903               	skipnz
 10628  00E2' 2800'              	goto	l4905
 10629  00E3' 2800'              	goto	l144
 10630  00E4'                    l4905:
 10631                           
 10632                           ; Switch size 1, requested type "simple"
 10633                           ; Number of cases is 4, Range of values is 1 to 4
 10634                           ; switch strategies available:
 10635                           ; Name         Instructions Cycles
 10636                           ; simple_byte           13     7 (average)
 10637                           ; direct_byte           23    11 (fixed)
 10638                           ; jumptable            263     9 (fixed)
 10639                           ;	Chosen strategy is simple_byte
 10640  00E4' 0806'              	movf	??_ADC_setup,w
 10641  00E5' 3A01               	xorlw	1	; case 1
 10642  00E6' 1903               	skipnz
 10643  00E7' 2800'              	goto	l139
 10644  00E8' 3A03               	xorlw	3	; case 2
 10645  00E9' 1903               	skipnz
 10646  00EA' 2800'              	goto	l141
 10647  00EB' 3A01               	xorlw	1	; case 3
 10648  00EC' 1903               	skipnz
 10649  00ED' 2800'              	goto	l142
 10650  00EE' 3A07               	xorlw	7	; case 4
 10651  00EF' 1903               	skipnz
 10652  00F0' 2800'              	goto	l143
 10653  00F1' 2800'              	goto	l144
 10654  00F2'                    l140:
 10655                           
 10656                           ;ADC.c: 101:     ADCON0bits.ADON=1;
 10657  00F2' 1283               	bcf	3,5	;RP0=0, select bank0
 10658  00F3' 1303               	bcf	3,6	;RP1=0, select bank0
 10659  00F4' 141F               	bsf	31,0	;volatile
 10660                           
 10661                           ;ADC.c: 102:     INTCONbits.GIE=1;
 10662  00F5' 178B               	bsf	11,7	;volatile
 10663                           
 10664                           ;ADC.c: 103:     INTCONbits.PEIE=1;
 10665  00F6' 170B               	bsf	11,6	;volatile
 10666                           
 10667                           ;ADC.c: 104:     PIE1bits.ADIE=1;
 10668  00F7' 1683               	bsf	3,5	;RP0=1, select bank1
 10669  00F8' 1303               	bcf	3,6	;RP1=0, select bank1
 10670  00F9' 170C               	bsf	12,6	;volatile
 10671  00FA'                    l145:
 10672  00FA' 0008               	return
 10673  00FB'                    __end_of_ADC_setup:
 10674                           
 10675                           	psect	text34
 10676  0000'                    __ptext34:	
 10677 ;; *************** function _oli *****************
 10678 ;; Defined at:
 10679 ;;		line 147 in file "SerialLCD.c"
 10680 ;; Parameters:    Size  Location     Type
 10681 ;;		None
 10682 ;; Auto vars:     Size  Location     Type
 10683 ;;		None
 10684 ;; Return value:  Size  Location     Type
 10685 ;;                  1    wreg      void 
 10686 ;; Registers used:
 10687 ;;		wreg, status,2, status,0, pclath, cstack
 10688 ;; Tracked objects:
 10689 ;;		On entry : 0/0
 10690 ;;		On exit  : 0/0
 10691 ;;		Unchanged: 0/0
 10692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10693 ;;      Params:         0       0       0       0       0
 10694 ;;      Locals:         0       0       0       0       0
 10695 ;;      Temps:          3       0       0       0       0
 10696 ;;      Totals:         3       0       0       0       0
 10697 ;;Total ram usage:        3 bytes
 10698 ;; Hardware stack levels used:    1
 10699 ;; Hardware stack levels required when called:    1
 10700 ;; This function calls:
 10701 ;;		_Receive
 10702 ;; This function is called by:
 10703 ;;		Interrupt level 1
 10704 ;; This function uses a non-reentrant model
 10705 ;;
 10706                           
 10707                           
 10708                           ;psect for function _oli
 10709  0000'                    _oli:
 10710  0000'                    i1l4019:
 10711  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 10712  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 10713  0002' 1F0C               	btfss	12,6	;volatile
 10714  0003' 2800'              	goto	u617_21
 10715  0004' 2800'              	goto	u617_20
 10716  0005'                    u617_21:
 10717  0005' 2800'              	goto	i1l93
 10718  0006'                    u617_20:
 10719  0006'                    i1l4021:
 10720  0006' 130C               	bcf	12,6	;volatile
 10721  0007'                    i1l4023:
 10722  0007' 0300'              	decf	_Pots,w
 10723  0008' 1D03               	btfss	3,2
 10724  0009' 2800'              	goto	u618_21
 10725  000A' 2800'              	goto	u618_20
 10726  000B'                    u618_21:
 10727  000B' 2800'              	goto	i1l4029
 10728  000C'                    u618_20:
 10729  000C'                    i1l4025:
 10730  000C' 0180'              	clrf	_Pots
 10731  000D'                    i1l4027:
 10732  000D' 081E               	movf	30,w	;volatile
 10733  000E' 0080'              	movwf	??_oli
 10734  000F' 0800'              	movf	??_oli,w
 10735  0010' 1683               	bsf	3,5	;RP0=1, select bank1
 10736  0011' 1303               	bcf	3,6	;RP1=0, select bank1
 10737  0012' 0080'              	movwf	_ADC_value1^(0+128)
 10738  0013' 2800'              	goto	i1l4035
 10739  0014'                    i1l4029:
 10740  0014' 0800'              	movf	_Pots,w
 10741  0015' 1D03               	btfss	3,2
 10742  0016' 2800'              	goto	u619_21
 10743  0017' 2800'              	goto	u619_20
 10744  0018'                    u619_21:
 10745  0018' 2800'              	goto	i1l4035
 10746  0019'                    u619_20:
 10747  0019'                    i1l4031:
 10748  0019' 0180'              	clrf	_Pots
 10749  001A' 0A80'              	incf	_Pots,f
 10750  001B'                    i1l4033:
 10751  001B' 081E               	movf	30,w	;volatile
 10752  001C' 0080'              	movwf	??_oli
 10753  001D' 0800'              	movf	??_oli,w
 10754  001E' 1683               	bsf	3,5	;RP0=1, select bank1
 10755  001F' 1303               	bcf	3,6	;RP1=0, select bank1
 10756  0020' 0080'              	movwf	_ADC_value2^(0+128)
 10757  0021'                    i1l4035:
 10758  0021' 1683               	bsf	3,5	;RP0=1, select bank1
 10759  0022' 1303               	bcf	3,6	;RP1=0, select bank1
 10760  0023' 0180'              	clrf	_ADC_finish^(0+128)
 10761  0024' 0A80'              	incf	_ADC_finish^(0+128),f
 10762  0025' 2800'              	goto	i1l99
 10763  0026'                    i1l93:
 10764  0026' 1E8C               	btfss	12,5	;volatile
 10765  0027' 2800'              	goto	u620_21
 10766  0028' 2800'              	goto	u620_20
 10767  0029'                    u620_21:
 10768  0029' 2800'              	goto	i1l99
 10769  002A'                    u620_20:
 10770  002A'                    i1l4037:
 10771  002A' 120A' 118A' 2000' 120A' 118A' 	fcall	_Receive
 10772  002F' 0080'              	movwf	??_oli
 10773  0030' 0800'              	movf	??_oli,w
 10774  0031' 1683               	bsf	3,5	;RP0=1, select bank1
 10775  0032' 1303               	bcf	3,6	;RP1=0, select bank1
 10776  0033' 0080'              	movwf	_comando^(0+128)
 10777  0034'                    i1l4039:
 10778  0034' 30C7               	movlw	199
 10779  0035' 0080'              	movwf	??_oli
 10780  0036'                    u769_27:
 10781  0036' 0B80'              	decfsz	??_oli,f
 10782  0037' 2800'              	goto	u769_27
 10783  0038' 2800'              	nop2
 10784  0039'                    i1l4041:
 10785  0039' 1283               	bcf	3,5	;RP0=0, select bank0
 10786  003A' 1303               	bcf	3,6	;RP1=0, select bank0
 10787  003B' 128C               	bcf	12,5	;volatile
 10788  003C'                    i1l99:
 10789  003C' 0802'              	movf	??_oli+2,w
 10790  003D' 008A               	movwf	10
 10791  003E' 0E01'              	swapf	??_oli+1,w
 10792  003F' 0083               	movwf	3
 10793  0040' 0EFE               	swapf	btemp,f
 10794  0041' 0E7E               	swapf	btemp,w
 10795  0042' 0009               	retfie
 10796  0043'                    __end_of_oli:
 10797                           
 10798                           	psect	intentry
 10799  0000'                    __pintentry:	
 10800                           ;incstack = 0
 10801                           ; Regs used in _oli: [wreg+status,2+status,0+pclath+cstack]
 10802                           
 10803  0000'                    interrupt_function:
 10804  007E                     saved_w	set	btemp
 10805  0000' 00FE               	movwf	btemp
 10806  0001' 0E03               	swapf	3,w
 10807  0002' 0081'              	movwf	??_oli+1
 10808  0003' 080A               	movf	10,w
 10809  0004' 0082'              	movwf	??_oli+2
 10810  0005' 120A' 118A' 2800'  	ljmp	_oli
 10811                           
 10812                           	psect	text35
 10813  0000'                    __ptext35:	
 10814 ;; *************** function _Receive *****************
 10815 ;; Defined at:
 10816 ;;		line 16 in file "EUSART.c"
 10817 ;; Parameters:    Size  Location     Type
 10818 ;;		None
 10819 ;; Auto vars:     Size  Location     Type
 10820 ;;		None
 10821 ;; Return value:  Size  Location     Type
 10822 ;;                  1    wreg      unsigned char 
 10823 ;; Registers used:
 10824 ;;		wreg
 10825 ;; Tracked objects:
 10826 ;;		On entry : 0/0
 10827 ;;		On exit  : 0/0
 10828 ;;		Unchanged: 0/0
 10829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10830 ;;      Params:         0       0       0       0       0
 10831 ;;      Locals:         0       0       0       0       0
 10832 ;;      Temps:          0       0       0       0       0
 10833 ;;      Totals:         0       0       0       0       0
 10834 ;;Total ram usage:        0 bytes
 10835 ;; Hardware stack levels used:    1
 10836 ;; This function calls:
 10837 ;;		Nothing
 10838 ;; This function is called by:
 10839 ;;		_oli
 10840 ;; This function uses a non-reentrant model
 10841 ;;
 10842                           
 10843                           
 10844                           ;psect for function _Receive
 10845  0000'                    _Receive:
 10846  0000'                    i1l3799:	
 10847                           ;incstack = 0
 10848                           ; Regs used in _Receive: [wreg]
 10849                           
 10850                           
 10851                           ;EUSART.c: 17:     if (RCSTAbits.OERR){
 10852  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 10853  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 10854  0002' 1C98               	btfss	24,1	;volatile
 10855  0003' 2800'              	goto	u581_21
 10856  0004' 2800'              	goto	u581_20
 10857  0005'                    u581_21:
 10858  0005' 2800'              	goto	i1l207
 10859  0006'                    u581_20:
 10860  0006'                    i1l3801:
 10861                           
 10862                           ;EUSART.c: 18:         RCSTAbits.CREN=0;
 10863  0006' 1218               	bcf	24,4	;volatile
 10864                           
 10865                           ;EUSART.c: 19:         RCSTAbits.CREN=1;
 10866  0007' 1618               	bsf	24,4	;volatile
 10867  0008'                    i1l207:	
 10868                           ;EUSART.c: 22:     }
 10869                           
 10870                           
 10871                           ;EUSART.c: 21:     while (PIR1bits.RCIF==0){
 10872  0008' 1E8C               	btfss	12,5	;volatile
 10873  0009' 2800'              	goto	u582_21
 10874  000A' 2800'              	goto	u582_20
 10875  000B'                    u582_21:
 10876  000B' 2800'              	goto	i1l207
 10877  000C'                    u582_20:
 10878  000C'                    i1l3803:
 10879                           
 10880                           ;EUSART.c: 23:     return RCREG;
 10881  000C' 081A               	movf	26,w	;volatile
 10882  000D'                    i1l210:
 10883  000D' 0008               	return
 10884  000E'                    __end_of_Receive:
 10885  007E                     btemp	set	126	;btemp
 10886  007E                     wtemp0	set	126
 10887                           
 10888                           	psect	config
 10889                           
 10890                           ;Config register CONFIG1 @ 0x2007
 10891                           ;	Oscillator Selection bits
 10892                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
 10893                           ;	Watchdog Timer Enable bit
 10894                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10895                           ;	Power-up Timer Enable bit
 10896                           ;	PWRTE = OFF, PWRT disabled
 10897                           ;	RE3/MCLR pin function select bit
 10898                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
 10899                           ;	Code Protection bit
 10900                           ;	CP = OFF, Program memory code protection is disabled
 10901                           ;	Data Code Protection bit
 10902                           ;	CPD = OFF, Data memory code protection is disabled
 10903                           ;	Brown Out Reset Selection bits
 10904                           ;	BOREN = OFF, BOR disabled
 10905                           ;	Internal External Switchover bit
 10906                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10907                           ;	Fail-Safe Clock Monitor Enabled bit
 10908                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10909                           ;	Low Voltage Programming Enable bit
 10910                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10911                           ;	In-Circuit Debugger Mode bit
 10912                           ;	DEBUG = 0x1, unprogrammed default
 10913  2007                     	org	8199
 10914  2007  20F1               	dw	8433
 10915                           
 10916                           ;Config register CONFIG2 @ 0x2008
 10917                           ;	Brown-out Reset Selection bit
 10918                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10919                           ;	Flash Program Memory Self Write Enable bits
 10920                           ;	WRT = OFF, Write protection off
 10921  2008                     	org	8200
 10922  2008  3FFF               	dw	16383
 10923                           
 10924                           	psect	text1_split_1
 10925  0000'                    u7270:
 10926  0000'                    l4589:
 10927  0000' 1683               	bsf	3,5	;RP0=1, select bank1
 10928  0001' 1303               	bcf	3,6	;RP1=0, select bank1
 10929  0002' 0800'              	movf	(sprintf@fval+3)^(0+128),w
 10930  0003' 1283               	bcf	3,5	;RP0=0, select bank0
 10931  0004' 1303               	bcf	3,6	;RP1=0, select bank0
 10932  0005' 0083'              	movwf	___fleq@ff1+3
 10933  0006' 1683               	bsf	3,5	;RP0=1, select bank1
 10934  0007' 1303               	bcf	3,6	;RP1=0, select bank1
 10935  0008' 0800'              	movf	(sprintf@fval+2)^(0+128),w
 10936  0009' 1283               	bcf	3,5	;RP0=0, select bank0
 10937  000A' 1303               	bcf	3,6	;RP1=0, select bank0
 10938  000B' 0082'              	movwf	___fleq@ff1+2
 10939  000C' 1683               	bsf	3,5	;RP0=1, select bank1
 10940  000D' 1303               	bcf	3,6	;RP1=0, select bank1
 10941  000E' 0800'              	movf	(sprintf@fval+1)^(0+128),w
 10942  000F' 1283               	bcf	3,5	;RP0=0, select bank0
 10943  0010' 1303               	bcf	3,6	;RP1=0, select bank0
 10944  0011' 0081'              	movwf	___fleq@ff1+1
 10945  0012' 1683               	bsf	3,5	;RP0=1, select bank1
 10946  0013' 1303               	bcf	3,6	;RP1=0, select bank1
 10947  0014' 0800'              	movf	sprintf@fval^(0+128),w
 10948  0015' 1283               	bcf	3,5	;RP0=0, select bank0
 10949  0016' 1303               	bcf	3,6	;RP1=0, select bank0
 10950  0017' 0080'              	movwf	___fleq@ff1
 10951  0018' 3000               	movlw	0
 10952  0019' 0087'              	movwf	___fleq@ff2+3
 10953  001A' 3000               	movlw	0
 10954  001B' 0086'              	movwf	___fleq@ff2+2
 10955  001C' 3000               	movlw	0
 10956  001D' 0085'              	movwf	___fleq@ff2+1
 10957  001E' 3000               	movlw	0
 10958  001F' 0084'              	movwf	___fleq@ff2
 10959  0020' 120A' 118A' 2000' 120A' 118A' 	fcall	___fleq
 10960  0025' 1803               	btfsc	3,0
 10961  0026' 2800'              	goto	u7281
 10962  0027' 2800'              	goto	u7280
 10963  0028'                    u7281:
 10964  0028' 2800'              	goto	l4609
 10965  0029'                    u7280:
 10966  0029'                    l4591:
 10967  0029' 1683               	bsf	3,5	;RP0=1, select bank1
 10968  002A' 1303               	bcf	3,6	;RP1=0, select bank1
 10969  002B' 0800'              	movf	(sprintf@fval+3)^(0+128),w
 10970  002C' 1283               	bcf	3,5	;RP0=0, select bank0
 10971  002D' 1303               	bcf	3,6	;RP1=0, select bank0
 10972  002E' 00BA'              	movwf	___fltol@f1+3
 10973  002F' 1683               	bsf	3,5	;RP0=1, select bank1
 10974  0030' 1303               	bcf	3,6	;RP1=0, select bank1
 10975  0031' 0800'              	movf	(sprintf@fval+2)^(0+128),w
 10976  0032' 1283               	bcf	3,5	;RP0=0, select bank0
 10977  0033' 1303               	bcf	3,6	;RP1=0, select bank0
 10978  0034' 00B9'              	movwf	___fltol@f1+2
 10979  0035' 1683               	bsf	3,5	;RP0=1, select bank1
 10980  0036' 1303               	bcf	3,6	;RP1=0, select bank1
 10981  0037' 0800'              	movf	(sprintf@fval+1)^(0+128),w
 10982  0038' 1283               	bcf	3,5	;RP0=0, select bank0
 10983  0039' 1303               	bcf	3,6	;RP1=0, select bank0
 10984  003A' 00B8'              	movwf	___fltol@f1+1
 10985  003B' 1683               	bsf	3,5	;RP0=1, select bank1
 10986  003C' 1303               	bcf	3,6	;RP1=0, select bank1
 10987  003D' 0800'              	movf	sprintf@fval^(0+128),w
 10988  003E' 1283               	bcf	3,5	;RP0=0, select bank0
 10989  003F' 1303               	bcf	3,6	;RP1=0, select bank0
 10990  0040' 00B7'              	movwf	___fltol@f1
 10991  0041' 120A' 118A' 2000' 120A' 118A' 	fcall	___fltol
 10992  0046' 1283               	bcf	3,5	;RP0=0, select bank0
 10993  0047' 1303               	bcf	3,6	;RP1=0, select bank0
 10994  0048' 083A'              	movf	?___fltol+3,w
 10995  0049' 0439'              	iorwf	?___fltol+2,w
 10996  004A' 0438'              	iorwf	?___fltol+1,w
 10997  004B' 0437'              	iorwf	?___fltol,w
 10998  004C' 1D03               	skipz
 10999  004D' 2800'              	goto	u7291
 11000  004E' 2800'              	goto	u7290
 11001  004F'                    u7291:
 11002  004F' 2800'              	goto	l4609
 11003  0050'                    u7290:
 11004  0050'                    l4593:
 11005  0050' 1683               	bsf	3,5	;RP0=1, select bank1
 11006  0051' 1303               	bcf	3,6	;RP1=0, select bank1
 11007  0052' 0800'              	movf	(sprintf@eexp+1)^(0+128),w
 11008  0053' 3A80               	xorlw	128
 11009  0054' 00FF               	movwf	btemp+1
 11010  0055' 3080               	movlw	128
 11011  0056' 027F               	subwf	btemp+1,w
 11012  0057' 1D03               	skipz
 11013  0058' 2800'              	goto	u7305
 11014  0059' 3002               	movlw	2
 11015  005A' 0200'              	subwf	sprintf@eexp^(0+128),w
 11016  005B'                    u7305:
 11017  005B' 1C03               	skipc
 11018  005C' 2800'              	goto	u7301
 11019  005D' 2800'              	goto	u7300
 11020  005E'                    u7301:
 11021  005E' 2800'              	goto	l4609
 11022  005F'                    u7300:
 11023  005F'                    l4595:
 11024                           
 11025                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
 11026  005F' 1683               	bsf	3,5	;RP0=1, select bank1
 11027  0060' 1303               	bcf	3,6	;RP1=0, select bank1
 11028  0061' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
 11029  0062' 1283               	bcf	3,5	;RP0=0, select bank0
 11030  0063' 1303               	bcf	3,6	;RP1=0, select bank0
 11031  0064' 0083'              	movwf	___flge@ff1+3
 11032  0065' 1683               	bsf	3,5	;RP0=1, select bank1
 11033  0066' 1303               	bcf	3,6	;RP1=0, select bank1
 11034  0067' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
 11035  0068' 1283               	bcf	3,5	;RP0=0, select bank0
 11036  0069' 1303               	bcf	3,6	;RP1=0, select bank0
 11037  006A' 0082'              	movwf	___flge@ff1+2
 11038  006B' 1683               	bsf	3,5	;RP0=1, select bank1
 11039  006C' 1303               	bcf	3,6	;RP1=0, select bank1
 11040  006D' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
 11041  006E' 1283               	bcf	3,5	;RP0=0, select bank0
 11042  006F' 1303               	bcf	3,6	;RP1=0, select bank0
 11043  0070' 0081'              	movwf	___flge@ff1+1
 11044  0071' 1683               	bsf	3,5	;RP0=1, select bank1
 11045  0072' 1303               	bcf	3,6	;RP1=0, select bank1
 11046  0073' 0800'              	movf	sprintf@tmpval^(0+128),w
 11047  0074' 1283               	bcf	3,5	;RP0=0, select bank0
 11048  0075' 1303               	bcf	3,6	;RP1=0, select bank0
 11049  0076' 0080'              	movwf	___flge@ff1
 11050  0077' 3040               	movlw	64
 11051  0078' 0087'              	movwf	___flge@ff2+3
 11052  0079' 3089               	movlw	137
 11053  007A' 0086'              	movwf	___flge@ff2+2
 11054  007B' 3070               	movlw	112
 11055  007C' 0085'              	movwf	___flge@ff2+1
 11056  007D' 305F               	movlw	95
 11057  007E' 0084'              	movwf	___flge@ff2
 11058  007F' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
 11059  0084' 1803               	btfsc	3,0
 11060  0085' 2800'              	goto	u7311
 11061  0086' 2800'              	goto	u7310
 11062  0087'                    u7311:
 11063  0087' 2800'              	goto	l4599
 11064  0088'                    u7310:
 11065  0088'                    l4597:
 11066                           
 11067                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
 11068  0088' 30F7               	movlw	247
 11069  0089' 1683               	bsf	3,5	;RP0=1, select bank1
 11070  008A' 1303               	bcf	3,6	;RP1=0, select bank1
 11071  008B' 0780'              	addwf	sprintf@eexp^(0+128),f
 11072  008C' 1803               	skipnc
 11073  008D' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
 11074  008E' 30FF               	movlw	255
 11075  008F' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
 11076                           
 11077                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
 11078  0090' 2800'              	goto	l4601
 11079  0091'                    l4599:
 11080                           
 11081                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
 11082  0091' 30F8               	movlw	248
 11083  0092' 1683               	bsf	3,5	;RP0=1, select bank1
 11084  0093' 1303               	bcf	3,6	;RP1=0, select bank1
 11085  0094' 0780'              	addwf	sprintf@eexp^(0+128),f
 11086  0095' 1803               	skipnc
 11087  0096' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
 11088  0097' 30FF               	movlw	255
 11089  0098' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
 11090  0099'                    l4601:
 11091                           
 11092                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
 11093  0099' 0800'              	movf	sprintf@eexp^(0+128),w
 11094  009A' 120A' 118A' 2000' 120A' 118A' 	fcall	_scale
 11095  009F' 1283               	bcf	3,5	;RP0=0, select bank0
 11096  00A0' 1303               	bcf	3,6	;RP1=0, select bank0
 11097  00A1' 0827'              	movf	?_scale+3,w
 11098  00A2' 1683               	bsf	3,5	;RP0=1, select bank1
 11099  00A3' 1303               	bcf	3,6	;RP1=0, select bank1
 11100  00A4' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
 11101  00A5' 1283               	bcf	3,5	;RP0=0, select bank0
 11102  00A6' 1303               	bcf	3,6	;RP1=0, select bank0
 11103  00A7' 0826'              	movf	?_scale+2,w
 11104  00A8' 1683               	bsf	3,5	;RP0=1, select bank1
 11105  00A9' 1303               	bcf	3,6	;RP1=0, select bank1
 11106  00AA' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
 11107  00AB' 1283               	bcf	3,5	;RP0=0, select bank0
 11108  00AC' 1303               	bcf	3,6	;RP1=0, select bank0
 11109  00AD' 0825'              	movf	?_scale+1,w
 11110  00AE' 1683               	bsf	3,5	;RP0=1, select bank1
 11111  00AF' 1303               	bcf	3,6	;RP1=0, select bank1
 11112  00B0' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
 11113  00B1' 1283               	bcf	3,5	;RP0=0, select bank0
 11114  00B2' 1303               	bcf	3,6	;RP1=0, select bank0
 11115  00B3' 0824'              	movf	?_scale,w
 11116  00B4' 1683               	bsf	3,5	;RP0=1, select bank1
 11117  00B5' 1303               	bcf	3,6	;RP1=0, select bank1
 11118  00B6' 0080'              	movwf	sprintf@tmpval^(0+128)
 11119  00B7'                    l4603:
 11120  00B7' 0800'              	movf	(sprintf@fval+3)^(0+128),w
 11121  00B8' 1283               	bcf	3,5	;RP0=0, select bank0
 11122  00B9' 1303               	bcf	3,6	;RP1=0, select bank0
 11123  00BA' 0083'              	movwf	__div_to_l_@f1+3
 11124  00BB' 1683               	bsf	3,5	;RP0=1, select bank1
 11125  00BC' 1303               	bcf	3,6	;RP1=0, select bank1
 11126  00BD' 0800'              	movf	(sprintf@fval+2)^(0+128),w
 11127  00BE' 1283               	bcf	3,5	;RP0=0, select bank0
 11128  00BF' 1303               	bcf	3,6	;RP1=0, select bank0
 11129  00C0' 0082'              	movwf	__div_to_l_@f1+2
 11130  00C1' 1683               	bsf	3,5	;RP0=1, select bank1
 11131  00C2' 1303               	bcf	3,6	;RP1=0, select bank1
 11132  00C3' 0800'              	movf	(sprintf@fval+1)^(0+128),w
 11133  00C4' 1283               	bcf	3,5	;RP0=0, select bank0
 11134  00C5' 1303               	bcf	3,6	;RP1=0, select bank0
 11135  00C6' 0081'              	movwf	__div_to_l_@f1+1
 11136  00C7' 1683               	bsf	3,5	;RP0=1, select bank1
 11137  00C8' 1303               	bcf	3,6	;RP1=0, select bank1
 11138  00C9' 0800'              	movf	sprintf@fval^(0+128),w
 11139  00CA' 1283               	bcf	3,5	;RP0=0, select bank0
 11140  00CB' 1303               	bcf	3,6	;RP1=0, select bank0
 11141  00CC' 0080'              	movwf	__div_to_l_@f1
 11142  00CD' 1683               	bsf	3,5	;RP0=1, select bank1
 11143  00CE' 1303               	bcf	3,6	;RP1=0, select bank1
 11144  00CF' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
 11145  00D0' 1283               	bcf	3,5	;RP0=0, select bank0
 11146  00D1' 1303               	bcf	3,6	;RP1=0, select bank0
 11147  00D2' 0087'              	movwf	__div_to_l_@f2+3
 11148  00D3' 1683               	bsf	3,5	;RP0=1, select bank1
 11149  00D4' 1303               	bcf	3,6	;RP1=0, select bank1
 11150  00D5' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
 11151  00D6' 1283               	bcf	3,5	;RP0=0, select bank0
 11152  00D7' 1303               	bcf	3,6	;RP1=0, select bank0
 11153  00D8' 0086'              	movwf	__div_to_l_@f2+2
 11154  00D9' 1683               	bsf	3,5	;RP0=1, select bank1
 11155  00DA' 1303               	bcf	3,6	;RP1=0, select bank1
 11156  00DB' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
 11157  00DC' 1283               	bcf	3,5	;RP0=0, select bank0
 11158  00DD' 1303               	bcf	3,6	;RP1=0, select bank0
 11159  00DE' 0085'              	movwf	__div_to_l_@f2+1
 11160  00DF' 1683               	bsf	3,5	;RP0=1, select bank1
 11161  00E0' 1303               	bcf	3,6	;RP1=0, select bank1
 11162  00E1' 0800'              	movf	sprintf@tmpval^(0+128),w
 11163  00E2' 1283               	bcf	3,5	;RP0=0, select bank0
 11164  00E3' 1303               	bcf	3,6	;RP1=0, select bank0
 11165  00E4' 0084'              	movwf	__div_to_l_@f2
 11166  00E5' 120A' 118A' 2000' 120A' 118A' 	fcall	__div_to_l_
 11167  00EA' 1283               	bcf	3,5	;RP0=0, select bank0
 11168  00EB' 1303               	bcf	3,6	;RP1=0, select bank0
 11169  00EC' 0803'              	movf	?__div_to_l_+3,w
 11170  00ED' 1683               	bsf	3,5	;RP0=1, select bank1
 11171  00EE' 1303               	bcf	3,6	;RP1=0, select bank1
 11172  00EF' 0080'              	movwf	(sprintf@val+3)^(0+128)
 11173  00F0' 1283               	bcf	3,5	;RP0=0, select bank0
 11174  00F1' 1303               	bcf	3,6	;RP1=0, select bank0
 11175  00F2' 0802'              	movf	?__div_to_l_+2,w
 11176  00F3' 1683               	bsf	3,5	;RP0=1, select bank1
 11177  00F4' 1303               	bcf	3,6	;RP1=0, select bank1
 11178  00F5' 0080'              	movwf	(sprintf@val+2)^(0+128)
 11179  00F6' 1283               	bcf	3,5	;RP0=0, select bank0
 11180  00F7' 1303               	bcf	3,6	;RP1=0, select bank0
 11181  00F8' 0801'              	movf	?__div_to_l_+1,w
 11182  00F9' 1683               	bsf	3,5	;RP0=1, select bank1
 11183  00FA' 1303               	bcf	3,6	;RP1=0, select bank1
 11184  00FB' 0080'              	movwf	(sprintf@val+1)^(0+128)
 11185  00FC' 1283               	bcf	3,5	;RP0=0, select bank0
 11186  00FD' 1303               	bcf	3,6	;RP1=0, select bank0
 11187  00FE' 0800'              	movf	?__div_to_l_,w
 11188  00FF' 1683               	bsf	3,5	;RP0=1, select bank1
 11189  0100' 1303               	bcf	3,6	;RP1=0, select bank1
 11190  0101' 0080'              	movwf	sprintf@val^(0+128)
 11191  0102'                    l4607:
 11192                           
 11193                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
 11194  0102' 3000               	movlw	0
 11195  0103' 0080'              	movwf	(sprintf@fval+3)^(0+128)
 11196  0104' 3000               	movlw	0
 11197  0105' 0080'              	movwf	(sprintf@fval+2)^(0+128)
 11198  0106' 3000               	movlw	0
 11199  0107' 0080'              	movwf	(sprintf@fval+1)^(0+128)
 11200  0108' 3000               	movlw	0
 11201  0109' 0080'              	movwf	sprintf@fval^(0+128)
 11202                           
 11203                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
 11204  010A' 2800'              	goto	l4615
 11205  010B'                    l4609:
 11206                           
 11207                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
 11208  010B' 1683               	bsf	3,5	;RP0=1, select bank1
 11209  010C' 1303               	bcf	3,6	;RP1=0, select bank1
 11210  010D' 0800'              	movf	(sprintf@fval+3)^(0+128),w
 11211  010E' 1283               	bcf	3,5	;RP0=0, select bank0
 11212  010F' 1303               	bcf	3,6	;RP1=0, select bank0
 11213  0110' 00BA'              	movwf	___fltol@f1+3
 11214  0111' 1683               	bsf	3,5	;RP0=1, select bank1
 11215  0112' 1303               	bcf	3,6	;RP1=0, select bank1
 11216  0113' 0800'              	movf	(sprintf@fval+2)^(0+128),w
 11217  0114' 1283               	bcf	3,5	;RP0=0, select bank0
 11218  0115' 1303               	bcf	3,6	;RP1=0, select bank0
 11219  0116' 00B9'              	movwf	___fltol@f1+2
 11220  0117' 1683               	bsf	3,5	;RP0=1, select bank1
 11221  0118' 1303               	bcf	3,6	;RP1=0, select bank1
 11222  0119' 0800'              	movf	(sprintf@fval+1)^(0+128),w
 11223  011A' 1283               	bcf	3,5	;RP0=0, select bank0
 11224  011B' 1303               	bcf	3,6	;RP1=0, select bank0
 11225  011C' 00B8'              	movwf	___fltol@f1+1
 11226  011D' 1683               	bsf	3,5	;RP0=1, select bank1
 11227  011E' 1303               	bcf	3,6	;RP1=0, select bank1
 11228  011F' 0800'              	movf	sprintf@fval^(0+128),w
 11229  0120' 1283               	bcf	3,5	;RP0=0, select bank0
 11230  0121' 1303               	bcf	3,6	;RP1=0, select bank0
 11231  0122' 00B7'              	movwf	___fltol@f1
 11232  0123' 120A' 118A' 2000' 120A' 118A' 	fcall	___fltol
 11233  0128' 1283               	bcf	3,5	;RP0=0, select bank0
 11234  0129' 1303               	bcf	3,6	;RP1=0, select bank0
 11235  012A' 083A'              	movf	?___fltol+3,w
 11236  012B' 1683               	bsf	3,5	;RP0=1, select bank1
 11237  012C' 1303               	bcf	3,6	;RP1=0, select bank1
 11238  012D' 0080'              	movwf	(sprintf@val+3)^(0+128)
 11239  012E' 1283               	bcf	3,5	;RP0=0, select bank0
 11240  012F' 1303               	bcf	3,6	;RP1=0, select bank0
 11241  0130' 0839'              	movf	?___fltol+2,w
 11242  0131' 1683               	bsf	3,5	;RP0=1, select bank1
 11243  0132' 1303               	bcf	3,6	;RP1=0, select bank1
 11244  0133' 0080'              	movwf	(sprintf@val+2)^(0+128)
 11245  0134' 1283               	bcf	3,5	;RP0=0, select bank0
 11246  0135' 1303               	bcf	3,6	;RP1=0, select bank0
 11247  0136' 0838'              	movf	?___fltol+1,w
 11248  0137' 1683               	bsf	3,5	;RP0=1, select bank1
 11249  0138' 1303               	bcf	3,6	;RP1=0, select bank1
 11250  0139' 0080'              	movwf	(sprintf@val+1)^(0+128)
 11251  013A' 1283               	bcf	3,5	;RP0=0, select bank0
 11252  013B' 1303               	bcf	3,6	;RP1=0, select bank0
 11253  013C' 0837'              	movf	?___fltol,w
 11254  013D' 1683               	bsf	3,5	;RP0=1, select bank1
 11255  013E' 1303               	bcf	3,6	;RP1=0, select bank1
 11256  013F' 0080'              	movwf	sprintf@val^(0+128)
 11257  0140'                    l4611:
 11258                           
 11259                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
 11260  0140' 0800'              	movf	(sprintf@val+3)^(0+128),w
 11261  0141' 0086'              	movwf	___xxtofl@val+3
 11262  0142' 0800'              	movf	(sprintf@val+2)^(0+128),w
 11263  0143' 0085'              	movwf	___xxtofl@val+2
 11264  0144' 0800'              	movf	(sprintf@val+1)^(0+128),w
 11265  0145' 0084'              	movwf	___xxtofl@val+1
 11266  0146' 0800'              	movf	sprintf@val^(0+128),w
 11267  0147' 0083'              	movwf	___xxtofl@val
 11268  0148' 3000               	movlw	0
 11269  0149' 120A' 118A' 2000' 120A' 118A' 	fcall	___xxtofl
 11270  014E' 0806'              	movf	?___xxtofl+3,w
 11271  014F' 1683               	bsf	3,5	;RP0=1, select bank1
 11272  0150' 1303               	bcf	3,6	;RP1=0, select bank1
 11273  0151' 0080'              	movwf	(___flsub@a+3)^(0+128)
 11274  0152' 0805'              	movf	?___xxtofl+2,w
 11275  0153' 0080'              	movwf	(___flsub@a+2)^(0+128)
 11276  0154' 0804'              	movf	?___xxtofl+1,w
 11277  0155' 0080'              	movwf	(___flsub@a+1)^(0+128)
 11278  0156' 0803'              	movf	?___xxtofl,w
 11279  0157' 0080'              	movwf	___flsub@a^(0+128)
 11280  0158' 0800'              	movf	(sprintf@fval+3)^(0+128),w
 11281  0159' 0080'              	movwf	(___flsub@b+3)^(0+128)
 11282  015A' 0800'              	movf	(sprintf@fval+2)^(0+128),w
 11283  015B' 0080'              	movwf	(___flsub@b+2)^(0+128)
 11284  015C' 0800'              	movf	(sprintf@fval+1)^(0+128),w
 11285  015D' 0080'              	movwf	(___flsub@b+1)^(0+128)
 11286  015E' 0800'              	movf	sprintf@fval^(0+128),w
 11287  015F' 0080'              	movwf	___flsub@b^(0+128)
 11288  0160' 120A' 118A' 2000' 120A' 118A' 	fcall	___flsub
 11289  0165' 1683               	bsf	3,5	;RP0=1, select bank1
 11290  0166' 1303               	bcf	3,6	;RP1=0, select bank1
 11291  0167' 0800'              	movf	(?___flsub+3)^(0+128),w
 11292  0168' 0080'              	movwf	(sprintf@fval+3)^(0+128)
 11293  0169' 0800'              	movf	(?___flsub+2)^(0+128),w
 11294  016A' 0080'              	movwf	(sprintf@fval+2)^(0+128)
 11295  016B' 0800'              	movf	(?___flsub+1)^(0+128),w
 11296  016C' 0080'              	movwf	(sprintf@fval+1)^(0+128)
 11297  016D' 0800'              	movf	?___flsub^(0+128),w
 11298  016E' 0080'              	movwf	sprintf@fval^(0+128)
 11299  016F'                    l4613:
 11300                           
 11301                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 11302  016F' 0180'              	clrf	sprintf@eexp^(0+128)
 11303  0170' 0180'              	clrf	(sprintf@eexp+1)^(0+128)
 11304  0171'                    l4615:
 11305                           
 11306                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 11307  0171' 0180'              	clrf	sprintf@c^(0+128)
 11308  0172' 0A80'              	incf	sprintf@c^(0+128),f
 11309  0173'                    l4621:
 11310                           
 11311                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 11312  0173' 0800'              	movf	sprintf@c^(0+128),w
 11313  0174' 0080'              	movwf	??_sprintf^(0+128)
 11314  0175' 3001               	movlw	1
 11315  0176'                    u7325:
 11316  0176' 1003               	clrc
 11317  0177' 0D80'              	rlf	??_sprintf^(0+128),f
 11318  0178' 3EFF               	addlw	-1
 11319  0179' 1D03               	skipz
 11320  017A' 2800'              	goto	u7325
 11321  017B' 1003               	clrc
 11322  017C' 0D00'              	rlf	??_sprintf^(0+128),w
 11323  017D' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11324  017E' 0084               	movwf	4
 11325  017F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11326  0184' 0080'              	movwf	(??_sprintf+1)^(0+128)
 11327  0185' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11328  018A' 0081'              	movwf	((??_sprintf+1)^(0+128)+1)
 11329  018B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11330  0190' 0082'              	movwf	((??_sprintf+1)^(0+128)+2)
 11331  0191' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11332  0196' 0083'              	movwf	((??_sprintf+1)^(0+128)+3)
 11333  0197' 0800'              	movf	(??_sprintf+4)^(0+128),w
 11334  0198' 0200'              	subwf	(sprintf@val+3)^(0+128),w
 11335  0199' 1D03               	skipz
 11336  019A' 2800'              	goto	u7335
 11337  019B' 0800'              	movf	(??_sprintf+3)^(0+128),w
 11338  019C' 0200'              	subwf	(sprintf@val+2)^(0+128),w
 11339  019D' 1D03               	skipz
 11340  019E' 2800'              	goto	u7335
 11341  019F' 0800'              	movf	(??_sprintf+2)^(0+128),w
 11342  01A0' 0200'              	subwf	(sprintf@val+1)^(0+128),w
 11343  01A1' 1D03               	skipz
 11344  01A2' 2800'              	goto	u7335
 11345  01A3' 0800'              	movf	(??_sprintf+1)^(0+128),w
 11346  01A4' 0200'              	subwf	sprintf@val^(0+128),w
 11347  01A5'                    u7335:
 11348  01A5' 1803               	skipnc
 11349  01A6' 2800'              	goto	u7331
 11350  01A7' 2800'              	goto	u7330
 11351  01A8'                    u7331:
 11352  01A8' 2800'              	goto	l4625
 11353  01A9'                    u7330:
 11354  01A9' 2800'              	goto	l4627
 11355  01AA'                    l4625:
 11356  01AA' 3001               	movlw	1
 11357  01AB' 0080'              	movwf	??_sprintf^(0+128)
 11358  01AC' 0800'              	movf	??_sprintf^(0+128),w
 11359  01AD' 0780'              	addwf	sprintf@c^(0+128),f
 11360  01AE' 300A               	movlw	10
 11361  01AF' 0600'              	xorwf	sprintf@c^(0+128),w
 11362  01B0' 1D03               	btfss	3,2
 11363  01B1' 2800'              	goto	u7341
 11364  01B2' 2800'              	goto	u7340
 11365  01B3'                    u7341:
 11366  01B3' 2800'              	goto	l4621
 11367  01B4'                    u7340:
 11368  01B4'                    l4627:
 11369                           
 11370                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
 11371  01B4' 3003               	movlw	3
 11372  01B5' 0500'              	andwf	sprintf@flag^(0+128),w
 11373  01B6' 0080'              	movwf	??_sprintf^(0+128)
 11374  01B7' 3000               	movlw	0
 11375  01B8' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
 11376  01B9' 0080'              	movwf	(??_sprintf+1)^(0+128)
 11377  01BA' 0800'              	movf	??_sprintf^(0+128),w
 11378  01BB' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
 11379  01BC' 1903               	btfsc	3,2
 11380  01BD' 2800'              	goto	u7351
 11381  01BE' 2800'              	goto	u7350
 11382  01BF'                    u7351:
 11383  01BF' 2800'              	goto	l4641
 11384  01C0'                    u7350:
 11385  01C0'                    l4629:
 11386                           
 11387                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 11388  01C0' 302D               	movlw	45
 11389  01C1' 0080'              	movwf	??_sprintf^(0+128)
 11390  01C2' 0800'              	movf	sprintf@sp^(0+128),w
 11391  01C3' 0084               	movwf	4
 11392  01C4' 1783               	bsf	3,7
 11393  01C5' 1C00'              	btfss	(sprintf@sp+1)^(0+128),0
 11394  01C6' 1383               	bcf	3,7
 11395  01C7' 0800'              	movf	??_sprintf^(0+128),w
 11396  01C8' 0080               	movwf	0
 11397  01C9'                    l4631:
 11398  01C9' 3001               	movlw	1
 11399  01CA' 0780'              	addwf	sprintf@sp^(0+128),f
 11400  01CB' 1803               	skipnc
 11401  01CC' 0A80'              	incf	(sprintf@sp+1)^(0+128),f
 11402  01CD' 3000               	movlw	0
 11403  01CE' 0780'              	addwf	(sprintf@sp+1)^(0+128),f
 11404  01CF' 2800'              	goto	l4641
 11405  01D0'                    l4633:
 11406                           
 11407                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 11408  01D0' 0800'              	movf	sprintf@c^(0+128),w
 11409  01D1' 0080'              	movwf	??_sprintf^(0+128)
 11410  01D2' 3001               	movlw	1
 11411  01D3'                    u7365:
 11412  01D3' 1003               	clrc
 11413  01D4' 0D80'              	rlf	??_sprintf^(0+128),f
 11414  01D5' 3EFF               	addlw	-1
 11415  01D6' 1D03               	skipz
 11416  01D7' 2800'              	goto	u7365
 11417  01D8' 1003               	clrc
 11418  01D9' 0D00'              	rlf	??_sprintf^(0+128),w
 11419  01DA' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11420  01DB' 0084               	movwf	4
 11421  01DC' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11422  01E1' 1283               	bcf	3,5	;RP0=0, select bank0
 11423  01E2' 1303               	bcf	3,6	;RP1=0, select bank0
 11424  01E3' 0080'              	movwf	___lldiv@divisor
 11425  01E4' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11426  01E9' 0081'              	movwf	___lldiv@divisor+1
 11427  01EA' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11428  01EF' 0082'              	movwf	___lldiv@divisor+2
 11429  01F0' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11430  01F5' 0083'              	movwf	___lldiv@divisor+3
 11431  01F6' 1683               	bsf	3,5	;RP0=1, select bank1
 11432  01F7' 1303               	bcf	3,6	;RP1=0, select bank1
 11433  01F8' 0800'              	movf	(sprintf@val+3)^(0+128),w
 11434  01F9' 1283               	bcf	3,5	;RP0=0, select bank0
 11435  01FA' 1303               	bcf	3,6	;RP1=0, select bank0
 11436  01FB' 0087'              	movwf	___lldiv@dividend+3
 11437  01FC' 1683               	bsf	3,5	;RP0=1, select bank1
 11438  01FD' 1303               	bcf	3,6	;RP1=0, select bank1
 11439  01FE' 0800'              	movf	(sprintf@val+2)^(0+128),w
 11440  01FF' 1283               	bcf	3,5	;RP0=0, select bank0
 11441  0200' 1303               	bcf	3,6	;RP1=0, select bank0
 11442  0201' 0086'              	movwf	___lldiv@dividend+2
 11443  0202' 1683               	bsf	3,5	;RP0=1, select bank1
 11444  0203' 1303               	bcf	3,6	;RP1=0, select bank1
 11445  0204' 0800'              	movf	(sprintf@val+1)^(0+128),w
 11446  0205' 1283               	bcf	3,5	;RP0=0, select bank0
 11447  0206' 1303               	bcf	3,6	;RP1=0, select bank0
 11448  0207' 0085'              	movwf	___lldiv@dividend+1
 11449  0208' 1683               	bsf	3,5	;RP0=1, select bank1
 11450  0209' 1303               	bcf	3,6	;RP1=0, select bank1
 11451  020A' 0800'              	movf	sprintf@val^(0+128),w
 11452  020B' 1283               	bcf	3,5	;RP0=0, select bank0
 11453  020C' 1303               	bcf	3,6	;RP1=0, select bank0
 11454  020D' 0084'              	movwf	___lldiv@dividend
 11455  020E' 120A' 118A' 2000' 120A' 118A' 	fcall	___lldiv
 11456  0213' 1283               	bcf	3,5	;RP0=0, select bank0
 11457  0214' 1303               	bcf	3,6	;RP1=0, select bank0
 11458  0215' 0803'              	movf	?___lldiv+3,w
 11459  0216' 1683               	bsf	3,5	;RP0=1, select bank1
 11460  0217' 1303               	bcf	3,6	;RP1=0, select bank1
 11461  0218' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
 11462  0219' 1283               	bcf	3,5	;RP0=0, select bank0
 11463  021A' 1303               	bcf	3,6	;RP1=0, select bank0
 11464  021B' 0802'              	movf	?___lldiv+2,w
 11465  021C' 1683               	bsf	3,5	;RP0=1, select bank1
 11466  021D' 1303               	bcf	3,6	;RP1=0, select bank1
 11467  021E' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
 11468  021F' 1283               	bcf	3,5	;RP0=0, select bank0
 11469  0220' 1303               	bcf	3,6	;RP1=0, select bank0
 11470  0221' 0801'              	movf	?___lldiv+1,w
 11471  0222' 1683               	bsf	3,5	;RP0=1, select bank1
 11472  0223' 1303               	bcf	3,6	;RP1=0, select bank1
 11473  0224' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
 11474  0225' 1283               	bcf	3,5	;RP0=0, select bank0
 11475  0226' 1303               	bcf	3,6	;RP1=0, select bank0
 11476  0227' 0800'              	movf	?___lldiv,w
 11477  0228' 1683               	bsf	3,5	;RP0=1, select bank1
 11478  0229' 1303               	bcf	3,6	;RP1=0, select bank1
 11479  022A' 0080'              	movwf	sprintf@tmpval^(0+128)
 11480  022B'                    l4635:
 11481                           
 11482                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 11483  022B' 3000               	movlw	0
 11484  022C' 1283               	bcf	3,5	;RP0=0, select bank0
 11485  022D' 1303               	bcf	3,6	;RP1=0, select bank0
 11486  022E' 008B'              	movwf	___llmod@divisor+3
 11487  022F' 3000               	movlw	0
 11488  0230' 008A'              	movwf	___llmod@divisor+2
 11489  0231' 3000               	movlw	0
 11490  0232' 0089'              	movwf	___llmod@divisor+1
 11491  0233' 300A               	movlw	10
 11492  0234' 0088'              	movwf	___llmod@divisor
 11493  0235' 1683               	bsf	3,5	;RP0=1, select bank1
 11494  0236' 1303               	bcf	3,6	;RP1=0, select bank1
 11495  0237' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
 11496  0238' 1283               	bcf	3,5	;RP0=0, select bank0
 11497  0239' 1303               	bcf	3,6	;RP1=0, select bank0
 11498  023A' 008F'              	movwf	___llmod@dividend+3
 11499  023B' 1683               	bsf	3,5	;RP0=1, select bank1
 11500  023C' 1303               	bcf	3,6	;RP1=0, select bank1
 11501  023D' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
 11502  023E' 1283               	bcf	3,5	;RP0=0, select bank0
 11503  023F' 1303               	bcf	3,6	;RP1=0, select bank0
 11504  0240' 008E'              	movwf	___llmod@dividend+2
 11505  0241' 1683               	bsf	3,5	;RP0=1, select bank1
 11506  0242' 1303               	bcf	3,6	;RP1=0, select bank1
 11507  0243' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
 11508  0244' 1283               	bcf	3,5	;RP0=0, select bank0
 11509  0245' 1303               	bcf	3,6	;RP1=0, select bank0
 11510  0246' 008D'              	movwf	___llmod@dividend+1
 11511  0247' 1683               	bsf	3,5	;RP0=1, select bank1
 11512  0248' 1303               	bcf	3,6	;RP1=0, select bank1
 11513  0249' 0800'              	movf	sprintf@tmpval^(0+128),w
 11514  024A' 1283               	bcf	3,5	;RP0=0, select bank0
 11515  024B' 1303               	bcf	3,6	;RP1=0, select bank0
 11516  024C' 008C'              	movwf	___llmod@dividend
 11517  024D' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
 11518  0252' 1283               	bcf	3,5	;RP0=0, select bank0
 11519  0253' 1303               	bcf	3,6	;RP1=0, select bank0
 11520  0254' 080B'              	movf	?___llmod+3,w
 11521  0255' 1683               	bsf	3,5	;RP0=1, select bank1
 11522  0256' 1303               	bcf	3,6	;RP1=0, select bank1
 11523  0257' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
 11524  0258' 1283               	bcf	3,5	;RP0=0, select bank0
 11525  0259' 1303               	bcf	3,6	;RP1=0, select bank0
 11526  025A' 080A'              	movf	?___llmod+2,w
 11527  025B' 1683               	bsf	3,5	;RP0=1, select bank1
 11528  025C' 1303               	bcf	3,6	;RP1=0, select bank1
 11529  025D' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
 11530  025E' 1283               	bcf	3,5	;RP0=0, select bank0
 11531  025F' 1303               	bcf	3,6	;RP1=0, select bank0
 11532  0260' 0809'              	movf	?___llmod+1,w
 11533  0261' 1683               	bsf	3,5	;RP0=1, select bank1
 11534  0262' 1303               	bcf	3,6	;RP1=0, select bank1
 11535  0263' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
 11536  0264' 1283               	bcf	3,5	;RP0=0, select bank0
 11537  0265' 1303               	bcf	3,6	;RP1=0, select bank0
 11538  0266' 0808'              	movf	?___llmod,w
 11539  0267' 1683               	bsf	3,5	;RP0=1, select bank1
 11540  0268' 1303               	bcf	3,6	;RP1=0, select bank1
 11541  0269' 0080'              	movwf	sprintf@tmpval^(0+128)
 11542  026A'                    l4637:
 11543                           
 11544                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 11545  026A' 0800'              	movf	sprintf@tmpval^(0+128),w
 11546  026B' 3E30               	addlw	48
 11547  026C' 0080'              	movwf	??_sprintf^(0+128)
 11548  026D' 0800'              	movf	sprintf@sp^(0+128),w
 11549  026E' 0084               	movwf	4
 11550  026F' 1783               	bsf	3,7
 11551  0270' 1C00'              	btfss	(sprintf@sp+1)^(0+128),0
 11552  0271' 1383               	bcf	3,7
 11553  0272' 0800'              	movf	??_sprintf^(0+128),w
 11554  0273' 0080               	movwf	0
 11555  0274' 2800'              	goto	l4631
 11556  0275'                    l4641:
 11557                           
 11558                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 11559  0275' 3001               	movlw	1
 11560  0276' 0280'              	subwf	sprintf@c^(0+128),f
 11561  0277' 0A00'              	incf	sprintf@c^(0+128),w
 11562  0278' 1D03               	btfss	3,2
 11563  0279' 2800'              	goto	u7371
 11564  027A' 2800'              	goto	u7370
 11565  027B'                    u7371:
 11566  027B' 2800'              	goto	l4633
 11567  027C'                    u7370:
 11568  027C' 2800'              	goto	l4649
 11569  027D'                    l4643:
 11570                           
 11571                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 11572  027D' 3030               	movlw	48
 11573  027E' 1683               	bsf	3,5	;RP0=1, select bank1
 11574  027F' 1303               	bcf	3,6	;RP1=0, select bank1
 11575  0280' 0080'              	movwf	??_sprintf^(0+128)
 11576  0281' 0800'              	movf	sprintf@sp^(0+128),w
 11577  0282' 0084               	movwf	4
 11578  0283' 1783               	bsf	3,7
 11579  0284' 1C00'              	btfss	(sprintf@sp+1)^(0+128),0
 11580  0285' 1383               	bcf	3,7
 11581  0286' 0800'              	movf	??_sprintf^(0+128),w
 11582  0287' 0080               	movwf	0
 11583  0288'                    l4645:
 11584  0288' 3001               	movlw	1
 11585  0289' 0780'              	addwf	sprintf@sp^(0+128),f
 11586  028A' 1803               	skipnc
 11587  028B' 0A80'              	incf	(sprintf@sp+1)^(0+128),f
 11588  028C' 3000               	movlw	0
 11589  028D' 0780'              	addwf	(sprintf@sp+1)^(0+128),f
 11590  028E'                    l4647:
 11591                           
 11592                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 11593  028E' 30FF               	movlw	255
 11594  028F' 0780'              	addwf	sprintf@eexp^(0+128),f
 11595  0290' 1803               	skipnc
 11596  0291' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
 11597  0292' 30FF               	movlw	255
 11598  0293' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
 11599  0294'                    l4649:
 11600                           
 11601                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 11602  0294' 0800'              	movf	(sprintf@eexp+1)^(0+128),w
 11603  0295' 3A80               	xorlw	128
 11604  0296' 00FF               	movwf	btemp+1
 11605  0297' 3080               	movlw	128
 11606  0298' 027F               	subwf	btemp+1,w
 11607  0299' 1D03               	skipz
 11608  029A' 2800'              	goto	u7385
 11609  029B' 3001               	movlw	1
 11610  029C' 0200'              	subwf	sprintf@eexp^(0+128),w
 11611  029D'                    u7385:
 11612  029D' 1803               	skipnc
 11613  029E' 2800'              	goto	u7381
 11614  029F' 2800'              	goto	u7380
 11615  02A0'                    u7381:
 11616  02A0' 2800'              	goto	l4643
 11617  02A1'                    u7380:
 11618  02A1'                    l4651:
 11619                           
 11620                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 11621  02A1' 1683               	bsf	3,5	;RP0=1, select bank1
 11622  02A2' 1303               	bcf	3,6	;RP1=0, select bank1
 11623  02A3' 0800'              	movf	(sprintf@prec+1)^(0+128),w
 11624  02A4' 3A80               	xorlw	128
 11625  02A5' 00FF               	movwf	btemp+1
 11626  02A6' 3080               	movlw	128
 11627  02A7' 027F               	subwf	btemp+1,w
 11628  02A8' 1D03               	skipz
 11629  02A9' 2800'              	goto	u7395
 11630  02AA' 3009               	movlw	9
 11631  02AB' 0200'              	subwf	sprintf@prec^(0+128),w
 11632  02AC'                    u7395:
 11633  02AC' 1C03               	skipc
 11634  02AD' 2800'              	goto	u7391
 11635  02AE' 2800'              	goto	u7390
 11636  02AF'                    u7391:
 11637  02AF' 2800'              	goto	l4655
 11638  02B0'                    u7390:
 11639  02B0'                    l4653:
 11640                           
 11641                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 11642  02B0' 3008               	movlw	8
 11643  02B1' 1683               	bsf	3,5	;RP0=1, select bank1
 11644  02B2' 1303               	bcf	3,6	;RP1=0, select bank1
 11645  02B3' 0080'              	movwf	??_sprintf^(0+128)
 11646  02B4' 0800'              	movf	??_sprintf^(0+128),w
 11647  02B5' 0080'              	movwf	sprintf@c^(0+128)
 11648  02B6' 2800'              	goto	l373
 11649  02B7'                    l4655:
 11650                           
 11651                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 11652  02B7' 1683               	bsf	3,5	;RP0=1, select bank1
 11653  02B8' 1303               	bcf	3,6	;RP1=0, select bank1
 11654  02B9' 0800'              	movf	sprintf@prec^(0+128),w
 11655  02BA' 0080'              	movwf	??_sprintf^(0+128)
 11656  02BB' 0800'              	movf	??_sprintf^(0+128),w
 11657  02BC' 0080'              	movwf	sprintf@c^(0+128)
 11658  02BD'                    l373:
 11659                           
 11660                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 11661  02BD' 0800'              	movf	sprintf@c^(0+128),w
 11662  02BE' 0080'              	movwf	??_sprintf^(0+128)
 11663  02BF' 0181'              	clrf	(??_sprintf^(0+128)+1)
 11664  02C0' 0800'              	movf	??_sprintf^(0+128),w
 11665  02C1' 0280'              	subwf	sprintf@prec^(0+128),f
 11666  02C2' 0800'              	movf	(??_sprintf+1)^(0+128),w
 11667  02C3' 1C03               	skipc
 11668  02C4' 0380'              	decf	(sprintf@prec+1)^(0+128),f
 11669  02C5' 0280'              	subwf	(sprintf@prec+1)^(0+128),f
 11670  02C6'                    l4657:
 11671                           
 11672                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 11673  02C6' 0800'              	movf	sprintf@c^(0+128),w
 11674  02C7' 1903               	btfsc	3,2
 11675  02C8' 2800'              	goto	u7401
 11676  02C9' 2800'              	goto	u7400
 11677  02CA'                    u7401:
 11678  02CA' 2800'              	goto	l4663
 11679  02CB'                    u7400:
 11680  02CB'                    l4659:
 11681                           
 11682                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 11683  02CB' 302E               	movlw	46
 11684  02CC' 0080'              	movwf	??_sprintf^(0+128)
 11685  02CD' 0800'              	movf	sprintf@sp^(0+128),w
 11686  02CE' 0084               	movwf	4
 11687  02CF' 1783               	bsf	3,7
 11688  02D0' 1C00'              	btfss	(sprintf@sp+1)^(0+128),0
 11689  02D1' 1383               	bcf	3,7
 11690  02D2' 0800'              	movf	??_sprintf^(0+128),w
 11691  02D3' 0080               	movwf	0
 11692  02D4'                    l4661:
 11693  02D4' 3001               	movlw	1
 11694  02D5' 0780'              	addwf	sprintf@sp^(0+128),f
 11695  02D6' 1803               	skipnc
 11696  02D7' 0A80'              	incf	(sprintf@sp+1)^(0+128),f
 11697  02D8' 3000               	movlw	0
 11698  02D9' 0780'              	addwf	(sprintf@sp+1)^(0+128),f
 11699  02DA'                    l4663:
 11700                           
 11701                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11702  02DA' 0800'              	movf	sprintf@c^(0+128),w
 11703  02DB' 120A' 118A' 2000' 120A' 118A' 	fcall	_scale
 11704  02E0' 1283               	bcf	3,5	;RP0=0, select bank0
 11705  02E1' 1303               	bcf	3,6	;RP1=0, select bank0
 11706  02E2' 0827'              	movf	?_scale+3,w
 11707  02E3' 1683               	bsf	3,5	;RP0=1, select bank1
 11708  02E4' 1303               	bcf	3,6	;RP1=0, select bank1
 11709  02E5' 0080'              	movwf	(_sprintf$1256+3)^(0+128)
 11710  02E6' 1283               	bcf	3,5	;RP0=0, select bank0
 11711  02E7' 1303               	bcf	3,6	;RP1=0, select bank0
 11712  02E8' 0826'              	movf	?_scale+2,w
 11713  02E9' 1683               	bsf	3,5	;RP0=1, select bank1
 11714  02EA' 1303               	bcf	3,6	;RP1=0, select bank1
 11715  02EB' 0080'              	movwf	(_sprintf$1256+2)^(0+128)
 11716  02EC' 1283               	bcf	3,5	;RP0=0, select bank0
 11717  02ED' 1303               	bcf	3,6	;RP1=0, select bank0
 11718  02EE' 0825'              	movf	?_scale+1,w
 11719  02EF' 1683               	bsf	3,5	;RP0=1, select bank1
 11720  02F0' 1303               	bcf	3,6	;RP1=0, select bank1
 11721  02F1' 0080'              	movwf	(_sprintf$1256+1)^(0+128)
 11722  02F2' 1283               	bcf	3,5	;RP0=0, select bank0
 11723  02F3' 1303               	bcf	3,6	;RP1=0, select bank0
 11724  02F4' 0824'              	movf	?_scale,w
 11725  02F5' 1683               	bsf	3,5	;RP0=1, select bank1
 11726  02F6' 1303               	bcf	3,6	;RP1=0, select bank1
 11727  02F7' 0080'              	movwf	_sprintf$1256^(0+128)
 11728                           
 11729                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11730  02F8' 0800'              	movf	(_sprintf$1256+3)^(0+128),w
 11731  02F9' 1283               	bcf	3,5	;RP0=0, select bank0
 11732  02FA' 1303               	bcf	3,6	;RP1=0, select bank0
 11733  02FB' 0091'              	movwf	___flmul@a+3
 11734  02FC' 1683               	bsf	3,5	;RP0=1, select bank1
 11735  02FD' 1303               	bcf	3,6	;RP1=0, select bank1
 11736  02FE' 0800'              	movf	(_sprintf$1256+2)^(0+128),w
 11737  02FF' 1283               	bcf	3,5	;RP0=0, select bank0
 11738  0300' 1303               	bcf	3,6	;RP1=0, select bank0
 11739  0301' 0090'              	movwf	___flmul@a+2
 11740  0302' 1683               	bsf	3,5	;RP0=1, select bank1
 11741  0303' 1303               	bcf	3,6	;RP1=0, select bank1
 11742  0304' 0800'              	movf	(_sprintf$1256+1)^(0+128),w
 11743  0305' 1283               	bcf	3,5	;RP0=0, select bank0
 11744  0306' 1303               	bcf	3,6	;RP1=0, select bank0
 11745  0307' 008F'              	movwf	___flmul@a+1
 11746  0308' 1683               	bsf	3,5	;RP0=1, select bank1
 11747  0309' 1303               	bcf	3,6	;RP1=0, select bank1
 11748  030A' 0800'              	movf	_sprintf$1256^(0+128),w
 11749  030B' 1283               	bcf	3,5	;RP0=0, select bank0
 11750  030C' 1303               	bcf	3,6	;RP1=0, select bank0
 11751  030D' 008E'              	movwf	___flmul@a
 11752  030E' 1683               	bsf	3,5	;RP0=1, select bank1
 11753  030F' 1303               	bcf	3,6	;RP1=0, select bank1
 11754  0310' 0800'              	movf	(sprintf@fval+3)^(0+128),w
 11755  0311' 1283               	bcf	3,5	;RP0=0, select bank0
 11756  0312' 1303               	bcf	3,6	;RP1=0, select bank0
 11757  0313' 008D'              	movwf	___flmul@b+3
 11758  0314' 1683               	bsf	3,5	;RP0=1, select bank1
 11759  0315' 1303               	bcf	3,6	;RP1=0, select bank1
 11760  0316' 0800'              	movf	(sprintf@fval+2)^(0+128),w
 11761  0317' 1283               	bcf	3,5	;RP0=0, select bank0
 11762  0318' 1303               	bcf	3,6	;RP1=0, select bank0
 11763  0319' 008C'              	movwf	___flmul@b+2
 11764  031A' 1683               	bsf	3,5	;RP0=1, select bank1
 11765  031B' 1303               	bcf	3,6	;RP1=0, select bank1
 11766  031C' 0800'              	movf	(sprintf@fval+1)^(0+128),w
 11767  031D' 1283               	bcf	3,5	;RP0=0, select bank0
 11768  031E' 1303               	bcf	3,6	;RP1=0, select bank0
 11769  031F' 008B'              	movwf	___flmul@b+1
 11770  0320' 1683               	bsf	3,5	;RP0=1, select bank1
 11771  0321' 1303               	bcf	3,6	;RP1=0, select bank1
 11772  0322' 0800'              	movf	sprintf@fval^(0+128),w
 11773  0323' 1283               	bcf	3,5	;RP0=0, select bank0
 11774  0324' 1303               	bcf	3,6	;RP1=0, select bank0
 11775  0325' 008A'              	movwf	___flmul@b
 11776  0326' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
 11777  032B' 1283               	bcf	3,5	;RP0=0, select bank0
 11778  032C' 1303               	bcf	3,6	;RP1=0, select bank0
 11779  032D' 080D'              	movf	?___flmul+3,w
 11780  032E' 00BA'              	movwf	___fltol@f1+3
 11781  032F' 080C'              	movf	?___flmul+2,w
 11782  0330' 00B9'              	movwf	___fltol@f1+2
 11783  0331' 080B'              	movf	?___flmul+1,w
 11784  0332' 00B8'              	movwf	___fltol@f1+1
 11785  0333' 080A'              	movf	?___flmul,w
 11786  0334' 00B7'              	movwf	___fltol@f1
 11787  0335' 120A' 118A' 2000' 120A' 118A' 	fcall	___fltol
 11788  033A' 1283               	bcf	3,5	;RP0=0, select bank0
 11789  033B' 1303               	bcf	3,6	;RP1=0, select bank0
 11790  033C' 083A'              	movf	?___fltol+3,w
 11791  033D' 1683               	bsf	3,5	;RP0=1, select bank1
 11792  033E' 1303               	bcf	3,6	;RP1=0, select bank1
 11793  033F' 0080'              	movwf	(sprintf@val+3)^(0+128)
 11794  0340' 1283               	bcf	3,5	;RP0=0, select bank0
 11795  0341' 1303               	bcf	3,6	;RP1=0, select bank0
 11796  0342' 0839'              	movf	?___fltol+2,w
 11797  0343' 1683               	bsf	3,5	;RP0=1, select bank1
 11798  0344' 1303               	bcf	3,6	;RP1=0, select bank1
 11799  0345' 0080'              	movwf	(sprintf@val+2)^(0+128)
 11800  0346' 1283               	bcf	3,5	;RP0=0, select bank0
 11801  0347' 1303               	bcf	3,6	;RP1=0, select bank0
 11802  0348' 0838'              	movf	?___fltol+1,w
 11803  0349' 1683               	bsf	3,5	;RP0=1, select bank1
 11804  034A' 1303               	bcf	3,6	;RP1=0, select bank1
 11805  034B' 0080'              	movwf	(sprintf@val+1)^(0+128)
 11806  034C' 1283               	bcf	3,5	;RP0=0, select bank0
 11807  034D' 1303               	bcf	3,6	;RP1=0, select bank0
 11808  034E' 0837'              	movf	?___fltol,w
 11809  034F' 1683               	bsf	3,5	;RP0=1, select bank1
 11810  0350' 1303               	bcf	3,6	;RP1=0, select bank1
 11811  0351' 0080'              	movwf	sprintf@val^(0+128)
 11812                           
 11813                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11814  0352' 2800'              	goto	l4675
 11815  0353'                    l4665:
 11816                           
 11817                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 11818  0353' 0800'              	movf	sprintf@c^(0+128),w
 11819  0354' 0080'              	movwf	??_sprintf^(0+128)
 11820  0355' 3001               	movlw	1
 11821  0356'                    u7415:
 11822  0356' 1003               	clrc
 11823  0357' 0D80'              	rlf	??_sprintf^(0+128),f
 11824  0358' 3EFF               	addlw	-1
 11825  0359' 1D03               	skipz
 11826  035A' 2800'              	goto	u7415
 11827  035B' 1003               	clrc
 11828  035C' 0D00'              	rlf	??_sprintf^(0+128),w
 11829  035D' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11830  035E' 0084               	movwf	4
 11831  035F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11832  0364' 1283               	bcf	3,5	;RP0=0, select bank0
 11833  0365' 1303               	bcf	3,6	;RP1=0, select bank0
 11834  0366' 0080'              	movwf	___lldiv@divisor
 11835  0367' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11836  036C' 0081'              	movwf	___lldiv@divisor+1
 11837  036D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11838  0372' 0082'              	movwf	___lldiv@divisor+2
 11839  0373' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11840  0378' 0083'              	movwf	___lldiv@divisor+3
 11841  0379' 1683               	bsf	3,5	;RP0=1, select bank1
 11842  037A' 1303               	bcf	3,6	;RP1=0, select bank1
 11843  037B' 0800'              	movf	(sprintf@val+3)^(0+128),w
 11844  037C' 1283               	bcf	3,5	;RP0=0, select bank0
 11845  037D' 1303               	bcf	3,6	;RP1=0, select bank0
 11846  037E' 0087'              	movwf	___lldiv@dividend+3
 11847  037F' 1683               	bsf	3,5	;RP0=1, select bank1
 11848  0380' 1303               	bcf	3,6	;RP1=0, select bank1
 11849  0381' 0800'              	movf	(sprintf@val+2)^(0+128),w
 11850  0382' 1283               	bcf	3,5	;RP0=0, select bank0
 11851  0383' 1303               	bcf	3,6	;RP1=0, select bank0
 11852  0384' 0086'              	movwf	___lldiv@dividend+2
 11853  0385' 1683               	bsf	3,5	;RP0=1, select bank1
 11854  0386' 1303               	bcf	3,6	;RP1=0, select bank1
 11855  0387' 0800'              	movf	(sprintf@val+1)^(0+128),w
 11856  0388' 1283               	bcf	3,5	;RP0=0, select bank0
 11857  0389' 1303               	bcf	3,6	;RP1=0, select bank0
 11858  038A' 0085'              	movwf	___lldiv@dividend+1
 11859  038B' 1683               	bsf	3,5	;RP0=1, select bank1
 11860  038C' 1303               	bcf	3,6	;RP1=0, select bank1
 11861  038D' 0800'              	movf	sprintf@val^(0+128),w
 11862  038E' 1283               	bcf	3,5	;RP0=0, select bank0
 11863  038F' 1303               	bcf	3,6	;RP1=0, select bank0
 11864  0390' 0084'              	movwf	___lldiv@dividend
 11865  0391' 120A' 118A' 2000' 120A' 118A' 	fcall	___lldiv
 11866  0396' 1283               	bcf	3,5	;RP0=0, select bank0
 11867  0397' 1303               	bcf	3,6	;RP1=0, select bank0
 11868  0398' 0803'              	movf	?___lldiv+3,w
 11869  0399' 1683               	bsf	3,5	;RP0=1, select bank1
 11870  039A' 1303               	bcf	3,6	;RP1=0, select bank1
 11871  039B' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
 11872  039C' 1283               	bcf	3,5	;RP0=0, select bank0
 11873  039D' 1303               	bcf	3,6	;RP1=0, select bank0
 11874  039E' 0802'              	movf	?___lldiv+2,w
 11875  039F' 1683               	bsf	3,5	;RP0=1, select bank1
 11876  03A0' 1303               	bcf	3,6	;RP1=0, select bank1
 11877  03A1' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
 11878  03A2' 1283               	bcf	3,5	;RP0=0, select bank0
 11879  03A3' 1303               	bcf	3,6	;RP1=0, select bank0
 11880  03A4' 0801'              	movf	?___lldiv+1,w
 11881  03A5' 1683               	bsf	3,5	;RP0=1, select bank1
 11882  03A6' 1303               	bcf	3,6	;RP1=0, select bank1
 11883  03A7' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
 11884  03A8' 1283               	bcf	3,5	;RP0=0, select bank0
 11885  03A9' 1303               	bcf	3,6	;RP1=0, select bank0
 11886  03AA' 0800'              	movf	?___lldiv,w
 11887  03AB' 1683               	bsf	3,5	;RP0=1, select bank1
 11888  03AC' 1303               	bcf	3,6	;RP1=0, select bank1
 11889  03AD' 0080'              	movwf	sprintf@tmpval^(0+128)
 11890  03AE'                    l4667:
 11891                           
 11892                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 11893  03AE' 3000               	movlw	0
 11894  03AF' 1283               	bcf	3,5	;RP0=0, select bank0
 11895  03B0' 1303               	bcf	3,6	;RP1=0, select bank0
 11896  03B1' 008B'              	movwf	___llmod@divisor+3
 11897  03B2' 3000               	movlw	0
 11898  03B3' 008A'              	movwf	___llmod@divisor+2
 11899  03B4' 3000               	movlw	0
 11900  03B5' 0089'              	movwf	___llmod@divisor+1
 11901  03B6' 300A               	movlw	10
 11902  03B7' 0088'              	movwf	___llmod@divisor
 11903  03B8' 1683               	bsf	3,5	;RP0=1, select bank1
 11904  03B9' 1303               	bcf	3,6	;RP1=0, select bank1
 11905  03BA' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
 11906  03BB' 1283               	bcf	3,5	;RP0=0, select bank0
 11907  03BC' 1303               	bcf	3,6	;RP1=0, select bank0
 11908  03BD' 008F'              	movwf	___llmod@dividend+3
 11909  03BE' 1683               	bsf	3,5	;RP0=1, select bank1
 11910  03BF' 1303               	bcf	3,6	;RP1=0, select bank1
 11911  03C0' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
 11912  03C1' 1283               	bcf	3,5	;RP0=0, select bank0
 11913  03C2' 1303               	bcf	3,6	;RP1=0, select bank0
 11914  03C3' 008E'              	movwf	___llmod@dividend+2
 11915  03C4' 1683               	bsf	3,5	;RP0=1, select bank1
 11916  03C5' 1303               	bcf	3,6	;RP1=0, select bank1
 11917  03C6' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
 11918  03C7' 1283               	bcf	3,5	;RP0=0, select bank0
 11919  03C8' 1303               	bcf	3,6	;RP1=0, select bank0
 11920  03C9' 008D'              	movwf	___llmod@dividend+1
 11921  03CA' 1683               	bsf	3,5	;RP0=1, select bank1
 11922  03CB' 1303               	bcf	3,6	;RP1=0, select bank1
 11923  03CC' 0800'              	movf	sprintf@tmpval^(0+128),w
 11924  03CD' 1283               	bcf	3,5	;RP0=0, select bank0
 11925  03CE' 1303               	bcf	3,6	;RP1=0, select bank0
 11926  03CF' 008C'              	movwf	___llmod@dividend
 11927  03D0' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
 11928  03D5' 1283               	bcf	3,5	;RP0=0, select bank0
 11929  03D6' 1303               	bcf	3,6	;RP1=0, select bank0
 11930  03D7' 080B'              	movf	?___llmod+3,w
 11931  03D8' 1683               	bsf	3,5	;RP0=1, select bank1
 11932  03D9' 1303               	bcf	3,6	;RP1=0, select bank1
 11933  03DA' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
 11934  03DB' 1283               	bcf	3,5	;RP0=0, select bank0
 11935  03DC' 1303               	bcf	3,6	;RP1=0, select bank0
 11936  03DD' 080A'              	movf	?___llmod+2,w
 11937  03DE' 1683               	bsf	3,5	;RP0=1, select bank1
 11938  03DF' 1303               	bcf	3,6	;RP1=0, select bank1
 11939  03E0' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
 11940  03E1' 1283               	bcf	3,5	;RP0=0, select bank0
 11941  03E2' 1303               	bcf	3,6	;RP1=0, select bank0
 11942  03E3' 0809'              	movf	?___llmod+1,w
 11943  03E4' 1683               	bsf	3,5	;RP0=1, select bank1
 11944  03E5' 1303               	bcf	3,6	;RP1=0, select bank1
 11945  03E6' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
 11946  03E7' 1283               	bcf	3,5	;RP0=0, select bank0
 11947  03E8' 1303               	bcf	3,6	;RP1=0, select bank0
 11948  03E9' 0808'              	movf	?___llmod,w
 11949  03EA' 1683               	bsf	3,5	;RP0=1, select bank1
 11950  03EB' 1303               	bcf	3,6	;RP1=0, select bank1
 11951  03EC' 0080'              	movwf	sprintf@tmpval^(0+128)
 11952  03ED'                    l4669:
 11953                           
 11954                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 11955  03ED' 0800'              	movf	sprintf@tmpval^(0+128),w
 11956  03EE' 3E30               	addlw	48
 11957  03EF' 0080'              	movwf	??_sprintf^(0+128)
 11958  03F0' 0800'              	movf	sprintf@sp^(0+128),w
 11959  03F1' 0084               	movwf	4
 11960  03F2' 1783               	bsf	3,7
 11961  03F3' 1C00'              	btfss	(sprintf@sp+1)^(0+128),0
 11962  03F4' 1383               	bcf	3,7
 11963  03F5' 0800'              	movf	??_sprintf^(0+128),w
 11964  03F6' 0080               	movwf	0
 11965  03F7'                    l4671:
 11966  03F7' 3001               	movlw	1
 11967  03F8' 0780'              	addwf	sprintf@sp^(0+128),f
 11968  03F9' 1803               	skipnc
 11969  03FA' 0A80'              	incf	(sprintf@sp+1)^(0+128),f
 11970  03FB' 3000               	movlw	0
 11971  03FC' 0780'              	addwf	(sprintf@sp+1)^(0+128),f
 11972  03FD'                    l4673:
 11973                           
 11974                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 11975  03FD' 0800'              	movf	sprintf@c^(0+128),w
 11976  03FE' 0080'              	movwf	??_sprintf^(0+128)
 11977  03FF' 3001               	movlw	1
 11978  0400'                    u7425:
 11979  0400' 1003               	clrc
 11980  0401' 0D80'              	rlf	??_sprintf^(0+128),f
 11981  0402' 3EFF               	addlw	-1
 11982  0403' 1D03               	skipz
 11983  0404' 2800'              	goto	u7425
 11984  0405' 1003               	clrc
 11985  0406' 0D00'              	rlf	??_sprintf^(0+128),w
 11986  0407' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11987  0408' 0084               	movwf	4
 11988  0409' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11989  040E' 1283               	bcf	3,5	;RP0=0, select bank0
 11990  040F' 1303               	bcf	3,6	;RP1=0, select bank0
 11991  0410' 0088'              	movwf	___llmod@divisor
 11992  0411' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11993  0416' 0089'              	movwf	___llmod@divisor+1
 11994  0417' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11995  041C' 008A'              	movwf	___llmod@divisor+2
 11996  041D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11997  0422' 008B'              	movwf	___llmod@divisor+3
 11998  0423' 1683               	bsf	3,5	;RP0=1, select bank1
 11999  0424' 1303               	bcf	3,6	;RP1=0, select bank1
 12000  0425' 0800'              	movf	(sprintf@val+3)^(0+128),w
 12001  0426' 1283               	bcf	3,5	;RP0=0, select bank0
 12002  0427' 1303               	bcf	3,6	;RP1=0, select bank0
 12003  0428' 008F'              	movwf	___llmod@dividend+3
 12004  0429' 1683               	bsf	3,5	;RP0=1, select bank1
 12005  042A' 1303               	bcf	3,6	;RP1=0, select bank1
 12006  042B' 0800'              	movf	(sprintf@val+2)^(0+128),w
 12007  042C' 1283               	bcf	3,5	;RP0=0, select bank0
 12008  042D' 1303               	bcf	3,6	;RP1=0, select bank0
 12009  042E' 008E'              	movwf	___llmod@dividend+2
 12010  042F' 1683               	bsf	3,5	;RP0=1, select bank1
 12011  0430' 1303               	bcf	3,6	;RP1=0, select bank1
 12012  0431' 0800'              	movf	(sprintf@val+1)^(0+128),w
 12013  0432' 1283               	bcf	3,5	;RP0=0, select bank0
 12014  0433' 1303               	bcf	3,6	;RP1=0, select bank0
 12015  0434' 008D'              	movwf	___llmod@dividend+1
 12016  0435' 1683               	bsf	3,5	;RP0=1, select bank1
 12017  0436' 1303               	bcf	3,6	;RP1=0, select bank1
 12018  0437' 0800'              	movf	sprintf@val^(0+128),w
 12019  0438' 1283               	bcf	3,5	;RP0=0, select bank0
 12020  0439' 1303               	bcf	3,6	;RP1=0, select bank0
 12021  043A' 008C'              	movwf	___llmod@dividend
 12022  043B' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
 12023  0440' 1283               	bcf	3,5	;RP0=0, select bank0
 12024  0441' 1303               	bcf	3,6	;RP1=0, select bank0
 12025  0442' 080B'              	movf	?___llmod+3,w
 12026  0443' 1683               	bsf	3,5	;RP0=1, select bank1
 12027  0444' 1303               	bcf	3,6	;RP1=0, select bank1
 12028  0445' 0080'              	movwf	(sprintf@val+3)^(0+128)
 12029  0446' 1283               	bcf	3,5	;RP0=0, select bank0
 12030  0447' 1303               	bcf	3,6	;RP1=0, select bank0
 12031  0448' 080A'              	movf	?___llmod+2,w
 12032  0449' 1683               	bsf	3,5	;RP0=1, select bank1
 12033  044A' 1303               	bcf	3,6	;RP1=0, select bank1
 12034  044B' 0080'              	movwf	(sprintf@val+2)^(0+128)
 12035  044C' 1283               	bcf	3,5	;RP0=0, select bank0
 12036  044D' 1303               	bcf	3,6	;RP1=0, select bank0
 12037  044E' 0809'              	movf	?___llmod+1,w
 12038  044F' 1683               	bsf	3,5	;RP0=1, select bank1
 12039  0450' 1303               	bcf	3,6	;RP1=0, select bank1
 12040  0451' 0080'              	movwf	(sprintf@val+1)^(0+128)
 12041  0452' 1283               	bcf	3,5	;RP0=0, select bank0
 12042  0453' 1303               	bcf	3,6	;RP1=0, select bank0
 12043  0454' 0808'              	movf	?___llmod,w
 12044  0455' 1683               	bsf	3,5	;RP0=1, select bank1
 12045  0456' 1303               	bcf	3,6	;RP1=0, select bank1
 12046  0457' 0080'              	movwf	sprintf@val^(0+128)
 12047  0458'                    l4675:
 12048                           
 12049                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 12050  0458' 3001               	movlw	1
 12051  0459' 0280'              	subwf	sprintf@c^(0+128),f
 12052  045A' 0A00'              	incf	sprintf@c^(0+128),w
 12053  045B' 1D03               	btfss	3,2
 12054  045C' 2800'              	goto	u7431
 12055  045D' 2800'              	goto	u7430
 12056  045E'                    u7431:
 12057  045E' 2800'              	goto	l4665
 12058  045F'                    u7430:
 12059  045F' 2800'              	goto	l4683
 12060  0460'                    l4677:
 12061                           
 12062                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 12063  0460' 3030               	movlw	48
 12064  0461' 0080'              	movwf	??_sprintf^(0+128)
 12065  0462' 0800'              	movf	sprintf@sp^(0+128),w
 12066  0463' 0084               	movwf	4
 12067  0464' 1783               	bsf	3,7
 12068  0465' 1C00'              	btfss	(sprintf@sp+1)^(0+128),0
 12069  0466' 1383               	bcf	3,7
 12070  0467' 0800'              	movf	??_sprintf^(0+128),w
 12071  0468' 0080               	movwf	0
 12072  0469'                    l4679:
 12073  0469' 3001               	movlw	1
 12074  046A' 0780'              	addwf	sprintf@sp^(0+128),f
 12075  046B' 1803               	skipnc
 12076  046C' 0A80'              	incf	(sprintf@sp+1)^(0+128),f
 12077  046D' 3000               	movlw	0
 12078  046E' 0780'              	addwf	(sprintf@sp+1)^(0+128),f
 12079  046F'                    l4681:
 12080                           
 12081                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 12082  046F' 30FF               	movlw	255
 12083  0470' 0780'              	addwf	sprintf@prec^(0+128),f
 12084  0471' 1803               	skipnc
 12085  0472' 0A80'              	incf	(sprintf@prec+1)^(0+128),f
 12086  0473' 30FF               	movlw	255
 12087  0474' 0780'              	addwf	(sprintf@prec+1)^(0+128),f
 12088  0475'                    l4683:
 12089                           
 12090                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 12091  0475' 0800'              	movf	sprintf@prec^(0+128),w
 12092  0476' 0400'              	iorwf	(sprintf@prec+1)^(0+128),w
 12093  0477' 1D03               	btfss	3,2
 12094  0478' 2800'              	goto	u7441
 12095  0479' 2800'              	goto	u7440
 12096  047A'                    u7441:
 12097  047A' 2800'              	goto	l4677
 12098  047B'                    u7440:
 12099  047B' 2800'              	goto	l4735
 12100  047C'                    l4685:
 12101                           
 12102                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
 12103  047C' 0800'              	movf	sprintf@ap^(0+128),w
 12104  047D' 0084               	movwf	4
 12105  047E' 1383               	bcf	3,7	;select IRP bank0
 12106  047F' 0800               	movf	0,w
 12107  0480' 0080'              	movwf	??_sprintf^(0+128)
 12108  0481' 0A84               	incf	4,f
 12109  0482' 0800               	movf	0,w
 12110  0483' 0081'              	movwf	(??_sprintf^(0+128)+1)
 12111  0484' 0800'              	movf	??_sprintf^(0+128),w
 12112  0485' 0080'              	movwf	sprintf@val^(0+128)
 12113  0486' 0800'              	movf	(??_sprintf+1)^(0+128),w
 12114  0487' 0080'              	movwf	(sprintf@val+1)^(0+128)
 12115  0488' 3000               	movlw	0
 12116  0489' 1B80'              	btfsc	(sprintf@val+1)^(0+128),7
 12117  048A' 30FF               	movlw	255
 12118  048B' 0080'              	movwf	(sprintf@val+2)^(0+128)
 12119  048C' 0080'              	movwf	(sprintf@val+3)^(0+128)
 12120  048D'                    l4687:
 12121  048D' 3002               	movlw	2
 12122  048E' 0080'              	movwf	??_sprintf^(0+128)
 12123  048F' 0800'              	movf	??_sprintf^(0+128),w
 12124  0490' 0780'              	addwf	sprintf@ap^(0+128),f
 12125  0491'                    l4689:
 12126                           
 12127                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
 12128  0491' 1F80'              	btfss	(sprintf@val+3)^(0+128),7
 12129  0492' 2800'              	goto	u7451
 12130  0493' 2800'              	goto	u7450
 12131  0494'                    u7451:
 12132  0494' 2800'              	goto	l4695
 12133  0495'                    u7450:
 12134  0495'                    l4691:
 12135                           
 12136                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
 12137  0495' 3003               	movlw	3
 12138  0496' 0480'              	iorwf	sprintf@flag^(0+128),f
 12139  0497' 3000               	movlw	0
 12140  0498' 0480'              	iorwf	(sprintf@flag+1)^(0+128),f
 12141  0499'                    l4693:
 12142                           
 12143                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
 12144  0499' 0980'              	comf	sprintf@val^(0+128),f
 12145  049A' 0980'              	comf	(sprintf@val+1)^(0+128),f
 12146  049B' 0980'              	comf	(sprintf@val+2)^(0+128),f
 12147  049C' 0980'              	comf	(sprintf@val+3)^(0+128),f
 12148  049D' 0A80'              	incf	sprintf@val^(0+128),f
 12149  049E' 1903               	skipnz
 12150  049F' 0A80'              	incf	(sprintf@val+1)^(0+128),f
 12151  04A0' 1903               	skipnz
 12152  04A1' 0A80'              	incf	(sprintf@val+2)^(0+128),f
 12153  04A2' 1903               	skipnz
 12154  04A3' 0A80'              	incf	(sprintf@val+3)^(0+128),f
 12155  04A4'                    l4695:
 12156                           
 12157                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
 12158  04A4' 0800'              	movf	sprintf@prec^(0+128),w
 12159  04A5' 0400'              	iorwf	(sprintf@prec+1)^(0+128),w
 12160  04A6' 1D03               	btfss	3,2
 12161  04A7' 2800'              	goto	u7461
 12162  04A8' 2800'              	goto	u7460
 12163  04A9'                    u7461:
 12164  04A9' 2800'              	goto	l4701
 12165  04AA'                    u7460:
 12166  04AA'                    l4697:
 12167  04AA' 0800'              	movf	(sprintf@val+3)^(0+128),w
 12168  04AB' 0400'              	iorwf	(sprintf@val+2)^(0+128),w
 12169  04AC' 0400'              	iorwf	(sprintf@val+1)^(0+128),w
 12170  04AD' 0400'              	iorwf	sprintf@val^(0+128),w
 12171  04AE' 1D03               	skipz
 12172  04AF' 2800'              	goto	u7471
 12173  04B0' 2800'              	goto	u7470
 12174  04B1'                    u7471:
 12175  04B1' 2800'              	goto	l4701
 12176  04B2'                    u7470:
 12177  04B2'                    l4699:
 12178                           
 12179                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 12180  04B2' 3001               	movlw	1
 12181  04B3' 0780'              	addwf	sprintf@prec^(0+128),f
 12182  04B4' 1803               	skipnc
 12183  04B5' 0A80'              	incf	(sprintf@prec+1)^(0+128),f
 12184  04B6' 3000               	movlw	0
 12185  04B7' 0780'              	addwf	(sprintf@prec+1)^(0+128),f
 12186  04B8'                    l4701:
 12187                           
 12188                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 12189  04B8' 0180'              	clrf	sprintf@c^(0+128)
 12190  04B9' 0A80'              	incf	sprintf@c^(0+128),f
 12191  04BA'                    l4707:
 12192                           
 12193                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
 12194  04BA' 0800'              	movf	sprintf@c^(0+128),w
 12195  04BB' 0080'              	movwf	??_sprintf^(0+128)
 12196  04BC' 3001               	movlw	1
 12197  04BD'                    u7485:
 12198  04BD' 1003               	clrc
 12199  04BE' 0D80'              	rlf	??_sprintf^(0+128),f
 12200  04BF' 3EFF               	addlw	-1
 12201  04C0' 1D03               	skipz
 12202  04C1' 2800'              	goto	u7485
 12203  04C2' 1003               	clrc
 12204  04C3' 0D00'              	rlf	??_sprintf^(0+128),w
 12205  04C4' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 12206  04C5' 0084               	movwf	4
 12207  04C6' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12208  04CB' 0080'              	movwf	(??_sprintf+1)^(0+128)
 12209  04CC' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12210  04D1' 0081'              	movwf	((??_sprintf+1)^(0+128)+1)
 12211  04D2' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12212  04D7' 0082'              	movwf	((??_sprintf+1)^(0+128)+2)
 12213  04D8' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12214  04DD' 0083'              	movwf	((??_sprintf+1)^(0+128)+3)
 12215  04DE' 0800'              	movf	(??_sprintf+4)^(0+128),w
 12216  04DF' 0200'              	subwf	(sprintf@val+3)^(0+128),w
 12217  04E0' 1D03               	skipz
 12218  04E1' 2800'              	goto	u7495
 12219  04E2' 0800'              	movf	(??_sprintf+3)^(0+128),w
 12220  04E3' 0200'              	subwf	(sprintf@val+2)^(0+128),w
 12221  04E4' 1D03               	skipz
 12222  04E5' 2800'              	goto	u7495
 12223  04E6' 0800'              	movf	(??_sprintf+2)^(0+128),w
 12224  04E7' 0200'              	subwf	(sprintf@val+1)^(0+128),w
 12225  04E8' 1D03               	skipz
 12226  04E9' 2800'              	goto	u7495
 12227  04EA' 0800'              	movf	(??_sprintf+1)^(0+128),w
 12228  04EB' 0200'              	subwf	sprintf@val^(0+128),w
 12229  04EC'                    u7495:
 12230  04EC' 1803               	skipnc
 12231  04ED' 2800'              	goto	u7491
 12232  04EE' 2800'              	goto	u7490
 12233  04EF'                    u7491:
 12234  04EF' 2800'              	goto	l4711
 12235  04F0'                    u7490:
 12236  04F0' 2800'              	goto	l4713
 12237  04F1'                    l4711:
 12238  04F1' 3001               	movlw	1
 12239  04F2' 0080'              	movwf	??_sprintf^(0+128)
 12240  04F3' 0800'              	movf	??_sprintf^(0+128),w
 12241  04F4' 0780'              	addwf	sprintf@c^(0+128),f
 12242  04F5' 300A               	movlw	10
 12243  04F6' 0600'              	xorwf	sprintf@c^(0+128),w
 12244  04F7' 1D03               	btfss	3,2
 12245  04F8' 2800'              	goto	u7501
 12246  04F9' 2800'              	goto	u7500
 12247  04FA'                    u7501:
 12248  04FA' 2800'              	goto	l4707
 12249  04FB'                    u7500:
 12250  04FB'                    l4713:
 12251                           
 12252                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 12253  04FB' 0800'              	movf	(sprintf@prec+1)^(0+128),w
 12254  04FC' 3A80               	xorlw	128
 12255  04FD' 3C80               	sublw	128
 12256  04FE' 1D03               	skipz
 12257  04FF' 2800'              	goto	u7515
 12258  0500' 0800'              	movf	sprintf@prec^(0+128),w
 12259  0501' 0200'              	subwf	sprintf@c^(0+128),w
 12260  0502'                    u7515:
 12261  0502' 1803               	skipnc
 12262  0503' 2800'              	goto	u7511
 12263  0504' 2800'              	goto	u7510
 12264  0505'                    u7511:
 12265  0505' 2800'              	goto	l4717
 12266  0506'                    u7510:
 12267  0506'                    l4715:
 12268  0506' 2800'              	goto	l4721
 12269  0507'                    l4717:
 12270  0507' 1683               	bsf	3,5	;RP0=1, select bank1
 12271  0508' 1303               	bcf	3,6	;RP1=0, select bank1
 12272  0509' 0800'              	movf	(sprintf@prec+1)^(0+128),w
 12273  050A' 3A80               	xorlw	128
 12274  050B' 0080'              	movwf	??_sprintf^(0+128)
 12275  050C' 3080               	movlw	128
 12276  050D' 0200'              	subwf	??_sprintf^(0+128),w
 12277  050E' 1D03               	skipz
 12278  050F' 2800'              	goto	u7525
 12279  0510' 0800'              	movf	sprintf@c^(0+128),w
 12280  0511' 0200'              	subwf	sprintf@prec^(0+128),w
 12281  0512'                    u7525:
 12282  0512' 1803               	skipnc
 12283  0513' 2800'              	goto	u7521
 12284  0514' 2800'              	goto	u7520
 12285  0515'                    u7521:
 12286  0515' 2800'              	goto	l4721
 12287  0516'                    u7520:
 12288  0516'                    l4719:
 12289                           
 12290                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 12291  0516' 1683               	bsf	3,5	;RP0=1, select bank1
 12292  0517' 1303               	bcf	3,6	;RP1=0, select bank1
 12293  0518' 0800'              	movf	sprintf@c^(0+128),w
 12294  0519' 0080'              	movwf	??_sprintf^(0+128)
 12295  051A' 0181'              	clrf	(??_sprintf^(0+128)+1)
 12296  051B' 0800'              	movf	??_sprintf^(0+128),w
 12297  051C' 0080'              	movwf	sprintf@prec^(0+128)
 12298  051D' 0800'              	movf	(??_sprintf+1)^(0+128),w
 12299  051E' 0080'              	movwf	(sprintf@prec+1)^(0+128)
 12300  051F'                    l4721:
 12301                           
 12302                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
 12303  051F' 3003               	movlw	3
 12304  0520' 1683               	bsf	3,5	;RP0=1, select bank1
 12305  0521' 1303               	bcf	3,6	;RP1=0, select bank1
 12306  0522' 0500'              	andwf	sprintf@flag^(0+128),w
 12307  0523' 0080'              	movwf	??_sprintf^(0+128)
 12308  0524' 3000               	movlw	0
 12309  0525' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
 12310  0526' 0080'              	movwf	(??_sprintf+1)^(0+128)
 12311  0527' 0800'              	movf	??_sprintf^(0+128),w
 12312  0528' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
 12313  0529' 1903               	btfsc	3,2
 12314  052A' 2800'              	goto	u7531
 12315  052B' 2800'              	goto	u7530
 12316  052C'                    u7531:
 12317  052C' 2800'              	goto	l4733
 12318  052D'                    u7530:
 12319  052D'                    l4723:
 12320                           
 12321                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 12322  052D' 302D               	movlw	45
 12323  052E' 0080'              	movwf	??_sprintf^(0+128)
 12324  052F' 0800'              	movf	sprintf@sp^(0+128),w
 12325  0530' 0084               	movwf	4
 12326  0531' 1783               	bsf	3,7
 12327  0532' 1C00'              	btfss	(sprintf@sp+1)^(0+128),0
 12328  0533' 1383               	bcf	3,7
 12329  0534' 0800'              	movf	??_sprintf^(0+128),w
 12330  0535' 0080               	movwf	0
 12331  0536'                    l4725:
 12332  0536' 3001               	movlw	1
 12333  0537' 0780'              	addwf	sprintf@sp^(0+128),f
 12334  0538' 1803               	skipnc
 12335  0539' 0A80'              	incf	(sprintf@sp+1)^(0+128),f
 12336  053A' 3000               	movlw	0
 12337  053B' 0780'              	addwf	(sprintf@sp+1)^(0+128),f
 12338  053C' 2800'              	goto	l4733
 12339  053D'                    l4727:
 12340                           
 12341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
 12342  053D' 3000               	movlw	0
 12343  053E' 1283               	bcf	3,5	;RP0=0, select bank0
 12344  053F' 1303               	bcf	3,6	;RP1=0, select bank0
 12345  0540' 008B'              	movwf	___llmod@divisor+3
 12346  0541' 3000               	movlw	0
 12347  0542' 008A'              	movwf	___llmod@divisor+2
 12348  0543' 3000               	movlw	0
 12349  0544' 0089'              	movwf	___llmod@divisor+1
 12350  0545' 300A               	movlw	10
 12351  0546' 0088'              	movwf	___llmod@divisor
 12352  0547' 1683               	bsf	3,5	;RP0=1, select bank1
 12353  0548' 1303               	bcf	3,6	;RP1=0, select bank1
 12354  0549' 0800'              	movf	sprintf@prec^(0+128),w
 12355  054A' 0080'              	movwf	??_sprintf^(0+128)
 12356  054B' 3001               	movlw	1
 12357  054C'                    u7545:
 12358  054C' 1003               	clrc
 12359  054D' 0D80'              	rlf	??_sprintf^(0+128),f
 12360  054E' 3EFF               	addlw	-1
 12361  054F' 1D03               	skipz
 12362  0550' 2800'              	goto	u7545
 12363  0551' 1003               	clrc
 12364  0552' 0D00'              	rlf	??_sprintf^(0+128),w
 12365  0553' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 12366  0554' 0084               	movwf	4
 12367  0555' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12368  055A' 1283               	bcf	3,5	;RP0=0, select bank0
 12369  055B' 1303               	bcf	3,6	;RP1=0, select bank0
 12370  055C' 0080'              	movwf	___lldiv@divisor
 12371  055D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12372  0562' 0081'              	movwf	___lldiv@divisor+1
 12373  0563' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12374  0568' 0082'              	movwf	___lldiv@divisor+2
 12375  0569' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12376  056E' 0083'              	movwf	___lldiv@divisor+3
 12377  056F' 1683               	bsf	3,5	;RP0=1, select bank1
 12378  0570' 1303               	bcf	3,6	;RP1=0, select bank1
 12379  0571' 0800'              	movf	(sprintf@val+3)^(0+128),w
 12380  0572' 1283               	bcf	3,5	;RP0=0, select bank0
 12381  0573' 1303               	bcf	3,6	;RP1=0, select bank0
 12382  0574' 0087'              	movwf	___lldiv@dividend+3
 12383  0575' 1683               	bsf	3,5	;RP0=1, select bank1
 12384  0576' 1303               	bcf	3,6	;RP1=0, select bank1
 12385  0577' 0800'              	movf	(sprintf@val+2)^(0+128),w
 12386  0578' 1283               	bcf	3,5	;RP0=0, select bank0
 12387  0579' 1303               	bcf	3,6	;RP1=0, select bank0
 12388  057A' 0086'              	movwf	___lldiv@dividend+2
 12389  057B' 1683               	bsf	3,5	;RP0=1, select bank1
 12390  057C' 1303               	bcf	3,6	;RP1=0, select bank1
 12391  057D' 0800'              	movf	(sprintf@val+1)^(0+128),w
 12392  057E' 1283               	bcf	3,5	;RP0=0, select bank0
 12393  057F' 1303               	bcf	3,6	;RP1=0, select bank0
 12394  0580' 0085'              	movwf	___lldiv@dividend+1
 12395  0581' 1683               	bsf	3,5	;RP0=1, select bank1
 12396  0582' 1303               	bcf	3,6	;RP1=0, select bank1
 12397  0583' 0800'              	movf	sprintf@val^(0+128),w
 12398  0584' 1283               	bcf	3,5	;RP0=0, select bank0
 12399  0585' 1303               	bcf	3,6	;RP1=0, select bank0
 12400  0586' 0084'              	movwf	___lldiv@dividend
 12401  0587' 120A' 118A' 2000' 120A' 118A' 	fcall	___lldiv
 12402  058C' 1283               	bcf	3,5	;RP0=0, select bank0
 12403  058D' 1303               	bcf	3,6	;RP1=0, select bank0
 12404  058E' 0803'              	movf	?___lldiv+3,w
 12405  058F' 008F'              	movwf	___llmod@dividend+3
 12406  0590' 0802'              	movf	?___lldiv+2,w
 12407  0591' 008E'              	movwf	___llmod@dividend+2
 12408  0592' 0801'              	movf	?___lldiv+1,w
 12409  0593' 008D'              	movwf	___llmod@dividend+1
 12410  0594' 0800'              	movf	?___lldiv,w
 12411  0595' 008C'              	movwf	___llmod@dividend
 12412  0596' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
 12413  059B' 1283               	bcf	3,5	;RP0=0, select bank0
 12414  059C' 1303               	bcf	3,6	;RP1=0, select bank0
 12415  059D' 0808'              	movf	?___llmod,w
 12416  059E' 3E30               	addlw	48
 12417  059F' 1683               	bsf	3,5	;RP0=1, select bank1
 12418  05A0' 1303               	bcf	3,6	;RP1=0, select bank1
 12419  05A1' 0080'              	movwf	(??_sprintf+1)^(0+128)
 12420  05A2' 0800'              	movf	(??_sprintf+1)^(0+128),w
 12421  05A3' 0080'              	movwf	sprintf@c^(0+128)
 12422  05A4'                    l4729:
 12423                           
 12424                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 12425  05A4' 0800'              	movf	sprintf@c^(0+128),w
 12426  05A5' 0080'              	movwf	??_sprintf^(0+128)
 12427  05A6' 0800'              	movf	sprintf@sp^(0+128),w
 12428  05A7' 0084               	movwf	4
 12429  05A8' 1783               	bsf	3,7
 12430  05A9' 1C00'              	btfss	(sprintf@sp+1)^(0+128),0
 12431  05AA' 1383               	bcf	3,7
 12432  05AB' 0800'              	movf	??_sprintf^(0+128),w
 12433  05AC' 0080               	movwf	0
 12434  05AD' 2800'              	goto	l4725
 12435  05AE'                    l4733:
 12436                           
 12437                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 12438  05AE' 30FF               	movlw	255
 12439  05AF' 0780'              	addwf	sprintf@prec^(0+128),f
 12440  05B0' 1803               	skipnc
 12441  05B1' 0A80'              	incf	(sprintf@prec+1)^(0+128),f
 12442  05B2' 30FF               	movlw	255
 12443  05B3' 0780'              	addwf	(sprintf@prec+1)^(0+128),f
 12444  05B4' 0A00'              	incf	sprintf@prec^(0+128),w
 12445  05B5' 1D03               	skipz
 12446  05B6' 2800'              	goto	u7551
 12447  05B7' 0A00'              	incf	(sprintf@prec+1)^(0+128),w
 12448  05B8' 1D03               	btfss	3,2
 12449  05B9' 2800'              	goto	u7551
 12450  05BA' 2800'              	goto	u7550
 12451  05BB'                    u7551:
 12452  05BB' 2800'              	goto	l4727
 12453  05BC'                    u7550:
 12454  05BC'                    l4735:
 12455                           
 12456                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 12457  05BC' 3001               	movlw	1
 12458  05BD' 0780'              	addwf	sprintf@f^(0+128),f
 12459  05BE' 30FF               	movlw	-1
 12460  05BF' 0700'              	addwf	sprintf@f^(0+128),w
 12461  05C0' 0084               	movwf	4
 12462  05C1' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12463  05C6' 0080'              	movwf	??_sprintf^(0+128)
 12464  05C7' 0800'              	movf	??_sprintf^(0+128),w
 12465  05C8' 0080'              	movwf	sprintf@c^(0+128)
 12466  05C9' 0800'              	movf	sprintf@c^(0+128),w
 12467  05CA' 1D03               	btfss	3,2
 12468  05CB' 2800'              	goto	u7561
 12469  05CC' 2800'              	goto	u7560
 12470  05CD'                    u7561:
 12471  05CD' 120A' 118A' 2800'  	goto	l4507
 12472  05D0'                    u7560:
 12473  05D0'                    l4737:
 12474                           
 12475                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 12476  05D0' 0800'              	movf	sprintf@sp^(0+128),w
 12477  05D1' 0084               	movwf	4
 12478  05D2' 1783               	bsf	3,7
 12479  05D3' 1C00'              	btfss	(sprintf@sp+1)^(0+128),0
 12480  05D4' 1383               	bcf	3,7
 12481  05D5' 0180               	clrf	0
 12482  05D6'                    l394:
 12483  05D6' 0008               	return
 12484  05D7'                    __end_of_sprintf:

Data Sizes:
    Strings     27
    Constant    144
    Data        0
    BSS         67
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     76      77
    BANK1            80     44      77
    BANK3            96      4      44
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_6(CODE[3]), STR_4(CODE[5]), STR_2(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> str_contador(BANK3[20]), str_vol2(BANK3[20]), str_vol1(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> str_contador(BANK3[20]), STR_5(CODE[3]), str_vol2(BANK3[20]), STR_3(CODE[3]), 
		 -> str_vol1(BANK1[20]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_String
    _sprintf->___llmod
    _sprintf->__div_to_l_
    _scale->___awmod
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___awmod
    ___flmul->___lwdiv
    ___llmod->___lldiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _oli in COMMON

    None.

Critical Paths under _main in BANK0

    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___xxtofl
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    ___fldiv->___flmul

Critical Paths under _oli in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _oli in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _oli in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _oli in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   44199
                                              0 BANK3      4     4      0
                          _ADC_setup
                        _EUSART_conf
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fldiv
                            ___flmul
                           ___xxtofl
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             43    36      7   35402
                                              8 BANK1     36    29      7
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    8239
                                             36 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1705
                                              0 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6175
                                             36 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              9 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                             10 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     634
                                              3 COMMON     4     4      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     634
                                              3 COMMON     7     7      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     746
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     952
                                              9 COMMON     1     1      0
                                              8 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     781
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             55 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             56 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     986
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     490
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1425
                                             36 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     732
                                              6 COMMON     4     2      2
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       2     1      1     726
                                              7 COMMON     2     1      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              7 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_conf                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_setup                                            6     3      3     316
                                              3 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _oli                                                  3     3      0       0
                                              0 COMMON     3     3      0
                            _Receive
 ---------------------------------------------------------------------------------
 (6) _Receive                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_setup
   _EUSART_conf
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _setup
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 _oli (ROOT)
   _Receive

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      D1       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      4D       5       96.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2C      4D       7       96.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      4      2C       9       45.8%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      D1      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 23:37:02 2021

             ___fldiv@aexp 003D               ___fldiv@bexp 003C                          _a 0000  
                        pc 0002               ___fldiv@sign 0035                         l76 0047  
                       l88 0028               ___awdiv@sign 0006                         fsr 0004  
      ___wmul@multiplicand 0005        __Umul8_16@word_mpld 0002                        l203 0019  
                      l140 00F2                        l141 00D0                        l142 00D3  
                      l143 00D6                        l144 00D9                        l136 00C9  
                      l400 0024                        l312 020C                        l145 00FA  
                      l162 000C                        l139 00CD         __size_of_ADC_setup 00FB  
                      l171 0055                        l156 0005                        l180 0043  
                      l174 0015                        l159 0019                        l319 0362  
                      l168 001B                        l601 007B                        l434 0067  
                      l338 0076                        l611 007B                        l373 02BD  
                      l615 00BC                        l551 0068                        l608 0066  
                      l616 002E                        l704 0045                        l626 00AF  
                      l714 0039                        l394 05D6                        l803 01C0  
                      l731 00E1                        l619 007F                        l572 0080  
                      l564 0058                        l805 01D0                        l725 0063  
                      l821 0360                        l750 01F9                        l654 0055  
                      l398 000C                        l584 001E                        l592 008A  
                      l568 00BF                        l840 0016                        l585 003A  
                      l593 00A3                        l729 010A                        l569 0022  
                      l833 0354                        l586 004F                        l746 01D5  
                      l738 0287                        l842 0028                        l771 004F  
                      l579 00B0                        l827 02CC                        l756 021B  
                      l781 005C                        l589 001E                        l597 000A  
                      l783 01DC                        l767 027B                        l759 0259  
                      l871 0069                        l768 0287                        l865 0024  
                      l867 00BB                        l797 014E                        l885 0011  
                      l878 0085                        l879 0091                        _RB0 0030  
                      _RB1 0031                        _oli 0000                        fsr0 0004  
                      indf 0000               ___awmod@sign 0009               ___flmul@aexp 001C  
             ___flmul@bexp 001D               ___flmul@sign 0017               ___flmul@temp 0022  
             ___flmul@prod 001E               ___fltol@exp1 0041               ?_EUSART_conf 0000  
                     l3001 02C9                       l3011 02E8                       l3021 032E  
                     l3013 0301                       l3005 02D1                       l3031 034D  
                     l3023 0338                       l3007 02D6                       l3015 0307  
                     l3033 0358                       l3025 033A                       l3017 0314  
                     l3009 02E4                       l3121 000E                       l3027 0348  
                     l3019 031F                       l3123 0010                       l3115 0001  
                     l3301 0000                       l3029 034C                       l3117 0002  
                     l3303 0008                       l3311 000D                       l3231 0000  
                     l3071 01C9                       l3119 0008                       l3305 000A  
                     l3321 0034                       l3241 0020                       l3233 0002  
                     l3065 0118                       l3057 0003                       l4201 0003  
                     l3331 0042                       l3323 0036                       l3315 0016  
                     l3235 0006                       l3067 011E                       l3059 0009  
                     l4203 0007                       l3421 000A                       l3341 006B  
                     l3325 003A                       l3333 0054                       l3317 002B  
                     l3309 0000                       l3237 0013                       l4141 0007  
                     l2621 0005                       l4213 00FA                       l4205 0009  
                     l4135 0001                       l3431 0016                       l3423 000F  
                     l3415 0000                       l2711 0012                       l2703 0000  
                     l3343 0070                       l3319 002C                       l3239 001A  
                     l4311 003E                       l4151 001B                       l4143 000C  
                     l2631 001B                       l2623 000A                       l4231 02A7  
                     l4215 0101                       l4207 0010                       l4223 01B6  
                     l3441 000E                       l3433 0020                       l3425 0010  
                     l3417 0003                       l2801 010E                       l2713 0017  
                     l2721 0027                       l2705 0007                       l4401 0000  
                     l4321 0071                       l4313 0047                       l4305 0023  
                     l4241 0000                       l2561 000C                       l4161 0031  
                     l4153 001D                       l4145 000E                       l4137 0000  
                     l2641 0037                       l2633 001E                       l2625 000C  
                     l2617 0000                       l4233 02AE                       l4225 01BD  
                     l3451 0037                       l3443 0015                       l3435 0001  
                     l3531 0000                       l3427 0011                       l3419 0009  
                     l2811 0137                       l2803 0113                       l2731 0041  
                     l2723 002F                       l2715 001C                       l2707 000D  
                     l3339 005B                       l4411 0030                       l4403 000A  
                     l4331 008C                       l4323 007A                       l4315 0050  
                     l4307 002B                       l4243 0013                       l2563 0010  
                     l4171 0054                       l4163 0035                       l4155 0023  
                     l4147 0012                       l4139 0003                       l2651 0054  
                     l2643 003D                       l2635 0025                       l2627 0010  
                     l2619 0001                       l4219 0189                       l3461 004E  
                     l3453 003A                       l3445 001A                       l3437 0002  
                     l3533 0010                       l4181 0001                       l4501 001F  
                     l3429 0012                       l2821 014B                       l2813 013B  
                     l2741 0058                       l2733 0045                       l2725 0034  
                     l2717 0024                       l2709 0011                       l3365 0000  
                     l4413 003E                       l4405 000D                       l4421 0003  
                     l4341 00B5                       l4325 0084                       l4333 009E  
                     l4317 0062                       l4309 003C                       l4261 004F  
                     l4253 002F                       l2565 001F                       l2557 0003  
                     l2901 000D                       l2661 000D                       l4165 0046  
                     l4157 0026                       l4173 005A                       l4149 0017  
                     l2645 0044                       l2637 0029                       l2629 0015  
                     l4237 0336                       l3471 0067                       l3463 0053  
                     l3455 003F                       l3439 0007                       l3535 0014  
                     l4183 0004                       l4191 0001                       l4503 0025  
                     l2831 01B3                       l2823 0154                       l2815 0144  
                     l2807 011C                       l2751 0071                       l2743 0059  
                     l2735 0046                       l2727 003A                       l2719 0025  
                     l3367 0004                       l4351 0022                       l4415 0047  
                     l4407 001A                       l4423 0008                       l4319 0070  
                     l4271 0079                       l4263 0058                       l4255 0035  
                     l4247 001C                       l2567 0024                       l2559 0005  
                     l2911 0024                       l2903 0011                       l2671 0033  
                     l2663 0014                       l2655 0000                       l4175 005F  
                     l4167 004C                       l4159 002D                       l2639 002D  
                     l2647 004A                       l4511 0018                       l3481 0080  
                     l3473 006C                       l3465 0058                       l3457 0044  
                     l3449 0021                       l3537 0015                       l4185 000A  
                     l4193 0004                       l2833 01B8                       l2817 0146  
                     l2809 0133                       l2825 0159                       l2761 0085  
                     l2753 0075                       l2737 004B                       l2745 005B  
                     l2729 003B                       l4361 0050                       l4353 0026  
                     l4345 0000                       l4409 001E                       l4417 004D  
                     l4441 0052                       l4433 0035                       l4425 000C  
                     l4273 0083                       l4281 009D                       l4265 0066  
                     l4257 0044                       l2921 003D                       l2913 0026  
                     l2905 0012                       l2673 0034                       l2665 0018  
                     l2657 0004                       l2681 0000                       l4177 0064  
                     l4169 004D                       l2649 004F                       l4601 0099  
                     l4521 0032                       l4513 001F                       l4505 0000  
                     l3491 00C5                       l3483 0083                       l3475 0071  
                     l3467 005D                       l3459 0049                       l3539 0016  
                     l4187 000D                       l4195 000A                       l3811 000D  
                     l4371 0016                       l2851 0200                       l2843 01EB  
                     l2827 016F                       l2835 01C7                       l2819 014A  
                     l2771 0099                       l2763 0089                       l2755 0079  
                     l2747 0069                       l2739 0050                       l4363 0059  
                     l4355 002F                       l4347 0012                       l4451 0089  
                     l4443 0060                       l4435 003A                       l4427 001C  
                     l4339 00A5                       l4267 0070                       l4259 0046  
                     l2931 0052                       l2923 003E                       l2915 002E  
                     l2907 0017                       l2675 003B                       l2667 001C  
                     l2659 000A                       l2691 0018                       l2683 0006  
                     l4611 0140                       l4603 00B7                       l4523 0035  
                     l4531 0072                       l4515 0021                       l4507 0009  
                     l3477 0076                       l3469 0062                       l4189 0016  
                     l4197 000D                       l3901 011F                       l3821 0024  
                     l3813 0011                       l4373 0032                       l4381 0000  
                     l2861 020E                       l2853 0202                       l2845 01F4  
                     l2837 01DD                       l2829 01AD                       l2773 009D  
                     l2765 008D                       l2757 007D                       l2749 006D  
                     l2781 00AD                       l4357 0041                       l4349 0015  
                     l4365 005F                       l4461 00B3                       l4453 0093  
                     l4445 0070                       l4437 0047                       l4429 002C  
                     l4293 0000                       l4269 0071                       l2941 006D  
                     l2933 005A                       l2925 0043                       l2917 0033  
                     l2909 001C                       l2669 002D                       l2677 0041  
                     l2693 0022                       l2685 0009                       l4701 04B8  
                     l4621 0173                       l4613 016F                       l4541 00A8  
                     l4533 0074                       l4525 004A                       l4517 002D  
                     l4509 000F                       l3495 00DC                       l3479 007B  
                     l3487 0086                       l4471 001D                       l4199 0012  
                     l3911 0137                       l3903 0128                       l3831 003A  
                     l3823 0025                       l3815 0012                       l3807 0000  
                     l4375 004C                       l4391 0062                       l4383 0016  
                     l2871 0225                       l2863 0212                       l2855 0207  
                     l2847 01F8                       l2839 01E2                       l2791 00F0  
                     l2783 00AE                       l2775 00A1                       l2767 0091  
                     l2759 0081                       l4359 004F                       l4455 00A9  
                     l4447 007B                       l4439 004E                       l4295 000D  
                     l4287 00A4                       l4279 008B                       l2951 00EF  
                     l2943 007D                       l2935 005F                       l2927 0048  
                     l2919 0039                       l2695 0028                       l2687 0010  
                     l4711 04F1                       l4631 01C9                       l4615 0171  
                     l4607 0102                       l4551 00E9                       l4543 00AC  
                     l4527 005D                       l4519 002E                       l3489 00C0  
                     l4481 0043                       l4473 0026                       l4465 0000  
                     l3921 0166                       l3913 014B                       l3905 012E  
                     l3841 0051                       l3833 003E                       l3817 0017  
                     l3825 0027                       l3809 0007                       l4377 004E  
                     l4369 0000                       l4393 0066                       l4385 0032  
                     l2881 0263                       l2873 0233                       l2865 0218  
                     l2849 01FD                       l2857 0209                       l2793 00F4  
                     l2785 00C5                       l2777 00A5                       l2769 0095  
                     l4457 00AE                       l4449 007F                       l4289 00B4  
                     l2961 015D                       l2953 010B                       l2945 008A  
                     l2937 0064                       l2929 0050                       l2697 002F  
                     l2689 0014                       l4721 051F                       l4713 04FB  
                     l4633 01D0                       l4641 0275                       l4625 01AA  
                     l4609 010B                       l4561 013C                       l4553 0102  
                     l4545 00B0                       l4537 0078                       l4529 0061  
                     l4801 018C                       l4483 0049                       l4475 0031  
                     l4467 0008                       l4491 0006                       l3931 01A4  
                     l3923 016A                       l3907 0132                       l3851 0074  
                     l3843 0052                       l3835 003F                       l3827 002F  
                     l3819 001C                       l4395 00A0                       l4387 003A  
                     l2891 0277                       l2883 026B                       l2875 0237  
                     l2859 020D                       l2795 00F5                       l2787 00E5  
                     l2779 00A9                       l4459 00B2                       l4299 0016  
                     l2971 01ED                       l2963 016D                       l2955 0127  
                     l2947 00A7                       l2699 0035                       l4723 052D  
                     l4715 0506                       l4707 04BA                       l4651 02A1  
                     l4643 027D                       l4635 022B                       l4627 01B4  
                     l4571 0182                       l4563 0142                       l4555 0106  
                     l4547 00BE                       l4539 009A                       l4811 01D8  
                     l4803 0198                       l4901 0029                       l4485 004F  
                     l4477 0037                       l4469 000E                       l4493 000E  
                     l3941 01CA                       l3933 01B3                       l3925 0183  
                     l3917 0153                       l3909 0133                       l3861 008B  
                     l3837 0044                       l3845 0054                       l3829 0034  
                     l4397 00A2                       l4389 003E                       l2893 0282  
                     l2885 0270                       l2877 0255                       l2869 0220  
                     l2797 00FE                       l2789 00EE                       l2981 0281  
                     l2973 01FD                       l2965 018A                       l2957 0130  
                     l2949 00C3                       l4725 0536                       l4733 05AE  
                     l4717 0507                       l4661 02D4                       l4653 02B0  
                     l4645 0288                       l4637 026A                       l4629 01C0  
                     l4581 0245                       l4573 01A1                       l4565 0155  
                     l4557 010A                       l4549 00C2                       l4813 01E4  
                     l4805 01A1                       l4903 008E                       l4487 0000  
                     l4479 003D                       l4495 0014                       l3943 01CC  
                     l3935 01B7                       l3919 0158                       l3927 0189  
                     l3871 00B7                       l3863 009D                       l3847 0064  
                     l3855 007D                       l3839 0049                       l2895 0286  
                     l2887 0271                       l2879 025E                       l2799 0102  
                     l2991 02A6                       l2983 028F                       l2975 022A  
                     l2967 01A3                       l2959 0140                       l4727 053D  
                     l4719 0516                       l4671 03F7                       l4663 02DA  
                     l4655 02B7                       l4647 028E                       l4591 0029  
                     l4575 01EC                       l4567 0178                       l4559 0131  
                     l4583 024D                       l4735 05BC                       l4807 01AD  
                     l4751 0018                       l4905 00E4                       l4489 0001  
                     l4497 0000                       l3937 01BF                       l3929 0196  
                     l3873 00BC                       l3881 00DC                       l3865 00A5  
                     l3857 0082                       l3849 0070                       l2889 0275  
                     l2985 0298                       l2993 02AC                       l2977 0250  
                     l2969 01C0                       l2897 0000                       l4729 05A4  
                     l4681 046F                       l4673 03FD                       l4665 0353  
                     l4657 02C6                       l4649 0294                       l4593 0050  
                     l4585 025C                       l4577 0213                       l4569 017C  
                     l4737 05D0                       l4809 01B6                       l4761 0030  
                     l4753 001D                       l4745 0000                       l4499 0003  
                     l3939 01C6                       l3891 0107                       l3883 00EE  
                     l3875 00CE                       l3867 00AD                       l2995 02B0  
                     l2987 029C                       l2979 0278                       l2899 0007  
                     l4691 0495                       l4683 0475                       l4667 03AE  
                     l4675 0458                       l4659 02CB                       l4595 005F  
                     l4587 02A3                       l4579 021C                       l4771 0046  
                     l4763 0037                       l4755 0020                       l4747 0005  
                     l3893 010F                       l3885 00EF                       l3877 00D2  
                     l3869 00B5                       l2997 02B1                       l2989 029D  
                     l4693 0499                       l4677 0460                       l4669 03ED  
                     l4597 0088                       l4589 0000                       l4685 047C  
                     l4781 0065                       l4773 004F                       l4765 003B  
                     l4757 0027                       l4749 0013                       l3895 0111  
                     l3887 00FD                       l3879 00D3                       l2999 02B5  
                     l4695 04A4                       l4687 048D                       l4679 0469  
                     l4599 0091                       l4791 00F6                       l4783 006D  
                     l4775 0058                       l4767 003D                       l4759 0028  
                     l3897 011A                       l3889 0101                       l4697 04AA  
                     l4689 0491                       l4793 00FF                       l4785 0076  
                     l4777 005E                       l4769 0042                       l3899 011E  
                     l4699 04B2                       l4795 010B                       l4787 00D5  
                     l4779 0060                       l4797 0114                       l4789 00EE  
                     ?_oli 0000                       l4799 0173                       l4899 008C  
                     STR_1 00A0                       STR_2 00B0                       STR_3 00B5  
                     STR_4 00B0                       STR_5 00B5                       STR_6 00B8  
                     u3110 0010                       u3111 000F                       u4001 00B5  
                     u3130 0024                       u4002 00BC                       u3131 0023  
                     u4011 00D1                       u4003 00C3                       u4012 00D8  
                     u3125 0017                       u4101 020C                       u4021 00FD  
                     u4013 00DF                       u4110 0236                       u4102 0213  
                     u4022 0104                       u3310 004A                       u4103 021A  
                     u4031 0119                       u4023 010B                       u3311 0049  
                     u4200 02B5                       u4032 0120                       u3400 0006  
                     u3320 004F                       u3240 0005                       u4201 02B4  
                     u4121 0242                       u4033 0127                       u3401 0005  
                     u3321 004E                       u3305 003E                       u3241 0004  
                     u4210 02C9                       u4130 025E                       u4122 0249  
                     u3330 000A                       u3250 0010                       u4211 02C8  
                     u4123 0250                       u4115 0231                       u4051 014F  
                     u3331 0009                       u3251 000F                       u3500 0045  
                     u5100 005A                       u4220 02D0                       u4052 0156  
                     u3420 0018                       u3260 001B                       u3501 0044  
                     u5101 0059                       u4221 02CF                       u4141 026A  
                     u4061 017C                       u4053 015D                       u4045 0129  
                     u3421 0017                       u3261 001A                       u5030 0008  
                     u3510 004B                       u4230 02D6                       u4142 0271  
                     u4062 0183                       u3350 001C                       u3430 0022  
                     u5031 0007                       u3511 004A                       u4231 02D5  
                     u4143 0278                       u4135 0259                       u4063 018A  
                     u3351 001B                       u3431 0021                       u3415 000A  
                     u6000 011E                       u3520 0050                       u5120 006B  
                     u5040 000D                       u4240 02E8                       u3280 002D  
                     u6001 011D                       u3521 004F                       u5121 006A  
                     u5041 000C                       u4241 02E7                       u4081 01B2  
                     u3345 000E                       u4305 0026                       u3281 002C  
                     u3610 010A                       u3530 0069                       u5130 0070  
                     u5050 0024                       u4250 02F7                       u4170 029C  
                     u4082 01B9                       u3370 002D                       u3450 0035  
                     u4330 011E                       u3290 0037                       u3611 0109  
                     u3531 0068                       u5131 006F                       u5115 005D  
                     u4171 029B                       u4155 027A                       u4091 01DF  
                     u4083 01C0                       u4075 018C                       u3371 002C  
                     u3451 0034                       u3435 001E                       u4331 011D  
                     u4315 0082                       u3291 0036                       u3275 001F  
                     u6100 01B3                       u6020 0132                       u3620 010E  
                     u3540 006D                       u3460 0011                       u5060 003A  
                     u4260 0314                       u4092 01E6                       u6101 01B2  
                     u6021 0131                       u3701 0186                       u3621 010D  
                     u3605 00F7                       u3541 006C                       u3461 0010  
                     u5061 0039                       u4261 0313                       u4165 0291  
                     u4093 01ED                       u3365 001D                       u3445 0029  
                     u4325 00D7                       u6110 01CA                       u6030 0137  
                     u3710 019A                       u3702 0187                       u3630 0113  
                     u3550 00C5                       u3470 0017                       u5070 0041  
                     u4270 032E                       u4190 02B0                       u3390 0041  
                     u6111 01C9                       u6031 0136                       u6015 0121  
                     u3711 019B                       u3703 018C                       u3631 0112  
                     u3551 00C4                       u3471 0016                       u5071 0040  
                     u5055 001F                       u4271 032D                       u4255 02F2  
                     u4191 02AF                       u3391 0040                       u3375 0029  
                     u3295 0033                       u6040 014B                       u3800 0212  
                     u3720 01B8                       u3712 01A0                       u3704 018D  
                     u3560 00D0                       u3480 001C                       u4280 034C  
                     u6105 01AF                       u6041 014A                       u3801 0211  
                     u3721 01B7                       u3713 01A1                       u3705 0192  
                     u3641 0125                       u3561 00CE                       u3481 001B  
                     u4281 034B                       u4265 0310                       u4185 029F  
                     u3385 0035                       u4345 013B                       u6050 0152  
                     u3810 0218                       u3730 01DD                       u3706 0193  
                     u3650 0137                       u3642 012C                       u3570 00D1  
                     u3490 003A                       u5090 0053                       u7010 004D  
                     u4290 0009                       u6210 0007                       u6051 0151  
                     u3811 0217                       u3731 01DC                       u3651 0136  
                     u3643 0133                       u3555 00C1                       u3491 0039  
                     u5091 0052                       u7011 004C                       u4275 032A  
                     u4355 0188                       u4291 0008                       u6211 0006  
                     u5340 00C5                       u6060 0158                       u3900 0275  
                     u3820 021F                       u3740 01E2                       u3660 013B  
                     u3580 00E5                       u7100 00B2                       u4540 0008  
                     u6300 005F                       u6220 0012                       u5341 00C4  
                     u6061 0157                       u3901 0274                       u3821 021E  
                     u3741 01E1                       u3661 013A                       u3581 00E4  
                     u5085 0043                       u7101 00B1                       u7005 003F  
                     u4365 01D4                       u4541 0007                       u6301 005E  
                     u6221 0011                       u7110 0006                       u6070 016A  
                     u3910 0286                       u3830 0225                       u3670 014A  
                     u3590 00F4                       u7030 006F                       u4550 000E  
                     u6230 0023                       u6310 0007                       u7111 0005  
                     u6071 0169                       u3911 0285                       u3831 0224  
                     u3671 0149                       u3591 00F3                       u7031 006E  
                     u4551 000D                       u6231 0022                       u6311 0006  
                     u7120 0014                       u6080 0179                       u3840 0237  
                     u3760 01F8                       u3920 0011                       u6400 01BD  
                     u6320 0010                       u7200 00AC                       u7121 0013  
                     u3841 0236                       u3761 01F7                       u7025 0061  
                     u3921 0010                       u6401 01BC                       u6321 000F  
                     u7201 00AB                       u7130 000D                       u6090 0196  
                     u3850 0246                       u3770 01FD                       u3690 016F  
                     u7050 007F                       u3930 0017                       u6250 0035  
                     u7210 00E9                       u6091 0195                       u3771 01FC  
                     u3755 01ED                       u3691 016E                       u7051 007E  
                     u3931 0016                       u6251 0034                       u7211 00E8  
                     u7140 0031                       u3860 0255                       u3780 0207  
                     u4820 0006                       u7060 0085                       u3940 001C  
                     u7300 005F                       u7220 0131                       u6085 0174  
                     u3861 0254                       u3781 0206                       u3693 016B  
                     u3685 014D                       u4821 0005                       u7061 0084  
                     u7045 0074                       u3941 001B                       u6245 0027  
                     u7301 005E                       u7221 0130                       u7150 0043  
                     u3870 025E                       u3790 020D                       u7070 0089  
                     u6510 0066                       u3950 003D                       u6270 0046  
                     u7310 0088                       u7230 017C                       u7151 0042  
                     u6095 0192                       u3871 025D                       u3855 0241  
                     u3791 020C                       u7071 0088                       u6511 0065  
                     u3951 003C                       u6271 0045                       u6415 01DF  
                     u6335 0032                       u7311 0087                       u7231 017B  
                     u3880 0263                       u7080 009E                       u6600 00B4  
                     u3960 0043                       u6440 02AE                       u6360 0101  
                     u7400 02CB                       u7240 0213                       u7160 000F  
                     u3881 0262                       u6601 00B3                       u6505 0051  
                     u3961 0042                       u6265 0036                       u6441 02AD  
                     u6425 021B                       u6361 0100                       u6345 006E  
                     u7401 02CA                       u7305 005B                       u7241 0212  
                     u7161 000E                       u3890 0270                       u4850 0020  
                     u7090 00AE                       u6610 000D                       u6530 007F  
                     u3970 0048                       u6290 005A                       u7330 01A9  
                     u7250 0245                       u7170 002D                       u3891 026F  
                     u4851 001F                       u4835 000D                       u7091 00AD  
                     u6611 000C                       u6531 007E                       u6515 0062  
                     u3971 0047                       u6291 0059                       u6275 0042  
                     u6435 0266                       u6355 00B9                       u7331 01A8  
                     u7251 0244                       u7171 002C                       u5900 0082  
                     u6700 009D                       u6620 0021                       u6540 0083  
                     u3980 005F                       u7500 04FB                       u7340 01B4  
                     u7260 025C                       u7180 0071                       i1l93 0026  
                     u5901 0081                       u4845 0014                       u7085 0099  
                     u6701 009C                       u6621 0020                       u6541 0082  
                     u6525 0072                       u3981 005E                       u6285 004E  
                     u7501 04FA                       u7341 01B3                       u7325 0176  
                     u7261 025B                       u7181 0070                       u5910 00BC  
                     u5830 0011                       u6710 00A4                       u6550 008A  
                     u3990 0064                       u7510 0506                       u7430 045F  
                     u7350 01C0                       u7270 0000                       u7190 00A8  
                     u5911 00BB                       u5831 0010                       u6711 00A3  
                     u6551 0089                       u3991 0063                       u6455 02C1  
                     u6375 0114                       u7511 0505                       u7431 045E  
                     u7415 0356                       u7351 01BF                       u7335 01A5  
                     u7271 02B3                       u7191 00A5                       u5840 0017  
                     u6800 005F                       u6640 0062                       u6480 0013  
                     u7520 0516                       u7440 047B                       u7280 0029  
                     u7600 004F                       u5841 0016                       u6801 005E  
                     u6641 0061                       u6481 0012                       u6465 02FD  
                     u6385 0150                       u7521 0515                       u7441 047A  
                     u7425 0400                       u7281 0028                       u7265 0258  
                     u7601 004E                       u5850 001C                       u6810 0016  
                     u6730 00B5                       u6570 009C                       u6490 002D  
                     u7530 052D                       u7450 0495                       u7370 027C  
                     u7290 0050                       u7610 005E                       i1l99 003C  
                     u5851 001B                       u6811 0015                       u6731 00B4  
                     u6635 0049                       u6571 009B                       u6491 002C  
                     u6475 0339                       u6395 018C                       u7531 052C  
                     u7515 0502                       u7451 0494                       u7371 027B  
                     u7291 004F                       u7275 02AE                       u7611 005D  
                     u5940 00D2                       u5860 003E                       u6820 0032  
                     u6900 00A0                       u6740 0012                       u6660 0080  
                     u6580 00A3                       u7460 04AA                       u7380 02A1  
                     u5941 00D1                       u5925 00BE                       u5861 003D  
                     u6821 0031                       u6901 009F                       u6741 0011  
                     u6725 00A7                       u6661 007F                       u6645 005E  
                     u6581 00A2                       u6565 008C                       u7525 0512  
                     u7461 04A9                       u7381 02A0                       u7365 01D3  
                     u5870 0044                       u6830 004C                       u6910 000A  
                     u6670 0084                       u7550 05BC                       u7470 04B2  
                     u7390 02B0                       u5935 00C7                       u5871 0043  
                     u6831 004B                       u6911 0009                       u6671 0083  
                     u6655 0073                       u7551 05BB                       u7471 04B1  
                     u7391 02AF                       u5960 00EE                       u5880 0049  
                     u6840 0016                       u6760 0026                       u6680 008B  
                     u7560 05D0                       u5961 00ED                       u5881 0048  
                     u6905 009C                       u6841 0015                       u6761 0025  
                     u6681 008A                       u7561 05CD                       u7545 054C  
                     u7385 029D                       u5970 0107                       u5890 0064  
                     u6850 0032                       u6930 001E                       u7490 04F0  
                     u7570 0027                       u5971 0106                       u5955 00D5  
                     u5891 0063                       u6835 0048                       u6851 0031  
                     u6755 0017                       u6931 001D                       u6595 00A6  
                     u7491 04EF                       u7395 02AC                       u7627 002C  
                     u7571 0026                       u5980 010F                       u6860 003E  
                     u6780 0041                       u6940 0030                       u7580 0037  
                     u7637 000F                       u5981 010E                       u5965 00EA  
                     u6861 003D                       u6781 0040                       u6941 002F  
                     u6925 000F                       u7485 04BD                       u7581 0036  
                     u7590 0042                       u7647 0004                       u6871 004D  
                     u6775 0028                       u6695 008D                       u7495 04EC  
                     u7591 0041                       u6880 0066                       u6872 004E  
                     u6960 004D                       u7657 0012                       u6881 0065  
                     u6873 0053                       u6785 003D                       u6961 004C  
                     u6945 002C                       u6874 0054                       u6970 0008  
                     u7667 0021                       u5995 0113                       u6891 0075  
                     u6875 0059                       u6795 0051                       u6955 003F  
                     u6971 0007                       u6892 0076                       u6876 005A  
                     u6980 000C                       u7677 002E                       u6893 007B  
                     u6981 000B                       u6894 007C                       u6990 002C  
                     u7687 0011                       u6895 0081                       u6991 002B  
                     u6896 0082                       _Pots 0000          ?_Lcd_Write_String 0006  
                     _main 0000                       _vol1 0004                       _vol2 0000  
                     btemp 007E                       start 0000*        ??_Lcd_Write_String 0000  
          ___fldiv@new_exp 0036               _sprintf$1256 0014            __end_of_Lcd_Cmd 001A  
          __end_of_Receive 000E                      ??_oli 0000              ___fltol@sign1 0040  
          __end_of___fladd 0288                      ?_main 0000            __end_of___fldiv 01DD  
          __end_of___awdiv 0069            __end_of___flneg 000B            __end_of___awmod 0059  
          __end_of___flmul 0361            __end_of___flsub 0050            __end_of___fltol 007C  
                    _ANSEL 0188            __end_of___lldiv 0068            ___awdiv@divisor 0000  
          __end_of___llmod 0056            __end_of___lwdiv 0046                      i1l210 000D  
                    i1l207 0008            __end_of___lwmod 003A            ___awdiv@counter 0005  
                    _RCREG 001A                      _SPBRG 0099                      _PORTD 0008  
  __size_of_Lcd_Set_Cursor 001C                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088               _str_contador 0000  
          __end_of_dpowers 00A0                      _scale 0000            __end_of_isdigit 0012  
                    _setup 0000                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 05D7          __end_of_ADC_setup 00FB  
         __end_of_Lcd_Init 0056           __end_of_Lcd_Port 0006            __initialization 0000  
             __end_of_main 01F1                     ??_main 0000              ADC_setup@Vref 0005  
       __size_of_Lcd_Clear 000D       __size_of__tdiv_to_l_ 00BD           ___llmod@dividend 000C  
                   ?_scale 0024                     _ADRESH 001E           ___awdiv@dividend 0002  
                   ?_setup 0000                     _ANSELH 0189                     i1l4021 0006  
                   i1l4031 0019                     i1l4023 0007                     i1l4041 0039  
                   i1l4033 001B                     i1l4025 000C                     i1l4035 0021  
                   i1l4027 000D                     i1l4019 0000                     i1l4037 002A  
                   i1l4029 0014                     i1l4039 0034                     i1l3801 0006  
                   i1l3803 000C                     i1l3799 0000                     u620_20 002A  
                   u620_21 0029                     u617_20 0006                     u617_21 0005  
                   u618_20 000C                     u618_21 000B                     u619_20 0019  
                   u619_21 0018                     u581_20 0006                     u581_21 0005  
                   u582_20 000C                     u582_21 000B                  ??_Lcd_Cmd 0004  
                   _SPBRGH 009A                     u769_27 0036    __size_of_Lcd_Write_Char 0016  
         __end_of___xxtofl 00BC                  ??_Receive 0000           __end_of__powers_ 0044  
                   ___flge 0000                     ___fleq 0000                  ??___fladd 0040  
                   ___wmul 0000                  ??___fldiv 002C                  ??___awdiv 0004  
                ??___flneg 0007                  ??___awmod 0007                  ??___flmul 0012  
                ??___flsub 000A                  ??___fltol 003B                  ??___lldiv 0003  
                ??___llmod 0009                  ??___lwdiv 0009                  ??___lwmod 0007  
         ADC_setup@Channel 0003                     _fround 0000           ___awdiv@quotient 0007  
          ___awmod@divisor 0003            ___awmod@counter 0008                  ??_isdigit 0003  
       __size_of__Umul8_16 0029                     saved_w 007E                  ??_sprintf 000F  
          Lcd_Set_Cursor@a 0008            Lcd_Set_Cursor@b 0007                 ___flge@ff1 0000  
               ___flge@ff2 0004               ___xxtofl@arg 0006               ___xxtofl@exp 0005  
             ___xxtofl@val 0003                 ___fleq@ff1 0000                 ___fleq@ff2 0004  
  __end_of__initialization 0016       __size_of_EUSART_conf 001A                 ___flneg@f1 0003  
        __end_of_Lcd_Clear 000D                 ___fltol@f1 0037             __pcstackCOMMON 0000  
            __end_of_scale 0363              __end_of_setup 0029             _Lcd_Set_Cursor 0000  
               __div_to_l_ 0000                  ?_Lcd_Init 0000                  ?_Lcd_Port 0000  
          __div_to_l_@exp1 0009            __div_to_l_@cntr 0008                    ??_scale 0028  
          __div_to_l_@quot 0004                    ??_setup 0003                 __pbssBANK0 0000  
               __pbssBANK1 0000                 __pbssBANK3 0000              __div_to_l_@f1 0000  
            __div_to_l_@f2 0004          __end_of__Umul8_16 0029                 __pmaintext 0000  
                  ?___flge 0000                    ?___fleq 0000                    ?___wmul 0003  
               __pintentry 0000                    ?_fround 0024  __size_of_Lcd_Write_String 0044  
   __end_of_Lcd_Set_Cursor 001C                  ?___xxtofl 0003                 ??_Lcd_Init 0007  
               ??_Lcd_Port 0003                 __stringtab 0000             _Lcd_Write_Char 0000  
                  _Lcd_Cmd 0000                    _Receive 0000          __end_of__npowers_ 0078  
               _scale$1255 0032                  _ADC_setup 0000            __size_of___flge 00A4  
          __size_of___fleq 0050                    ___fladd 0000                    ___fldiv 0000  
                  ___awdiv 0000                    ___flneg 0000                    ___awmod 0000  
                  ___flmul 0000                    ___flsub 0000                    ___fltol 0000  
                  ___lldiv 0000            __size_of___wmul 0025                    ___llmod 0000  
                  ___lwdiv 0000                    ___lwmod 0000                  _ANSELbits 0188  
          __size_of_fround 020D            ?_Lcd_Set_Cursor 0007                    __ptext1 0000  
                  __ptext2 0000                    __ptext3 0000                    __ptext4 0000  
                  __ptext5 0000                    __ptext6 0000                    __ptext7 0000  
                  __ptext8 0000                    __ptext9 0000                    _comando 0000  
              ?__div_to_l_ 0000                    _dpowers 0078                    _isdigit 0000  
             __size_of_oli 0043                 ??___xxtofl 0000           ___awmod@dividend 0005  
        ADC_setup@ConClock 0008                    _sprintf 0000                    clrloop0 0001  
   __end_of_Lcd_Write_Char 0016       end_of_initialization 0016            ___lldiv@divisor 0000  
          ___lldiv@counter 0008                 ?_ADC_setup 0003                  _RCSTAbits 0018  
                  psplit$0 F0034                  Lcd_Port@a 0003             __tdiv_to_l_@f1 0000  
           __tdiv_to_l_@f2 0004              ??__tdiv_to_l_ 0003                ___fladd@grs 004B  
            ___xxtofl@sign 0004                  _TRISAbits 0085                  _TRISCbits 0087  
              ___fldiv@grs 0038                ___fldiv@rem 0031            ?_Lcd_Write_Char 0000  
        Lcd_Write_String@a 0006          Lcd_Write_String@i 0008                ___flmul@grs 0018  
                _TXSTAbits 0098        __size_of__div_to_l_ 00C0                  _Lcd_Clear 0000  
           __end_of___flge 00A4             __end_of___fleq 0050             __end_of___wmul 0025  
         _Lcd_Write_String 0000          pnum$text1_split_1 0034                _BAUDCTLbits 0187  
           __end_of_fround 020D        start_initialization 0000        __end_of__tdiv_to_l_ 00BD  
              __end_of_oli 0043              ??_EUSART_conf 0003          __size_of_Lcd_Init 0056  
        __size_of_Lcd_Port 0006            ___llmod@divisor 0008            ___llmod@counter 0010  
              ??_ADC_setup 0006                 ?_Lcd_Clear 0000                   ??___flge 0003  
                 ??___fleq 0003                   ??___wmul 0007                  __Umul8_16 0000  
          ADC_setup@Format 0004            Lcd_Write_Char@a 0005                   ??_fround 0028  
            sprintf@tmpval 001D                  ___fladd@a 003C                  ___fladd@b 0038  
               fround@prec 0037                  ___fldiv@a 0024                  ___fldiv@b 0028  
                ___flmul@a 000E                  ___flmul@b 000A                __pbssCOMMON 0000  
                ___flsub@a 0000                  ___flsub@b 0004                  ___latbits 0002  
            __pcstackBANK0 0000              __pcstackBANK1 0000              __pcstackBANK3 0000  
        __size_of___xxtofl 00BC               _isdigit$1072 0003                   ?_Lcd_Cmd 0000  
              sprintf@flag 0019                sprintf@eexp 001B                sprintf@fval 0025  
              sprintf@prec 0029                  __pnvBANK1 0000        __end_of_EUSART_conf 001A  
                 ?_Receive 0000           ___lwdiv@dividend 0002           ??_Lcd_Set_Cursor 0008  
                 ?___fladd 0038                   ?___fldiv 0024                   ?___awdiv 0000  
                 ?___flneg 0003                   ?___awmod 0003                   ?___flmul 000A  
                 ?___flsub 0000                   ?___fltol 0037                   ?___lldiv 0000  
                 ?___llmod 0008                  __npowers_ 0044                 ?__Umul8_16 0003  
                 ?___lwdiv 0000                   ?___lwmod 0003                  __pstrings 0000  
              __tdiv_to_l_ 0000               ??__div_to_l_ 0003                   ?_isdigit 0000  
         ___lwdiv@quotient 0004                   ?_sprintf 0008             __size_of_scale 0363  
           __size_of_setup 0029          interrupt_function 0000             ___wmul@product 0007  
                clear_ram0 0000                   _PIE1bits 008C                   Lcd_Cmd@a 0006  
                 _PIR1bits 000C         __end_of__div_to_l_ 00C0                ??_Lcd_Clear 0007  
               _ADCON0bits 001F                __stringbase 000F                 _ADCON1bits 009F  
        ___wmul@multiplier 0003           ??_Lcd_Write_Char 0004                   _Lcd_Init 0000  
                 _Lcd_Port 0000                _EUSART_conf 0000   __end_of_Lcd_Write_String 0044  
         __size_of_Lcd_Cmd 001A                 _ADC_finish 0002           __size_of_Receive 000E  
               _ADC_value1 0004                 _ADC_value2 0003                ??__Umul8_16 0005  
         __size_of___fladd 0288           __size_of___fldiv 01DD           __size_of___awdiv 0069  
         __size_of___flneg 000B           __size_of___awmod 0059           __size_of___flmul 0361  
         __size_of___flsub 0050           __size_of___fltol 007C           __size_of___lldiv 0068  
         __size_of___llmod 0056           __size_of___lwdiv 0046           __size_of___lwmod 003A  
              _fround$1253 0033                _fround$1254 002F         __end_of__stringtab 0010  
               sprintf@val 0021                   ___xxtofl 0000           __size_of_isdigit 0012  
          ___lwdiv@divisor 0000            ___lwdiv@counter 0006                   __ptext10 0000  
                 __ptext11 0000                   __ptext20 0000                   __ptext12 0000  
                 __ptext21 0000                   __ptext13 0000                   __ptext30 0000  
                 __ptext22 0000                   __ptext14 0000                   __ptext31 0000  
                 __ptext23 0000                   __ptext15 0000                   __ptext32 0000  
                 __ptext24 0000                   __ptext16 0000                   __ptext33 0000  
                 __ptext25 0000                   __ptext17 0000                   __ptext34 0000  
                 __ptext26 0000                   __ptext18 0000                   __ptext35 0000  
                 __ptext27 0000                   __ptext19 0000                   __ptext28 0000  
                 __ptext29 0000                   __powers_ 0010                   _contador 0001  
         __size_of_sprintf 0000              __size_of_main 01F1                  pnum$text1 000F  
                 _str_vol1 0005                   _str_vol2 0014                 _INTCONbits 000B  
                 isdigit@c 0004                   scale@scl 0036                   intlevel1 0000* 
                sprintf@ap 0018           __tdiv_to_l_@exp1 000D           __tdiv_to_l_@cntr 000C  
                sprintf@sp 0008           __tdiv_to_l_@quot 0008           ___lwmod@dividend 0005  
         ___lldiv@dividend 0004                  stringcode 000A               ?__tdiv_to_l_ 0000  
   __Umul8_16@multiplicand 0003                   sprintf@c 002B                   sprintf@f 000A  
         ___lldiv@quotient 0004            ___lwmod@divisor 0003            ___lwmod@counter 0008  
                 stringdir 000A                   stringtab 0000              ___fladd@signs 0048  
             ___fladd@aexp 0049               ___fladd@bexp 004A       __Umul8_16@multiplier 0004  
        __Umul8_16@product 0000  
